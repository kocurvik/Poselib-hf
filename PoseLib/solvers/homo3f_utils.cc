//
// Created by kocur on 05-Sep-24.
//

#include "PoseLib/misc/sturm.h"

#include <Eigen/Core>

namespace poselib {
double coeff0(double b0, double b1, double b2, double b3, double b4, double b5, double d0, double d1, double d2,
              double d3, double d4, double d5) {
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double c_mm_tmp;
    double d;
    double d10;
    double d11;
    double d12;
    double d13;
    double d14;
    double d15;
    double d16;
    double d17;
    double d18;
    double d19;
    double d20;
    double d21;
    double d22;
    double d23;
    double d24;
    double d25;
    double d26;
    double d27;
    double d28;
    double d29;
    double d30;
    double d31;
    double d32;
    double d33;
    double d34;
    double d35;
    double d36;
    double d6;
    double d7;
    double d8;
    double d9;
    double d_mm_tmp;
    double e_mm_tmp;
    double f_mm_tmp;
    double g_mm_tmp;
    double h_mm_tmp;
    double i_mm_tmp;
    double j_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    d = std::pow(d5, 3.0);
    b_d1 = std::pow(b5, 3.0);
    b_d2 = b1 * b1;
    b_d3 = b3 * b3;
    b_d4 = b0 * b0;
    b_d5 = 3.0 * b_d4;
    d6 = 3.0 * b_d1;
    d7 = 4.0 * b_d1;
    d8 = d1 * d1;
    d9 = d5 * d5;
    d10 = b5 * b5;
    d11 = 4.0 * b0 * d10;
    d12 = d11 * d0;
    d13 = b2 * b2;
    d14 = d2 * d2;
    d15 = d0 * d0;
    d16 = 4.0 * b0 * d13;
    d17 = b4 * b4;
    d18 = 16.0 * b1 * d10;
    d19 = d18 * d1;
    d20 = d4 * d4;
    d21 = 4.0 * b0 * d17;
    d22 = 4.0 * b2 * d10;
    d23 = d3 * d3;
    d24 = 4.0 * b3 * d10;
    d25 = d24 * d0;
    b_d4 *= 4.0;
    d26 = 4.0 * d13;
    d27 = 3.0 * b0 * d10;
    d28 = b_d5 * b5;
    d29 = 16.0 * b_d2;
    d30 = d26 * b3;
    d31 = b_d4 * b5;
    d32 = 4.0 * b_d2 * b5;
    d33 = 3.0 * b3 * d10;
    d34 = 4.0 * b4 * d10;
    d35 = 3.0 * b_d3 * b5;
    d36 = 4.0 * d17 * b5;
    mm_tmp = 4.0 * b_d3;
    mm_tmp_tmp = 16.0 * b1 * b2;
    b_mm_tmp = mm_tmp_tmp * b4;
    c_mm_tmp = 8.0 * b0 * b3;
    d_mm_tmp = 6.0 * b0 * b3 * b5;
    e_mm_tmp = c_mm_tmp * b5;
    f_mm_tmp = 8.0 * b1 * d10;
    g_mm_tmp = 16.0 * b0 * b2;
    mm_tmp_tmp *= b5;
    h_mm_tmp = 16.0 * b1 * b4 * b5;
    i_mm_tmp = 16.0 * b2 * b3;
    j_mm_tmp = 4.0 * b3 * d17;
    return ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((std::pow(b0, 3.0) * d - b_d1 * std::pow(d0, 3.0)) - std::pow(b3, 3.0) * d) + b_d1 * std::pow(d3, 3.0)) + 4.0 * b0 * b_d2 * d) + 3.0 * b0 * b_d3 * d) - b_d5 * b3 * d) - 4.0 * b_d2 * b3 * d) - d7 * d0 * d8) - d6 * d0 * d23) + d6 * d15 * d3) + d7 * d8 * d3) + d16 * d0 * d9) - d12 * d14) - d21 * d0 * d9) + d12 * d20) + 16.0 * b1 * d13 * d1 * d9) - d19 * d14) + d22 * d15 * d2) - b_d4 * b2 * d2 * d9) - d16 * d3 * d9) + d27 * d15 * d5) + d11 * d14 * d3) + 16.0 * b2 * d10 * d8 * d2) + d25 * d14) - d28 * d0 * d9) - d29 * b2 * d2 * d9) - d30 * d0 * d9) + d11 * d8 * d5) - 16.0 * b1 * d17 * d1 * d9) + d19 * d20) - d32 * d0 * d9) + d21 * d3 * d9) - d11 * d3 * d20) - 4.0 * b2 * b_d3 * d2 * d9) + d22 * d2 * d23) + j_mm_tmp * d0 * d9) - d25 * d20) + d31 * d14 * d5) - d26 * b5 * d15 * d5) + d27 * d23 * d5) - d33 * d15 * d5) - d24 * d14 * d3) - d34 * d15 * d4) + b_d4 * b4 * d4 * d9) + d28 * d3 * d9) + d29 * b5 * d14 * d5) + d30 * d3 * d9) - 16.0 * d13 * b5 * d8 * d5) - d35 * d0 * d9) - d24 * d8 * d5) - 16.0 * b4 * d10 * d8 * d4) - d31 * d20 * d5) + d29 * b4 * d4 * d9) + d32 * d3 * d9) + d36 * d15 * d5) - j_mm_tmp * d3 * d9) + d24 * d3 * d20) - 16.0 * b_d2 * b5 * d20 * d5) - 4.0 * d13 * b5 * d23 * d5) + 4.0 * (b3 * b3) * b5 * d14 * d5) + 16.0 * d17 * b5 * d8 * d5) - d33 * d23 * d5) - d34 * d23 * d4) + mm_tmp * b4 * d4 * d9) + d35 * d3 * d9) - mm_tmp * b5 * d20 * d5) + d36 * d23 * d5) - 8.0 * b0 * b1 * b5 * d1 * d9) + 8.0 * b0 * b2 * b3 * d2 * d9) - g_mm_tmp * b4 * d1 * d9) + b_mm_tmp * d0 * d9) + d_mm_tmp * d0 * d9) - e_mm_tmp * d14 * d5) - b_mm_tmp * d3 * d9) + 8.0 * b1 * b3 * b5 * d1 * d9) + i_mm_tmp * b4 * d1 * d9) - c_mm_tmp * b4 * d4 * d9) - d_mm_tmp * d3 * d9) + e_mm_tmp * d20 * d5) - 16.0 * b0 * d10 * d1 * d2 * d4) + f_mm_tmp * d0 * d1 * d5) + d18 * d0 * d2 * d4) - 8.0 * b2 * d10 * d0 * d2 * d3) - 6.0 * b0 * d10 * d0 * d3 * d5) - f_mm_tmp * d1 * d3 * d5) - d18 * d2 * d3 * d4) + 16.0 * b3 * d10 * d1 * d2 * d4) + 8.0 * d13 * b5 * d0 * d3 * d5) + 6.0 * b3 * d10 * d0 * d3 * d5) + 8.0 * b4 * d10 * d0 * d3 * d4) - 8.0 * d17 * b5 * d0 * d3 * d5) + g_mm_tmp * b5 * d1 * d4 * d5) + 16.0 * b0 * b4 * b5 * d1 * d2 * d5) - mm_tmp_tmp * d0 * d4 * d5) - h_mm_tmp * d0 * d2 * d5) + mm_tmp_tmp * d3 * d4 * d5) + h_mm_tmp * d2 * d3 * d5) - i_mm_tmp * b5 * d1 * d4 * d5) - 16.0 * b3 * b4 * b5 * d1 * d2 * d5;
}
//

//
double coeff1(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b2,
              double b3, double b4, double b5, double c0, double c1, double c2, double c3, double c4, double c5,
              double d0, double d1, double d2, double d3, double d4, double d5) {
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double b_mm_tmp_tmp;
    double c_mm_tmp;
    double d;
    double d10;
    double d100;
    double d101;
    double d102;
    double d103;
    double d104;
    double d105;
    double d106;
    double d107;
    double d108;
    double d109;
    double d11;
    double d110;
    double d111;
    double d112;
    double d113;
    double d114;
    double d115;
    double d116;
    double d117;
    double d118;
    double d119;
    double d12;
    double d120;
    double d121;
    double d122;
    double d123;
    double d124;
    double d125;
    double d126;
    double d127;
    double d128;
    double d129;
    double d13;
    double d130;
    double d131;
    double d132;
    double d133;
    double d134;
    double d135;
    double d136;
    double d137;
    double d138;
    double d139;
    double d14;
    double d140;
    double d141;
    double d142;
    double d143;
    double d144;
    double d145;
    double d146;
    double d147;
    double d148;
    double d149;
    double d15;
    double d150;
    double d151;
    double d152;
    double d153;
    double d154;
    double d155;
    double d156;
    double d157;
    double d158;
    double d159;
    double d16;
    double d160;
    double d161;
    double d162;
    double d163;
    double d164;
    double d165;
    double d166;
    double d167;
    double d168;
    double d169;
    double d17;
    double d170;
    double d171;
    double d172;
    double d173;
    double d174;
    double d175;
    double d176;
    double d177;
    double d178;
    double d179;
    double d18;
    double d180;
    double d181;
    double d182;
    double d183;
    double d184;
    double d185;
    double d186;
    double d187;
    double d188;
    double d189;
    double d19;
    double d190;
    double d191;
    double d192;
    double d193;
    double d194;
    double d195;
    double d196;
    double d197;
    double d198;
    double d199;
    double d20;
    double d200;
    double d201;
    double d202;
    double d203;
    double d204;
    double d205;
    double d206;
    double d207;
    double d208;
    double d209;
    double d21;
    double d210;
    double d211;
    double d212;
    double d213;
    double d214;
    double d215;
    double d22;
    double d23;
    double d24;
    double d25;
    double d26;
    double d27;
    double d28;
    double d29;
    double d30;
    double d31;
    double d32;
    double d33;
    double d34;
    double d35;
    double d36;
    double d37;
    double d38;
    double d39;
    double d40;
    double d41;
    double d42;
    double d43;
    double d44;
    double d45;
    double d46;
    double d47;
    double d48;
    double d49;
    double d50;
    double d51;
    double d52;
    double d53;
    double d54;
    double d55;
    double d56;
    double d57;
    double d58;
    double d59;
    double d6;
    double d60;
    double d61;
    double d62;
    double d63;
    double d64;
    double d65;
    double d66;
    double d67;
    double d68;
    double d69;
    double d7;
    double d70;
    double d71;
    double d72;
    double d73;
    double d74;
    double d75;
    double d76;
    double d77;
    double d78;
    double d79;
    double d8;
    double d80;
    double d81;
    double d82;
    double d83;
    double d84;
    double d85;
    double d86;
    double d87;
    double d88;
    double d89;
    double d9;
    double d90;
    double d91;
    double d92;
    double d93;
    double d94;
    double d95;
    double d96;
    double d97;
    double d98;
    double d99;
    double d_mm_tmp;
    double e_mm_tmp;
    double f_mm_tmp;
    double g_mm_tmp;
    double h_mm_tmp;
    double i_mm_tmp;
    double j_mm_tmp;
    double k_mm_tmp;
    double l_mm_tmp;
    double m_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    double n_mm_tmp;
    double o_mm_tmp;
    double p_mm_tmp;
    double q_mm_tmp;
    double r_mm_tmp;
    double s_mm_tmp;
    double t_mm_tmp;
    double u_mm_tmp;
    double v_mm_tmp;
    double w_mm_tmp;
    d = std::pow(d5, 3.0);
    b_d1 = b0 * b0;
    b_d2 = b1 * b1;
    b_d3 = b3 * b3;
    b_d4 = b5 * b5;
    b_d5 = 3.0 * a5 * b_d4;
    d6 = std::pow(d3, 3.0);
    d7 = std::pow(d0, 3.0);
    d8 = 3.0 * b0 * b_d4;
    d9 = 3.0 * b3 * b_d4;
    d10 = b4 * b4;
    d11 = 4.0 * d10 * b5;
    d12 = b2 * b2;
    d13 = 4.0 * d12;
    d14 = d13 * b5;
    d15 = std::pow(b5, 3.0);
    d16 = d0 * d0;
    d17 = 4.0 * d15;
    d18 = d3 * d3;
    d19 = d5 * d5;
    d20 = std::pow(b0, 3.0);
    d21 = 3.0 * d20;
    d22 = std::pow(b3, 3.0);
    d23 = 3.0 * d22;
    d24 = 8.0 * d15 * c1;
    d25 = 6.0 * d15;
    d26 = d2 * d2;
    d27 = 4.0 * a0 * b_d4;
    d28 = d27 * d0;
    d29 = d4 * d4;
    d30 = 4.0 * b0 * b_d4;
    d31 = d30 * c0;
    d32 = 4.0 * a0 * d12;
    d33 = d1 * d1;
    d34 = 4.0 * b0 * d12;
    d35 = 16.0 * b1 * b_d4;
    d36 = d35 * c1;
    d37 = 4.0 * a0 * d10;
    d38 = 4.0 * a2 * b_d4;
    d39 = 4.0 * a3 * b_d4;
    d40 = d39 * d0;
    d41 = 4.0 * b0 * d10;
    d42 = d30 * c3;
    d43 = 4.0 * b2 * b_d4 * c2;
    d44 = 4.0 * b_d1;
    d45 = 3.0 * a0 * b_d4;
    d46 = 4.0 * a3 * d12;
    d47 = 3.0 * a5 * b_d1;
    d48 = d8 * c5;
    d49 = 6.0 * a0 * b0;
    d50 = 8.0 * a1 * b0;
    d51 = 8.0 * a1 * b1;
    d52 = 6.0 * a3 * b0;
    d53 = 16.0 * a1 * b_d4;
    d54 = 4.0 * b3 * b_d4;
    d55 = d54 * c0;
    d56 = 3.0 * b_d1;
    d57 = d56 * b5;
    d58 = 16.0 * b_d2;
    d13 *= b3;
    d59 = 9.0 * a5 * b_d4;
    d60 = d44 * b5;
    d61 = 4.0 * b_d2;
    d62 = d61 * b5;
    d63 = 4.0 * a5 * b_d1;
    d64 = 4.0 * a5 * b_d2;
    d65 = 12.0 * a5 * b_d4;
    d66 = d60 * c5;
    d67 = 4.0 * a3 * d10;
    d68 = 16.0 * a5 * b_d2;
    d69 = 4.0 * a5 * d12;
    d70 = 4.0 * b3 * d10;
    d71 = d54 * c3;
    d72 = d14 * c5;
    d73 = 3.0 * a3 * b_d4;
    d74 = 4.0 * a4 * b_d4;
    d75 = 3.0 * a5 * b_d3;
    d76 = d9 * c5;
    d77 = 4.0 * b4 * b_d4 * c4;
    d78 = d58 * b5;
    d79 = d78 * c5;
    d80 = 16.0 * d12;
    d81 = d80 * b5;
    d82 = 3.0 * b_d3 * b5;
    d83 = 16.0 * b0 * d10;
    d84 = 4.0 * b1 * b_d4;
    d85 = 16.0 * b_d1;
    d86 = 16.0 * b2 * d10;
    d87 = 64.0 * b_d2;
    d88 = 16.0 * b3 * d10;
    d89 = d80 * b3;
    d80 *= b4;
    d90 = 6.0 * b0 * b_d4;
    d91 = 8.0 * b0 * d12;
    d92 = 8.0 * b0 * b_d4;
    d93 = 8.0 * b3 * b_d4;
    d94 = 8.0 * d12;
    d95 = d94 * b5;
    d96 = 8.0 * b_d2;
    d97 = 8.0 * b_d3;
    d98 = d97 * b5;
    d99 = d85 * b4;
    d100 = 16.0 * b2 * b_d3;
    d101 = 16.0 * d10 * b5;
    d102 = 16.0 * b0 * d12;
    d103 = 6.0 * b3 * b_d4;
    d104 = 6.0 * b_d1;
    d105 = 8.0 * b_d1;
    d106 = 4.0 * b_d3;
    d107 = d106 * b5;
    d108 = 8.0 * a0 * b0;
    d109 = 8.0 * a2 * b0;
    d110 = d109 * b2;
    d111 = 32.0 * a1 * b1;
    d112 = 8.0 * a3 * b0;
    d113 = 8.0 * a2 * b2;
    d114 = d105 * b5;
    d115 = 8.0 * d10 * b5;
    d116 = d104 * b5;
    d117 = 6.0 * b_d3 * b5;
    d118 = 8.0 * b3 * d10;
    d119 = 16.0 * b_d3;
    d120 = 16.0 * a0 * b2;
    d121 = 16.0 * a1 * b2;
    d122 = 16.0 * a2 * b0;
    d123 = 16.0 * a2 * b1;
    d124 = d108 * b5;
    d125 = d51 * b5;
    d126 = d121 * b4;
    d127 = d123 * b4;
    d128 = d113 * b3;
    d129 = 16.0 * a4 * b0;
    d130 = 16.0 * a4 * b1;
    d131 = d130 * b2;
    d132 = 8.0 * a5 * b0;
    d133 = d132 * b5;
    mm_tmp = 16.0 * b0 * b2;
    b_mm_tmp = 16.0 * b2 * b3;
    d134 = b_mm_tmp * b4;
    d135 = 8.0 * a0 * b3;
    d136 = 6.0 * a0 * b3 * b5;
    d137 = d111 * b5;
    d138 = d52 * b5;
    d139 = 8.0 * b0 * b3;
    d140 = 8.0 * a5 * b3 * b5;
    d141 = 8.0 * a3 * b3;
    d142 = d141 * b5;
    d143 = 8.0 * a4 * b4 * b5;
    d144 = 6.0 * a5 * b3 * b5;
    d145 = 8.0 * a5 * b4 * b5;
    d146 = d139 * b5;
    c_mm_tmp = 16.0 * b1 * b2;
    d147 = 6.0 * b0 * b3 * b5;
    d148 = c_mm_tmp * b4;
    d149 = 8.0 * b2 * b3 * b5;
    d150 = 32.0 * a5 * b1 * b5;
    d151 = 32.0 * b0 * b2;
    d152 = c_mm_tmp * b5;
    d113 *= b5;
    d153 = d150 * d1;
    d154 = 8.0 * a5 * b2 * b5;
    d155 = d135 * b5;
    d156 = d112 * b5;
    d157 = d132 * b3;
    d_mm_tmp = 6.0 * a5 * b0;
    d158 = d_mm_tmp * b5;
    d159 = d140 * d0;
    d160 = d146 * c5;
    d161 = 16.0 * b1 * b4;
    d162 = d161 * b5;
    d163 = 16.0 * b0 * b_d4;
    d164 = 8.0 * b1 * b_d4;
    d165 = 8.0 * b2 * b_d4;
    d166 = d90 * c0;
    d167 = 8.0 * a1 * b_d4;
    d168 = d91 * c5;
    d169 = d164 * c1;
    d170 = d35 * c2;
    d171 = 32.0 * b1 * b_d4;
    d172 = 8.0 * b4 * b_d4;
    d173 = 32.0 * b1 * d12;
    d174 = d105 * b2;
    d175 = 32.0 * d12;
    d176 = d93 * c2;
    d177 = d95 * c0;
    d178 = d90 * c3;
    d179 = d92 * c4;
    d180 = d103 * c0;
    d181 = d172 * c0;
    d182 = 8.0 * b0 * d10 * c5;
    d183 = d115 * c0;
    d184 = 32.0 * b_d2;
    d185 = d117 * c5;
    d186 = d184 * b4;
    d97 *= b4;
    d187 = d116 * c5;
    d188 = d184 * b2;
    d184 *= b5;
    d94 = d94 * b3 * c5;
    d189 = d95 * c3;
    d190 = 32.0 * b1 * d10;
    d191 = d103 * c3;
    d192 = d93 * c4;
    d193 = d172 * c3;
    d194 = d96 * b5 * c5;
    d195 = 8.0 * b2 * b_d3;
    d196 = d118 * c5;
    d197 = d115 * c3;
    d198 = d105 * b4;
    d121 *= b5;
    d199 = 16.0 * a1 * b4 * b5;
    d123 *= b5;
    d200 = 16.0 * a5 * b1;
    d201 = mm_tmp * b5;
    d202 = 16.0 * b0 * b4 * b5;
    d203 = d200 * b2;
    d204 = d200 * b4;
    d200 *= b5;
    d205 = 16.0 * a5 * b2;
    d206 = 32.0 * b1 * b2 * b4 * c5;
    d207 = d152 * c4;
    d208 = d152 * c5;
    d209 = 16.0 * a2 * b3;
    d210 = 16.0 * a3 * b2;
    e_mm_tmp = 16.0 * b0 * b3;
    d211 = e_mm_tmp * b5;
    d212 = 12.0 * b0 * b3 * b5 * c5;
    f_mm_tmp = 16.0 * b0 * b1;
    d213 = f_mm_tmp * b5;
    d214 = mm_tmp * b3;
    d215 = 16.0 * b1 * b3 * b5;
    g_mm_tmp = 4.0 * a5 * b_d3;
    h_mm_tmp = 4.0 * a5 * d10;
    i_mm_tmp = d107 * c5;
    j_mm_tmp = d11 * c5;
    k_mm_tmp = 16.0 * b3 * b_d4;
    l_mm_tmp = 16.0 * b3 * b4 * b5;
    m_mm_tmp = f_mm_tmp * b4;
    mm_tmp_tmp = mm_tmp * b4;
    n_mm_tmp = e_mm_tmp * b4;
    o_mm_tmp = d215 * d0;
    b_mm_tmp_tmp = b_mm_tmp * b5;
    p_mm_tmp = b_mm_tmp_tmp * d0;
    q_mm_tmp = c_mm_tmp * b3;
    r_mm_tmp = 3.0 * d15 * c0;
    s_mm_tmp = 8.0 * a4 * b0;
    t_mm_tmp = s_mm_tmp * b4;
    f_mm_tmp = d_mm_tmp * b3;
    mm_tmp = 6.0 * a3 * b3 * b5;
    e_mm_tmp = 8.0 * a4 * b3 * b4;
    b_mm_tmp = 8.0 * b0 * b4 * b5;
    c_mm_tmp = d92 * c2;
    d_mm_tmp = d165 * c0;
    u_mm_tmp = 16.0 * a5 * b0;
    v_mm_tmp = d162 * c2;
    w_mm_tmp = 32.0 * b2 * b3;
    return ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((3.0 * a0 * b_d1 * d + 4.0 * a0 * b_d2 * d) + 3.0 * a0 * b_d3 * d) - 3.0 * a3 * b_d1 * d) - 4.0 * a3 * b_d2 * d) - b_d5 * d7) - 3.0 * a3 * b_d3 * d) + b_d5 * d6) - d8 * d6) + d9 * d7) - d11 * d7) + d14 * d6) - r_mm_tmp * d16) - d17 * c0 * d33) - r_mm_tmp * d18) + 3.0 * d15 * c3 * d16) + d17 * c3 * d33) + d21 * c5 * d19) + 3.0 * std::pow(b5, 3.0) * c3 * d18) - d23 * c5 * d19) - d21 * d3 * d19) + d23 * d0 * d19) + 4.0 * d20 * d29 * d5) - 4.0 * d22 * d26 * d5) + d50 * b1 * d) - d49 * b3 * d) - d51 * b3 * d) + d52 * b3 * d) - d24 * d0 * d1) + d25 * c0 * d0 * d3) + d24 * d1 * d3) - d25 * c3 * d0 * d3) + d32 * d0 * d19) - d28 * d26) + d34 * c0 * d19) - d31 * d26) - d37 * d0 * d19) + d28 * d29) + 16.0 * a1 * d12 * d1 * d19) - d53 * d1 * d26) - 4.0 * a2 * b_d1 * d2 * d19) + d38 * d16 * d2) - d41 * c0 * d19) + d31 * d29) + 16.0 * b1 * d12 * c1 * d19) - d36 * d26) + d43 * d16) - d44 * b2 * c2 * d19) - d32 * d3 * d19) + d45 * d16 * d5) + d27 * d26 * d3) - 16.0 * a2 * b_d2 * d2 * d19) + 16.0 * a2 * b_d4 * d33 * d2) - d46 * d0 * d19) + d40 * d26) - d47 * d0 * d19) - d34 * c3 * d19) + d42 * d26) + d48 * d16) + 16.0 * b2 * b_d4 * c2 * d33) + d55 * d26) - d57 * c0 * d19) - d58 * b2 * c2 * d19) - d13 * c0 * d19) + d27 * d33 * d5) - 16.0 * a1 * d10 * d1 * d19) + 16.0 * a1 * b_d4 * d1 * d29) - d64 * d0 * d19) - d65 * d0 * d33) + 12.0 * b0 * b_d2 * c5 * d19) + d30 * c5 * d33) - 16.0 * b1 * d10 * c1 * d19) + d36 * d29) - d62 * c0 * d19) + d37 * d3 * d19) - d27 * d3 * d29) - 4.0 * a2 * b_d3 * d2 * d19) + d38 * d2 * d18) + d67 * d0 * d19) - d40 * d29) + d63 * d26 * d5) - d69 * d16 * d5) + d41 * c3 * d19) - d42 * d29) - 4.0 * b2 * b_d3 * c2 * d19) + d43 * d18) + d70 * c0 * d19) - d55 * d29) + d66 * d26) - d72 * d16) + d45 * d18 * d5) + d46 * d3 * d19) - d73 * d16 * d5) - d39 * d26 * d3) + 4.0 * a4 * b_d1 * d4 * d19) - d74 * d16 * d4) + d47 * d3 * d19) + d68 * d26 * d5) - 16.0 * a5 * d12 * d33 * d5) - d75 * d0 * d19) - d59 * d0 * d18) + d59 * d16 * d3) + 9.0 * b0 * b_d3 * c5 * d19) + d48 * d18) - d71 * d26) - d76 * d16) - d77 * d16) - 9.0 * b_d1 * b3 * c5 * d19) + d44 * b4 * c4 * d19) + d57 * c3 * d19) + d79 * d26) + d13 * c3 * d19) - d81 * c5 * d33) - d82 * c0 * d19) - d39 * d33 * d5) + 16.0 * a4 * b_d2 * d4 * d19) - 16.0 * a4 * b_d4 * d33 * d4) - d63 * d29 * d5) + d64 * d3 * d19) + h_mm_tmp * d16 * d5) + d65 * d33 * d3) - d54 * c5 * d33) - 16.0 * b4 * b_d4 * c4 * d33) - d66 * d29) - 12.0 * b_d2 * b3 * c5 * d19) + d58 * b4 * c4 * d19) + d62 * c3 * d19) + j_mm_tmp * d16) - d67 * d3 * d19) + d39 * d3 * d29) - d68 * d29 * d5) - d69 * d18 * d5) + g_mm_tmp * d26 * d5) + 16.0 * a5 * d10 * d33 * d5) - d70 * c3 * d19) + d71 * d29) - d79 * d29) - d72 * d18) + i_mm_tmp * d26) + d101 * c5 * d33) - d73 * d18 * d5) + 4.0 * a4 * b_d3 * d4 * d19) - d74 * d18 * d4) + d75 * d3 * d19) - d76 * d18) - d77 * d18) + d106 * b4 * c4 * d19) + d82 * c3 * d19) - g_mm_tmp * d29 * d5) + h_mm_tmp * d18 * d5) - i_mm_tmp * d29) + j_mm_tmp * d18) - 4.0 * b0 * b_d2 * d0 * d19) + d102 * d0 * d29) - d83 * d0 * d26) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d30 * d0 * d33 - d84 * d16 * d1) + d44 * b1 * d1 * d19) - 6.0 * b0 * b_d3 * d0 * d19) + d90 * d0 * d18) - d8 * d16 * d3) + 64.0 * b1 * d12 * d1 * d29) - 64.0 * b1 * d10 * d1 * d26) + d86 * d16 * d2) - d85 * b2 * d2 * d29) + d56 * b3 * d0 * d19) - 8.0 * b0 * b_d2 * d3 * d19) - d102 * d3 * d29) + d41 * d16 * d5) + d83 * d26 * d3) - d92 * d33 * d3) + 64.0 * b2 * d10 * d33 * d2) + d88 * d0 * d26) + d93 * d0 * d33) - d60 * d0 * d29) - d87 * b2 * d2 * d29) + d96 * b3 * d0 * d19) - d89 * d0 * d29) + 16.0 * b0 * b_d2 * d29 * d5) + d91 * d18 * d5) + 8.0 * b0 * b_d3 * d26 * d5) - d83 * d33 * d5) - 4.0 * b1 * b_d3 * d1 * d19) + d84 * d1 * d18) - d44 * b3 * d26 * d5) + d99 * d26 * d4) - d60 * d26 * d3) + d78 * d0 * d29) + d13 * d16 * d5) - d80 * d16 * d4) - d95 * d0 * d18) + d14 * d16 * d3) - d98 * d0 * d26) - d101 * d0 * d33) - 3.0 * b0 * b_d3 * d3 * d19) - d100 * d2 * d29) + d86 * d2 * d18) + d9 * d0 * d18) - d103 * d16 * d3) + d104 * b3 * d3 * d19) - d60 * d33 * d5) - d58 * b3 * d26 * d5) + d87 * b4 * d26 * d4) + d62 * d16 * d5) - 16.0 * b_d2 * b5 * d26 * d3) + 16.0 * d12 * b3 * d33 * d5) - 64.0 * d12 * b4 * d33 * d4) + d81 * d33 * d3) + 4.0 * b0 * b_d3 * d29 * d5) - d41 * d18 * d5) - d118 * d16 * d5) - d88 * d26 * d3) - d54 * d33 * d3) - d105 * b3 * d29 * d5) + d114 * d3 * d29) + d61 * b3 * d3 * d19) + d89 * d3 * d29) + d107 * d0 * d29) - d11 * d0 * d18) + d115 * d16 * d3) - d116 * d18 * d5) - d13 * d18 * d5) - d80 * d18 * d4) + d119 * b4 * d26 * d4) + d117 * d16 * d5) + d107 * d26 * d3) - d62 * d18 * d5) + d107 * d33 * d5) - d108 * b2 * d2 * d19) + d110 * d0 * d19) - d49 * b5 * d0 * d19) - d111 * b2 * d2 * d19) + 32.0 * a2 * b1 * b2 * d1 * d19) + d124 * d26 * d5) - 8.0 * a0 * b1 * b5 * d1 * d19) + 8.0 * a0 * b2 * b3 * d2 * d19) - d120 * b4 * d1 * d19) - d50 * b5 * d1 * d19) - d125 * d0 * d19) + d126 * d0 * d19) - d110 * d3 * d19) + d109 * b3 * d2 * d19) - d122 * b4 * d1 * d19) + d127 * d0 * d19) - d128 * d0 * d19) + d112 * b2 * d2 * d19) - d129 * b2 * d1 * d19) + d131 * d0 * d19) - d132 * b1 * d1 * d19) - d133 * d0 * d26) - 8.0 * b0 * b1 * b5 * c1 * d19) + 8.0 * b0 * b2 * b3 * c2 * d19) - mm_tmp_tmp * c1 * d19) + 16.0 * b1 * b2 * b4 * c0 * d19) + d108 * b4 * d4 * d19) + 6.0 * a0 * b0 * b5 * d3 * d19) + d136 * d0 * d19) + d138 * d0 * d19) - t_mm_tmp * d0 * d19) + f_mm_tmp * d0 * d19) + d147 * c0 * d19) - d124 * d29 * d5) + d137 * d26 * d5) - d113 * d16 * d5) + 8.0 * a5 * b0 * b5 * d0 * d29) - d153 * d26) + d154 * d16 * d2) - d155 * d26 * d5) + d111 * b4 * d4 * d19) + d125 * d3 * d19) - d126 * d3 * d19) + 8.0 * a1 * b3 * b5 * d1 * d19) - d127 * d3 * d19) + d128 * d3 * d19) - 32.0 * a2 * b2 * b5 * d33 * d5) + d209 * b4 * d1 * d19) - d156 * d26 * d5) + 8.0 * a3 * b1 * b5 * d1 * d19) - 8.0 * a3 * b2 * b3 * d2 * d19) + d210 * b4 * d1 * d19) - d131 * d3 * d19) - 32.0 * a4 * b1 * b4 * d1 * d19) + 16.0 * a4 * b2 * b3 * d1 * d19) - d157 * d26 * d5) + d158 * d16 * d5) + d133 * d26 * d3) + 8.0 * a5 * b1 * b3 * d1 * d19) + 32.0 * a5 * b2 * b5 * d33 * d2) + d159 * d26) - d160 * d26) - d148 * c3 * d19) + 8.0 * b1 * b3 * b5 * c1 * d19)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d134 * c1 * d19 - d135 * b4 * d4 * d19) - d136 * d3 * d19) - d137 * d29 * d5) - d112 * b4 * d4 * d19) - d138 * d3 * d19) - mm_tmp * d0 * d19) - s_mm_tmp * b3 * d4 * d19) + t_mm_tmp * d3 * d19) + e_mm_tmp * d0 * d19) - f_mm_tmp * d3 * d19) + d133 * d33 * d5) + d153 * d29) - d139 * b4 * c4 * d19) - d147 * c3 * d19) + d155 * d29 * d5) - d113 * d18 * d5) + d156 * d29 * d5) + d157 * d29 * d5) - d133 * d3 * d29) + d154 * d2 * d18) - d159 * d29) + d160 * d29) + d142 * d26 * d5) + d143 * d16 * d5) + d158 * d18 * d5) - d144 * d16 * d5) - d140 * d26 * d3) - d145 * d16 * d4) + d141 * b4 * d4 * d19) + mm_tmp * d3 * d19) - e_mm_tmp * d3 * d19) + 32.0 * a4 * b4 * b5 * d33 * d5) - d140 * d33 * d5) - 32.0 * a5 * b4 * b5 * d33 * d4) - d142 * d29 * d5) + d140 * d3 * d29) + d143 * d18 * d5) - d144 * d18 * d5) - d145 * d18 * d4) + d146 * d0 * d26) - 32.0 * b0 * b1 * b5 * d1 * d29) + d151 * b3 * d2 * d29) - d148 * d16 * d5) + d152 * d16 * d4) + 32.0 * b1 * b3 * b5 * d1 * d26) - d149 * d16 * d2) - 32.0 * b0 * b3 * b4 * d26 * d4) - d147 * d16 * d5) + b_mm_tmp * d16 * d4) - w_mm_tmp * b5 * d33 * d2) + 32.0 * b0 * b4 * b5 * d33 * d4) - d146 * d3 * d29) + d148 * d18 * d5) - d162 * d2 * d18) - d149 * d2 * d18) + d147 * d18 * d5) + b_mm_tmp * d18 * d4) - c_mm_tmp * d0 * d2) + d_mm_tmp * d0 * d2) + d166 * d0 * d5) - d171 * c2 * d1 * d2) + 32.0 * b2 * b_d4 * c1 * d1 * d2) - 16.0 * a0 * b_d4 * d1 * d2 * d4) + d167 * d0 * d1 * d5) + d53 * d0 * d2 * d4) - 8.0 * a2 * b_d4 * d0 * d2 * d3) + d168 * d0 * d5) + d92 * c1 * d1 * d5) - d163 * c1 * d2 * d4) - d163 * c2 * d1 * d4) + c_mm_tmp * d2 * d3) - d163 * c4 * d1 * d2) + d164 * c0 * d1 * d5) + d35 * c0 * d2 * d4) + d169 * d0 * d5) + d170 * d0 * d4) + d35 * c4 * d0 * d2) + d164 * c5 * d0 * d1) - d_mm_tmp * d2 * d3) - d165 * c2 * d0 * d3) - d165 * c3 * d0 * d2) + d176 * d0 * d2) - d177 * d0 * d5) - 6.0 * a0 * b_d4 * d0 * d3 * d5) - d166 * d3 * d5) - d178 * d0 * d5) + d179 * d0 * d4) - d90 * c5 * d0 * d3) - d180 * d0 * d5) - d181 * d0 * d4) - d182 * d0 * d5) + d173 * c5 * d1 * d5) - d174 * c5 * d2 * d5) + d114 * c2 * d2 * d5) - d175 * b5 * c1 * d1 * d5) + d183 * d0 * d5) - d167 * d1 * d3 * d5) - d53 * d2 * d3 * d4) + 16.0 * a3 * b_d4 * d1 * d2 * d4) + 8.0 * a5 * d12 * d0 * d3 * d5) - d168 * d3 * d5) - d169 * d3 * d5) - d170 * d3 * d4) - d164 * c3 * d1 * d5) - d35 * c3 * d2 * d4) + d171 * c4 * d1 * d4) - 16.0 * b1 * b_d4 * c4 * d2 * d3) - 8.0 * b1 * b_d4 * c5 * d1 * d3) + 8.0 * b2 * (b5 * b5) * c3 * d2 * d3) - d93 * c1 * d1 * d5) + k_mm_tmp * c1 * d2 * d4) + k_mm_tmp * c2 * d1 * d4) - d176 * d2 * d3) + k_mm_tmp * c4 * d1 * d2) - 32.0 * b4 * b_d4 * c1 * d1 * d4) - d187 * d0 * d5) - d188 * c5 * d2 * d5) + d184 * c2 * d2 * d5) - d94 * d0 * d5) + d177 * d3 * d5) + d189 * d0 * d5) + d95 * c5 * d0 * d3) + 6.0 * a3 * b_d4 * d0 * d3 * d5) + 8.0 * a4 * b_d4 * d0 * d3 * d4) + d178 * d3 * d5) - d179 * d3 * d4) - d190 * c5 * d1 * d5) + d180 * d3 * d5) + d191 * d0 * d5) - d192 * d0 * d4) + d103 * c5 * d0 * d3) + d181 * d3 * d4) + d193 * d0 * d4) + d172 * c4 * d0 * d3) - d194 * d0 * d5) + 32.0 * d10 * b5 * c1 * d1 * d5) - 8.0 * a5 * d10 * d0 * d3 * d5) + d182 * d3 * d5) - d195 * c5 * d2 * d5) + d196 * d0 * d5) + d98 * c2 * d2 * d5) - d183 * d3 * d5) - d197 * d0 * d5) - d115 * c5 * d0 * d3) + d198 * c5 * d4 * d5) - d114 * c4 * d4 * d5)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d187 * d3 * d5 + d94 * d3 * d5) - d189 * d3 * d5) - d185 * d0 * d5) - d191 * d3 * d5) + d192 * d3 * d4) - d193 * d3 * d4) + d186 * c5 * d4 * d5) - d184 * c4 * d4 * d5) + d194 * d3 * d5) - d196 * d3 * d5) + d197 * d3 * d5) + d97 * c5 * d4 * d5) - d98 * c4 * d4 * d5) + d185 * d3 * d5) - d91 * d0 * d3 * d5) + d190 * d0 * d1 * d5) - 32.0 * b2 * d10 * d0 * d2 * d3) - d173 * d1 * d3 * d5) + d174 * d2 * d3 * d5) - d99 * d1 * d2 * d5) + d85 * b5 * d1 * d2 * d4) - d198 * d0 * d4 * d5) + d116 * d0 * d3 * d5) + d188 * d2 * d3 * d5) + d175 * b4 * d0 * d3 * d4) - d186 * d0 * d4 * d5) + d100 * d1 * d4 * d5) + d195 * d2 * d3 * d5) + d118 * d0 * d3 * d5) - d119 * b5 * d1 * d2 * d4) - d97 * d0 * d4 * d5) - d117 * d0 * d3 * d5) + d120 * b5 * d1 * d4 * d5) + 16.0 * a0 * b4 * b5 * d1 * d2 * d5) - d121 * d0 * d4 * d5) - d199 * d0 * d2 * d5) + d122 * b5 * d1 * d4 * d5) - d123 * d0 * d4 * d5) + 16.0 * a2 * b2 * b5 * d0 * d3 * d5) + d129 * b5 * d1 * d2 * d5) - d130 * b5 * d0 * d2 * d5) + u_mm_tmp * b2 * d1 * d4 * d5) + u_mm_tmp * b4 * d1 * d2 * d5) - 32.0 * a5 * b0 * b5 * d1 * d2 * d4) - d203 * d0 * d4 * d5) - d204 * d0 * d2 * d5) + d200 * d0 * d1 * d5) + d150 * d0 * d2 * d4) - d205 * b5 * d0 * d2 * d3) - d213 * c5 * d1 * d5) + d214 * c5 * d2 * d5) - d151 * b4 * c5 * d1 * d5) + d201 * c1 * d4 * d5) + d201 * c4 * d1 * d5) + d201 * c5 * d1 * d4) - d211 * c2 * d2 * d5) + d202 * c1 * d2 * d5) + d202 * c2 * d1 * d5) + d202 * c5 * d1 * d2) + d206 * d0 * d5) - d152 * c0 * d4 * d5) - d207 * d0 * d5) - d208 * d0 * d4) - d162 * c0 * d2 * d5) - v_mm_tmp * d0 * d5) - d162 * c5 * d0 * d2) - 12.0 * a5 * b0 * b5 * d0 * d3 * d5) + d212 * d0 * d5) + d121 * d3 * d4 * d5) + d199 * d2 * d3 * d5) + d123 * d3 * d4 * d5) - d209 * b5 * d1 * d4 * d5) - d210 * b5 * d1 * d4 * d5) - 16.0 * a3 * b4 * b5 * d1 * d2 * d5) + 16.0 * a4 * b1 * b5 * d2 * d3 * d5) - 16.0 * a4 * b3 * b5 * d1 * d2 * d5) + d203 * d3 * d4 * d5) + d204 * d2 * d3 * d5) - d200 * d1 * d3 * d5) - d150 * d2 * d3 * d4) - d205 * b3 * d1 * d4 * d5) - 16.0 * a5 * b3 * b4 * d1 * d2 * d5) + 32.0 * a5 * b3 * b5 * d1 * d2 * d4) - d206 * d3 * d5) + d152 * c3 * d4 * d5) + d207 * d3 * d5) + d208 * d3 * d4) + d215 * c5 * d1 * d5) + v_mm_tmp * d3 * d5) + d162 * c3 * d2 * d5) + d161 * b5 * c5 * d2 * d3) + w_mm_tmp * b4 * c5 * d1 * d5) - b_mm_tmp_tmp * c1 * d4 * d5) - b_mm_tmp_tmp * c4 * d1 * d5) - b_mm_tmp_tmp * c5 * d1 * d4) - l_mm_tmp * c1 * d2 * d5) - l_mm_tmp * c2 * d1 * d5) - l_mm_tmp * c5 * d1 * d2) - 16.0 * a4 * b4 * b5 * d0 * d3 * d5) + 12.0 * a5 * b3 * b5 * d0 * d3 * d5) + 16.0 * a5 * b4 * b5 * d0 * d3 * d4) - n_mm_tmp * c5 * d4 * d5) + d211 * c4 * d4 * d5) - d212 * d3 * d5) + m_mm_tmp * d0 * d2 * d5) - d213 * d0 * d2 * d4) + mm_tmp_tmp * d0 * d1 * d5) - d201 * d0 * d1 * d4) - m_mm_tmp * d2 * d3 * d5) + d213 * d1 * d3 * d5) + d213 * d2 * d3 * d4) - d214 * d1 * d4 * d5) - d214 * d2 * d3 * d5) + mm_tmp_tmp * d1 * d3 * d5) + n_mm_tmp * d1 * d2 * d5) - d202 * d1 * d2 * d3) + q_mm_tmp * d0 * d4 * d5) - d152 * d0 * d3 * d4) - o_mm_tmp * d1 * d5) - o_mm_tmp * d2 * d4) + d162 * d0 * d2 * d3) - d134 * d0 * d1 * d5) + p_mm_tmp * d1 * d4) + p_mm_tmp * d2 * d3) + n_mm_tmp * d0 * d4 * d5) - d202 * d0 * d3 * d4) - q_mm_tmp * d3 * d4 * d5) + d215 * d2 * d3 * d4) - d134 * d1 * d3 * d5) + l_mm_tmp * d1 * d2 * d3);
}

//

//
double coeff2(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b2,
              double b3, double b4, double b5, double c0, double c1, double c2, double c3, double c4, double c5,
              double d0, double d1, double d2, double d3, double d4, double d5) {
    double ab_mm_tmp;
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double b_mm_tmp_tmp;
    double bb_mm_tmp;
    double c_mm_tmp;
    double cb_mm_tmp;
    double d;
    double d10;
    double d100;
    double d101;
    double d102;
    double d103;
    double d104;
    double d105;
    double d106;
    double d107;
    double d108;
    double d109;
    double d11;
    double d110;
    double d111;
    double d112;
    double d113;
    double d114;
    double d115;
    double d116;
    double d117;
    double d118;
    double d119;
    double d12;
    double d120;
    double d121;
    double d122;
    double d123;
    double d124;
    double d125;
    double d126;
    double d127;
    double d128;
    double d129;
    double d13;
    double d130;
    double d131;
    double d132;
    double d133;
    double d134;
    double d135;
    double d136;
    double d137;
    double d138;
    double d139;
    double d14;
    double d140;
    double d141;
    double d142;
    double d143;
    double d144;
    double d145;
    double d146;
    double d147;
    double d148;
    double d149;
    double d15;
    double d150;
    double d151;
    double d152;
    double d153;
    double d154;
    double d155;
    double d156;
    double d157;
    double d158;
    double d159;
    double d16;
    double d160;
    double d161;
    double d162;
    double d163;
    double d164;
    double d165;
    double d166;
    double d167;
    double d168;
    double d169;
    double d17;
    double d170;
    double d171;
    double d172;
    double d173;
    double d174;
    double d175;
    double d176;
    double d177;
    double d178;
    double d179;
    double d18;
    double d180;
    double d181;
    double d182;
    double d183;
    double d184;
    double d185;
    double d186;
    double d187;
    double d188;
    double d189;
    double d19;
    double d190;
    double d191;
    double d192;
    double d193;
    double d194;
    double d195;
    double d196;
    double d197;
    double d198;
    double d199;
    double d20;
    double d200;
    double d201;
    double d202;
    double d203;
    double d204;
    double d205;
    double d206;
    double d207;
    double d208;
    double d209;
    double d21;
    double d210;
    double d211;
    double d212;
    double d213;
    double d214;
    double d215;
    double d216;
    double d217;
    double d218;
    double d219;
    double d22;
    double d220;
    double d221;
    double d222;
    double d223;
    double d224;
    double d225;
    double d226;
    double d227;
    double d228;
    double d229;
    double d23;
    double d230;
    double d231;
    double d232;
    double d233;
    double d234;
    double d235;
    double d236;
    double d237;
    double d238;
    double d239;
    double d24;
    double d240;
    double d241;
    double d242;
    double d243;
    double d244;
    double d245;
    double d246;
    double d247;
    double d248;
    double d249;
    double d25;
    double d250;
    double d251;
    double d252;
    double d253;
    double d254;
    double d255;
    double d256;
    double d257;
    double d258;
    double d259;
    double d26;
    double d260;
    double d261;
    double d262;
    double d263;
    double d264;
    double d265;
    double d266;
    double d267;
    double d268;
    double d269;
    double d27;
    double d270;
    double d271;
    double d272;
    double d273;
    double d274;
    double d275;
    double d276;
    double d277;
    double d278;
    double d279;
    double d28;
    double d280;
    double d281;
    double d282;
    double d283;
    double d284;
    double d285;
    double d286;
    double d287;
    double d288;
    double d289;
    double d29;
    double d290;
    double d291;
    double d292;
    double d293;
    double d294;
    double d295;
    double d296;
    double d297;
    double d298;
    double d299;
    double d30;
    double d300;
    double d301;
    double d302;
    double d303;
    double d304;
    double d305;
    double d306;
    double d307;
    double d308;
    double d309;
    double d31;
    double d310;
    double d311;
    double d312;
    double d313;
    double d314;
    double d315;
    double d316;
    double d317;
    double d318;
    double d319;
    double d32;
    double d320;
    double d321;
    double d322;
    double d323;
    double d324;
    double d325;
    double d326;
    double d327;
    double d328;
    double d329;
    double d33;
    double d330;
    double d331;
    double d332;
    double d333;
    double d334;
    double d335;
    double d336;
    double d337;
    double d338;
    double d339;
    double d34;
    double d340;
    double d341;
    double d342;
    double d343;
    double d344;
    double d345;
    double d346;
    double d347;
    double d348;
    double d349;
    double d35;
    double d350;
    double d351;
    double d352;
    double d353;
    double d354;
    double d355;
    double d356;
    double d357;
    double d358;
    double d359;
    double d36;
    double d360;
    double d361;
    double d362;
    double d363;
    double d364;
    double d365;
    double d366;
    double d367;
    double d368;
    double d369;
    double d37;
    double d370;
    double d371;
    double d372;
    double d373;
    double d374;
    double d375;
    double d376;
    double d377;
    double d378;
    double d379;
    double d38;
    double d380;
    double d381;
    double d382;
    double d383;
    double d384;
    double d385;
    double d386;
    double d387;
    double d388;
    double d389;
    double d39;
    double d390;
    double d391;
    double d392;
    double d393;
    double d394;
    double d395;
    double d396;
    double d397;
    double d398;
    double d399;
    double d40;
    double d400;
    double d401;
    double d402;
    double d403;
    double d404;
    double d405;
    double d406;
    double d407;
    double d408;
    double d409;
    double d41;
    double d410;
    double d411;
    double d412;
    double d413;
    double d414;
    double d415;
    double d416;
    double d417;
    double d418;
    double d419;
    double d42;
    double d420;
    double d421;
    double d422;
    double d423;
    double d424;
    double d425;
    double d426;
    double d427;
    double d428;
    double d429;
    double d43;
    double d430;
    double d431;
    double d432;
    double d433;
    double d434;
    double d435;
    double d436;
    double d437;
    double d438;
    double d439;
    double d44;
    double d440;
    double d441;
    double d442;
    double d443;
    double d444;
    double d445;
    double d446;
    double d447;
    double d448;
    double d449;
    double d45;
    double d450;
    double d451;
    double d452;
    double d453;
    double d454;
    double d455;
    double d456;
    double d457;
    double d458;
    double d459;
    double d46;
    double d460;
    double d461;
    double d462;
    double d463;
    double d464;
    double d465;
    double d466;
    double d467;
    double d468;
    double d469;
    double d47;
    double d470;
    double d471;
    double d472;
    double d473;
    double d474;
    double d475;
    double d476;
    double d477;
    double d478;
    double d479;
    double d48;
    double d480;
    double d481;
    double d482;
    double d483;
    double d484;
    double d485;
    double d486;
    double d487;
    double d488;
    double d489;
    double d49;
    double d490;
    double d491;
    double d492;
    double d493;
    double d494;
    double d495;
    double d496;
    double d497;
    double d498;
    double d499;
    double d50;
    double d500;
    double d501;
    double d502;
    double d503;
    double d504;
    double d505;
    double d506;
    double d507;
    double d508;
    double d509;
    double d51;
    double d510;
    double d511;
    double d512;
    double d513;
    double d514;
    double d515;
    double d516;
    double d517;
    double d518;
    double d519;
    double d52;
    double d520;
    double d521;
    double d522;
    double d523;
    double d524;
    double d525;
    double d526;
    double d527;
    double d528;
    double d529;
    double d53;
    double d530;
    double d531;
    double d532;
    double d533;
    double d534;
    double d535;
    double d536;
    double d537;
    double d538;
    double d539;
    double d54;
    double d540;
    double d541;
    double d542;
    double d543;
    double d544;
    double d545;
    double d546;
    double d547;
    double d548;
    double d549;
    double d55;
    double d550;
    double d551;
    double d552;
    double d553;
    double d554;
    double d555;
    double d556;
    double d557;
    double d558;
    double d559;
    double d56;
    double d560;
    double d561;
    double d562;
    double d563;
    double d564;
    double d565;
    double d566;
    double d567;
    double d568;
    double d569;
    double d57;
    double d570;
    double d571;
    double d572;
    double d573;
    double d574;
    double d575;
    double d576;
    double d577;
    double d578;
    double d579;
    double d58;
    double d580;
    double d581;
    double d582;
    double d583;
    double d584;
    double d585;
    double d586;
    double d587;
    double d588;
    double d589;
    double d59;
    double d590;
    double d591;
    double d592;
    double d593;
    double d594;
    double d595;
    double d596;
    double d597;
    double d598;
    double d599;
    double d6;
    double d60;
    double d600;
    double d601;
    double d602;
    double d603;
    double d604;
    double d605;
    double d606;
    double d607;
    double d608;
    double d609;
    double d61;
    double d610;
    double d611;
    double d612;
    double d613;
    double d614;
    double d615;
    double d616;
    double d617;
    double d618;
    double d619;
    double d62;
    double d620;
    double d621;
    double d622;
    double d623;
    double d624;
    double d625;
    double d626;
    double d627;
    double d628;
    double d629;
    double d63;
    double d630;
    double d631;
    double d632;
    double d633;
    double d634;
    double d635;
    double d636;
    double d637;
    double d638;
    double d639;
    double d64;
    double d640;
    double d641;
    double d642;
    double d643;
    double d644;
    double d645;
    double d646;
    double d647;
    double d648;
    double d649;
    double d65;
    double d650;
    double d651;
    double d652;
    double d653;
    double d66;
    double d67;
    double d68;
    double d69;
    double d7;
    double d70;
    double d71;
    double d72;
    double d73;
    double d74;
    double d75;
    double d76;
    double d77;
    double d78;
    double d79;
    double d8;
    double d80;
    double d81;
    double d82;
    double d83;
    double d84;
    double d85;
    double d86;
    double d87;
    double d88;
    double d89;
    double d9;
    double d90;
    double d91;
    double d92;
    double d93;
    double d94;
    double d95;
    double d96;
    double d97;
    double d98;
    double d99;
    double d_mm_tmp;
    double db_mm_tmp;
    double e_mm_tmp;
    double eb_mm_tmp;
    double f_mm_tmp;
    double fb_mm_tmp;
    double g_mm_tmp;
    double gb_mm_tmp;
    double h_mm_tmp;
    double hb_mm_tmp;
    double i_mm_tmp;
    double ib_mm_tmp;
    double j_mm_tmp;
    double jb_mm_tmp;
    double k_mm_tmp;
    double kb_mm_tmp;
    double l_mm_tmp;
    double lb_mm_tmp;
    double m_mm_tmp;
    double mb_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    double n_mm_tmp;
    double nb_mm_tmp;
    double o_mm_tmp;
    double ob_mm_tmp;
    double p_mm_tmp;
    double pb_mm_tmp;
    double q_mm_tmp;
    double qb_mm_tmp;
    double r_mm_tmp;
    double rb_mm_tmp;
    double s_mm_tmp;
    double sb_mm_tmp;
    double t_mm_tmp;
    double tb_mm_tmp;
    double u_mm_tmp;
    double v_mm_tmp;
    double w_mm_tmp;
    double x_mm_tmp;
    double y_mm_tmp;
    d = std::pow(d5, 3.0);
    b_d1 = b5 * b5;
    b_d2 = a0 * a0;
    b_d3 = 3.0 * b_d2;
    b_d4 = std::pow(d0, 3.0);
    b_d5 = a1 * a1;
    d6 = 4.0 * b_d5;
    d7 = std::pow(d3, 3.0);
    d8 = a3 * a3;
    d9 = 3.0 * d8;
    d10 = a5 * a5;
    d11 = 3.0 * d10;
    d12 = d11 * b5;
    d13 = b2 * b2;
    d14 = b4 * b4;
    d15 = std::pow(b5, 3.0);
    d16 = d5 * d5;
    d17 = 3.0 * d15;
    d18 = c0 * c0;
    d19 = d17 * d18;
    d20 = std::pow(b0, 3.0);
    d21 = c1 * c1;
    d22 = 4.0 * d15 * d21;
    d23 = 3.0 * d20;
    d24 = std::pow(b3, 3.0);
    d25 = c3 * c3;
    d17 *= d25;
    d26 = 3.0 * d24;
    d27 = c5 * c5;
    d28 = 4.0 * d24;
    d29 = d2 * d2;
    d30 = 4.0 * d20;
    d31 = d4 * d4;
    d32 = b0 * b0;
    d33 = d0 * d0;
    d34 = 3.0 * a0 * b_d1;
    d35 = b3 * b3;
    d36 = d3 * d3;
    d37 = 4.0 * a5 * d13;
    d38 = 3.0 * a3 * b_d1;
    d39 = 4.0 * a5 * d14;
    d40 = 4.0 * b0 * d13;
    d41 = 3.0 * d32;
    d42 = d41 * b5;
    d43 = 4.0 * b3 * d14;
    d44 = 3.0 * d35 * b5;
    d45 = 8.0 * a0 * a1;
    d46 = 6.0 * a0 * a3;
    d47 = 8.0 * a1 * a3;
    d48 = 8.0 * a2 * b2;
    d49 = d48 * b5;
    d50 = 6.0 * a5 * b0;
    d51 = 8.0 * d15;
    d15 = 6.0 * d15 * c0 * c3;
    d52 = 4.0 * a0 * b_d1;
    d53 = d52 * c0;
    d54 = 4.0 * a0 * d13;
    d55 = b1 * b1;
    d56 = d1 * d1;
    d57 = 16.0 * a1 * b_d1;
    d58 = d57 * c1;
    d59 = 4.0 * a0 * d14;
    d60 = d52 * c3;
    d61 = 4.0 * a2 * b_d1 * c2;
    d62 = 4.0 * a3 * b_d1;
    d63 = d62 * c0;
    d64 = d34 * c5;
    d65 = 4.0 * a3 * d13;
    d66 = 9.0 * a5 * b_d1;
    d67 = d66 * c0;
    d68 = 4.0 * a5 * d32;
    d69 = d68 * c5;
    d70 = 4.0 * a5 * d55;
    d71 = 12.0 * a5 * b_d1;
    d72 = 4.0 * a3 * d14;
    d73 = d37 * c5;
    d74 = 9.0 * a0 * d32;
    d75 = d62 * c3;
    d76 = d38 * c5;
    d77 = 16.0 * a5;
    d78 = 3.0 * a5 * d35;
    d66 *= c3;
    d79 = 4.0 * a5 * d35;
    d80 = d79 * c5;
    d81 = d39 * c5;
    d82 = 4.0 * b0 * b_d1;
    d83 = 16.0 * a0 * d13;
    d84 = 16.0 * a0 * d14;
    d85 = 16.0 * b0 * d13;
    d86 = 16.0 * b0 * d14;
    d87 = c2 * c2;
    d88 = a2 * a2;
    d89 = 4.0 * d10;
    d90 = d89 * b0;
    d91 = d90 * d0;
    d92 = 4.0 * d32;
    d93 = 4.0 * a1 * b_d1;
    d94 = 16.0 * a5 * d14;
    d95 = d40 * d27;
    d96 = d82 * d87;
    d97 = 4.0 * b1 * b_d1 * c1;
    d98 = 4.0 * d88;
    d99 = d98 * b0;
    d100 = 9.0 * a3 * d35;
    d101 = 4.0 * b0 * d55;
    d102 = 6.0 * a0 * b_d1;
    d103 = 4.0 * b0 * d14;
    d104 = 3.0 * b0 * b_d1;
    d105 = 16.0 * d10;
    d106 = 16.0 * d32;
    d107 = 16.0 * a3 * d13;
    d108 = 16.0 * b1 * b_d1;
    d109 = c4 * c4;
    d110 = 16.0 * b2 * d14 * c2;
    d111 = a4 * a4;
    d112 = d105 * b1;
    d113 = d112 * d1;
    d114 = 16.0 * a3 * d14;
    d115 = d103 * c5;
    d116 = d103 * d27;
    d117 = d82 * d109;
    d118 = 4.0 * b2 * b_d1;
    d119 = 16.0 * b3 * d14;
    b_d2 *= 4.0;
    d120 = 4.0 * d111;
    d121 = d120 * b0;
    d122 = d89 * b2;
    d123 = 16.0 * d88;
    d124 = 8.0 * a3 * b_d1;
    d125 = 8.0 * b0 * b_d1;
    d126 = 8.0 * b3 * b_d1;
    d127 = d126 * c0;
    d128 = 8.0 * a0 * b_d1;
    d129 = 6.0 * b0 * b_d1;
    d130 = d129 * c0;
    d131 = d125 * c3;
    d132 = 8.0 * b0 * d55;
    d133 = d119 * c0;
    d134 = d85 * c3;
    d135 = 6.0 * b0 * d35;
    d136 = 16.0 * b1 * d13;
    d137 = d92 * b2;
    d138 = d92 * b5;
    d139 = 64.0 * d55;
    d140 = 8.0 * d55;
    d141 = d140 * b3;
    d142 = 16.0 * d13;
    d143 = d142 * b3;
    d144 = 16.0 * d55;
    d145 = 4.0 * d13;
    d146 = d145 * b3;
    d147 = 16.0 * a5 * d55;
    d148 = d144 * b5;
    d149 = 4.0 * b3 * b_d1;
    d150 = d89 * b3;
    d151 = d150 * d0;
    d152 = 16.0 * a4 * d13;
    d153 = d149 * d87;
    d154 = b_d3 * b5;
    b_d5 *= 16.0;
    d155 = d98 * b3;
    d156 = d11 * b0;
    d157 = d42 * d27;
    d158 = d146 * c5;
    d159 = d146 * d27;
    d160 = 8.0 * a5 * d13;
    d161 = 8.0 * b0 * d13;
    d162 = 8.0 * a5 * d35;
    d163 = d161 * c5;
    d164 = 16.0 * a4 * d32;
    d165 = d106 * b4;
    d166 = 16.0 * b0 * d55;
    d167 = d166 * c5;
    d168 = 8.0 * b0 * d35;
    d169 = d92 * b3;
    d170 = d144 * b2;
    d171 = d142 * b4 * c4;
    d172 = 8.0 * d13;
    mm_tmp = d172 * b5;
    d173 = mm_tmp * c0;
    d145 *= b5;
    d174 = 8.0 * d35;
    d175 = d174 * b5;
    d176 = 16.0 * d14 * b5;
    d177 = 4.0 * d55;
    d178 = d177 * b5;
    d179 = 3.0 * b3 * b_d1;
    d180 = 6.0 * d32;
    d142 *= b5;
    d181 = d6 * b5;
    d182 = 12.0 * d10 * b5;
    d183 = d178 * c5;
    d184 = d178 * d27;
    d185 = 16.0 * d111;
    d186 = 6.0 * a3 * b_d1;
    d187 = 6.0 * b3 * b_d1;
    d188 = d187 * c3;
    d189 = d180 * b3;
    d190 = d142 * c3;
    d191 = d144 * b3;
    d192 = d191 * c5;
    d193 = 16.0 * b2 * d35;
    d194 = 16.0 * b1 * d14;
    d195 = 3.0 * b0 * d35;
    d196 = 8.0 * a3 * d14;
    d197 = 8.0 * a5 * d32;
    d198 = 8.0 * d32;
    d199 = 4.0 * d35;
    d200 = d199 * b5;
    d201 = b_d2 * b5;
    d202 = 4.0 * d14 * b5;
    d203 = d43 * d27;
    d204 = d149 * d109;
    d98 *= b5;
    d205 = 4.0 * d8;
    d206 = d120 * b3;
    d207 = d198 * b5;
    d208 = 8.0 * d14;
    d209 = 6.0 * a5 * d32;
    d210 = 8.0 * b3 * d14;
    d211 = d208 * b5;
    d212 = d211 * c3;
    d213 = 6.0 * a5 * d35;
    d214 = d198 * b3;
    d215 = d210 * c5;
    d216 = 4.0 * b2 * d35;
    d177 *= b3;
    d217 = b_d5 * b5;
    d218 = d92 * b4;
    d180 *= b5;
    d219 = 6.0 * d35 * b5;
    d220 = 16.0 * d35;
    d221 = d180 * c5;
    d222 = d219 * c5;
    d223 = d44 * d27;
    d224 = d205 * b5;
    d120 *= b5;
    d144 *= b4;
    d225 = 8.0 * a0 * a2;
    d226 = 32.0 * a1 * a2;
    d227 = d225 * b2;
    d228 = 8.0 * a0 * a5;
    d229 = 8.0 * a0 * b0;
    d230 = 8.0 * a1 * a5;
    d231 = 8.0 * a2 * a3;
    d232 = 16.0 * a2 * a4;
    d233 = 8.0 * a2 * b0;
    d234 = d233 * b2;
    d235 = 6.0 * a0 * a5;
    d236 = d235 * b0;
    d237 = 6.0 * a0 * b0;
    d238 = d237 * b5;
    d239 = d228 * b0;
    d240 = d228 * b5;
    d241 = d240 * d0;
    d242 = d229 * b5;
    d243 = d242 * c5;
    d244 = 32.0 * a1 * b1;
    d245 = 8.0 * a0 * a3;
    d246 = 16.0 * a1 * a2;
    d247 = d246 * b4;
    d248 = 16.0 * a1 * a4;
    d249 = d248 * b2;
    d250 = d230 * b1;
    d251 = 8.0 * a1 * b1;
    d252 = d251 * b5;
    d253 = 16.0 * a1 * b2;
    d254 = d253 * b4;
    d255 = d231 * b2;
    d256 = d232 * b1;
    d257 = 8.0 * a1 * b0;
    d258 = 32.0 * a2 * b1;
    d259 = 16.0 * a0 * b2;
    d260 = d259 * b4;
    d199 *= b4;
    d261 = 16.0 * a0 * a2;
    d262 = 16.0 * a0 * a4;
    d263 = 16.0 * a2 * b0;
    d264 = d263 * b4;
    d265 = 16.0 * a2 * b1;
    d266 = d265 * b4;
    d48 *= b3;
    d267 = 8.0 * a3 * b0;
    d268 = 16.0 * a4 * b0;
    d269 = d268 * b2;
    d270 = 16.0 * a4 * b1;
    d271 = 8.0 * a5 * b0;
    d272 = 32.0 * a1 * a5;
    d273 = 8.0 * a2 * a5;
    d274 = 32.0 * a1 * a4;
    d275 = d271 * b5;
    d276 = 8.0 * a0 * a4;
    d277 = d276 * b4;
    d278 = d235 * b3;
    d279 = 8.0 * a0 * b3;
    d280 = 6.0 * a0 * b3 * b5;
    d281 = d272 * b1;
    d272 *= b5;
    d282 = d272 * d1;
    d283 = d244 * b5;
    d284 = d283 * c5;
    d285 = 6.0 * a3 * a5;
    d286 = d285 * b0;
    d287 = 6.0 * a3 * b0;
    d288 = d287 * b5;
    d289 = 8.0 * a4 * b0;
    d290 = d289 * b4;
    d291 = d50 * b3;
    d292 = 32.0 * a5 * b1;
    d293 = d292 * b5;
    d294 = d245 * b5;
    d295 = d49 * c5;
    d296 = 8.0 * a5 * b2;
    d297 = d296 * b5 * c2;
    d235 *= b5;
    d298 = d279 * b5;
    d299 = 16.0 * a2 * a3;
    d300 = 32.0 * a2 * a5;
    d301 = 8.0 * a3 * a5;
    d302 = 8.0 * a3 * a4;
    d303 = d301 * b0;
    d304 = d301 * b5;
    d305 = d304 * d0;
    d306 = d267 * b5;
    d307 = d306 * c5;
    d308 = d271 * b3;
    d309 = d308 * c5;
    d310 = d275 * c3;
    d311 = 8.0 * a5 * b3 * b5;
    d312 = d311 * c0;
    d50 *= b5;
    d313 = d50 * c5;
    d314 = d302 * b4;
    d315 = d285 * b3;
    d316 = 6.0 * a3 * b3 * b5;
    d317 = 32.0 * a2 * b2;
    d318 = 8.0 * a3 * b2;
    d319 = 8.0 * a5 * b1;
    d320 = d317 * b5;
    d321 = 8.0 * a3 * b1;
    d322 = 32.0 * a5 * b2;
    d323 = d270 * b2;
    d324 = 32.0 * a4 * b1;
    d325 = 16.0 * a2 * b3;
    d326 = 16.0 * a3 * a4;
    d327 = 16.0 * a3 * b2;
    d328 = d327 * b4;
    d329 = 16.0 * a4 * b2 * b3;
    d330 = 8.0 * a4 * b3 * b4;
    d331 = 8.0 * a4 * a5;
    d332 = 8.0 * a3 * b3;
    d333 = 32.0 * a4 * a5;
    d334 = d301 * b3;
    d335 = d332 * b5;
    d336 = d335 * c5;
    d337 = d311 * c3;
    d285 *= b5;
    d338 = d331 * b4;
    d331 *= b5;
    d339 = 8.0 * a4 * b4 * b5;
    d340 = d339 * c5;
    d341 = 6.0 * a5 * b3 * b5;
    d342 = d341 * c5;
    d343 = 8.0 * a5 * b4 * b5 * c4;
    d344 = 32.0 * a0 * b0;
    d345 = 32.0 * a2 * b0;
    d346 = 32.0 * a1 * b0;
    d347 = 16.0 * a0 * b0;
    d348 = 128.0 * a1 * b1;
    d349 = 12.0 * a0 * b0;
    d350 = d317 * b3;
    d351 = 32.0 * a3 * b0;
    d352 = 32.0 * a4 * b0;
    d353 = d352 * b4;
    d354 = 32.0 * a5 * b0;
    b_mm_tmp = 8.0 * b0 * b3;
    d355 = b_mm_tmp * b5;
    d356 = d347 * b5;
    d357 = d263 * b2;
    d358 = d265 * b5;
    d359 = 32.0 * b0 * b2;
    d360 = 12.0 * a3 * b0;
    d361 = 16.0 * a1 * b1;
    d362 = d253 * b5;
    d363 = d344 * b4;
    d364 = 16.0 * a1 * b0;
    d365 = 32.0 * a0 * b2;
    d317 *= b4;
    d366 = 16.0 * a2 * b2;
    d367 = d366 * b5;
    d368 = 8.0 * a2 * b3 * b5;
    d369 = 16.0 * b1 * b2;
    d370 = d369 * b4;
    d371 = 6.0 * b0 * b3 * b5;
    d372 = 32.0 * a3 * b2;
    d373 = d319 * b5;
    d296 *= b3;
    d374 = d370 * c5;
    d375 = d370 * d27;
    d376 = 8.0 * b2 * b3 * b5 * c2;
    d377 = 8.0 * a0 * b4 * b5;
    d378 = d289 * b5;
    d379 = 32.0 * a4 * b3 * b4;
    d380 = d271 * b4;
    d381 = 12.0 * a5 * b0;
    d382 = 16.0 * a3 * b0;
    d383 = 16.0 * b0 * b2;
    d384 = d369 * b5;
    d385 = d384 * c4;
    d386 = d349 * b5;
    d387 = d381 * b5;
    d388 = 32.0 * a2 * b3;
    d389 = 16.0 * a3 * b3;
    d390 = d389 * b5;
    d391 = d383 * b4;
    d392 = 8.0 * b0 * b1 * b5;
    d393 = 8.0 * b0 * b2 * b3;
    d394 = 8.0 * b0 * b4 * b5 * c4;
    d395 = 32.0 * b2 * b3;
    d396 = 16.0 * a5 * b0;
    d397 = d396 * b5;
    d398 = d270 * b5;
    d399 = 16.0 * a5 * b1;
    d400 = d399 * b4;
    d401 = 16.0 * a5 * b3;
    d402 = d401 * b5;
    d403 = 16.0 * b1 * b4 * b5;
    d404 = d403 * c2;
    d405 = 16.0 * a1 * b4 * b5;
    d406 = 16.0 * a4 * b3;
    d407 = 16.0 * b2 * b3;
    d408 = 12.0 * a3 * b3 * b5;
    d409 = d406 * b4;
    d410 = d407 * b4;
    d411 = 8.0 * b1 * b3 * b5;
    d412 = 32.0 * a3 * b3;
    d413 = 16.0 * a4 * b4 * b5;
    d414 = 8.0 * a2 * b_d1;
    d415 = 16.0 * b0 * b_d1;
    d416 = d415 * c1;
    d417 = d108 * c0;
    d418 = 8.0 * b1 * b_d1;
    d419 = d418 * c0;
    d420 = 8.0 * b2 * b_d1;
    d421 = d420 * c0;
    d422 = d414 * c3;
    d423 = d124 * c2;
    d424 = d160 * c0;
    d425 = 24.0 * a5 * b_d1 * c1;
    d426 = d418 * c1;
    d427 = d426 * c5;
    d428 = d108 * c2;
    d429 = d428 * c4;
    d420 = d420 * c2 * c3;
    d430 = d173 * c5;
    d431 = d102 * c3;
    d432 = d128 * c4;
    d433 = 8.0 * a4 * b_d1;
    d434 = d433 * c0;
    d435 = 18.0 * a5 * b_d1;
    d129 = d129 * c3 * c5;
    d187 *= c0;
    d436 = d187 * c5;
    d437 = 8.0 * b4 * b_d1;
    d438 = d437 * c0;
    d439 = d438 * c4;
    d440 = 8.0 * a0 * d14 * c5;
    d441 = d125 * c1;
    d442 = d161 * c0;
    d443 = 32.0 * a1 * d13;
    d444 = 8.0 * a2 * d32;
    d445 = d125 * c0;
    d446 = d421 * c2;
    d447 = d102 * c0;
    d448 = d130 * c5;
    d449 = 8.0 * a5 * d14;
    d450 = d449 * c0;
    d451 = 8.0 * b0 * d14;
    d452 = d451 * c0;
    d453 = 32.0 * b1 * d13;
    d454 = d453 * c1;
    d455 = d198 * b2;
    d456 = d455 * c2;
    d457 = 32.0 * d13;
    d458 = 8.0 * a1 * b_d1;
    d459 = 16.0 * a3 * b_d1;
    d460 = 16.0 * b3 * b_d1;
    d461 = d460 * c1;
    d462 = 32.0 * d55;
    d463 = 8.0 * a3 * d13 * c5;
    d464 = d209 * c5;
    d465 = d160 * c3;
    d466 = d462 * b5;
    d161 *= c3;
    d467 = 32.0 * a2 * d55;
    d418 *= c3;
    d468 = d126 * c1;
    d469 = d462 * b2;
    d470 = d469 * c2;
    d471 = d466 * c2;
    d472 = 32.0 * a1 * b_d1;
    d473 = 32.0 * b1 * b_d1 * c1;
    d474 = d57 * c2;
    d475 = d57 * c4;
    d172 *= b3;
    d476 = d172 * c0;
    d477 = 32.0 * a1 * d14;
    d211 *= c0;
    d478 = 8.0 * a5 * d55 * c5;
    d479 = d188 * c5;
    d437 = d437 * c3 * c4;
    d140 *= b5;
    d480 = d196 * c5;
    d481 = d449 * c3;
    d482 = d212 * c5;
    d483 = d213 * c5;
    d484 = 32.0 * b1 * d14;
    d485 = d484 * c1;
    d486 = 8.0 * a4 * d32;
    d487 = 8.0 * a2 * d35;
    d451 *= c3;
    d488 = 8.0 * b2 * d35;
    d489 = d488 * c2;
    d490 = d210 * c0;
    d491 = d175 * c2;
    d492 = d198 * b4;
    d493 = d207 * c4;
    d172 *= c3;
    d494 = d219 * c0;
    d495 = 32.0 * b0 * d14;
    d496 = d495 * c2;
    d497 = 32.0 * b2 * d14;
    d498 = d497 * c0;
    d499 = 32.0 * b0 * d13 * c4;
    d500 = d457 * b4;
    d501 = d500 * c0;
    d502 = d462 * b4;
    d503 = d502 * c4;
    d466 *= c4;
    d210 *= c3;
    d504 = 8.0 * a4 * d35;
    d174 *= b4;
    d505 = d174 * c4;
    d219 *= c3;
    d506 = d175 * c4;
    d507 = d140 * c3;
    d508 = 8.0 * a0 * d13;
    d509 = 8.0 * d10;
    d510 = 32.0 * d32;
    d511 = d106 * b5;
    d512 = d457 * b3;
    d513 = d509 * b1;
    d514 = d220 * b5;
    d515 = d514 * c2;
    d516 = d511 * c4;
    d517 = 16.0 * b0 * d35;
    d518 = d198 * b1;
    d519 = 6.0 * d10;
    d520 = 128.0 * d55;
    d521 = d512 * c4;
    d522 = d500 * c3;
    d523 = 8.0 * b1 * d35;
    d524 = 12.0 * d32;
    d525 = d106 * b3;
    d526 = d347 * b2;
    d527 = d357 * c5;
    d528 = d367 * c0;
    d529 = 16.0 * a5 * b2;
    d530 = d529 * b5;
    d531 = 16.0 * a2 * a5;
    d532 = d263 * b5;
    d533 = 16.0 * a4 * a5;
    d534 = d268 * b5;
    d535 = d396 * b2;
    d536 = d258 * b4 * c5;
    d537 = d358 * c4;
    d538 = d358 * c5;
    d366 = d366 * b3 * c5;
    d539 = d367 * c3;
    d540 = d533 * b1;
    d541 = d382 * b5;
    d263 *= b3;
    d542 = d382 * b2;
    d543 = d396 * b1;
    d544 = d396 * b3;
    d545 = d396 * b4;
    d546 = d354 * b5;
    d547 = d399 * b5;
    d548 = d383 * b5;
    d549 = d548 * c1;
    d550 = 16.0 * b0 * b4 * b5;
    d551 = d550 * c1;
    d552 = d384 * c0;
    d553 = d403 * c0;
    d554 = d399 * b2;
    d555 = d554 * c5;
    d556 = d400 * c2;
    d557 = d400 * c5;
    d558 = d547 * c1;
    d559 = d293 * c2;
    d560 = d293 * c4;
    d561 = d547 * c5;
    d562 = d530 * c3;
    d563 = d402 * c2;
    d564 = 32.0 * b1 * b2;
    d565 = d564 * b4;
    d566 = d385 * c5;
    d567 = d404 * c5;
    d568 = d360 * b5 * c5;
    d569 = d268 * b4 * c5;
    d570 = 16.0 * b0 * b3;
    d571 = d570 * b5;
    c_mm_tmp = 16.0 * b0 * b1;
    d572 = c_mm_tmp * b5;
    d573 = d548 * c4;
    d574 = d571 * c2;
    d575 = d565 * c0;
    d576 = d347 * b4;
    d577 = d572 * c1;
    d578 = d383 * b3;
    d579 = d578 * c2;
    d580 = d550 * c2;
    d581 = d530 * c0;
    d582 = d413 * c0;
    d381 = d381 * b3 * c5;
    d583 = d387 * c3;
    d584 = d397 * c4;
    d585 = 12.0 * a5 * b3 * b5;
    d586 = 16.0 * a1 * a5;
    d_mm_tmp = 64.0 * a1 * b1;
    d587 = d325 * b5;
    d588 = 16.0 * a3 * a5;
    d589 = d327 * b5;
    d590 = d_mm_tmp * b4;
    d591 = 16.0 * a1 * b3 * b5;
    d592 = 16.0 * a3 * b1;
    d593 = d592 * b5;
    d594 = d586 * b4;
    d595 = d586 * b5;
    d596 = d361 * b5 * c5;
    d597 = 32.0 * a1 * b2 * b4 * c5;
    d598 = d362 * c4;
    d599 = d362 * c5;
    d600 = d405 * c2;
    d601 = d405 * c5;
    d602 = d531 * b1;
    d603 = 16.0 * a3 * b4 * b5;
    d604 = 64.0 * a4 * b1 * b4;
    d406 *= b5;
    d529 *= b3;
    d401 *= b4;
    d605 = 32.0 * a5 * b3 * b5;
    d384 *= c3;
    d399 *= b3;
    d606 = 16.0 * b1 * b3 * b5;
    d607 = d606 * c1;
    d608 = 64.0 * a5 * b1 * b5;
    d565 *= c3;
    d403 *= c3;
    d407 *= b5;
    d609 = d407 * c1;
    d610 = d407 * c4;
    d611 = 16.0 * b3 * b4 * b5;
    d612 = 16.0 * a0 * b3;
    d613 = 16.0 * a5 * b4 * b5;
    d614 = d408 * c5;
    d615 = d409 * c5;
    d616 = d413 * c3;
    d617 = d585 * c3;
    d618 = d402 * c4;
    d619 = d613 * c3;
    d620 = d382 * b4;
    d621 = d268 * b3;
    d570 *= b4;
    d622 = d570 * c4;
    d389 *= b4;
    e_mm_tmp = 12.0 * b0 * b3 * b5;
    d623 = e_mm_tmp * c3;
    d571 *= c4;
    d624 = 16.0 * a0 * b1;
    d625 = d624 * b4;
    d624 *= b5;
    d626 = d259 * b5;
    d627 = d364 * b4;
    d628 = d364 * b5;
    d629 = c_mm_tmp * b4;
    d259 *= b3;
    d630 = d629 * c2;
    d631 = d629 * c5;
    d632 = d572 * c2;
    d633 = d572 * c4;
    d634 = d407 * c0;
    d635 = d612 * b4;
    d636 = 16.0 * a0 * b4 * b5;
    d637 = d550 * c0;
    d253 *= b3;
    d638 = d591 * d0;
    d639 = d593 * d0;
    d640 = d589 * d0;
    d641 = d399 * d0;
    d642 = d529 * d0;
    d643 = d572 * c3;
    d369 *= b3;
    d644 = d606 * c0;
    d645 = d570 * c5;
    d646 = d550 * c3;
    d647 = d369 * c4;
    d648 = d369 * c5;
    d649 = d606 * c2;
    d650 = d606 * c4;
    d651 = d410 * c1;
    d652 = d410 * c5;
    d653 = d407 * c3;
    mm_tmp_tmp = 4.0 * b0 * d35;
    f_mm_tmp = mm_tmp_tmp * d0;
    g_mm_tmp = 16.0 * a0 * b_d1;
    h_mm_tmp = d128 * c2;
    i_mm_tmp = 16.0 * a0 * a5;
    j_mm_tmp = c_mm_tmp * b3;
    k_mm_tmp = 3.0 * a5 * d32;
    l_mm_tmp = 16.0 * a2 * d14;
    m_mm_tmp = 16.0 * a5 * d13;
    n_mm_tmp = 9.0 * d10 * b5;
    o_mm_tmp = 4.0 * b4 * b_d1;
    p_mm_tmp = d46 * b5;
    q_mm_tmp = d293 * c1;
    r_mm_tmp = d228 * b3;
    s_mm_tmp = 32.0 * a4 * b4 * b5;
    t_mm_tmp = d318 * b5;
    b_mm_tmp_tmp = 32.0 * a4 * b2;
    u_mm_tmp = b_mm_tmp_tmp * b4;
    v_mm_tmp = b_mm_tmp * b4;
    w_mm_tmp = d458 * c5;
    x_mm_tmp = d186 * c0;
    y_mm_tmp = mm_tmp * c3 * c5;
    ab_mm_tmp = d186 * c3;
    bb_mm_tmp = d124 * c4;
    cb_mm_tmp = 32.0 * d14 * b5 * c1;
    db_mm_tmp = d207 * c2;
    eb_mm_tmp = 32.0 * a4 * d55;
    fb_mm_tmp = d497 * c3;
    gb_mm_tmp = 32.0 * b3 * d14 * c2;
    hb_mm_tmp = 16.0 * a2 * d35;
    ib_mm_tmp = d386 * c5;
    jb_mm_tmp = d387 * c0;
    kb_mm_tmp = d_mm_tmp * b5;
    lb_mm_tmp = d324 * b2 * c5;
    mb_mm_tmp = d611 * c1;
    nb_mm_tmp = 12.0 * a0 * b3 * b5 * c5;
    ob_mm_tmp = d613 * c0;
    pb_mm_tmp = e_mm_tmp * c0;
    d_mm_tmp *= b2;
    qb_mm_tmp = 64.0 * a2 * b1 * b2;
    rb_mm_tmp = 64.0 * a2 * b2;
    sb_mm_tmp = d578 * c5;
    tb_mm_tmp = d391 * c1;
    e_mm_tmp = d265 * b3;
    mm_tmp = d325 * b4;
    c_mm_tmp = d592 * b2;
    b_mm_tmp = d611 * c2;
    return (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((b_d3 * b0 * d + d6 * b0 * d) - d34 * d7) + d38 * b_d4) - b_d3 * b3 * d) + d9 * b0 * d) - d39 * b_d4) - d6 * b3 * d) + d37 * d7) - d12 * b_d4) - d9 * b3 * d) + d12 * d7) - d40 * d7) + d43 * b_d4) + d42 * d7) - d44 * b_d4) - d19 * d0) - d22 * d0) - d23 * c3 * d16) + d26 * c0 * d16) + d19 * d3) - d17 * d0) + d30 * c5 * d31) + d22 * d3) + d23 * d27 * d5) - d28 * c5 * d29) + d17 * d3) - d26 * d27 * d5) + d28 * d0 * d29) - d30 * d3 * d31) + d23 * d36 * d5) - d26 * d33 * d5) + d45 * b1 * d) - d46 * b0 * d) - d47 * b1 * d) + d46 * b3 * d) + d49 * d7) - d339 * b_d4) - d50 * d7) + d341 * b_d4) - d51 * c0 * c1 * d1) + d15 * d0) + d51 * c1 * c3 * d1) - d15 * d3) - 8.0 * d24 * c2 * d2 * d5) + 8.0 * d20 * c4 * d4 * d5) - 6.0 * d20 * c5 * d3 * d5) + 6.0 * d24 * c5 * d0 * d5) + d54 * c0 * d16) - d53 * d29) - d59 * c0 * d16) + d53 * d31) + 16.0 * a1 * d13 * c1 * d16) - d58 * d29) - 4.0 * a2 * d32 * c2 * d16) + d61 * d33) + d74 * c5 * d16) - d54 * c3 * d16) + d60 * d29) + d64 * d33) - 16.0 * a2 * d55 * c2 * d16) + 16.0 * a2 * b_d1 * c2 * d56) - d65 * c0 * d16) + d63 * d29) - k_mm_tmp * c0 * d16) - d67 * d33) + 12.0 * a0 * d55 * c5 * d16) + d52 * c5 * d56) - 16.0 * a1 * d14 * c1 * d16) + d58 * d31) - d70 * c0 * d16) - d71 * c0 * d56) + d59 * c3 * d16) - d60 * d31) - 4.0 * a2 * d35 * c2 * d16) + d61 * d36) + d72 * c0 * d16) - d63 * d31) + d69 * d29) - d73 * d33) + 9.0 * a0 * d35 * c5 * d16) + d64 * d36) - 9.0 * a3 * d32 * c5 * d16) + d65 * c3 * d16) - d75 * d29) - d76 * d33) + 4.0 * a4 * d32 * c4 * d16) - 4.0 * a4 * b_d1 * c4 * d33) + k_mm_tmp * c3 * d16) + d147 * c5 * d29) - m_mm_tmp * c5 * d56) - d78 * c0 * d16) - d67 * d36) + d66 * d33) - 12.0 * a3 * d55 * c5 * d16) - d62 * c5 * d56) + 16.0 * a4 * d55 * c4 * d16) - 16.0 * a4 * b_d1 * c4 * d56) - d69 * d31) + d70 * c3 * d16) + d81 * d33) + d71 * c3 * d56) - d72 * c3 * d16) + d75 * d31) - 16.0 * a5 * (b1 * b1) * c5 * d31) - d73 * d36) + d80 * d29) + d94 * c5 * d56) - d100 * c5 * d16) - d76 * d36) + 4.0 * a4 * d35 * c4 * d16) - 4.0 * a4 * (b5 * b5) * c4 * d36) + d78 * c3 * d16) + d66 * d36) - d80 * d31) + d81 * d36) - 4.0 * a0 * d55 * d0 * d16) + d83 * d0 * d31) - d84 * d0 * d29) + d52 * d0 * d56) - d101 * c0 * d16) + d85 * c0 * d31) - d86 * c0 * d29) + d82 * c0 * d56) + 4.0 * a1 * d32 * d1 * d16) - d93 * d33 * d1) + d95 * d0) - d96 * d0) - d97 * d33) + d99 * d0 * d16) - d91 * d29) + d92 * b1 * c1 * d16) - d74 * d3 * d16) - 6.0 * a0 * d35 * d0 * d16) + d102 * d0 * d36) - d34 * d33 * d3) + 64.0 * a1 * d13 * d1 * d31) - 64.0 * a1 * d14 * d1 * d29) - 16.0 * a2 * d32 * d2 * d31) + l_mm_tmp * d33 * d2) + 3.0 * a3 * d32 * d0 * d16) - d135 * c0 * d16) + d130 * d36) - d104 * c3 * d33) + 64.0 * b1 * d13 * c1 * d31) - 64.0 * b1 * d14 * c1 * d29) + d110 * d33) + 9.0 * b3 * b_d1 * c0 * d33) - d106 * b2 * c2 * d31) + d41 * b3 * c0 * d16) + 12.0 * a0 * d32 * d31 * d5) - 8.0 * a0 * d55 * d3 * d16) - d83 * d3 * d31) + d59 * d33 * d5) + d84 * d29 * d3) - d128 * d56 * d3) - 64.0 * a2 * d55 * d2 * d31) + 64.0 * a2 * d14 * d56 * d2) + 8.0 * a3 * d55 * d0 * d16) - d107 * d0 * d31) + d114 * d0 * d29) + d124 * d0 * d56) - d68 * d0 * d31) - d132 * c3 * d16) - d134 * d31) + d86 * c3 * d29) + d115 * d33) - d116 * d0) - d131 * d56) + d117 * d0) + d136 * d27 * d1) - d108 * d87 * d1) + 64.0 * b2 * d14 * c2 * d56) + d118 * d18 * d2) + d133 * d29) + d127 * d56) - b_d2 * b2 * d2 * d16) + d123 * b1 * d1 * d16) - d121 * d0 * d16) + d91 * d31) - d113 * d29) + d122 * d33 * d2) - d137 * d27 * d2) - d138 * c0 * d31) - d139 * b2 * c2 * d31) + d141 * c0 * d16) - d143 * c0 * d31) - 12.0 * d14 * b5 * c0 * d33) + 16.0 * a0 * d55 * d31 * d5) + 8.0 * a0 * (b2 * b2) * d36 * d5) + 8.0 * a0 * d35 * d29 * d5) - d84 * d56 * d5) - 4.0 * a1 * d35 * d1 * d16) + d93 * d1 * d36) - 4.0 * a3 * d32 * d29 * d5) + d65 * d33 * d5) + d164 * d29 * d4) - d152 * d33 * d4) - d68 * d29 * d3) + d147 * d0 * d31) - d160 * d0 * d36) + d37 * d33 * d3) - d162 * d0 * d29) - d94 * d0 * d56) + d167 * d31) + d163 * d36) - d95 * d3) + d168 * c5 * d29) - d86 * c5 * d56) + d104 * d18 * d5) + d96 * d3) - 4.0 * b1 * d35 * c1 * d16) + d97 * d36) + 16.0 * b2 * b_d1 * d21 * d2) + d153 * d0) - d154 * d0 * d16) - b_d5 * b2 * d2 * d16) - d99 * d3 * d16) - d155 * d0 * d16) + d156 * d33 * d5) + d90 * d29 * d3) + d105 * b2 * d56 * d2) + d151 * d29) - d169 * c5 * d29) + d165 * c4 * d29) - d138 * c3 * d29) - d157 * d0) - d170 * d27 * d2) + d148 * c0 * d31) + d158 * d33) - d159 * d0) - d171 * d33) - d173 * d36) + d145 * c3 * d33) - d175 * c0 * d29) - d176 * c0 * d56) - 3.0 * a0 * d35 * d3 * d16) - hb_mm_tmp * d2 * d31) + l_mm_tmp * d2 * d36) + 6.0 * a3 * d32 * d3 * d16) - 16.0 * a3 * d55 * d29 * d5) + d107 * d56 * d5) + d100 * d0 * d16) + d38 * d0 * d36) - d186 * d33 * d3) + 64.0 * a4 * d55 * d29 * d4) - 64.0 * a4 * d13 * d56 * d4) - d68 * d56 * d5) + d70 * d33 * d5) - d147 * d29 * d3) + m_mm_tmp * d56 * d3) + 12.0 * b0 * d55 * d27 * d5) - d195 * c3 * d16) - 9.0 * b0 * b_d1 * c3 * d36) + d82 * d21 * d5) - d194 * d27 * d1) + d108 * d109 * d1) - d193 * c2 * d31) + d110 * d36) + d179 * c0 * d36) - d188 * d33) - d181 * d0 * d16) - d185 * b1 * d1 * d16) + d90 * d56 * d5) + d113 * d31) - d182 * d0 * d56) + d189 * c3 * d16) - d138 * c5 * d56) - d192 * d29) + d139 * b4 * c4 * d29) - d148 * c3 * d29) + d183 * d33) - d184 * d0) + d143 * c5 * d56) - 64.0 * d13 * b4 * c4 * d56) + d190 * d56) + 4.0 * a0 * d35 * d31 * d5) - d59 * d36 * d5) - 8.0 * a3 * d32 * d31 * d5) + 4.0 * a3 * d55 * d3 * d16) + d107 * d3 * d31) - d196 * d33 * d5) - d114 * d29 * d3) - d62 * d56 * d3) + d197 * d3 * d31) + d79 * d0 * d31) - d39 * d0 * d36) + d449 * d33 * d3) + 4.0 * b0 * (b3 * b3) * c5 * d31) - d115 * d36) + d116 * d3) - d117 * d3) - d216 * d27 * d2) + d118 * d25 * d2) - d119 * c3 * d29) - d215 * d33) + d203 * d0) - d149 * c3 * d56) - d204 * d0) + d201 * d29 * d5) - d98 * d33 * d5) - d205 * b2 * d2 * d16) + d121 * d3 * d16) + d206 * d0 * d16) - d90 * d3 * d31) + d122 * d2 * d36) - d151 * d31) - d214 * c5 * d31) + d207 * c3 * d31) + d138 * d87 * d5) + d177 * c3 * d16) + d143 * c3 * d31) - d145 * d18 * d5) + d200 * c0 * d31) - d202 * c0 * d36) + d212 * d33) - d65 * d36 * d5) - 12.0 * a3 * d35 * d29 * d5) - d152 * d36 * d4) + 16.0 * a4 * d35 * d29 * d4) - d209 * d36 * d5) + d213 * d33 * d5) + d79 * d29 * d3) + 9.0 * b0 * d35 * d27 * d5) + d104 * d25 * d5) - d179 * d18 * d5) - d153 * d3) - o_mm_tmp * d18 * d4) + b_d2 * b4 * d4 * d16) + d154 * d3 * d16) + d217 * d29 * d5) + d155 * d3 * d16) - d123 * b5 * d56 * d5) - d9 * b5 * d0 * d16) + d156 * d36 * d5) - d11 * b3 * d33 * d5) - d150 * d29 * d3) - d89 * b4 * d33 * d4) - n_mm_tmp * d0 * d36) + n_mm_tmp * d33 * d3) - 9.0 * d32 * b3 * d27 * d5) + d218 * d27 * d4) - d221 * d36) + d157 * d3) + d148 * d87 * d5) - d158 * d36) + d159 * d3) - d171 * d36) + 12.0 * d13 * b5 * c3 * d36) - d142 * d21 * d5) + d220 * b4 * c4 * d29) + d200 * c3 * d29) + d222 * d33) - d223 * d0) - d70 * d36 * d5) + d79 * d56 * d5) - d149 * d21 * d5) - 16.0 * b4 * b_d1 * d21 * d4) - d201 * d31 * d5) + b_d5 * b4 * d4 * d16) + d181 * d3 * d16) + d120 * d33 * d5) - d150 * d56 * d5) - d105 * b4 * d56 * d4) + d182 * d56 * d3) - d138 * d109 * d5) - 12.0 * d55 * b3 * d27 * d5) + d144 * d27 * d4) - d183 * d36) + d184 * d3) + d200 * c5 * d56) + d202 * d18 * d5) - d203 * d3) + d204 * d3) - d217 * d31 * d5) - d98 * d36 * d5) + d224 * d29 * d5) - d206 * d3 * d16) + d185 * b5 * d56 * d5) + d150 * d3 * d31) - d148 * d109 * d5) - d145 * d25 * d5) + d200 * d87 * d5) + d176 * d21 * d5) - d179 * d25 * d5) - o_mm_tmp * d25 * d4) + d205 * b4 * d4 * d16) + 3.0 * d8 * b5 * d3 * d16) - 3.0 * d10 * b3 * d36 * d5) - 4.0 * (a5 * a5) * b4 * d36 * d4) + d199 * d27 * d4) + d223 * d3) - d224 * d31 * d5) + d120 * d36 * d5) - d200 * d109 * d5) + d202 * d25 * d5) - d166 * d0 * d31) + d40 * d0 * d36) - f_mm_tmp * d29) + d86 * d0 * d56) - d194 * d33 * d1) + d106 * b1 * d1 * d31) - f_mm_tmp * d31) + d103 * d0 * d36) - d103 * d33 * d3) + d136 * d1 * d36) - 16.0 * b1 * d35 * d1 * d29) + d216 * d33 * d2) - d137 * d2 * d36) + d169 * d0 * d31) + d195 * d33 * d5) - mm_tmp_tmp * d29 * d3) + d193 * d56 * d2) + d169 * d29 * d3) - d42 * d0 * d36) - d170 * d2 * d36) + d146 * d0 * d36) - d146 * d33 * d3) + d101 * d36 * d5) - mm_tmp_tmp * d56 * d5) + d169 * d56 * d5) - d165 * d56 * d4) + d138 * d56 * d3) - d177 * d33 * d5) + d191 * d29 * d3) + d144 * d33 * d4) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d178 * d0 * d36 - d178 * d33 * d3) - d143 * d56 * d3) - d200 * d0 * d56) - d43 * d33 * d3) + 4.0 * d32 * b3 * d3 * d31) - 3.0 * d32 * b3 * d36 * d5) - d218 * d36 * d4) + d199 * d33 * d4) + d44 * d33 * d3) - d225 * b0 * d2 * d16) + d227 * d0 * d16) - d229 * b2 * c2 * d16) + d234 * c0 * d16) - d236 * d0 * d16) - d238 * c0 * d16) - d226 * b1 * d2 * d16) + d226 * b2 * d1 * d16) - d244 * b2 * c2 * d16) + d258 * b2 * c1 * d16) - d45 * b5 * d1 * d16) - d227 * d3 * d16) + d225 * b3 * d2 * d16) - d261 * b4 * d1 * d16) + d245 * b2 * d2 * d16) - d262 * b2 * d1 * d16) + d239 * d29 * d5) - d228 * b1 * d1 * d16) - d241 * d29) + d243 * d29) - 8.0 * a0 * b1 * b5 * c1 * d16) + 8.0 * a0 * b2 * b3 * c2 * d16) - d260 * c1 * d16) + d247 * d0 * d16) + d249 * d0 * d16) - d230 * b0 * d1 * d16) - d250 * d0 * d16) + 24.0 * a1 * b0 * b1 * c5 * d16) - d257 * b5 * c1 * d16) - d252 * c0 * d16) + d254 * c0 * d16) + d231 * b0 * d2 * d16) - d255 * d0 * d16) - d232 * b0 * d1 * d16) + d256 * d0 * d16) - d234 * c3 * d16) + d233 * b3 * c2 * d16) - d264 * c1 * d16) + d266 * c0 * d16) - d48 * c0 * d16) + d267 * b2 * c2 * d16) - d269 * c1 * d16) + d323 * c0 * d16) - d271 * b1 * c1 * d16) - 8.0 * a5 * b0 * b5 * c0 * d29) + p_mm_tmp * d0 * d16) + d276 * b0 * d4 * d16) - d277 * d0 * d16) + d236 * d3 * d16) + d278 * d0 * d16) - 18.0 * a0 * b0 * b3 * c5 * d16) + d229 * b4 * c4 * d16) + d238 * c3 * d16) + d280 * c0 * d16) + d286 * d0 * d16) + d288 * c0 * d16) - d290 * c0 * d16) + d291 * c0 * d16) - d239 * d31 * d5) + d241 * d31) - d243 * d31) + d281 * d29 * d5) - d282 * d29) + d284 * d29) - d273 * b2 * d33 * d5) + d273 * b5 * d33 * d2) - d295 * d33) + d275 * c0 * d31) - q_mm_tmp * d29) + d297 * d33) - d294 * d29 * d5) - r_mm_tmp * d29 * d5) + d235 * d33 * d5) + d240 * d29 * d3) - d298 * c5 * d29) - d247 * d3 * d16) + d47 * b5 * d1 * d16) + d274 * b1 * d4 * d16) - d249 * d3 * d16) - d274 * b4 * d1 * d16) + d250 * d3 * d16) + d230 * b3 * d1 * d16) - 24.0 * a1 * b1 * b3 * c5 * d16) + d244 * b4 * c4 * d16) + d252 * c3 * d16) - d254 * c3 * d16) + 8.0 * a1 * b3 * b5 * c1 * d16) + d255 * d3 * d16) - d231 * b3 * d2 * d16) + d299 * b4 * d1 * d16) - d256 * d3 * d16) + d232 * b3 * d1 * d16) - d300 * b2 * d56 * d5) + d300 * b5 * d56 * d2) - 16.0 * a2 * b1 * b4 * c3 * d16) + 8.0 * a2 * b2 * b3 * c3 * d16) - d320 * c5 * d56) + mm_tmp * c1 * d16) + d326 * b2 * d1 * d16) - d303 * d29 * d5) + d301 * b1 * d1 * d16) + d305 * d29) - d307 * d29) + d321 * b5 * c1 * d16) - d318 * b3 * c2 * d16) + d328 * c1 * d16) - d323 * c3 * d16) - d324 * b4 * c1 * d16) + d329 * c1 * d16) - d309 * d29) + d310 * d29) + d313 * d33) + d319 * b3 * c1 * d16) + d322 * b5 * c2 * d56) + d312 * d29) - d245 * b4 * d4 * d16) - p_mm_tmp * d3 * d16) - d276 * b3 * d4 * d16) + d277 * d3 * d16) - d278 * d3 * d16) + d240 * d56 * d5) - d279 * b4 * c4 * d16) - d280 * c3 * d16) - d281 * d31 * d5) + d282 * d31) - d284 * d31) - d302 * b0 * d4 * d16) + d314 * d0 * d16) - d286 * d3 * d16) - d315 * d0 * d16) + 18.0 * a3 * b0 * b3 * c5 * d16) - d267 * b4 * c4 * d16) - d288 * c3 * d16) - d316 * c0 * d16) - d289 * b3 * c4 * d16) + d290 * c3 * d16) + d330 * c0 * d16) - d291 * c3 * d16) + d275 * c5 * d56) + q_mm_tmp * d31) + d294 * d31 * d5) + r_mm_tmp * d31 * d5) - d240 * d3 * d31) + 8.0 * a0 * b3 * b5 * c5 * d31) - 8.0 * a2 * a5 * b2 * d36 * d5) + 8.0 * a2 * a5 * b5 * d2 * d36) - d295 * d36) + d303 * d31 * d5) - d305 * d31) + d307 * d31) + d309 * d31) - d310 * d31) + d297 * d36) - d312 * d31) + d235 * d36 * d5) + d334 * d29 * d5) - d285 * d33 * d5) - d304 * d29 * d3) + d336 * d29) + d338 * d33 * d5) - d331 * d33 * d4) + d340 * d33) + d313 * d36) - d337 * d29) - d342 * d33) - d343 * d33) + d302 * b3 * d4 * d16) - d314 * d3 * d16) + d315 * d3 * d16) - d304 * d56 * d5) + d332 * b4 * c4 * d16) + d316 * c3 * d16) + d333 * b4 * d56 * d5) - d333 * b5 * d56 * d4) - d330 * c3 * d16) + s_mm_tmp * c5 * d56) - d311 * c5 * d56) - 32.0 * a5 * b4 * b5 * c4 * d56) - d334 * d31 * d5) + d304 * d3 * d31) - d336 * d31) + d337 * d31) - d285 * d36 * d5) + d338 * d36 * d5) - d331 * d36 * d4) + d340 * d36) - d342 * d36) - d343 * d36) + d229 * b1 * d1 * d16) - d257 * b1 * d0 * d16) - d344 * b2 * d2 * d31) + d237 * b3 * d0 * d16) + d345 * b2 * d0 * d31) - 8.0 * a0 * b0 * b5 * d0 * d31) - d229 * b3 * d29 * d5) + d363 * d29 * d4) - d242 * d29 * d3) + d298 * d0 * d29) - d364 * b1 * d3 * d16) - d348 * b2 * d2 * d31) + d361 * b3 * d0 * d16) + 128.0 * a2 * b1 * b2 * d1 * d31) + d306 * d0 * d29) - d353 * d0 * d29) + d308 * d0 * d29) + d355 * c0 * d29) + d349 * b3 * d3 * d16) - d242 * d56 * d5) - 32.0 * a0 * b1 * b5 * d1 * d31) + d365 * b3 * d2 * d31) + d346 * b1 * d31 * d5) - d346 * b5 * d1 * d31) + d283 * d0 * d31) - 32.0 * a2 * b0 * b2 * d3 * d31) + d345 * b3 * d2 * d31) - d350 * d0 * d31) + d351 * b2 * d2 * d31) - d360 * b3 * d0 * d16) - d354 * b1 * d1 * d31) + d275 * d0 * d56) - 32.0 * b0 * b1 * b5 * c1 * d31) + d359 * b3 * c2 * d31) - d347 * b3 * d31 * d5) + d356 * d3 * d31) - d244 * b3 * d29 * d5) + d348 * b4 * d29 * d4) + d252 * d33 * d5) - d283 * d29 * d3) - d254 * d33 * d5) + d362 * d33 * d4) + 32.0 * a1 * b3 * b5 * d1 * d29) + d357 * d36 * d5) - d266 * d33 * d5) + d358 * d33 * d4) + d48 * d33 * d5) - d317 * d33 * d4) - d367 * d0 * d36) + d49 * d33 * d3) - d368 * d33 * d2) + 32.0 * a3 * b1 * b5 * d1 * d29) - t_mm_tmp * d33 * d2) - d323 * d33 * d5) - 128.0 * a4 * b1 * b4 * d1 * d29) + u_mm_tmp * d33 * d2) + 16.0 * a5 * b1 * b2 * d33 * d4) + d292 * b3 * d1 * d29) - d373 * d33 * d1) - d296 * d33 * d2) - d392 * d27 * d1) + d393 * d27 * d2) - d391 * d27 * d1) - d374 * d33) + d375 * d0) + d385 * d33) + 32.0 * b1 * b3 * b5 * c1 * d29) - d376 * d33) - d386 * d36 * d5) - 32.0 * a0 * b3 * b4 * d29 * d4) - d280 * d33 * d5) + d377 * d33 * d4) + d251 * b3 * d3 * d16) + d350 * d56 * d5) - 128.0 * a2 * b2 * b4 * d56 * d4) + d320 * d56 * d3) - d388 * b5 * d56 * d2) + d382 * b3 * d29 * d5) - d351 * b4 * d29 * d4) - d288 * d33 * d5) - d321 * b3 * d1 * d16) - d372 * b5 * d56 * d2) - d390 * d0 * d29) - d352 * b3 * d29 * d4) + d290 * d33 * d5) + d353 * d29 * d3) + d378 * d33 * d4) + 128.0 * a4 * b2 * b4 * d56 * d2) + d379 * d0 * d29) - d291 * d33 * d5) + d380 * d33 * d4) + d387 * d0 * d36) - d50 * d33 * d3) - d322 * b3 * d56 * d2) - 32.0 * b0 * b3 * b4 * c4 * d29) - d371 * c5 * d33) + d371 * d27 * d0) + d394 * d33) - d395 * b5 * c2 * d56) + 32.0 * a0 * b4 * b5 * d56 * d4) + d350 * d3 * d31) - d287 * b3 * d3 * d16) - d372 * b3 * d2 * d31) - d353 * d56 * d5) + d352 * b5 * d56 * d4) - s_mm_tmp * d0 * d56) + d354 * b4 * d56 * d4) - d397 * d56 * d3) + d402 * d0 * d56) + 32.0 * b0 * b4 * b5 * c4 * d56) - d298 * d3 * d31) - d252 * d36 * d5) + d254 * d36 * d5) - d405 * d2 * d36) + d266 * d36 * d5) - d48 * d36 * d5) - d317 * d36 * d4) - d368 * d2 * d36) + d267 * b3 * d31 * d5) - d306 * d3 * d31) - t_mm_tmp * d2 * d36) + d335 * d0 * d31) + d323 * d36 * d5) - d398 * d2 * d36) + u_mm_tmp * d2 * d36) - d308 * d3 * d31) - d400 * d2 * d36) + d373 * d1 * d36) - d296 * d2 * d36) - d355 * c3 * d31) - d355 * d87 * d5) + d374 * d36) - d375 * d3) + d411 * d27 * d1) - d404 * d36) + d410 * d27 * d1) - d376 * d36) + d280 * d36 * d5) + d377 * d36 * d4) + d288 * d36 * d5) + d412 * b4 * d29 * d4) + d408 * d33 * d5) + d335 * d29 * d3) - d290 * d36 * d5) + d378 * d36 * d4) - d409 * d33 * d5) - d379 * d29 * d3) - d339 * d0 * d36) + d413 * d33 * d3) + d291 * d36 * d5) + d380 * d36 * d4) + d341 * d0 * d36) - d585 * d33 * d3) - v_mm_tmp * d27 * d4) + 6.0 * b0 * b3 * b5 * c5 * d36) - 6.0 * b0 * b3 * b5 * d27 * d3) + d394 * d36) + d335 * d56 * d5) - d311 * d56 * d3) + d355 * d109 * d5) - h_mm_tmp * d0 * d2) + d414 * c0 * d0 * d2) - d355 * d0 * d56) - d445 * c2 * d2) + d446 * d0) + d447 * d0 * d5) + d629 * d2 * d36) - d392 * d1 * d36) + d393 * d2 * d36) + d448 * d0) - d369 * d33 * d4) - d370 * d0 * d36) + d370 * d33 * d3) + d411 * d33 * d1) - d472 * c2 * d1 * d2) + 32.0 * a2 * b_d1 * c1 * d1 * d2) - v_mm_tmp * d33 * d4) - d371 * d0 * d36) + d371 * d33 * d3) - d473 * c2 * d2) + 32.0 * b2 * b_d1 * c1 * c2 * d1) + d508 * c5 * d0 * d5) + d128 * c1 * d1 * d5) - g_mm_tmp * c1 * d2 * d4) - g_mm_tmp * c2 * d1 * d4) + h_mm_tmp * d2 * d3) - g_mm_tmp * c4 * d1 * d2) + d458 * c0 * d1 * d5) + d57 * c0 * d2 * d4) + d458 * c1 * d0 * d5) + d474 * d0 * d4) + d475 * d0 * d2)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((w_mm_tmp * d0 * d1 - 8.0 * a2 * b_d1 * c0 * d2 * d3) - d414 * c2 * d0 * d3) - d422 * d0 * d2) + d423 * d0 * d2) - d424 * d0 * d5) - d425 * d0 * d1) + d355 * d56 * d3) + d442 * c5 * d5) - d416 * c2 * d4) - d416 * c4 * d2) + d441 * c5 * d1) + d125 * c2 * c3 * d2) - d415 * c2 * c4 * d1) + d419 * c1 * d5) + d417 * c2 * d4) + d417 * c4 * d2) + d419 * c5 * d1) + d427 * d0) + d429 * d0) - d446 * d3) - d421 * c3 * d2) - d420 * d0) + d127 * c2 * d2) - d430 * d0) - d447 * d3 * d5) - d431 * d0 * d5) + d432 * d0 * d4) - d102 * c5 * d0 * d3) - x_mm_tmp * d0 * d5) - d434 * d0 * d4) + d435 * c0 * d0 * d3) - d130 * c3 * d5) + d445 * c4 * d4) - d448 * d3) - d129 * d0) - d436 * d0) - d439 * d0) - d440 * d0 * d5) + d443 * c5 * d1 * d5) - d444 * c5 * d2 * d5) + d197 * c2 * d2 * d5) - 32.0 * a5 * d13 * c1 * d1 * d5) + d450 * d0 * d5) - d452 * c5 * d5) + d454 * c5 * d5) - d456 * c5 * d5) + db_mm_tmp * c5 * d2) - d457 * b5 * c1 * c5 * d1) + d208 * b5 * c0 * c5 * d0) - 8.0 * a0 * d13 * c5 * d3 * d5) - 8.0 * a1 * (b5 * b5) * c1 * d3 * d5) - d474 * d3 * d4) - d458 * c3 * d1 * d5) - d57 * c3 * d2 * d4) + d472 * c4 * d1 * d4) - d475 * d2 * d3) - w_mm_tmp * d1 * d3) - d467 * c5 * d2 * d5) + d422 * d2 * d3) - d463 * d0 * d5) - d124 * c1 * d1 * d5) + d459 * c1 * d2 * d4) + d459 * c2 * d1 * d4) - d423 * d2 * d3) + d459 * c4 * d1 * d2) - 32.0 * a4 * b_d1 * c1 * d1 * d4) - d464 * d0 * d5) + 32.0 * a5 * d55 * c2 * d2 * d5) + d424 * d3 * d5) + d465 * d0 * d5) + d160 * c5 * d0 * d3) + d425 * d1 * d3) - d161 * c5 * d5) - d426 * c3 * d5) + d473 * c4 * d4) - d427 * d3) - d428 * c3 * d4) - d429 * d3) - d108 * c3 * c4 * d2) - d418 * c5 * d1) + d420 * d3) + d461 * c2 * d4) + d461 * c4 * d2) - d468 * c5 * d1) - d126 * c2 * c3 * d2) + d460 * c2 * c4 * d1) - 32.0 * b4 * b_d1 * c1 * c4 * d1) - d180 * c0 * c5 * d5) - d470 * c5 * d5) + d471 * c5 * d2) - d476 * c5 * d5) + d173 * c3 * d5) + d430 * d3) + y_mm_tmp * d0) + d431 * d3 * d5) - d432 * d3 * d4) - d477 * c5 * d1 * d5) + x_mm_tmp * d3 * d5) + ab_mm_tmp * d0 * d5) - bb_mm_tmp * d0 * d4) + d186 * c5 * d0 * d3) + d434 * d3 * d4) + d433 * c3 * d0 * d4) + d433 * c4 * d0 * d3) - d478 * d0 * d5) + 32.0 * a5 * d14 * c1 * d1 * d5) - d435 * c3 * d0 * d3) - d131 * c4 * d4) + d129 * d3) - d485 * c5 * d5) + d187 * c3 * d5) - d127 * c4 * d4) + d436 * d3) + d479 * d0) + d438 * c3 * d4) + d439 * d3) + d437 * d0) - d140 * c0 * c5 * d5) + cb_mm_tmp * c5 * d1) + d440 * d3 * d5) - d487 * c5 * d2 * d5) + d480 * d0 * d5) + d162 * c2 * d2 * d5) - d450 * d3 * d5) - d481 * d0 * d5) - d449 * c5 * d0 * d3) + d451 * c5 * d5) - d489 * c5 * d5) + d490 * c5 * d5) + d491 * c5 * d2) - d211 * c3 * d5) - d211 * c5 * d3) - d482 * d0) + d463 * d3 * d5) + d486 * c5 * d4 * d5) - d197 * c4 * d4 * d5) + d464 * d3 * d5) - d465 * d3 * d5) - d483 * d0 * d5) + d492 * c4 * c5 * d5) + d180 * c3 * c5 * d5) - d493 * c5 * d4) + d172 * c5 * d5) - y_mm_tmp * d3) - d494 * c5 * d5) - ab_mm_tmp * d3 * d5) + bb_mm_tmp * d3 * d4) + eb_mm_tmp * c5 * d4 * d5) - 8.0 * a4 * b_d1 * c3 * d3 * d4) - 32.0 * a5 * (b1 * b1) * c4 * d4 * d5) + d478 * d3 * d5) + d126 * c3 * c4 * d4) - d479 * d3) - d437 * d3) + d503 * c5 * d5) + d507 * c5 * d5) - d466 * c5 * d4) - d480 * d3 * d5) + d481 * d3 * d5) - d210 * c5 * d5) + d482 * d3) + d504 * c5 * d4 * d5) - d162 * c4 * d4 * d5) + d483 * d3 * d5) + d505 * c5 * d5) + d219 * c5 * d5) - d506 * c5 * d4) + d441 * d0 * d1) - d419 * d0 * d1) - d496 * d0 * d2) - d130 * d0 * d3) + d498 * d0 * d2) + d452 * d0 * d5) - d508 * d0 * d3 * d5) - d442 * d3 * d5) - d161 * d0 * d5) + d499 * d0 * d4) - d163 * d0 * d3) - d416 * d1 * d3) - 128.0 * b1 * d14 * c2 * d1 * d2) + 128.0 * b2 * d14 * c1 * d1 * d2) + d461 * d0 * d1) + d476 * d0 * d5) - d501 * d0 * d4) + d173 * d0 * d3) + d477 * d0 * d1 * d5) - 32.0 * a2 * d14 * d0 * d2 * d3) - d132 * c5 * d0 * d5) - d495 * c1 * d1 * d5) + d496 * d2 * d3) + 12.0 * b0 * b_d1 * c3 * d0 * d3) + d484 * c0 * d1 * d5) + d485 * d0 * d5) + d484 * c5 * d0 * d1) - d498 * d2 * d3) - d497 * c2 * d0 * d3) - fb_mm_tmp * d0 * d2) + gb_mm_tmp * d0 * d2) - 12.0 * b3 * b_d1 * c0 * d0 * d3) + 8.0 * d55 * b5 * c0 * d0 * d5) - cb_mm_tmp * d0 * d1) - d443 * d1 * d3 * d5) + d444 * d2 * d3 * d5) - d164 * d1 * d2 * d5) + 16.0 * a5 * d32 * d1 * d2 * d4) + d517 * c2 * d2 * d5) - d454 * d3 * d5) - d453 * c3 * d1 * d5) + 128.0 * b1 * d13 * c4 * d1 * d4) - d453 * c5 * d1 * d3) - d133 * d0 * d5) - d105 * b0 * d1 * d2 * d4) + d513 * d0 * d1 * d5) + d112 * d0 * d2 * d4) - d509 * b2 * d0 * d2 * d3) + d518 * c5 * d1 * d5) + d456 * d3 * d5) + d455 * c3 * d2 * d5) - d510 * b2 * c4 * d2 * d4) + d455 * c5 * d2 * d3) - d214 * c2 * d2 * d5) - d165 * c1 * d2 * d5) - d165 * c2 * d1 * d5) + d510 * b4 * c2 * d2 * d4) - d165 * c5 * d1 * d2) - d207 * c1 * d1 * d5) + d511 * c1 * d2 * d4) + d511 * c2 * d1 * d4) - db_mm_tmp * d2 * d3) + d516 * d1 * d2) + d512 * c1 * d1 * d5) - 128.0 * d13 * b4 * c1 * d1 * d4) + 32.0 * (b2 * b2) * b5 * c1 * d1 * d3) - d515 * d0 * d2) + 16.0 * (b4 * b4) * b5 * c0 * d0 * d3) + d467 * d2 * d3 * d5) - d486 * d0 * d4 * d5) + 32.0 * a4 * d13 * d0 * d3 * d4) + d209 * d0 * d3 * d5) + d134 * d3 * d5) - d499 * d3 * d4) - 12.0 * b0 * d35 * c5 * d0 * d5) + d418 * d1 * d3) - d468 * d1 * d3) - d519 * b0 * d0 * d3 * d5) + d189 * c5 * d0 * d5) - d492 * c0 * d4 * d5) - d198 * b4 * c4 * d0 * d5) - 8.0 * d32 * b4 * c5 * d0 * d4) + 6.0 * d32 * b5 * c0 * d3 * d5) + 6.0 * (b0 * b0) * b5 * c3 * d0 * d5) - d493 * d0 * d4) + d221 * d0 * d3) + d470 * d3 * d5) + d469 * c3 * d2 * d5) - d520 * b2 * c4 * d2 * d4) + d469 * c5 * d2 * d3) - d462 * b3 * c2 * d2 * d5) + d520 * b4 * c2 * d2 * d4) - d471 * d2 * d3) - d521 * d0 * d4) + d501 * d3 * d4) + d522 * d0 * d4) + d500 * c4 * d0 * d3) - d190 * d0 * d3) + 12.0 * d35 * b5 * c0 * d0 * d5) - eb_mm_tmp * d0 * d4 * d5) + 32.0 * b0 * d55 * c4 * d4 * d5) - d167 * d3 * d5) + fb_mm_tmp * d2 * d3) - gb_mm_tmp * d2 * d3) + d188 * d0 * d3) + d192 * d0 * d5) - d502 * c0 * d4 * d5) - d503 * d0 * d5) - d502 * c5 * d0 * d4) + d466 * d0 * d4) + hb_mm_tmp * d1 * d4 * d5) + d487 * d2 * d3 * d5) + d196 * d0 * d3 * d5) - 16.0 * a5 * d35 * d1 * d2 * d4) - d451 * d3 * d5) - d523 * c5 * d1 * d5) + d193 * c1 * d4 * d5) + d489 * d3 * d5) + d488 * c3 * d2 * d5) + d193 * c4 * d1 * d5) - 32.0 * b2 * d35 * c4 * d2 * d4) + d193 * c5 * d1 * d4) + d488 * c5 * d2 * d3) + d490 * d3 * d5) + d210 * d0 * d5) + d215 * d0 * d3) + 8.0 * d88 * b5 * d0 * d3 * d5) - d513 * d1 * d3 * d5) - d112 * d2 * d3 * d4) + d105 * b3 * d1 * d2 * d4) + 32.0 * d35 * b4 * c2 * d2 * d4) + 8.0 * d35 * b5 * c1 * d1 * d5) - 16.0 * d35 * b5 * c1 * d2 * d4) - d515 * d1 * d4) + d491 * d2 * d3) - d514 * c4 * d1 * d2) - d212 * d0 * d3) - d504 * d0 * d4 * d5) - d213 * d0 * d3 * d5) + d168 * c4 * d4 * d5) - d135 * c5 * d3 * d5) + d519 * b3 * d0 * d3 * d5) + d509 * b4 * d0 * d3 * d4) - d525 * c4 * d4 * d5) + d524 * b3 * c5 * d3 * d5) - d524 * b5 * c3 * d3 * d5) + d516 * d3 * d4) - d172 * d3 * d5) + d521 * d3 * d4) - d522 * d3 * d4) - d174 * c0 * d4 * d5) - d505 * d0 * d5) - d174 * c5 * d0 * d4) - d494 * d3 * d5) - d219 * d0 * d5) + d506 * d0 * d4) - d222 * d0 * d3) - 8.0 * d111 * b5 * d0 * d3 * d5) + d141 * c5 * d3 * d5) - d507 * d3 * d5) + d132 * d0 * d3 * d5) + d517 * d1 * d2 * d4) + d523 * d0 * d1 * d5) - d193 * d0 * d1 * d4) - d488 * d0 * d2 * d3) - d518 * d1 * d3 * d5) - d525 * d1 * d2 * d4) + d165 * d1 * d2 * d3) + d135 * d0 * d3 * d5) - d189 * d0 * d3 * d5) + d492 * d0 * d3 * d4) - d141 * d0 * d3 * d5) - d526 * c5 * d2 * d5) + d356 * c2 * d2 * d5) + d527 * d0 * d5) - d528 * d0 * d5) - d397 * c2 * d0 * d2) + d581 * d0 * d2) - ib_mm_tmp * d0 * d5) + jb_mm_tmp * d0 * d5) - d_mm_tmp * c5 * d2 * d5) + kb_mm_tmp * c2 * d2 * d5) + qb_mm_tmp * c5 * d1 * d5) - rb_mm_tmp * b5 * c1 * d1 * d5) - d608 * c2 * d1 * d2) + 64.0 * a5 * b2 * b5 * c1 * d1 * d2) + d261 * b5 * d1 * d4 * d5) + d262 * b5 * d1 * d2 * d5) + i_mm_tmp * b2 * d1 * d4 * d5) + i_mm_tmp * b4 * d1 * d2 * d5) - 32.0 * a0 * a5 * b5 * d1 * d2 * d4) - d624 * c5 * d1 * d5) + d259 * c5 * d2 * d5) - d365 * b4 * c5 * d1 * d5) + d626 * c1 * d4 * d5) + d626 * c4 * d1 * d5) + d626 * c5 * d1 * d4) - d612 * b5 * c2 * d2 * d5) + d636 * c1 * d2 * d5) + d636 * c2 * d1 * d5) + d636 * c5 * d1 * d2) - d246 * b5 * d0 * d4 * d5) - d248 * b5 * d0 * d2 * d5) - d586 * b2 * d0 * d4 * d5) - d594 * d0 * d2 * d5) + d595 * d0 * d1 * d5) + d272 * d0 * d2 * d4) - d628 * c5 * d1 * d5) - d596 * d0 * d5) + d597 * d0 * d5) - d362 * c0 * d4 * d5) - d598 * d0 * d5) - d599 * d0 * d4) - d405 * c0 * d2 * d5) - d600 * d0 * d5) - d601 * d0 * d2) + d531 * b0 * d1 * d4 * d5) - d602 * d0 * d4 * d5)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d531 * b2 * d0 * d3 * d5 - d531 * b5 * d0 * d2 * d3) - d527 * d3 * d5) + d263 * c5 * d2 * d5) - d345 * b4 * c5 * d1 * d5) + d532 * c1 * d4 * d5) + d532 * c4 * d1 * d5) + d532 * c5 * d1 * d4) + d536 * d0 * d5) - d358 * c0 * d4 * d5) - d537 * d0 * d5) - d538 * d0 * d4) - d366 * d0 * d5) + d528 * d3 * d5) + d539 * d0 * d5) + d367 * c5 * d0 * d3) + d542 * c5 * d2 * d5) - d541 * c2 * d2 * d5) + d533 * b0 * d1 * d2 * d5) - d540 * d0 * d2 * d5) - d352 * b2 * c5 * d1 * d5) + d534 * c1 * d2 * d5) + d534 * c2 * d1 * d5) + d534 * c5 * d1 * d2) + lb_mm_tmp * d0 * d5) - d398 * c0 * d2 * d5) - d398 * c2 * d0 * d5) - d398 * c5 * d0 * d2) - d543 * c5 * d1 * d5) + d535 * c1 * d4 * d5) + d535 * c4 * d1 * d5) + d535 * c5 * d1 * d4) - d544 * c2 * d2 * d5) + d545 * c1 * d2 * d5) + d545 * c2 * d1 * d5) + d545 * c5 * d1 * d2) + d397 * c1 * d1 * d5) - d546 * c1 * d2 * d4) - d546 * c2 * d1 * d4) + d396 * b5 * c2 * d2 * d3) - d546 * c4 * d1 * d2) - d77 * b1 * b2 * c0 * d4 * d5) - d77 * b1 * b2 * c4 * d0 * d5) - d555 * d0 * d4) - d400 * c0 * d2 * d5) - d556 * d0 * d5) - d557 * d0 * d2) + d547 * c0 * d1 * d5) + d293 * c0 * d2 * d4) + d558 * d0 * d5) + d559 * d0 * d4) + d560 * d0 * d2) + d561 * d0 * d1) - d581 * d2 * d3) - d530 * c2 * d0 * d3) - d562 * d0 * d2) + d563 * d0 * d2) - d577 * c5 * d5) + d579 * c5 * d5) - d359 * b4 * c1 * c5 * d5) + d549 * c4 * d5) + d549 * c5 * d4) + d573 * c5 * d1) - d574 * c5 * d2) + d551 * c2 * d5) + d551 * c5 * d2) + d580 * c5 * d1) + d575 * c5 * d5) - d552 * c4 * d5) - d552 * c5 * d4) - d566 * d0) - d553 * c2 * d5) - d553 * c5 * d2) - d567 * d0) - 12.0 * a0 * a5 * b5 * d0 * d3 * d5) + d576 * c5 * d4 * d5) - d356 * c4 * d4 * d5) + ib_mm_tmp * d3 * d5) + nb_mm_tmp * d0 * d5) + d568 * d0 * d5) - d569 * d0 * d5) + d582 * d0 * d5) + d381 * d0 * d5) - jb_mm_tmp * d3 * d5) - d583 * d0 * d5) + d584 * d0 * d4) - d387 * c5 * d0 * d3) - d585 * c0 * d0 * d5) - ob_mm_tmp * d0 * d4) + pb_mm_tmp * c5 * d5) + 16.0 * a1 * a2 * b5 * d3 * d4 * d5) + 16.0 * a1 * a4 * b5 * d2 * d3 * d5) + 16.0 * a1 * a5 * b2 * d3 * d4 * d5) + d594 * d2 * d3 * d5) - d595 * d1 * d3 * d5) - d272 * d2 * d3 * d4) + d590 * c5 * d4 * d5) - kb_mm_tmp * c4 * d4 * d5) + d596 * d3 * d5) - d597 * d3 * d5) + d362 * c3 * d4 * d5) + d598 * d3 * d5) + d599 * d3 * d4) + d591 * c5 * d1 * d5) + d600 * d3 * d5) + d405 * c3 * d2 * d5) + d601 * d2 * d3) - d299 * b5 * d1 * d4 * d5) + d602 * d3 * d4 * d5) - d531 * b3 * d1 * d4 * d5) - d536 * d3 * d5) + d358 * c3 * d4 * d5) + d537 * d3 * d5) + d538 * d3 * d4) + d366 * d3 * d5) - d539 * d3 * d5) + d388 * b4 * c5 * d1 * d5) - d587 * c1 * d4 * d5) - d587 * c4 * d1 * d5) - d587 * c5 * d1 * d4) - d326 * b5 * d1 * d2 * d5) - d588 * b2 * d1 * d4 * d5) - d588 * b4 * d1 * d2 * d5) + 32.0 * a3 * a5 * b5 * d1 * d2 * d4) + d593 * c5 * d1 * d5) - d327 * b3 * c5 * d2 * d5) + d372 * b4 * c5 * d1 * d5) - d589 * c1 * d4 * d5) - d589 * c4 * d1 * d5) - d589 * c5 * d1 * d4) + d390 * c2 * d2 * d5) - d603 * c1 * d2 * d5) - d603 * c2 * d1 * d5) - d603 * c5 * d1 * d2) + d540 * d2 * d3 * d5) - d533 * b3 * d1 * d2 * d5) - lb_mm_tmp * d3 * d5) - d604 * c5 * d1 * d5) + d270 * b5 * c2 * d3 * d5) + d398 * c3 * d2 * d5) + 16.0 * a4 * b1 * b5 * c5 * d2 * d3) + b_mm_tmp_tmp * b3 * c5 * d1 * d5) - d406 * c1 * d2 * d5) - d406 * c2 * d1 * d5) - d406 * c5 * d1 * d2) + 64.0 * a4 * b4 * b5 * c1 * d1 * d5) + d554 * c3 * d4 * d5) + d554 * c4 * d3 * d5) + d555 * d3 * d4) + d399 * c5 * d1 * d5) + d556 * d3 * d5) + d400 * c3 * d2 * d5) + d557 * d2 * d3) - d558 * d3 * d5) - d559 * d3 * d4) - d547 * c3 * d1 * d5) - d293 * c3 * d2 * d4) + d608 * c4 * d1 * d4) - d560 * d2 * d3) - d561 * d1 * d3) - d529 * c1 * d4 * d5) - d529 * c4 * d1 * d5) - d529 * c5 * d1 * d4) + d562 * d2 * d3) - d401 * c1 * d2 * d5) - d401 * c2 * d1 * d5) - d401 * c5 * d1 * d2) - d402 * c1 * d1 * d5) + d605 * c1 * d2 * d4) + d605 * c2 * d1 * d4) - d563 * d2 * d3) + d605 * c4 * d1 * d2) - 64.0 * a5 * b4 * b5 * c1 * d1 * d4) - d565 * c5 * d5) + d384 * c4 * d5) + d384 * c5 * d4) + d566 * d3) + d607 * c5 * d5) + d404 * c3 * d5) + d567 * d3) + d403 * c5 * d2) + d395 * b4 * c1 * c5 * d5) - d609 * c4 * d5) - d609 * c5 * d4) - d610 * c5 * d1) - mb_mm_tmp * c2 * d5) - mb_mm_tmp * c5 * d2) - b_mm_tmp * c5 * d1) - d635 * c5 * d4 * d5) + 16.0 * a0 * b3 * b5 * c4 * d4 * d5) - nb_mm_tmp * d3 * d5) + 12.0 * a3 * a5 * b5 * d0 * d3 * d5) - d620 * c5 * d4 * d5) + d541 * c4 * d4 * d5) - d568 * d3 * d5) - d614 * d0 * d5) - d533 * b4 * d0 * d3 * d5) + d533 * b5 * d0 * d3 * d4) - d621 * c5 * d4 * d5) + d569 * d3 * d5) + d615 * d0 * d5) - d582 * d3 * d5) - d616 * d0 * d5) - d413 * c5 * d0 * d3) + d544 * c4 * d4 * d5) - d381 * d3 * d5) + d583 * d3 * d5) - d584 * d3 * d4) + 12.0 * a5 * b3 * b5 * c0 * d3 * d5) + d617 * d0 * d5) - d618 * d0 * d4) + d585 * c5 * d0 * d3) + ob_mm_tmp * d3 * d4) + d619 * d0 * d4) + d613 * c4 * d0 * d3) - d622 * c5 * d5) - d623 * c5 * d5) + d571 * c5 * d4) + d389 * c5 * d4 * d5) - d390 * c4 * d4 * d5) + d614 * d3 * d5) - d615 * d3 * d5) + d616 * d3 * d5) - d617 * d3 * d5) + d618 * d3 * d4) - d619 * d3 * d4) + d526 * d2 * d3 * d5) - d363 * d1 * d2 * d5) + d344 * b5 * d1 * d2 * d4) + d625 * d0 * d2 * d5) - d624 * d0 * d2 * d4) + d260 * d0 * d1 * d5) - d626 * d0 * d1 * d4) + d627 * d0 * d2 * d5) - d628 * d0 * d2 * d4) - d357 * d0 * d3 * d5) + d264 * d0 * d1 * d5) - d532 * d0 * d1 * d4) + d268 * b1 * d0 * d2 * d5) + 16.0 * a4 * b0 * b2 * d0 * d1 * d5) - d77 * b0 * b1 * d0 * d2 * d4) - d535 * d0 * d1 * d4) + d629 * c0 * d2 * d5) + d630 * d0 * d5) + d631 * d0 * d2) - d572 * c0 * d2 * d4) - d632 * d0 * d4) - d633 * d0 * d2) + d391 * c0 * d1 * d5) + tb_mm_tmp * d0 * d5) + d391 * c5 * d0 * d1) - d548 * c0 * d1 * d4) - d549 * d0 * d4) - d573 * d0 * d1) + d574 * d0 * d2) - d575 * d0 * d5) + d564 * b5 * c0 * d0 * d4) - d634 * d0 * d2) - d576 * d0 * d4 * d5) + d386 * d0 * d3 * d5) - pb_mm_tmp * d0 * d5) + d637 * d0 * d4) + d_mm_tmp * d2 * d3 * d5) - qb_mm_tmp * d1 * d3 * d5) + 64.0 * b1 * b3 * b5 * c2 * d1 * d2) - 64.0 * b2 * b3 * b5 * c1 * d1 * d2) - d625 * d2 * d3 * d5) + d624 * d1 * d3 * d5) + d624 * d2 * d3 * d4) - d259 * d1 * d4 * d5) - d259 * d2 * d3 * d5) + d260 * d1 * d3 * d5) + d635 * d1 * d2 * d5) - d636 * d1 * d2 * d3) - d627 * d2 * d3 * d5) + d628 * d1 * d3 * d5) + d628 * d2 * d3 * d4) - d590 * d0 * d4 * d5) + d253 * d0 * d4 * d5) - d362 * d0 * d3 * d4) - d638 * d1 * d5) - d638 * d2 * d4) + d405 * d0 * d2 * d3) - d263 * d1 * d4 * d5) - d263 * d2 * d3 * d5) + d264 * d1 * d3 * d5) + e_mm_tmp * d0 * d4 * d5) - d358 * d0 * d3 * d4) + rb_mm_tmp * b4 * d0 * d3 * d4) - 16.0 * a2 * b3 * b4 * d0 * d1 * d5) + 16.0 * a2 * b3 * b5 * d0 * d1 * d4) + d587 * d0 * d2 * d3) - d542 * d1 * d4 * d5) - d542 * d2 * d3 * d5) + d620 * d1 * d2 * d5) + c_mm_tmp * d0 * d4 * d5) - d639 * d1 * d5) - d639 * d2 * d4) - d328 * d0 * d1 * d5) + d640 * d1 * d4) + d640 * d2 * d3) - 16.0 * a4 * b0 * b1 * d2 * d3 * d5) + d269 * d1 * d3 * d5) + d621 * d1 * d2 * d5) - d534 * d1 * d2 * d3) + d604 * d0 * d1 * d5) + d398 * d0 * d2 * d3) - d329 * d0 * d1 * d5) - 64.0 * a4 * b2 * b4 * d0 * d2 * d3) + d543 * d1 * d3 * d5) + d543 * d2 * d3 * d4) - d545 * d1 * d2 * d3) - d554 * d0 * d3 * d4) - d641 * d1 * d5) - d641 * d2 * d4) + d400 * d0 * d2 * d3) + d642 * d1 * d4) + d642 * d2 * d3) - d630 * d3 * d5) - d629 * c3 * d2 * d5) - d631 * d2 * d3) + d577 * d3 * d5) + d632 * d3 * d4) + d643 * d1 * d5) + d643 * d2 * d4) - 64.0 * b0 * b1 * b5 * c4 * d1 * d4) + d633 * d2 * d3) + d572 * c5 * d1 * d3) - d578 * c1 * d4 * d5) - d579 * d3 * d5) - d578 * c3 * d2 * d5) - d578 * c4 * d1 * d5) + 64.0 * b0 * b2 * b3 * c4 * d2 * d4) - sb_mm_tmp * d1 * d4) - sb_mm_tmp * d2 * d3) + tb_mm_tmp * d3 * d5) + d391 * c3 * d1 * d5) + d383 * b4 * c5 * d1 * d3) + 16.0 * b0 * b3 * b4 * c1 * d2 * d5) + 16.0 * b0 * b3 * b4 * c2 * d1 * d5) - 64.0 * b0 * b3 * b4 * c2 * d2 * d4) + d645 * d1 * d2) + 64.0 * b0 * b4 * b5 * c1 * d1 * d4) - d551 * d2 * d3) - d580 * d1 * d3) - d646 * d1 * d2) + d369 * c0 * d4 * d5) + d647 * d0 * d5) + d648 * d0 * d4) - d552 * d3 * d4) - d384 * d0 * d4) - d385 * d0 * d3) - d644 * d1 * d5) - d644 * d2 * d4) - d607 * d0 * d5) - d649 * d0 * d4) - d650 * d0 * d2) - d606 * c5 * d0 * d1) + d553 * d2 * d3) + d404 * d0 * d3) + d403 * d0 * d2) - d410 * c0 * d1 * d5) - d651 * d0 * d5) - d652 * d0 * d1) + d634 * d1 * d4) + d634 * d2 * d3) + d609 * d0 * d4) + d407 * c2 * d0 * d3) + d653 * d0 * d2) + d610 * d0 * d1) + d635 * d0 * d4 * d5) - d636 * d0 * d3 * d4) + d620 * d0 * d4 * d5) + d621 * d0 * d4 * d5) - d534 * d0 * d3 * d4) - d545 * d0 * d3 * d4) + d570 * c0 * d4 * d5) + d622 * d0 * d5) + d645 * d0 * d4) - d637 * d3 * d4) - d646 * d0 * d4) - d550 * c4 * d0 * d3) - d253 * d3 * d4 * d5) + d591 * d2 * d3 * d4) - e_mm_tmp * d3 * d4 * d5) - mm_tmp * d1 * d3 * d5) - c_mm_tmp * d3 * d4 * d5) + 16.0 * a3 * b1 * b5 * d2 * d3 * d4) + 32.0 * a3 * b2 * b3 * d1 * d4 * d5) + 16.0 * a3 * b2 * b3 * d2 * d3 * d5) - d328 * d1 * d3 * d5) - d412 * b5 * d1 * d2 * d4) + d603 * d1 * d2 * d3) - d329 * d1 * d3 * d5) + d406 * d1 * d2 * d3) + d399 * d2 * d3 * d4) + d401 * d1 * d2 * d3) - d369 * c3 * d4 * d5) - d647 * d3 * d5) - d648 * d3 * d4) + d565 * d3 * d5) + d649 * d3 * d4) + d606 * c3 * d2 * d4) + d650 * d2 * d3) - 32.0 * b1 * b4 * b5 * c3 * d2 * d3) - d651 * d3 * d5) - d410 * c3 * d1 * d5) - d652 * d1 * d3) - d653 * d2 * d3) + mb_mm_tmp * d2 * d3) + b_mm_tmp * d1 * d3) + d611 * c3 * d1 * d2) - d389 * d0 * d4 * d5) - d408 * d0 * d3 * d5) + d409 * d0 * d3 * d5) + d623 * d3 * d5) - d571 * d3 * d4) + d646 * d3 * d4) + j_mm_tmp * d0 * d2 * d4) - d629 * d0 * d2 * d3) + d578 * d0 * d1 * d4) - d391 * d0 * d1 * d3) - j_mm_tmp * d2 * d3 * d4) - d570 * d1 * d2 * d3) + d369 * d0 * d3 * d4) + d410 * d0 * d1 * d3);
}

//
//
double coeff3(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b2,
              double b3, double b4, double b5, double c0, double c1, double c2, double c3, double c4, double c5,
              double d0, double d1, double d2, double d3, double d4, double d5) {
    double ab_mm_tmp;
    double ac_mm_tmp;
    double ad_mm_tmp;
    double ae_mm_tmp;
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double bb_mm_tmp;
    double bc_mm_tmp;
    double bd_mm_tmp;
    double c_mm_tmp;
    double cb_mm_tmp;
    double cc_mm_tmp;
    double cd_mm_tmp;
    double d;
    double d10;
    double d100;
    double d1000;
    double d1001;
    double d1002;
    double d1003;
    double d1004;
    double d1005;
    double d1006;
    double d1007;
    double d1008;
    double d1009;
    double d101;
    double d1010;
    double d1011;
    double d1012;
    double d1013;
    double d1014;
    double d1015;
    double d1016;
    double d1017;
    double d1018;
    double d1019;
    double d102;
    double d1020;
    double d1021;
    double d1022;
    double d1023;
    double d1024;
    double d1025;
    double d1026;
    double d1027;
    double d1028;
    double d1029;
    double d103;
    double d1030;
    double d1031;
    double d1032;
    double d1033;
    double d1034;
    double d1035;
    double d1036;
    double d1037;
    double d1038;
    double d1039;
    double d104;
    double d1040;
    double d1041;
    double d1042;
    double d1043;
    double d1044;
    double d1045;
    double d1046;
    double d1047;
    double d1048;
    double d1049;
    double d105;
    double d1050;
    double d1051;
    double d1052;
    double d1053;
    double d1054;
    double d1055;
    double d1056;
    double d1057;
    double d1058;
    double d1059;
    double d106;
    double d1060;
    double d1061;
    double d1062;
    double d1063;
    double d1064;
    double d1065;
    double d1066;
    double d1067;
    double d1068;
    double d1069;
    double d107;
    double d1070;
    double d1071;
    double d1072;
    double d1073;
    double d1074;
    double d1075;
    double d1076;
    double d1077;
    double d1078;
    double d1079;
    double d108;
    double d1080;
    double d1081;
    double d1082;
    double d1083;
    double d1084;
    double d1085;
    double d1086;
    double d1087;
    double d1088;
    double d1089;
    double d109;
    double d1090;
    double d1091;
    double d1092;
    double d1093;
    double d1094;
    double d1095;
    double d1096;
    double d1097;
    double d1098;
    double d1099;
    double d11;
    double d110;
    double d1100;
    double d1101;
    double d1102;
    double d1103;
    double d1104;
    double d1105;
    double d1106;
    double d1107;
    double d1108;
    double d1109;
    double d111;
    double d1110;
    double d1111;
    double d1112;
    double d1113;
    double d1114;
    double d1115;
    double d1116;
    double d1117;
    double d1118;
    double d1119;
    double d112;
    double d1120;
    double d1121;
    double d1122;
    double d1123;
    double d1124;
    double d1125;
    double d1126;
    double d1127;
    double d1128;
    double d1129;
    double d113;
    double d1130;
    double d1131;
    double d1132;
    double d1133;
    double d1134;
    double d1135;
    double d1136;
    double d1137;
    double d1138;
    double d1139;
    double d114;
    double d1140;
    double d1141;
    double d1142;
    double d1143;
    double d1144;
    double d1145;
    double d1146;
    double d1147;
    double d1148;
    double d1149;
    double d115;
    double d1150;
    double d1151;
    double d1152;
    double d1153;
    double d1154;
    double d1155;
    double d1156;
    double d116;
    double d117;
    double d118;
    double d119;
    double d12;
    double d120;
    double d121;
    double d122;
    double d123;
    double d124;
    double d125;
    double d126;
    double d127;
    double d128;
    double d129;
    double d13;
    double d130;
    double d131;
    double d132;
    double d133;
    double d134;
    double d135;
    double d136;
    double d137;
    double d138;
    double d139;
    double d14;
    double d140;
    double d141;
    double d142;
    double d143;
    double d144;
    double d145;
    double d146;
    double d147;
    double d148;
    double d149;
    double d15;
    double d150;
    double d151;
    double d152;
    double d153;
    double d154;
    double d155;
    double d156;
    double d157;
    double d158;
    double d159;
    double d16;
    double d160;
    double d161;
    double d162;
    double d163;
    double d164;
    double d165;
    double d166;
    double d167;
    double d168;
    double d169;
    double d17;
    double d170;
    double d171;
    double d172;
    double d173;
    double d174;
    double d175;
    double d176;
    double d177;
    double d178;
    double d179;
    double d18;
    double d180;
    double d181;
    double d182;
    double d183;
    double d184;
    double d185;
    double d186;
    double d187;
    double d188;
    double d189;
    double d19;
    double d190;
    double d191;
    double d192;
    double d193;
    double d194;
    double d195;
    double d196;
    double d197;
    double d198;
    double d199;
    double d20;
    double d200;
    double d201;
    double d202;
    double d203;
    double d204;
    double d205;
    double d206;
    double d207;
    double d208;
    double d209;
    double d21;
    double d210;
    double d211;
    double d212;
    double d213;
    double d214;
    double d215;
    double d216;
    double d217;
    double d218;
    double d219;
    double d22;
    double d220;
    double d221;
    double d222;
    double d223;
    double d224;
    double d225;
    double d226;
    double d227;
    double d228;
    double d229;
    double d23;
    double d230;
    double d231;
    double d232;
    double d233;
    double d234;
    double d235;
    double d236;
    double d237;
    double d238;
    double d239;
    double d24;
    double d240;
    double d241;
    double d242;
    double d243;
    double d244;
    double d245;
    double d246;
    double d247;
    double d248;
    double d249;
    double d25;
    double d250;
    double d251;
    double d252;
    double d253;
    double d254;
    double d255;
    double d256;
    double d257;
    double d258;
    double d259;
    double d26;
    double d260;
    double d261;
    double d262;
    double d263;
    double d264;
    double d265;
    double d266;
    double d267;
    double d268;
    double d269;
    double d27;
    double d270;
    double d271;
    double d272;
    double d273;
    double d274;
    double d275;
    double d276;
    double d277;
    double d278;
    double d279;
    double d28;
    double d280;
    double d281;
    double d282;
    double d283;
    double d284;
    double d285;
    double d286;
    double d287;
    double d288;
    double d289;
    double d29;
    double d290;
    double d291;
    double d292;
    double d293;
    double d294;
    double d295;
    double d296;
    double d297;
    double d298;
    double d299;
    double d30;
    double d300;
    double d301;
    double d302;
    double d303;
    double d304;
    double d305;
    double d306;
    double d307;
    double d308;
    double d309;
    double d31;
    double d310;
    double d311;
    double d312;
    double d313;
    double d314;
    double d315;
    double d316;
    double d317;
    double d318;
    double d319;
    double d32;
    double d320;
    double d321;
    double d322;
    double d323;
    double d324;
    double d325;
    double d326;
    double d327;
    double d328;
    double d329;
    double d33;
    double d330;
    double d331;
    double d332;
    double d333;
    double d334;
    double d335;
    double d336;
    double d337;
    double d338;
    double d339;
    double d34;
    double d340;
    double d341;
    double d342;
    double d343;
    double d344;
    double d345;
    double d346;
    double d347;
    double d348;
    double d349;
    double d35;
    double d350;
    double d351;
    double d352;
    double d353;
    double d354;
    double d355;
    double d356;
    double d357;
    double d358;
    double d359;
    double d36;
    double d360;
    double d361;
    double d362;
    double d363;
    double d364;
    double d365;
    double d366;
    double d367;
    double d368;
    double d369;
    double d37;
    double d370;
    double d371;
    double d372;
    double d373;
    double d374;
    double d375;
    double d376;
    double d377;
    double d378;
    double d379;
    double d38;
    double d380;
    double d381;
    double d382;
    double d383;
    double d384;
    double d385;
    double d386;
    double d387;
    double d388;
    double d389;
    double d39;
    double d390;
    double d391;
    double d392;
    double d393;
    double d394;
    double d395;
    double d396;
    double d397;
    double d398;
    double d399;
    double d40;
    double d400;
    double d401;
    double d402;
    double d403;
    double d404;
    double d405;
    double d406;
    double d407;
    double d408;
    double d409;
    double d41;
    double d410;
    double d411;
    double d412;
    double d413;
    double d414;
    double d415;
    double d416;
    double d417;
    double d418;
    double d419;
    double d42;
    double d420;
    double d421;
    double d422;
    double d423;
    double d424;
    double d425;
    double d426;
    double d427;
    double d428;
    double d429;
    double d43;
    double d430;
    double d431;
    double d432;
    double d433;
    double d434;
    double d435;
    double d436;
    double d437;
    double d438;
    double d439;
    double d44;
    double d440;
    double d441;
    double d442;
    double d443;
    double d444;
    double d445;
    double d446;
    double d447;
    double d448;
    double d449;
    double d45;
    double d450;
    double d451;
    double d452;
    double d453;
    double d454;
    double d455;
    double d456;
    double d457;
    double d458;
    double d459;
    double d46;
    double d460;
    double d461;
    double d462;
    double d463;
    double d464;
    double d465;
    double d466;
    double d467;
    double d468;
    double d469;
    double d47;
    double d470;
    double d471;
    double d472;
    double d473;
    double d474;
    double d475;
    double d476;
    double d477;
    double d478;
    double d479;
    double d48;
    double d480;
    double d481;
    double d482;
    double d483;
    double d484;
    double d485;
    double d486;
    double d487;
    double d488;
    double d489;
    double d49;
    double d490;
    double d491;
    double d492;
    double d493;
    double d494;
    double d495;
    double d496;
    double d497;
    double d498;
    double d499;
    double d50;
    double d500;
    double d501;
    double d502;
    double d503;
    double d504;
    double d505;
    double d506;
    double d507;
    double d508;
    double d509;
    double d51;
    double d510;
    double d511;
    double d512;
    double d513;
    double d514;
    double d515;
    double d516;
    double d517;
    double d518;
    double d519;
    double d52;
    double d520;
    double d521;
    double d522;
    double d523;
    double d524;
    double d525;
    double d526;
    double d527;
    double d528;
    double d529;
    double d53;
    double d530;
    double d531;
    double d532;
    double d533;
    double d534;
    double d535;
    double d536;
    double d537;
    double d538;
    double d539;
    double d54;
    double d540;
    double d541;
    double d542;
    double d543;
    double d544;
    double d545;
    double d546;
    double d547;
    double d548;
    double d549;
    double d55;
    double d550;
    double d551;
    double d552;
    double d553;
    double d554;
    double d555;
    double d556;
    double d557;
    double d558;
    double d559;
    double d56;
    double d560;
    double d561;
    double d562;
    double d563;
    double d564;
    double d565;
    double d566;
    double d567;
    double d568;
    double d569;
    double d57;
    double d570;
    double d571;
    double d572;
    double d573;
    double d574;
    double d575;
    double d576;
    double d577;
    double d578;
    double d579;
    double d58;
    double d580;
    double d581;
    double d582;
    double d583;
    double d584;
    double d585;
    double d586;
    double d587;
    double d588;
    double d589;
    double d59;
    double d590;
    double d591;
    double d592;
    double d593;
    double d594;
    double d595;
    double d596;
    double d597;
    double d598;
    double d599;
    double d6;
    double d60;
    double d600;
    double d601;
    double d602;
    double d603;
    double d604;
    double d605;
    double d606;
    double d607;
    double d608;
    double d609;
    double d61;
    double d610;
    double d611;
    double d612;
    double d613;
    double d614;
    double d615;
    double d616;
    double d617;
    double d618;
    double d619;
    double d62;
    double d620;
    double d621;
    double d622;
    double d623;
    double d624;
    double d625;
    double d626;
    double d627;
    double d628;
    double d629;
    double d63;
    double d630;
    double d631;
    double d632;
    double d633;
    double d634;
    double d635;
    double d636;
    double d637;
    double d638;
    double d639;
    double d64;
    double d640;
    double d641;
    double d642;
    double d643;
    double d644;
    double d645;
    double d646;
    double d647;
    double d648;
    double d649;
    double d65;
    double d650;
    double d651;
    double d652;
    double d653;
    double d654;
    double d655;
    double d656;
    double d657;
    double d658;
    double d659;
    double d66;
    double d660;
    double d661;
    double d662;
    double d663;
    double d664;
    double d665;
    double d666;
    double d667;
    double d668;
    double d669;
    double d67;
    double d670;
    double d671;
    double d672;
    double d673;
    double d674;
    double d675;
    double d676;
    double d677;
    double d678;
    double d679;
    double d68;
    double d680;
    double d681;
    double d682;
    double d683;
    double d684;
    double d685;
    double d686;
    double d687;
    double d688;
    double d689;
    double d69;
    double d690;
    double d691;
    double d692;
    double d693;
    double d694;
    double d695;
    double d696;
    double d697;
    double d698;
    double d699;
    double d7;
    double d70;
    double d700;
    double d701;
    double d702;
    double d703;
    double d704;
    double d705;
    double d706;
    double d707;
    double d708;
    double d709;
    double d71;
    double d710;
    double d711;
    double d712;
    double d713;
    double d714;
    double d715;
    double d716;
    double d717;
    double d718;
    double d719;
    double d72;
    double d720;
    double d721;
    double d722;
    double d723;
    double d724;
    double d725;
    double d726;
    double d727;
    double d728;
    double d729;
    double d73;
    double d730;
    double d731;
    double d732;
    double d733;
    double d734;
    double d735;
    double d736;
    double d737;
    double d738;
    double d739;
    double d74;
    double d740;
    double d741;
    double d742;
    double d743;
    double d744;
    double d745;
    double d746;
    double d747;
    double d748;
    double d749;
    double d75;
    double d750;
    double d751;
    double d752;
    double d753;
    double d754;
    double d755;
    double d756;
    double d757;
    double d758;
    double d759;
    double d76;
    double d760;
    double d761;
    double d762;
    double d763;
    double d764;
    double d765;
    double d766;
    double d767;
    double d768;
    double d769;
    double d77;
    double d770;
    double d771;
    double d772;
    double d773;
    double d774;
    double d775;
    double d776;
    double d777;
    double d778;
    double d779;
    double d78;
    double d780;
    double d781;
    double d782;
    double d783;
    double d784;
    double d785;
    double d786;
    double d787;
    double d788;
    double d789;
    double d79;
    double d790;
    double d791;
    double d792;
    double d793;
    double d794;
    double d795;
    double d796;
    double d797;
    double d798;
    double d799;
    double d8;
    double d80;
    double d800;
    double d801;
    double d802;
    double d803;
    double d804;
    double d805;
    double d806;
    double d807;
    double d808;
    double d809;
    double d81;
    double d810;
    double d811;
    double d812;
    double d813;
    double d814;
    double d815;
    double d816;
    double d817;
    double d818;
    double d819;
    double d82;
    double d820;
    double d821;
    double d822;
    double d823;
    double d824;
    double d825;
    double d826;
    double d827;
    double d828;
    double d829;
    double d83;
    double d830;
    double d831;
    double d832;
    double d833;
    double d834;
    double d835;
    double d836;
    double d837;
    double d838;
    double d839;
    double d84;
    double d840;
    double d841;
    double d842;
    double d843;
    double d844;
    double d845;
    double d846;
    double d847;
    double d848;
    double d849;
    double d85;
    double d850;
    double d851;
    double d852;
    double d853;
    double d854;
    double d855;
    double d856;
    double d857;
    double d858;
    double d859;
    double d86;
    double d860;
    double d861;
    double d862;
    double d863;
    double d864;
    double d865;
    double d866;
    double d867;
    double d868;
    double d869;
    double d87;
    double d870;
    double d871;
    double d872;
    double d873;
    double d874;
    double d875;
    double d876;
    double d877;
    double d878;
    double d879;
    double d88;
    double d880;
    double d881;
    double d882;
    double d883;
    double d884;
    double d885;
    double d886;
    double d887;
    double d888;
    double d889;
    double d89;
    double d890;
    double d891;
    double d892;
    double d893;
    double d894;
    double d895;
    double d896;
    double d897;
    double d898;
    double d899;
    double d9;
    double d90;
    double d900;
    double d901;
    double d902;
    double d903;
    double d904;
    double d905;
    double d906;
    double d907;
    double d908;
    double d909;
    double d91;
    double d910;
    double d911;
    double d912;
    double d913;
    double d914;
    double d915;
    double d916;
    double d917;
    double d918;
    double d919;
    double d92;
    double d920;
    double d921;
    double d922;
    double d923;
    double d924;
    double d925;
    double d926;
    double d927;
    double d928;
    double d929;
    double d93;
    double d930;
    double d931;
    double d932;
    double d933;
    double d934;
    double d935;
    double d936;
    double d937;
    double d938;
    double d939;
    double d94;
    double d940;
    double d941;
    double d942;
    double d943;
    double d944;
    double d945;
    double d946;
    double d947;
    double d948;
    double d949;
    double d95;
    double d950;
    double d951;
    double d952;
    double d953;
    double d954;
    double d955;
    double d956;
    double d957;
    double d958;
    double d959;
    double d96;
    double d960;
    double d961;
    double d962;
    double d963;
    double d964;
    double d965;
    double d966;
    double d967;
    double d968;
    double d969;
    double d97;
    double d970;
    double d971;
    double d972;
    double d973;
    double d974;
    double d975;
    double d976;
    double d977;
    double d978;
    double d979;
    double d98;
    double d980;
    double d981;
    double d982;
    double d983;
    double d984;
    double d985;
    double d986;
    double d987;
    double d988;
    double d989;
    double d99;
    double d990;
    double d991;
    double d992;
    double d993;
    double d994;
    double d995;
    double d996;
    double d997;
    double d998;
    double d999;
    double d_mm_tmp;
    double db_mm_tmp;
    double dc_mm_tmp;
    double dd_mm_tmp;
    double e_mm_tmp;
    double eb_mm_tmp;
    double ec_mm_tmp;
    double ed_mm_tmp;
    double f_mm_tmp;
    double fb_mm_tmp;
    double fc_mm_tmp;
    double fd_mm_tmp;
    double g_mm_tmp;
    double gb_mm_tmp;
    double gc_mm_tmp;
    double gd_mm_tmp;
    double h_mm_tmp;
    double hb_mm_tmp;
    double hc_mm_tmp;
    double hd_mm_tmp;
    double i_mm_tmp;
    double ib_mm_tmp;
    double ic_mm_tmp;
    double id_mm_tmp;
    double j_mm_tmp;
    double jb_mm_tmp;
    double jc_mm_tmp;
    double jd_mm_tmp;
    double k_mm_tmp;
    double kb_mm_tmp;
    double kc_mm_tmp;
    double kd_mm_tmp;
    double l_mm_tmp;
    double lb_mm_tmp;
    double lc_mm_tmp;
    double ld_mm_tmp;
    double m_mm_tmp;
    double mb_mm_tmp;
    double mc_mm_tmp;
    double md_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    double n_mm_tmp;
    double nb_mm_tmp;
    double nc_mm_tmp;
    double nd_mm_tmp;
    double o_mm_tmp;
    double ob_mm_tmp;
    double oc_mm_tmp;
    double od_mm_tmp;
    double p_mm_tmp;
    double pb_mm_tmp;
    double pc_mm_tmp;
    double pd_mm_tmp;
    double q_mm_tmp;
    double qb_mm_tmp;
    double qc_mm_tmp;
    double qd_mm_tmp;
    double r_mm_tmp;
    double rb_mm_tmp;
    double rc_mm_tmp;
    double rd_mm_tmp;
    double s_mm_tmp;
    double sb_mm_tmp;
    double sc_mm_tmp;
    double sd_mm_tmp;
    double t_mm_tmp;
    double tb_mm_tmp;
    double tc_mm_tmp;
    double td_mm_tmp;
    double u_mm_tmp;
    double ub_mm_tmp;
    double uc_mm_tmp;
    double ud_mm_tmp;
    double v_mm_tmp;
    double vb_mm_tmp;
    double vc_mm_tmp;
    double vd_mm_tmp;
    double w_mm_tmp;
    double wb_mm_tmp;
    double wc_mm_tmp;
    double wd_mm_tmp;
    double x_mm_tmp;
    double xb_mm_tmp;
    double xc_mm_tmp;
    double xd_mm_tmp;
    double y_mm_tmp;
    double yb_mm_tmp;
    double yc_mm_tmp;
    double yd_mm_tmp;
    d = std::pow(d5, 3.0);
    b_d1 = std::pow(a5, 3.0);
    b_d2 = std::pow(c5, 3.0);
    b_d3 = std::pow(b5, 3.0);
    b_d4 = std::pow(b0, 3.0);
    b_d5 = std::pow(d3, 3.0);
    d6 = std::pow(b3, 3.0);
    d7 = std::pow(d0, 3.0);
    d8 = a1 * a1;
    d9 = a3 * a3;
    d10 = a0 * a0;
    d11 = 3.0 * d10;
    d12 = 4.0 * d8;
    d13 = b3 * b3;
    d14 = a5 * a5;
    d15 = 3.0 * d14;
    d16 = b0 * b0;
    d17 = b1 * b1;
    d18 = 3.0 * b_d3;
    d19 = 4.0 * b_d3;
    d20 = c1 * c1;
    d21 = 3.0 * b_d1;
    d22 = d3 * d3;
    d23 = 3.0 * b_d4;
    d24 = d0 * d0;
    d25 = 3.0 * d6;
    d26 = c5 * c5;
    d27 = 4.0 * b_d1;
    d28 = d1 * d1;
    d29 = 4.0 * b_d4;
    d30 = 4.0 * d6;
    d31 = 8.0 * d6 * c2;
    d32 = 6.0 * d6 * c0;
    d33 = 6.0 * b_d4 * c3;
    d34 = 8.0 * b_d4 * c4;
    d35 = b2 * b2;
    d36 = d4 * d4;
    d37 = b4 * b4;
    d38 = d2 * d2;
    d39 = a2 * a2;
    d40 = c2 * c2;
    mm_tmp = 4.0 * d39;
    d41 = a4 * a4;
    d42 = c4 * c4;
    d43 = c0 * c0;
    d44 = 4.0 * a0 * d35;
    d45 = 3.0 * a5 * d16;
    d46 = 3.0 * d16;
    d47 = 4.0 * d17;
    d48 = c3 * c3;
    d49 = 4.0 * a3 * d37;
    d50 = mm_tmp * b5;
    d51 = 4.0 * d41;
    d52 = 3.0 * a5 * d13;
    d53 = d15 * b0;
    d15 *= b3;
    d54 = d51 * b5;
    d55 = 4.0 * b0 * d17;
    d56 = 3.0 * b0 * d13;
    d57 = d46 * b3;
    d58 = d47 * b3;
    d59 = 6.0 * a0 * a5;
    b_mm_tmp = 6.0 * a3 * a5;
    d60 = 8.0 * a2 * a5;
    d61 = d60 * b2;
    d62 = d59 * b5;
    d63 = 6.0 * a0 * b0;
    d64 = 8.0 * a2 * b0;
    d65 = d63 * b5;
    d66 = d64 * b2;
    c_mm_tmp = 8.0 * a4 * a5;
    d67 = 6.0 * a3 * b3 * b5;
    d68 = 8.0 * a4 * b3 * b4;
    d69 = b_mm_tmp * b5;
    d70 = c_mm_tmp * b4;
    d71 = d5 * d5;
    d72 = 4.0 * a0 * d17;
    d73 = 16.0 * a0 * d35;
    d74 = 16.0 * a0 * d37;
    d75 = b5 * b5;
    d76 = 4.0 * a0 * d75;
    d77 = 4.0 * a0 * d39;
    d78 = 4.0 * a0 * d37;
    d79 = 4.0 * b0 * d75;
    d80 = d79 * c0;
    d81 = 4.0 * d14;
    d82 = 9.0 * a0 * d16;
    d83 = 3.0 * a0 * d75;
    d84 = 4.0 * a1 * d75 * c1;
    d85 = 4.0 * a5 * d16;
    d86 = 4.0 * b0 * d35;
    d87 = 16.0 * a1 * d14;
    d88 = d87 * d1;
    d89 = 16.0 * a1 * d75;
    d90 = 16.0 * a2 * d37 * c2;
    d91 = 16.0 * a3 * d35;
    d92 = d81 * b0;
    d93 = 4.0 * a0 * d41;
    d94 = 4.0 * a2 * d14;
    d95 = 4.0 * a2 * d75;
    d96 = 16.0 * a3 * d37;
    d97 = 12.0 * a0 * d16;
    d98 = 16.0 * a1 * d35;
    d99 = 4.0 * a2 * d16;
    d100 = 3.0 * a3 * d16;
    d101 = 8.0 * a0 * d75;
    d102 = 6.0 * a0 * d75;
    d103 = d102 * c0;
    d104 = 8.0 * a3 * d75;
    d105 = d104 * c0;
    d106 = d101 * c3;
    d107 = 8.0 * a0 * d17;
    d108 = d96 * c0;
    d109 = 6.0 * a0 * d13;
    d110 = 8.0 * a3 * d17;
    d111 = d86 * c0;
    d112 = d73 * c3;
    d113 = 4.0 * b0 * d37;
    d114 = 16.0 * b1 * d75;
    d115 = d114 * c1;
    d116 = 4.0 * b2 * d75;
    d117 = 4.0 * d10;
    d118 = 16.0 * d39;
    d119 = 4.0 * a3 * d35;
    d120 = 4.0 * a0 * d14;
    d121 = 16.0 * a5 * d17;
    d122 = 16.0 * d14;
    d123 = d122 * b1;
    d124 = d123 * c1;
    d125 = 4.0 * a3 * d14;
    d126 = d125 * d0;
    d127 = 4.0 * a3 * d75;
    d128 = 4.0 * a5 * d35;
    d129 = 4.0 * b3 * d75;
    d130 = d129 * c0;
    d131 = d81 * b2 * c2;
    d132 = 4.0 * d16;
    d133 = 3.0 * a0 * d14;
    d134 = d119 * c5;
    d135 = 16.0 * a4 * d35 * c4;
    d136 = d45 * d26;
    d137 = 9.0 * a5 * d75;
    d138 = d137 * d43;
    d139 = 3.0 * b0 * d75;
    d140 = d11 * a5;
    d141 = 16.0 * a5 * d37;
    d142 = 4.0 * a3 * d16;
    d143 = d132 * b2 * c2;
    d144 = 16.0 * a2 * d17;
    d145 = d139 * d43;
    d146 = 16.0 * a4 * d16;
    d147 = 8.0 * a0 * d35;
    d148 = 8.0 * a5 * d35;
    d149 = d148 * c0;
    d150 = 8.0 * a5 * d13;
    d151 = d147 * c5;
    d152 = d141 * c0;
    d153 = 16.0 * a0 * d17;
    d154 = d153 * c5;
    d155 = 9.0 * d10;
    d156 = d155 * b0;
    d157 = d11 * b5;
    d158 = 16.0 * d8;
    d159 = mm_tmp * a3;
    d160 = 4.0 * a5 * d17;
    d161 = d81 * b3;
    d162 = d161 * c0;
    d163 = 4.0 * d35;
    d164 = 16.0 * a5 * d35;
    d165 = 9.0 * d14 * b5;
    d166 = d165 * c0;
    d46 *= b5;
    d167 = 16.0 * d17;
    d168 = d163 * b3;
    d169 = d160 * c5;
    d170 = d160 * d26;
    d171 = 12.0 * a5 * d75 * d20;
    d172 = d12 * a5;
    d173 = 12.0 * d8;
    d174 = d12 * b5;
    d175 = 16.0 * d41;
    d176 = 16.0 * a1 * d37;
    d177 = d79 * d20;
    d178 = 16.0 * b1 * d37 * c1;
    d179 = 3.0 * a0 * d13;
    d180 = 16.0 * a2 * d13;
    d181 = d46 * c0;
    d182 = d167 * b2 * c2;
    d183 = d168 * c0;
    d184 = 16.0 * a3 * d17;
    d185 = 9.0 * a3 * d13;
    d186 = 6.0 * a3 * d75;
    d187 = d186 * c3;
    d188 = d164 * c3;
    d189 = d184 * c5;
    d190 = 6.0 * a3 * d16;
    d191 = 3.0 * a3 * d75;
    d192 = 12.0 * d14 * b5;
    d47 *= b5;
    d193 = d47 * c0;
    d194 = 4.0 * a0 * d13;
    d195 = 4.0 * a5 * d13;
    d196 = 4.0 * a5 * d37;
    d197 = d117 * a5;
    d198 = d117 * b5;
    d199 = d198 * c5;
    d200 = d132 * b5;
    d201 = 4.0 * a3 * d41;
    d202 = d49 * d26;
    d203 = d127 * d42;
    d204 = 4.0 * b3 * d37;
    d205 = mm_tmp * a5;
    d206 = d50 * c5;
    d207 = 4.0 * d9;
    d208 = d51 * b3;
    d163 *= b5;
    d209 = 4.0 * a2 * d13;
    d210 = 4.0 * b2 * d13 * c2;
    d211 = 4.0 * (a4 * a4) * b0;
    d212 = d200 * d40;
    d213 = d163 * d43;
    d214 = 8.0 * a5 * d16;
    d215 = 8.0 * a3 * d37;
    d216 = 8.0 * a5 * d37;
    d217 = d216 * c3;
    d218 = 8.0 * a3 * d16;
    d219 = 12.0 * a3 * d13;
    d220 = 3.0 * d9;
    d221 = d158 * a5;
    d222 = d158 * b5;
    d223 = d222 * c5;
    d224 = d161 * c3;
    d_mm_tmp = d167 * b5;
    d225 = mm_tmp * b3;
    d226 = 4.0 * a4 * d16;
    d227 = 3.0 * b3 * d75;
    d228 = d118 * b5;
    d229 = 9.0 * d9;
    d230 = d132 * b4 * c4;
    d231 = d_mm_tmp * d40;
    d232 = 6.0 * a5 * d16;
    d233 = 6.0 * a5 * d13;
    d234 = d232 * c5;
    d235 = d233 * c5;
    d236 = 4.0 * a4 * d75;
    d237 = d52 * d26;
    d137 *= d48;
    d238 = 4.0 * b4 * d75;
    d239 = d220 * a5;
    d240 = d220 * b5;
    d241 = d15 * c5;
    d242 = d81 * b4 * c4;
    d165 *= c3;
    d243 = d168 * c3;
    d244 = 16.0 * d35;
    d245 = d244 * b5;
    d246 = d245 * d20;
    d247 = 3.0 * d13 * b5;
    d248 = d200 * d42;
    d249 = d167 * b4 * c4;
    d250 = d47 * c3;
    d251 = d204 * c3;
    d252 = d129 * d20;
    d253 = d207 * b5;
    d254 = 4.0 * d37 * b5;
    d255 = d207 * a5;
    d256 = d253 * c5;
    d51 *= a5;
    d257 = d54 * c5;
    d258 = d175 * b5;
    d259 = 4.0 * d13;
    d260 = 16.0 * b0 * d37;
    d261 = 16.0 * d16;
    d262 = 16.0 * b0 * d35;
    d263 = d262 * d42;
    d264 = d260 * d40;
    d265 = d118 * b0;
    d266 = d175 * b0;
    d267 = d194 * d0;
    d268 = 4.0 * b0 * d13;
    d269 = d268 * c0;
    d270 = d132 * b3;
    d271 = 64.0 * d41;
    d272 = 16.0 * d10;
    d81 *= b1;
    d273 = d270 * c3;
    d274 = 16.0 * b2 * d13;
    d275 = 16.0 * b2 * d37;
    d276 = d175 * b2;
    d277 = 6.0 * d14;
    d278 = 6.0 * d9;
    d132 *= b1;
    d279 = 6.0 * b0 * d75;
    d280 = d277 * b0;
    d281 = 6.0 * b0 * d13;
    d282 = 8.0 * d8;
    d283 = 8.0 * d14;
    d284 = d261 * b4;
    d285 = 64.0 * d8;
    d167 *= b3;
    d286 = 64.0 * d17;
    d287 = 16.0 * b3 * d37;
    d288 = d287 * d40;
    d289 = d118 * b3;
    d290 = d175 * b3;
    d291 = 8.0 * b0 * d75;
    d292 = d283 * b0;
    d293 = 8.0 * b0 * d17;
    d294 = 8.0 * d17;
    d295 = d283 * b3;
    d296 = 8.0 * b3 * d75;
    d297 = d294 * b3;
    d298 = d244 * b3;
    d299 = d298 * d42;
    d300 = d259 * b5;
    d301 = 8.0 * d39;
    d302 = 8.0 * d9;
    d244 *= b4;
    d303 = 4.0 * b1 * d13;
    d304 = 8.0 * d35;
    d305 = d304 * b5;
    d306 = d301 * b0;
    d307 = d301 * b5;
    d308 = 8.0 * d13;
    d309 = d308 * b5;
    d310 = 8.0 * b0 * d13;
    d311 = d302 * b5;
    d312 = d272 * b4;
    d313 = 16.0 * d37 * b5;
    d314 = d313 * d20;
    d315 = 4.0 * a4 * d13;
    d316 = 6.0 * b3 * d75;
    d317 = d227 * d48;
    d318 = 6.0 * d10;
    d319 = 8.0 * d10;
    d320 = 8.0 * d41;
    d321 = 8.0 * d16;
    d322 = 6.0 * d16;
    d277 *= b3;
    d323 = d322 * b3;
    d324 = d321 * b5;
    d325 = d319 * b5;
    d326 = d320 * b5;
    d327 = 8.0 * b3 * d37;
    d328 = d320 * b3;
    d329 = d321 * b3;
    d330 = 16.0 * d9;
    d331 = d330 * b2;
    d332 = d229 * b3;
    d259 = d259 * b4 * c4;
    d333 = d247 * c3;
    d334 = d300 * d42;
    d335 = 8.0 * d37;
    d336 = d335 * b5;
    d337 = 8.0 * a0 * a2;
    d338 = 32.0 * a1 * a2;
    d339 = 8.0 * a0 * a1;
    d340 = d337 * b2;
    d341 = 16.0 * a0 * a2;
    d342 = 8.0 * a0 * a5;
    d343 = d59 * b0;
    d344 = d342 * b0;
    d345 = d344 * c5;
    d346 = d342 * b5;
    d347 = d346 * c0;
    d348 = 8.0 * a0 * a3;
    d322 *= b5;
    d349 = 16.0 * d13;
    d350 = 6.0 * d13 * b5;
    d351 = d278 * b5;
    d352 = d341 * b4;
    d353 = 16.0 * a0 * a4;
    d354 = d353 * b2;
    d355 = 16.0 * a1 * a2;
    d356 = d355 * a4;
    d357 = d355 * b4;
    d358 = 16.0 * a1 * a4;
    d359 = d358 * b2;
    d360 = 8.0 * a1 * a5;
    d361 = d360 * b1;
    d362 = 8.0 * a2 * a3;
    d363 = 16.0 * a2 * a4;
    d364 = 8.0 * a0 * a4;
    d365 = 32.0 * a1 * a5;
    d366 = 8.0 * a1 * a3;
    d367 = 32.0 * a1 * a4;
    d368 = 16.0 * a2 * a3;
    d369 = 32.0 * a2 * a5;
    d370 = 8.0 * a3 * a5;
    d371 = 18.0 * a0 * a3;
    d372 = 6.0 * a0 * a3;
    d373 = d372 * b5;
    d374 = d342 * b3;
    d375 = d370 * b0;
    d376 = d365 * b1;
    d377 = d362 * b2;
    d378 = d363 * b1;
    d379 = d364 * b4;
    d59 *= b3;
    d380 = d369 * b2;
    d381 = b_mm_tmp * b0;
    d382 = d348 * b5;
    d383 = 16.0 * a3 * a4;
    d384 = d365 * b5;
    d385 = d383 * b2;
    d386 = d368 * b4;
    d387 = d363 * b3;
    d388 = d384 * c1;
    d389 = d348 * a5;
    d390 = d382 * c5;
    d391 = d374 * c5;
    d392 = d346 * c3;
    d393 = d61 * c5;
    d394 = d60 * b5 * c2;
    d395 = d375 * c5;
    d396 = d370 * b5;
    d397 = d396 * c0;
    d398 = d62 * c5;
    d399 = 32.0 * a0 * a2;
    d400 = 8.0 * a0 * b0;
    d401 = d399 * b2;
    d402 = 8.0 * a1 * b0;
    d403 = d402 * b1;
    d404 = 32.0 * a0 * b0;
    d63 *= b3;
    d405 = 32.0 * a2 * b0;
    d406 = d405 * b2;
    d407 = d400 * b2;
    d408 = 32.0 * a0 * a4;
    d409 = 128.0 * a1 * a2;
    d410 = 32.0 * a0 * a1;
    d411 = 12.0 * a0 * a3;
    d412 = d400 * b5;
    d413 = 32.0 * a1 * b0;
    d414 = 32.0 * a1 * b1;
    d415 = 8.0 * a5 * b0;
    d416 = 128.0 * a1 * b1;
    d417 = 8.0 * a3 * b0;
    d418 = 32.0 * a0 * a3;
    d419 = d408 * b4;
    e_mm_tmp = 12.0 * a0 * b0;
    d420 = d65 * d26;
    d421 = 32.0 * a4 * b0;
    d422 = d421 * b4;
    d423 = 32.0 * a0 * a5;
    d424 = 8.0 * a0 * b3;
    d425 = d424 * b5;
    d426 = d417 * b5;
    d427 = d415 * b3;
    d428 = d413 * b1;
    d429 = d400 * b3;
    d430 = d404 * b4;
    d431 = d414 * b2;
    d432 = 16.0 * a1 * b0;
    d433 = 32.0 * a0 * b2;
    d434 = 16.0 * a1 * b1;
    d435 = 16.0 * a1 * a3;
    d436 = d408 * b0;
    d437 = d432 * b1;
    d438 = e_mm_tmp * b3;
    d439 = d428 * c5;
    d440 = d434 * b3;
    d441 = d414 * b5;
    d442 = 32.0 * a2 * a3;
    d443 = d406 * c3;
    d444 = 32.0 * a2 * b1;
    d445 = d444 * b2;
    f_mm_tmp = 32.0 * a2 * b2;
    d446 = 32.0 * a3 * b0;
    d447 = 16.0 * a0 * b0;
    d448 = 32.0 * a1 * a3;
    d449 = 128.0 * a1 * a4;
    g_mm_tmp = 8.0 * a1 * b1;
    d450 = g_mm_tmp * b5;
    d451 = 16.0 * a1 * b2;
    d452 = d451 * b4;
    d453 = 32.0 * a2 * a4;
    d454 = 16.0 * a2 * a5;
    d455 = d415 * b5;
    d456 = 16.0 * a0 * a3;
    h_mm_tmp = 16.0 * a0 * a5;
    d457 = 16.0 * a1 * a5;
    d458 = d360 * b5;
    d459 = d450 * c5;
    d460 = d450 * d26;
    d461 = d452 * c5;
    d462 = d452 * d26;
    d463 = d362 * b5;
    d464 = d453 * b2;
    d465 = d453 * b4;
    d466 = 8.0 * a0 * b1 * b5;
    d467 = 8.0 * a0 * b2 * b3;
    d402 *= b5;
    d468 = d414 * b3;
    d469 = d341 * b2;
    d470 = h_mm_tmp * b0;
    d471 = d447 * b5;
    d472 = d454 * b2;
    d473 = 16.0 * a0 * b2;
    d474 = d355 * b5;
    d475 = d457 * b2;
    d476 = d451 * b5;
    d477 = d476 * c4;
    d478 = d454 * b1;
    d479 = d447 * b3;
    d480 = d473 * b4;
    d60 *= b3;
    d481 = 16.0 * a2 * b0;
    d482 = d481 * b2;
    d483 = d482 * c5;
    d64 *= b3;
    i_mm_tmp = 16.0 * a2 * b1;
    d484 = 16.0 * a4 * b1;
    d485 = d484 * b2;
    d486 = 12.0 * a0 * a5;
    d487 = 32.0 * a3 * a5;
    d488 = 32.0 * a5 * b1;
    d489 = 8.0 * a5 * b2;
    d490 = 8.0 * a2 * b2;
    d491 = d490 * b3;
    d492 = d491 * d26;
    d493 = d370 * b2;
    d494 = 8.0 * a3 * b2;
    d495 = d494 * b5 * c2;
    d496 = d485 * c5;
    d497 = d485 * d26;
    d498 = 32.0 * a4 * b2;
    d499 = d498 * b4 * c2;
    d500 = d455 * d40;
    d501 = 8.0 * a5 * b1;
    d502 = 16.0 * a5 * b1;
    d503 = d501 * b5 * c1;
    d504 = d489 * b3 * c2;
    d505 = 16.0 * b1 * b2;
    d506 = d505 * b4;
    d507 = d364 * b5;
    d508 = d342 * b4;
    d509 = d417 * b2;
    d510 = 32.0 * a3 * b1;
    d511 = 16.0 * a4 * b0;
    d512 = d415 * b1;
    d513 = 8.0 * b0 * b1 * b5 * c1;
    d514 = 8.0 * b0 * b2 * b3 * c2;
    d515 = d506 * c0;
    d516 = d400 * b4;
    d517 = 16.0 * a2 * b2;
    d518 = d517 * b5;
    d519 = d518 * c0;
    d520 = d486 * b0;
    d521 = d502 * b2;
    d522 = d521 * c4;
    d523 = 16.0 * b0 * b2;
    d524 = d486 * b5;
    d525 = d511 * b2;
    d526 = d523 * b4;
    d527 = d526 * c1;
    d490 *= b5;
    e_mm_tmp *= b5;
    d528 = e_mm_tmp * c5;
    d529 = 6.0 * a0 * b3 * b5;
    d530 = d529 * c5;
    d531 = 128.0 * a2 * a4;
    d532 = 32.0 * a3 * a4;
    d533 = 6.0 * a3 * b0;
    d534 = d533 * b5;
    d535 = 8.0 * a4 * b0;
    d536 = d535 * b4;
    d537 = 6.0 * a5 * b0;
    d538 = d537 * b3;
    d539 = 16.0 * a3 * a5;
    d540 = 32.0 * a3 * b2;
    d541 = 8.0 * a3 * b1;
    d537 *= b5;
    d542 = 32.0 * a5 * b2;
    d543 = d532 * b4;
    d544 = f_mm_tmp * b3;
    d545 = 6.0 * b0 * b3 * b5;
    d546 = d545 * c0;
    d547 = 12.0 * a5 * b0;
    j_mm_tmp = d547 * b5;
    d548 = j_mm_tmp * c0;
    d549 = 32.0 * a2 * b3;
    d550 = d539 * b3;
    d551 = 16.0 * a3 * b3;
    d552 = d551 * b5;
    d553 = 16.0 * a3 * b0;
    d554 = f_mm_tmp * b5;
    d555 = d554 * c3;
    d556 = 32.0 * a4 * b3 * b4;
    d557 = d556 * c0;
    d558 = d553 * b3;
    d559 = d534 * c5;
    d560 = d534 * d26;
    d561 = c_mm_tmp * b0;
    d562 = d536 * c5;
    d563 = d536 * d26;
    d564 = d535 * b5 * c4;
    d565 = d538 * c5;
    d566 = d538 * d26;
    d415 = d415 * b4 * c4;
    d567 = h_mm_tmp * b5;
    d568 = 32.0 * a4 * a5;
    d569 = d455 * d42;
    d489 *= b5;
    d414 *= b4;
    d570 = 8.0 * a1 * b3 * b5;
    d533 *= b3;
    d571 = d540 * b3;
    d572 = 16.0 * a5 * b0;
    d573 = d572 * b5;
    d574 = d358 * b5;
    d575 = 16.0 * a1 * b4 * b5;
    d576 = d575 * c2;
    d577 = 32.0 * a5 * b0;
    d578 = d488 * b5;
    d579 = 16.0 * a5 * b3;
    d580 = d579 * b5;
    d581 = d580 * c0;
    d582 = d457 * b4;
    d583 = d539 * b5;
    d584 = d573 * c3;
    d585 = 32.0 * a4 * b4 * b5;
    d586 = d585 * c0;
    d587 = d568 * b4;
    d588 = 16.0 * a2 * b3;
    d589 = 8.0 * a3 * b3;
    d590 = d589 * b5;
    d591 = 8.0 * a5 * b3 * b5;
    d592 = 8.0 * b0 * b3;
    d593 = d592 * b5;
    d594 = d417 * b3;
    d595 = d541 * b5;
    d494 *= b3;
    d596 = 32.0 * a4 * b1;
    d597 = d596 * b4;
    d501 *= b3;
    d598 = d593 * d40;
    d599 = d506 * c3;
    d600 = 8.0 * b1 * b3 * b5 * c1;
    d424 *= b4;
    d601 = 16.0 * a4 * a5;
    d602 = d601 * b1;
    d484 *= b5;
    d603 = d484 * c2;
    d604 = d502 * b4;
    d605 = d604 * c2;
    d606 = 16.0 * a3 * b2;
    d607 = 16.0 * b2 * b3;
    d608 = d606 * b4;
    d609 = 16.0 * a4 * b2 * b3;
    d610 = d607 * b4;
    d611 = d610 * c1;
    d612 = d370 * b3;
    d613 = d383 * b4;
    d614 = 12.0 * a3 * a5;
    d615 = d591 * d42;
    d616 = d593 * d42;
    d617 = 8.0 * a4 * b4 * b5;
    d618 = 6.0 * a5 * b3 * b5;
    d619 = 8.0 * a5 * b4 * b5;
    d620 = d594 * d0;
    d621 = 8.0 * a2 * d75;
    d622 = d621 * c0;
    d623 = d622 * c2;
    d624 = d101 * c0;
    d625 = d103 * c5;
    d626 = 16.0 * a0 * b1;
    d627 = d626 * b4;
    d628 = d432 * b4;
    d451 *= b3;
    d629 = 32.0 * a1 * d75 * c1;
    d630 = 16.0 * a3 * b1;
    d631 = d511 * b1;
    d632 = 16.0 * b0 * b1;
    d633 = d632 * b4;
    d634 = d633 * c2;
    d635 = d630 * b2;
    d636 = d505 * b3;
    d637 = d636 * c4;
    d417 *= b4;
    d535 *= b3;
    d638 = 32.0 * b0 * b1;
    d592 = d592 * b4 * c4;
    d639 = 16.0 * a0 * d75;
    d640 = d89 * c0;
    d641 = 8.0 * a1 * d75;
    d642 = d641 * c0;
    d643 = d641 * c1;
    d644 = d643 * c5;
    d645 = d89 * c2;
    d646 = d645 * c4;
    d621 = d621 * c2 * c3;
    d647 = d149 * c5;
    d648 = 24.0 * a5 * d75;
    d649 = 8.0 * b1 * d75;
    d650 = 8.0 * b2 * b3 * b5;
    d102 = d102 * c3 * c5;
    d186 *= c0;
    d651 = d186 * c5;
    d652 = 8.0 * a4 * d75;
    d653 = d652 * c0;
    d654 = d653 * c4;
    d655 = 18.0 * a5 * d75 * c0 * c3;
    d656 = 8.0 * b0 * b4 * b5;
    d657 = d649 * c0 * c1;
    d658 = d279 * c0 * c3;
    k_mm_tmp = 8.0 * a0 * d37;
    d659 = k_mm_tmp * c0;
    d660 = 16.0 * b0 * d75 * c1;
    d505 *= b5;
    d661 = 32.0 * a1 * d35;
    d662 = 8.0 * a2 * d16;
    d663 = d662 * c2;
    d664 = 16.0 * a3 * d75;
    d665 = d664 * c1;
    d666 = 8.0 * a3 * d35;
    d148 = d148 * c3 * c5;
    d667 = d187 * c5;
    d668 = 32.0 * a5 * d17;
    d669 = d666 * c0;
    d670 = 16.0 * b3 * d75;
    d671 = d305 * c0 * c3;
    d672 = 32.0 * a1 * d37;
    d673 = d672 * c1;
    d674 = d232 * c0;
    d675 = d668 * c2;
    d649 = d649 * c1 * c3;
    d676 = 16.0 * b1 * b4 * b5;
    d641 *= c3;
    d677 = 32.0 * a2 * d17;
    d678 = d677 * c2;
    d679 = d104 * c1;
    d652 = d652 * c3 * c4;
    d680 = 8.0 * a5 * d17;
    d681 = d680 * c0;
    d682 = 32.0 * a5 * d37 * c1;
    d216 *= c0;
    d683 = d217 * c5;
    d684 = 32.0 * a0 * d37;
    d685 = d684 * c2;
    d686 = 32.0 * a2 * d37;
    d687 = d686 * c0;
    d688 = 32.0 * b0 * d37;
    d689 = 32.0 * b2 * d37;
    d690 = d689 * c0;
    d691 = d690 * c2;
    d692 = d292 * c2;
    d693 = d283 * b2;
    d694 = d693 * c0;
    d232 *= c3;
    d695 = d214 * c4;
    d696 = 32.0 * a4 * d17;
    d697 = d696 * c4;
    d668 *= c4;
    d698 = d150 * c2;
    d699 = 8.0 * b0 * d37;
    d666 *= c3;
    d700 = 8.0 * a4 * d13;
    d701 = d700 * c4;
    d702 = d233 * c0;
    d233 *= c3;
    d703 = d150 * c4;
    d704 = d699 * c0;
    d705 = 8.0 * a4 * d16;
    d706 = 32.0 * a0 * d35 * c4;
    d707 = d705 * c4;
    d708 = 32.0 * a4 * d35;
    l_mm_tmp = 8.0 * b0 * d35;
    d709 = 32.0 * b1 * d37;
    d710 = d709 * c0;
    d711 = 32.0 * d14;
    d712 = d280 * c0;
    d713 = 32.0 * d35;
    d714 = d713 * b4;
    d715 = d714 * c0 * c4;
    d716 = d686 * c3;
    d717 = 32.0 * a3 * d37 * c2;
    d689 = d689 * c2 * c3;
    d718 = 32.0 * b3 * d37;
    d719 = d711 * b1;
    d304 *= b3;
    d294 *= b5;
    d720 = d688 * c1;
    d721 = l_mm_tmp * c3;
    d722 = d304 * c0;
    d723 = d293 * c0;
    d724 = d294 * c0;
    d725 = 16.0 * a0 * d13;
    d726 = 8.0 * a1 * d14;
    d727 = 8.0 * a1 * d16;
    d728 = 16.0 * a5 * d16;
    d729 = 32.0 * b1 * d35;
    d730 = d729 * c1;
    d731 = d122 * b0;
    d732 = d283 * b1;
    d733 = 16.0 * a5 * d13;
    d734 = d733 * c2;
    d735 = d306 * c5;
    d736 = d307 * c0;
    d737 = d732 * c1;
    d738 = d123 * c2;
    d739 = d123 * c4;
    d740 = d732 * c5;
    d741 = 32.0 * a3 * d35;
    d742 = d728 * c4;
    d743 = 16.0 * b0 * d13;
    d744 = d743 * c2;
    d729 *= c3;
    d745 = d693 * c3;
    d746 = d295 * c2;
    d747 = 24.0 * d14 * b5 * c1;
    d748 = d321 * b1;
    d749 = d321 * b2;
    d750 = 32.0 * d16;
    d751 = d321 * b4;
    d752 = d751 * c0;
    d753 = d322 * c0;
    d754 = d708 * c3;
    d755 = d280 * c3;
    d756 = d292 * c4;
    d757 = d277 * c0;
    d283 *= b4;
    d758 = d283 * c0;
    d759 = 18.0 * d14 * b5;
    d760 = d751 * c4;
    d761 = d322 * c3;
    m_mm_tmp = 32.0 * d17;
    n_mm_tmp = m_mm_tmp * b2;
    d762 = 128.0 * d17;
    d763 = 32.0 * d39;
    d764 = m_mm_tmp * b4;
    d765 = d764 * c0;
    d766 = 8.0 * a2 * d13;
    d714 = d714 * c3 * c4;
    d767 = d320 * b0 * c5;
    d768 = d326 * c0;
    d769 = 32.0 * b0 * d17 * c4;
    d770 = d319 * b2;
    d771 = d763 * b1;
    d772 = 16.0 * b0 * d17;
    d773 = d274 * c1;
    d774 = 8.0 * b2 * d13;
    d775 = d774 * c2;
    d776 = d327 * c0;
    d777 = 32.0 * d8;
    d778 = d122 * b3;
    d779 = d318 * b5;
    d780 = d779 * c5;
    d781 = d301 * b3 * c5;
    d782 = d307 * c3;
    d783 = d777 * b5;
    d784 = 32.0 * b2 * d13;
    d699 *= c3;
    d785 = 8.0 * b1 * d13;
    d786 = d785 * c1;
    d787 = d774 * c3;
    d788 = d274 * c4;
    d789 = d777 * b2;
    d790 = d349 * b5;
    d791 = d790 * c1;
    d792 = 32.0 * d41;
    d793 = 12.0 * d16;
    d794 = d282 * b5 * c5;
    d795 = d277 * c3;
    d796 = d295 * c4;
    d797 = d283 * c3;
    d798 = 16.0 * a3 * d16;
    d799 = d261 * b3;
    d800 = d799 * c4;
    d801 = d713 * b3;
    d802 = d281 * c3;
    d803 = d310 * c4;
    d804 = d792 * b1;
    d304 *= c3;
    d805 = d261 * b5;
    d806 = d741 * c4;
    d308 *= b4;
    d807 = d308 * c0;
    d808 = d350 * c0;
    d809 = d328 * c5;
    d810 = d326 * c3;
    d811 = d351 * c5;
    d812 = d310 * c2;
    d774 *= c0;
    d813 = d281 * c0;
    d814 = d293 * c3;
    d815 = d297 * c3;
    d294 *= c3;
    d816 = d319 * b4;
    d777 *= b4;
    d817 = d302 * b4;
    d818 = d297 * c0;
    d819 = d284 * c1;
    d820 = d750 * b4;
    d821 = d284 * c2;
    d822 = d324 * c1;
    d823 = d801 * c1;
    d751 *= c3;
    d824 = d567 * c2;
    d825 = d341 * b0;
    d826 = d447 * b2;
    d827 = d826 * c2;
    d828 = d471 * c2;
    d829 = d469 * c5;
    d830 = d472 * c0;
    d831 = d454 * b5;
    d832 = d831 * c0;
    d833 = d482 * c0;
    d834 = d573 * c0;
    d835 = 16.0 * a5 * b2;
    d836 = d835 * b5;
    d837 = d423 * b5;
    d838 = d473 * b5;
    d839 = d838 * c1;
    d840 = 16.0 * a0 * b4 * b5;
    d841 = d840 * c1;
    d842 = d355 * a5;
    d843 = d338 * b4 * c5;
    d844 = d474 * c4;
    d845 = d474 * c5;
    d846 = d358 * a5;
    d847 = d838 * c4;
    d848 = 16.0 * a0 * b3;
    d849 = d848 * b5;
    d850 = d849 * c2;
    d851 = d626 * b5;
    d852 = d851 * c1;
    d473 *= b3;
    d853 = d840 * c2;
    d854 = d367 * b2 * c5;
    d855 = d574 * c2;
    d856 = d574 * c5;
    d857 = d457 * b0;
    d858 = d457 * b1 * c5;
    d859 = d457 * b5;
    d860 = d476 * c0;
    d861 = d575 * c0;
    d862 = d454 * b0;
    d863 = d481 * b5;
    d864 = d863 * c1;
    d865 = d384 * c4;
    d866 = d859 * c5;
    d434 *= b5;
    d867 = 32.0 * a1 * b2;
    d868 = d867 * b4;
    d869 = d477 * c5;
    d870 = d576 * c5;
    d871 = d368 * b2 * c5;
    d872 = d453 * b1 * c5;
    d873 = d478 * c4;
    d874 = d478 * c5;
    d875 = d472 * c3;
    d876 = d831 * c3;
    d877 = d444 * b4;
    d878 = d432 * b5;
    d879 = d434 * c0;
    d880 = d868 * c0;
    d482 *= c3;
    d881 = d863 * c4;
    d882 = d877 * c0;
    d883 = d878 * c1;
    d884 = d481 * b3;
    d885 = d368 * b0;
    d886 = d884 * c2;
    d887 = i_mm_tmp * b5;
    d888 = d887 * c0;
    d889 = d887 * c4;
    d890 = d889 * c5;
    d517 *= b3;
    d891 = d517 * c0;
    d892 = d601 * b0;
    d893 = d511 * b5;
    d894 = d893 * c1;
    d895 = d484 * c0;
    d896 = d572 * b2;
    d897 = d896 * c1;
    d898 = d572 * b4;
    d899 = d898 * c1;
    d900 = d577 * b5;
    d901 = d900 * c1;
    d902 = d521 * c0;
    d903 = d604 * c0;
    d904 = d578 * c0;
    d905 = d502 * b5;
    d906 = d905 * c0;
    d907 = d602 * c2;
    d908 = d602 * c5;
    d909 = d596 * b2;
    d910 = d603 * c5;
    d911 = d572 * b3;
    d572 *= b1;
    d912 = d896 * c4;
    d913 = d911 * c2;
    d914 = d573 * c1;
    d915 = d572 * c1;
    d916 = d898 * c2;
    d917 = d578 * c2 * c4;
    d918 = d836 * c0;
    d836 = d836 * c2 * c3;
    d919 = d523 * b5;
    d920 = 16.0 * b0 * b4 * b5;
    d921 = 64.0 * a1 * a4;
    d922 = d614 * b0 * c5;
    d923 = d614 * b5;
    d924 = d923 * c0;
    d925 = 12.0 * a3 * b0;
    d926 = d925 * b5;
    d927 = d601 * b4;
    d928 = d927 * c0;
    d929 = d601 * b5;
    d930 = d929 * c0;
    d931 = d511 * b4;
    d932 = 16.0 * a4 * b4 * b5;
    d933 = d932 * c0;
    d934 = d933 * c5;
    d547 *= b3;
    d935 = 12.0 * a5 * b3 * b5;
    d936 = d935 * c0;
    d937 = 16.0 * a5 * b4;
    d938 = d937 * b5;
    d939 = d447 * b4;
    d940 = d939 * c4;
    d941 = e_mm_tmp * c3;
    d942 = d471 * c4;
    d943 = 12.0 * a0 * b3 * b5;
    d944 = d943 * c0;
    d945 = d926 * c0;
    d946 = d931 * c0;
    d947 = d547 * c0;
    d948 = d435 * b5;
    d949 = d921 * b1;
    d921 *= b4;
    d486 = d486 * b3 * c5;
    d950 = d524 * c3;
    d951 = d567 * c4;
    d952 = 64.0 * a1 * a5;
    d953 = d952 * b1;
    d457 *= b3;
    d954 = 64.0 * a1 * b1;
    d476 *= c3;
    d955 = d368 * b5;
    d454 *= b3;
    d887 *= c3;
    d956 = d954 * b5;
    d957 = d954 * b4;
    d434 *= c3;
    d958 = 16.0 * a1 * b3;
    d959 = d958 * b5;
    d960 = d368 * b3;
    d877 *= c3;
    d517 *= c3;
    d952 *= b5;
    d961 = d959 * c1;
    d575 *= c3;
    d962 = d588 * b5;
    d963 = d962 * c1;
    d964 = d962 * c4;
    d965 = d383 * b5;
    d966 = d539 * b2;
    d967 = d539 * b4;
    d968 = d487 * b5;
    d969 = d606 * b5;
    d970 = d969 * c1;
    d971 = 16.0 * a3 * b4;
    d972 = d971 * b5;
    d973 = d972 * c1;
    d601 *= b3;
    d974 = 64.0 * a4 * a5;
    d975 = 16.0 * a4 * b3;
    d976 = d975 * b5;
    d977 = d976 * c1;
    d978 = d630 * b5;
    d979 = d978 * c1;
    d980 = d969 * c4;
    d484 *= c3;
    d606 *= b3;
    d981 = d606 * c2;
    d982 = d552 * c2;
    d983 = d976 * c2;
    d984 = 64.0 * a4 * b4 * b5 * c1;
    d521 *= c3;
    d985 = d502 * b3;
    d986 = d985 * c1;
    d614 *= b3;
    d987 = d614 * c5;
    d988 = d923 * c3;
    d989 = d583 * c4;
    d990 = 12.0 * a3 * b3;
    d991 = d990 * b5;
    d992 = d927 * c3;
    d993 = d929 * c3;
    d975 *= b4;
    d994 = d553 * b5;
    d995 = d553 * b4;
    d996 = d511 * b3;
    d997 = d995 * c4;
    d998 = d996 * c4;
    d926 *= c3;
    d999 = d994 * c4;
    d931 *= c3;
    d1000 = d975 * c0;
    d932 *= c3;
    d1001 = d932 * c5;
    d547 *= c3;
    d911 *= c4;
    d1002 = 16.0 * a0 * a1;
    d1003 = 64.0 * a0 * b0;
    d1004 = d1002 * b4;
    d1005 = d1002 * b5;
    d1006 = d353 * b1;
    d1007 = h_mm_tmp * b1;
    d1008 = d383 * b3;
    d551 *= b4;
    d1009 = d975 * c3;
    d447 *= b1;
    d1010 = d341 * b5;
    d1011 = h_mm_tmp * b2;
    d1012 = d613 * c5;
    d1013 = d404 * b5;
    d1014 = d1013 * c4;
    d481 *= b4;
    d1015 = 64.0 * a2 * b2;
    d1016 = d480 * c1;
    d1017 = d480 * c5;
    d358 *= b0;
    d1018 = d628 * c2;
    d1019 = d628 * c5;
    d1020 = d878 * c2;
    d1021 = d878 * c4;
    d1022 = d481 * c1;
    d1023 = d481 * c5;
    d1024 = d1015 * b4;
    d1025 = d1024 * c0;
    d1026 = d962 * c0;
    d363 *= b0;
    d1027 = 64.0 * a2 * b0;
    d1028 = d1027 * b2 * c4;
    d1029 = d969 * c0;
    d1030 = d631 * c2;
    d1031 = d631 * c5;
    d1032 = d525 * c1;
    d1033 = 64.0 * a4 * b0;
    d1034 = d1033 * b4;
    d1035 = d633 * c0;
    d1036 = d632 * b5;
    d1037 = d1036 * c0;
    d1038 = d526 * c0;
    d1039 = d919 * c0;
    d1040 = 32.0 * b1 * b2;
    d1041 = d572 * c4;
    d835 *= b3;
    d1042 = d835 * c0;
    d1043 = d527 * c5;
    d1044 = 16.0 * b0 * b3;
    d607 *= b5;
    d1045 = d607 * c0;
    d1046 = d1045 * c2;
    d1047 = d840 * c0;
    d1048 = d1040 * b4;
    d1049 = d1044 * b5;
    d1050 = d893 * c0;
    d1051 = d898 * c0;
    d1052 = 12.0 * b0 * b3 * b5;
    o_mm_tmp = 64.0 * a1 * a2;
    d1053 = 64.0 * a2 * b1 * b2;
    d1054 = d341 * b3;
    d1055 = d456 * b2;
    d1056 = d1015 * b3;
    d1057 = d456 * b4;
    d1058 = 64.0 * a3 * b2;
    d1059 = d954 * b2;
    d1060 = d956 * c2;
    d1061 = d1053 * c1;
    d1015 = d1015 * b5 * c1;
    d1062 = 64.0 * a5 * b1;
    d1063 = 64.0 * a5 * b2;
    d1064 = d353 * b5;
    d1065 = h_mm_tmp * b4;
    d1066 = d353 * b3;
    d1067 = d473 * c5;
    d848 *= b4;
    d1068 = d948 * d0;
    d1069 = d457 * d0;
    d1070 = 64.0 * a1 * b0;
    d1071 = d848 * c5;
    d1072 = d840 * c3;
    d355 *= b3;
    d1073 = d435 * b2;
    d1074 = d878 * c3;
    d1075 = i_mm_tmp * b3;
    d588 *= b4;
    d1076 = d1075 * c4;
    d1077 = d1075 * c5;
    d1078 = d1056 * c4;
    d1079 = d1024 * c3;
    d1080 = d588 * c1;
    d1081 = d588 * c5;
    d1082 = d962 * c3;
    d1083 = d383 * b0;
    d1084 = d539 * b1;
    d1085 = d553 * b2;
    d1086 = d1085 * c5;
    d1087 = 64.0 * a3 * b0;
    d1088 = d978 * c0;
    d1089 = d995 * c5;
    d1090 = d635 * c4;
    d1091 = d635 * c5;
    d1092 = d978 * c2;
    d1093 = d978 * c4;
    d1094 = d608 * c1;
    d1095 = d608 * c5;
    d1096 = d969 * c3;
    d1097 = 32.0 * a3 * b3;
    d1098 = d1097 * b5;
    d1099 = d1098 * c2;
    d1100 = d446 * b3;
    d1101 = d996 * c5;
    d1102 = 64.0 * a4 * b2 * b4;
    d1103 = d572 * c3;
    d1104 = 64.0 * a5 * b0;
    d1105 = d985 * c0;
    d1106 = d898 * c3;
    d1107 = d609 * c1;
    d1108 = d609 * c5;
    d1109 = d1102 * c3;
    d1110 = 64.0 * a4 * b3 * b4 * c2;
    d1111 = d985 * c2;
    d1112 = d985 * c4;
    d1113 = d835 * c1;
    d1114 = d835 * c3;
    d1115 = d835 * c4;
    d1116 = 32.0 * a5 * b3 * b5;
    d1117 = d1116 * c1;
    d1118 = d1036 * c3;
    d523 *= b3;
    d1119 = d523 * c1;
    d1120 = d523 * c2;
    d1044 *= b4;
    d1121 = d1044 * c1;
    d1122 = d636 * c0;
    d1123 = 16.0 * b1 * b3;
    d1124 = d1123 * b5;
    d1125 = d1124 * c0;
    d1126 = d610 * c0;
    d1127 = d637 * c5;
    d1128 = d1124 * c2;
    d1129 = d1128 * c4;
    d1130 = d611 * c5;
    d1131 = d523 * c4;
    d526 *= c3;
    d1132 = d505 * c3 * c4;
    d1133 = d676 * c2 * c3;
    d1134 = d523 * c3;
    d1135 = d1044 * c2;
    d1136 = d1044 * c0;
    d1137 = d920 * c0;
    d1138 = d893 * c3;
    d1139 = d920 * c3 * c4;
    d1140 = d848 * c4;
    d1141 = d451 * c5;
    d630 *= b3;
    d579 *= b4;
    d636 *= c3;
    d1142 = 16.0 * b3 * b4 * b5;
    d1143 = d1142 * c1;
    d1144 = d905 * c3;
    d1145 = d579 * c1;
    d1146 = d579 * c2;
    d1147 = d580 * c1;
    d1148 = d1143 * c2;
    d943 *= c3;
    d849 *= c4;
    d1149 = d1048 * c3;
    d610 *= c3;
    d925 *= b3;
    d1150 = d632 * b3;
    d1151 = d991 * c5;
    d975 *= c5;
    d1152 = 12.0 * a5 * b3 * b5 * c3;
    d626 *= b3;
    d432 *= b3;
    d553 *= b1;
    d1153 = d1150 * c2;
    d1154 = d1150 * c4;
    d1155 = d1052 * c3;
    d1156 = d1049 * c1;
    p_mm_tmp = 8.0 * a3 * a4;
    q_mm_tmp = p_mm_tmp * b4;
    r_mm_tmp = b_mm_tmp * b3;
    s_mm_tmp = d612 * c5;
    t_mm_tmp = d396 * c3;
    u_mm_tmp = d69 * c5;
    v_mm_tmp = d70 * c5;
    w_mm_tmp = c_mm_tmp * b5 * c4;
    x_mm_tmp = d805 * c1;
    y_mm_tmp = 64.0 * a2 * a5;
    ab_mm_tmp = d456 * b5;
    bb_mm_tmp = h_mm_tmp * b3;
    cb_mm_tmp = d959 * c0;
    db_mm_tmp = d955 * d0;
    eb_mm_tmp = 64.0 * a2 * a4;
    fb_mm_tmp = d454 * d0;
    gb_mm_tmp = d884 * c5;
    hb_mm_tmp = d44 * d26;
    ib_mm_tmp = mm_tmp * b0;
    jb_mm_tmp = d78 * c5;
    kb_mm_tmp = d119 * d26;
    lb_mm_tmp = 4.0 * a4 * d14;
    mb_mm_tmp = d113 * c0;
    nb_mm_tmp = d113 * c3;
    ob_mm_tmp = 16.0 * b1 * d35 * c1;
    pb_mm_tmp = 4.0 * a3 * d17;
    qb_mm_tmp = 16.0 * a4 * d17;
    rb_mm_tmp = 4.0 * b1 * d75;
    sb_mm_tmp = d_mm_tmp * d42;
    tb_mm_tmp = d254 * d48;
    ub_mm_tmp = d300 * d40;
    vb_mm_tmp = d372 * a5;
    wb_mm_tmp = d66 * d26;
    xb_mm_tmp = d442 * b2;
    mm_tmp_tmp = 16.0 * a2 * b1 * b4;
    yb_mm_tmp = mm_tmp_tmp * d26;
    ac_mm_tmp = d491 * c5;
    bc_mm_tmp = f_mm_tmp * b4 * c4;
    cc_mm_tmp = 8.0 * a2 * b3 * b5 * c2;
    dc_mm_tmp = d529 * d26;
    ec_mm_tmp = 8.0 * a0 * b4 * b5 * c4;
    fc_mm_tmp = d591 * d40;
    gc_mm_tmp = 6.0 * a3 * b3 * b5 * d26;
    hc_mm_tmp = d68 * d26;
    ic_mm_tmp = g_mm_tmp * b3;
    jc_mm_tmp = i_mm_tmp * b4;
    kc_mm_tmp = d545 * c3;
    lc_mm_tmp = d101 * c1;
    mc_mm_tmp = l_mm_tmp * c0;
    nc_mm_tmp = d661 * c1;
    oc_mm_tmp = d214 * c2;
    pc_mm_tmp = 32.0 * b0 * d35;
    qc_mm_tmp = n_mm_tmp * c2;
    rc_mm_tmp = 32.0 * d17 * b5;
    sc_mm_tmp = k_mm_tmp * c3;
    tc_mm_tmp = d766 * c2;
    uc_mm_tmp = d215 * c0;
    vc_mm_tmp = d215 * c3;
    wc_mm_tmp = 8.0 * a1 * d13;
    xc_mm_tmp = d748 * c1;
    yc_mm_tmp = d309 * c1;
    ad_mm_tmp = d323 * c0;
    bd_mm_tmp = n_mm_tmp * c3;
    cd_mm_tmp = m_mm_tmp * b3 * c2;
    dd_mm_tmp = d329 * c4;
    ed_mm_tmp = 8.0 * d9 * b2;
    fd_mm_tmp = d918 * c2;
    gd_mm_tmp = d520 * c5;
    hd_mm_tmp = d524 * c0;
    id_mm_tmp = d475 * c4;
    jd_mm_tmp = 16.0 * a1 * a5 * b4 * c5;
    kd_mm_tmp = d518 * c3 * c5;
    ld_mm_tmp = d583 * c2;
    md_mm_tmp = d522 * c5;
    nd_mm_tmp = d353 * b4 * c5;
    od_mm_tmp = d539 * b0;
    pd_mm_tmp = j_mm_tmp * c3 * c5;
    qd_mm_tmp = d353 * b0;
    rd_mm_tmp = e_mm_tmp * c0;
    sd_mm_tmp = o_mm_tmp * b1;
    g_mm_tmp = o_mm_tmp * b2;
    i_mm_tmp = 256.0 * a1 * b1;
    l_mm_tmp = d627 * c2;
    k_mm_tmp = d627 * c5;
    n_mm_tmp = d851 * c3;
    m_mm_tmp = 16.0 * a0 * b1 * b5 * c4;
    j_mm_tmp = d468 * c5;
    e_mm_tmp = d1084 * d0;
    o_mm_tmp = d1085 * c2;
    td_mm_tmp = d893 * c2;
    ud_mm_tmp = 64.0 * a4 * b1 * b4;
    vd_mm_tmp = d1102 * c0;
    wd_mm_tmp = d604 * c3;
    xd_mm_tmp = d634 * c5;
    yd_mm_tmp = 24.0 * a0 * b0;
    ae_mm_tmp = d1137 * c4;
    c_mm_tmp = d868 * c3;
    h_mm_tmp = d442 * b3;
    mm_tmp = d607 * c2 * c3;
    d_mm_tmp = d551 * c4;
    f_mm_tmp = d404 * b3;
    b_mm_tmp = d1048 * c0;
    return ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((std::pow(a0, 3.0) * d - b_d1 * d7) + b_d4 * b_d2) - b_d3 * std::pow(c0, 3.0)) - std::pow(a3, 3.0) * d) + b_d1 * b_d5) - d6 * b_d2) + b_d3 * std::pow(c3, 3.0)) - b_d4 * b_d5) + d6 * d7) + 4.0 * a0 * d8 * d) + 3.0 * a0 * d9 * d) - d11 * a3 * d) - d12 * a3 * d) - d44 * b_d5) + d55 * b_d2) + d49 * d7) + d45 * b_d5) - d52 * d7) + d56 * b_d2) - d53 * b_d5) + d15 * d7) - d57 * b_d2) - d54 * d7) - d58 * b_d2) + d50 * b_d5) - d19 * c0 * d20) - d18 * c0 * d48) + d18 * d43 * c3) + d19 * d20 * c3) + d30 * c0 * d38) - d27 * d0 * d28) - d29 * c3 * d36) - d21 * d0 * d22) + d21 * d24 * d3) + d23 * c5 * d22) - d23 * d26 * d3) - d25 * c5 * d24) + d25 * d26 * d0) + d27 * d28 * d3) + d29 * d42 * d5) - d30 * d40 * d5) + d61 * b_d5) - d62 * b_d5) + d69 * d7) - d70 * d7) - d66 * b_d5) + d65 * b_d5) - d67 * d7) + d68 * d7) - d31 * c5 * d2) - d33 * c5 * d5) + d34 * c5 * d4) + d32 * c5 * d5) + d31 * d0 * d2) - d32 * d0 * d5) + d33 * d3 * d5) - d34 * d3 * d4) - d72 * c0 * d71) + d73 * c0 * d36) - d74 * c0 * d38) + d76 * c0 * d28) + d77 * d0 * d71) - d120 * d0 * d38) + hb_mm_tmp * d0) - 4.0 * a0 * (b5 * b5) * d40 * d0) + 4.0 * a1 * d16 * c1 * d71) - d84 * d24) + d111 * d26) - d80 * d40) + ib_mm_tmp * c0 * d71) - d92 * c0 * d38) - d82 * c3 * d71) - d109 * c0 * d71) + d103 * d22) - d83 * c3 * d24) + 64.0 * a1 * d35 * c1 * d36) - 64.0 * a1 * d37 * c1 * d38) - 16.0 * a2 * d16 * c2 * d36) + d90 * d24) + d100 * c0 * d71) + 9.0 * a3 * d75 * c0 * d24) - d93 * d0 * d71) + 4.0 * a0 * (a5 * a5) * d0 * d36) + d97 * c5 * d36) - d107 * c3 * d71) - d112 * d36) + d74 * c3 * d38) + jb_mm_tmp * d24) - d78 * d26 * d0) - d106 * d28) + d76 * d42 * d0) + 16.0 * a1 * d39 * d1 * d71) - d88 * d38) + d98 * d26 * d1) - d89 * d40 * d1) + d94 * d24 * d2) - d99 * d26 * d2) - 64.0 * a2 * d17 * c2 * d36) + 64.0 * a2 * d37 * c2 * d28) + d95 * d43 * d2) + d110 * c0 * d71) - d91 * c0 * d36) + d108 * d38) + d105 * d28) - d85 * c0 * d36) - 12.0 * a5 * d37 * c0 * d24) - mb_mm_tmp * d26) + d80 * d42) + ob_mm_tmp * d26) - d115 * d40) + d116 * d43 * c2) - d117 * a2 * d2 * d71) - d117 * b2 * c2 * d71) + d118 * b1 * c1 * d71) - d211 * c0 * d71) + 4.0 * d14 * b0 * c0 * d36) - d124 * d38) + d131 * d24) - d143 * d26) - d77 * d3 * d71) + d133 * d24 * d5) + d120 * d38 * d3) + d82 * d26 * d5) + d154 * d36) + d151 * d22) - hb_mm_tmp * d3) + 8.0 * a0 * d13 * c5 * d38) - d74 * c5 * d28) + d83 * d43 * d5) + d76 * d40 * d3) - 4.0 * a1 * d13 * c1 * d71) + d84 * d22) + 16.0 * a2 * d14 * d28 * d2) - d144 * d26 * d2) + 16.0 * a2 * d75 * d20 * d2) + d126 * d38) - d142 * c5 * d38) + d134 * d24) - kb_mm_tmp * d0) + d127 * d40 * d0) + d146 * c4 * d38) - d135 * d24) - d85 * c3 * d38) - d136 * d0) + d121 * c0 * d36) - d149 * d22) + d128 * c3 * d24) - d150 * c0 * d38) - d152 * d28) - d138 * d0) - d86 * c3 * d26) + d145 * c5) + d79 * d40 * c3) + 16.0 * b2 * d75 * d20 * c2) + d130 * d40) - d140 * d0 * d71) + d156 * c5 * d71) - d157 * c0 * d71) - d158 * a2 * d2 * d71) - d158 * b2 * c2 * d71) - d159 * d0 * d71) - ib_mm_tmp * c3 * d71) - d225 * c0 * d71) + 4.0 * d14 * b0 * c3 * d38) + 3.0 * d14 * b0 * c5 * d24) + 16.0 * (a5 * a5) * b2 * c2 * d28) + d162 * d38) - d166 * d24) - d181 * d26) - d182 * d26) - d183 * d26) + d120 * d28 * d5) + 12.0 * a0 * d17 * d26 * d5) - d179 * c3 * d71) - 9.0 * a0 * d75 * c3 * d22) + d76 * d20 * d5) - 16.0 * a1 * d41 * d1 * d71) + d88 * d36) - d176 * d26 * d1) + d89 * d42 * d1) - d180 * c2 * d36) + d90 * d22) + d190 * c3 * d71) - d189 * d38) + d91 * c5 * d28) + d185 * c0 * d71) + d191 * c0 * d22) - d187 * d24) + 64.0 * a4 * d17 * c4 * d38) - 64.0 * a4 * d35 * c4 * d28) - d85 * c5 * d28) - d121 * c3 * d38) + d169 * d24) - d170 * d0) + d188 * d28) - d171 * d0) + d177 * c5) - d178 * d26) + d115 * d42) - d172 * d0 * d71) + d173 * b0 * c5 * d71) - d174 * c0 * d71) - d175 * b1 * c1 * d71) + d92 * c5 * d28) + d124 * d36) - d192 * c0 * d28) - d193 * d26) + d93 * d3 * d71) - d120 * d3 * d36) + d194 * c5 * d36) - jb_mm_tmp * d22) + 4.0 * a0 * d37 * d26 * d3) - 4.0 * a0 * d75 * d42 * d3) - 4.0 * a2 * d9 * d2 * d71) + d94 * d2 * d22) - d209 * d26 * d2) + d95 * d48 * d2) + d201 * d0 * d71) - d126 * d36) - d218 * c5 * d36) + pb_mm_tmp * c3 * d71) + d91 * c3 * d36) - d96 * c3 * d38) - d215 * c5 * d24) + d202 * d0) - d127 * c3 * d28) - d203 * d0) + d214 * c3 * d36) + d85 * d40 * d5) - d128 * d43 * d5) + d195 * c0 * d36) - d196 * c0 * d22) + d217 * d24) + nb_mm_tmp * d26) - d79 * c3 * d42) - d210 * d26) + d116 * c2 * d48) + d204 * c0 * d26) - d130 * d42) + d197 * d38 * d5) + d199 * d38) - d205 * d24 * d5) - d206 * d24) - d207 * b2 * c2 * d71) + d211 * c3 * d71) + d208 * c0 * d71) - d92 * c3 * d36) + d131 * d22) - d162 * d36) + d212 * c5) - d213 * c5) + d133 * d22 * d5) + 9.0 * a0 * d13 * d26 * d5) + d83 * d48 * d5) - 3.0 * a3 * d14 * d24 * d5) - d125 * d38 * d3) - 9.0 * a3 * d16 * d26 * d5) - d134 * d22) + kb_mm_tmp * d3) - d219 * c5 * d38) - d191 * d43 * d5) - 4.0 * a3 * d75 * d40 * d3) - lb_mm_tmp * d24 * d4) + d226 * d26 * d4) - d135 * d22) + 16.0 * a4 * d13 * c4 * d38) - d236 * d43 * d4) - d234 * d22) + d136 * d3) + d121 * d40 * d5) + 12.0 * a5 * d35 * c3 * d22) - d164 * d20 * d5) + d195 * c3 * d38) + d235 * d24) - d237 * d0) + d138 * d3) - d137 * d0) + d139 * d48 * c5) - d227 * d43 * c5) - d129 * d40 * c3) - d238 * d43 * c4) + d117 * a4 * d4 * d71) + d140 * d3 * d71) - d155 * b3 * c5 * d71) + d117 * b4 * c4 * d71) + d157 * c3 * d71) + d221 * d38 * d5) + d223 * d38) + d159 * d3 * d71) - d118 * a5 * d28 * d5) + d225 * c3 * d71) - d228 * c5 * d28) - d239 * d0 * d71) + d229 * b0 * c5 * d71) - d240 * c0 * d71) + d53 * c5 * d22) - d224 * d38) - d241 * d24) - d242 * d24) - d166 * d22) + d165 * d24) + d230 * d26) + d46 * c3 * d26) + d231 * c5) + d243 * d26) - d246 * c5) - d247 * c0 * d26) - d125 * d28 * d5) - 12.0 * a3 * d17 * d26 * d5) - d127 * d20 * d5) - 16.0 * a4 * d14 * d28 * d4) + qb_mm_tmp * d26 * d4) - 16.0 * a4 * d75 * d20 * d4) - d85 * d42 * d5) - d169 * d22) + d170 * d3) + d195 * c5 * d28) + d196 * d43 * d5) + d171 * d3) - d252 * c5) - 16.0 * b4 * d75 * d20 * c4) - d197 * d36 * d5) - d199 * d36) + d158 * a4 * d4 * d71) + d172 * d3 * d71) - d173 * b3 * c5 * d71) + d158 * b4 * c4 * d71) + d174 * c3 * d71) + d51 * d24 * d5) + d257 * d24) - d161 * c5 * d28) - d122 * b4 * c4 * d28) + d192 * c3 * d28) - d248 * c5) + d249 * d26) + d250 * d26) + d254 * d43 * c5) - d201 * d3 * d71) + d125 * d3 * d36) - d202 * d3) + d203 * d3) - d121 * d42 * d5) - d128 * d48 * d5) + d195 * d40 * d5) + d141 * d20 * d5) - d251 * d26) + d129 * c3 * d42) - d221 * d36 * d5) - d223 * d36) - d205 * d22 * d5) - d206 * d22) + d255 * d38 * d5) + d256 * d38) + d175 * a5 * d28 * d5) - d208 * c3 * d71) + d258 * c5 * d28) + d224 * d36) - sb_mm_tmp * c5) - d163 * d48 * c5) + ub_mm_tmp * c5) + d314 * c5) - 3.0 * a3 * (a5 * a5) * d22 * d5) - d185 * d26 * d5) - d191 * d48 * d5) - lb_mm_tmp * d22 * d4) + d315 * d26 * d4) - d236 * d48 * d4) + d237 * d3) + d137 * d3) - d317 * c5) - d238 * d48 * c4) + d207 * a4 * d4 * d71) + d239 * d3 * d71) - d332 * c5 * d71) + d207 * b4 * c4 * d71) + d240 * c3 * d71) - d241 * d22) - d242 * d22) + d165 * d22) + d259 * d26) + d333 * d26) - d195 * d42 * d5) + d196 * d48 * d5) - d255 * d36 * d5) - d256 * d36) + d51 * d22 * d5) + d257 * d22) - d334 * c5) + tb_mm_tmp * c5) - d153 * d0 * d36) + d44 * d0 * d22) - d267 * d38) + d74 * d0 * d28) - d772 * c0 * d36) + d111 * d22) - d269 * d38) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d260 * c0 * d28 + 16.0 * a1 * d16 * d1 * d36) - d176 * d24 * d1) - d55 * d26 * d0) + d263 * d0) - d264 * d0) + d177 * d0) - d178 * d24) - d12 * b0 * d0 * d71) + d265 * d0 * d36) - d266 * d0 * d38) + d92 * d0 * d28) + d261 * b1 * c1 * d36) - d97 * d3 * d36) - d267 * d36) + d78 * d0 * d22) - d78 * d24 * d3) + d98 * d1 * d22) - 16.0 * a1 * d13 * d1 * d38) - d99 * d2 * d22) + d209 * d24 * d2) + d142 * d0 * d36) - d269 * d36) + mb_mm_tmp * d22) - nb_mm_tmp * d24) + ob_mm_tmp * d22) - 16.0 * b1 * d13 * c1 * d38) - rb_mm_tmp * d43 * d1) + d210 * d24) + 12.0 * b3 * d37 * c0 * d24) + d117 * b1 * d1 * d71) - d81 * d24 * d1) + d132 * d26 * d1) - d143 * d22) + d270 * c0 * d36) + d82 * d22 * d5) + d179 * d24 * d5) - d194 * d38 * d3) - d144 * d2 * d22) + d180 * d28 * d2) + d142 * d38 * d3) + d119 * d0 * d22) - d119 * d24 * d3) + d219 * d0 * d38) - d45 * d0 * d22) - 12.0 * b0 * d35 * c3 * d22) - d268 * c3 * d38) + d56 * c5 * d24) - d281 * d26 * d0) - d145 * d3) + d279 * d48 * d0) + 64.0 * b1 * d35 * d42 * d1) - 64.0 * b1 * d37 * d40 * d1) + d274 * c2 * d28) + d275 * d43 * d2) + 9.0 * b3 * d75 * d43 * d0) - d156 * d3 * d71) - d272 * b2 * d2 * d36) + d11 * b3 * d0 * d71) + 64.0 * d39 * b1 * d1 * d36) - d278 * b0 * d0 * d71) - d271 * b1 * d1 * d38) + d276 * d24 * d2) + d280 * d0 * d22) - d53 * d24 * d3) - d261 * b2 * d42 * d2) + d273 * d38) + d57 * d26 * d0) - d181 * d22) - d182 * d22) + d183 * d22) - d243 * d24) - 9.0 * d13 * b5 * c0 * d24) + d72 * d22 * d5) - d194 * d28 * d5) + d142 * d28 * d5) - pb_mm_tmp * d24 * d5) + d184 * d38 * d3) - d91 * d28 * d3) - d146 * d28 * d4) + qb_mm_tmp * d24 * d4) + d85 * d28 * d3) + d160 * d0 * d22) - d160 * d24 * d3) - d195 * d0 * d28) + d55 * c5 * d22) - d293 * d26 * d3) - d263 * d3) - d268 * c5 * d28) + d113 * d43 * d5) + d264 * d3) - d291 * d20 * d3) + 64.0 * b2 * d37 * d20 * d2) + d288 * d0) + d296 * d20 * d0) + 12.0 * d10 * b0 * d36 * d5) - d198 * d0 * d36) - d282 * b0 * d3 * d71) - d285 * b2 * d2 * d36) + d282 * b3 * d0 * d71) - d265 * d3 * d36) - d289 * d0 * d36) + d211 * d24 * d5) + d266 * d38 * d3) + d271 * b2 * d28 * d2) + d290 * d0 * d38) - d292 * d28 * d3) + d295 * d0 * d28) + d270 * c5 * d28) - d284 * c4 * d28) + d200 * c3 * d28) - d248 * d0) - d286 * b2 * d42 * d2) + d167 * c3 * d38) - d58 * c5 * d24) + d297 * d26 * d0) + d249 * d24) + d193 * d22) - d250 * d24) - d298 * c3 * d28) - d299 * d0) - d300 * c0 * d28) - 12.0 * d37 * b5 * d43 * d0) + d142 * d3 * d36) - d49 * d24 * d3) + d772 * d42 * d5) + 8.0 * b0 * (b2 * b2) * d48 * d5) + d310 * d40 * d5) - d260 * d20 * d5) - d303 * d26 * d1) + rb_mm_tmp * d48 * d1) - d251 * d24) - d117 * b3 * d38 * d5) + d312 * d38 * d4) - d198 * d38 * d3) + d158 * b0 * d36 * d5) + d222 * d0 * d36) + d306 * d22 * d5) + d225 * d24 * d5) - d118 * b4 * d24 * d4) - d307 * d0 * d22) + d50 * d24 * d3) + d302 * b0 * d38 * d5) - d207 * b1 * d1 * d71) - d311 * d0 * d38) - d266 * d28 * d5) - d258 * d0 * d28) + d81 * d1 * d22) + d273 * d36) - d270 * d40 * d5) + d284 * d40 * d4) - d212 * d3) + sb_mm_tmp * d0) + d168 * d43 * d5) - d244 * d43 * d4) + d213 * d3) - d305 * d48 * d0) - d309 * d40 * d0) - d314 * d0) - d100 * d22 * d5) - d185 * d24 * d5) - d226 * d22 * d4) + d315 * d24 * d4) + d52 * d24 * d3) - d56 * d26 * d3) - 9.0 * b0 * d75 * d48 * d3) - d274 * d42 * d2) + d275 * d48 * d2) - d316 * d43 * d3) + d317 * d0) + d318 * b3 * d3 * d71) - d198 * d28 * d5) - d158 * b3 * d38 * d5) + d285 * b4 * d38 * d4) + d174 * d24 * d5) - d222 * d38 * d3) + 16.0 * d39 * b3 * d28 * d5) - 64.0 * d39 * b4 * d28 * d4) + d228 * d28 * d3) - d220 * b0 * d3 * d71) - d331 * d2 * d36) + d332 * d0 * d71) + d276 * d2 * d22) + d15 * d0 * d22) - d277 * d24 * d3) - d57 * c5 * d22) + d323 * d26 * d3) - d230 * d22) + 9.0 * d16 * b5 * c3 * d22) - d200 * d20 * d5) - d167 * d40 * d5) + d286 * b4 * d40 * d4) + d47 * d43 * d5) - d231 * d3) + d298 * d20 * d5) - 64.0 * d35 * b4 * d20 * d4) + d246 * d3) + d259 * d24) + d333 * d24) + d268 * d42 * d5) - d113 * d48 * d5) - d327 * d43 * d5) - d288 * d3) - d252 * d3) - d319 * b3 * d36 * d5) + d325 * d3 * d36) + d12 * b3 * d3 * d71) + d289 * d3 * d36) + d207 * b0 * d36 * d5) + d253 * d0 * d36) - d211 * d22 * d5) - d328 * d24 * d5) - d290 * d38 * d3) - d54 * d0 * d22) + d326 * d24 * d3) - d161 * d28 * d3) - d329 * d42 * d5) + d324 * d42 * d3) + d58 * d26 * d3) + d299 * d3) + d334 * d0) + d336 * d43 * d3) - tb_mm_tmp * d0) - d779 * d22 * d5) - d225 * d22 * d5) - 16.0 * d39 * b4 * d22 * d4) - 12.0 * d9 * b3 * d38 * d5) + 16.0 * (a3 * a3) * b4 * d38 * d4) + d351 * d24 * d5) + d253 * d38 * d3) - d322 * d48 * d5) - d168 * d48 * d5) - d244 * d48 * d4) + 12.0 * d35 * b5 * d48 * d3) + d349 * b4 * d40 * d4) + d350 * d43 * d5) + ub_mm_tmp * d3) - d174 * d22 * d5) + d253 * d28 * d5) - d47 * d48 * d5) + d300 * d20 * d5) - d55 * d0 * d22) + d268 * d0 * d28) - d303 * d24 * d1) + d132 * d1 * d22) - d56 * d24 * d3) + d57 * d0 * d22) - d270 * d28 * d3) + d58 * d24 * d3) - d337 * b0 * c2 * d71) + d340 * c0 * d71) - d343 * c0 * d71) - d338 * b1 * c2 * d71) + d338 * b2 * c1 * d71) - d339 * a5 * d1 * d71) + 24.0 * a0 * a1 * b1 * c5 * d71) - d339 * b5 * c1 * d71) + d337 * a3 * d2 * d71) - d341 * a4 * d1 * d71) - d340 * c3 * d71) + d337 * b3 * c2 * d71) - d352 * c1 * d71) + d348 * b2 * c2 * d71) - d354 * c1 * d71) + d345 * d38) - d342 * b1 * c1 * d71) - d347 * d38) + d356 * d0 * d71) + d357 * c0 * d71) + d359 * c0 * d71) - d360 * b0 * c1 * d71) - d361 * c0 * d71) + d362 * b0 * c2 * d71) - d377 * c0 * d71) - d363 * c1 * d71) + d378 * c0 * d71) + vb_mm_tmp * d0 * d71) - d371 * b0 * c5 * d71) + d373 * c0 * d71) + d364 * b0 * c4 * d71) - d379 * c0 * d71) + d343 * c3 * d71) + d59 * c0 * d71) + d381 * c0 * d71) - d345 * d36) + d347 * d36) + d376 * c5 * d38) - d388 * d38) - d393 * d24) + d394 * d24) - d389 * d38 * d5) - d390 * d38) - d391 * d38) + d392 * d38) + d398 * d24) - d356 * d3 * d71) - d357 * c3 * d71) + d366 * a5 * d1 * d71) - 24.0 * a1 * a3 * b1 * c5 * d71) + d366 * b5 * c1 * d71) + d367 * b1 * c4 * d71) - d359 * c3 * d71) - d367 * b4 * c1 * d71) + d361 * c3 * d71) + d360 * b3 * c1 * d71) + d368 * a4 * d1 * d71) + d377 * c3 * d71) - d362 * b3 * c2 * d71) + d386 * c1 * d71) - d378 * c3 * d71) + d387 * c1 * d71) - d380 * c5 * d28) + d369 * b5 * c2 * d28) + d385 * c1 * d71) - d395 * d38) + d370 * b1 * c1 * d71) + d397 * d38) - d348 * a4 * d4 * d71) - vb_mm_tmp * d3 * d71) + d371 * b3 * c5 * d71) - d348 * b4 * c4 * d71) - d373 * c3 * d71) - d364 * b3 * c4 * d71) + d379 * c3 * d71) - 6.0 * a0 * a5 * b3 * c3 * d71) + 8.0 * a0 * a5 * b5 * c5 * d28) - 32.0 * a1 * a5 * b1 * c5 * d36) + d388 * d36) - p_mm_tmp * b0 * c4 * d71) + q_mm_tmp * c0 * d71) - d381 * c3 * d71) - r_mm_tmp * c0 * d71) + d389 * d36 * d5) + d390 * d36) + d391 * d36) - d392 * d36) - d393 * d22) + d394 * d22) + d395 * d36) - d397 * d36) + d398 * d22) + s_mm_tmp * d38) - t_mm_tmp * d38) - u_mm_tmp * d24) + v_mm_tmp * d24) - w_mm_tmp * d24) + p_mm_tmp * b3 * c4 * d71) - q_mm_tmp * c3 * d71) + r_mm_tmp * c3 * d71) - d396 * c5 * d28) + d587 * c5 * d28) - d568 * b5 * c4 * d28) - s_mm_tmp * d36) + t_mm_tmp * d36) - u_mm_tmp * d22) + v_mm_tmp * d22) - w_mm_tmp * d22) + d339 * b0 * d1 * d71) - d339 * b1 * d0 * d71)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d400 * b1 * c1 * d71 - d403 * c0 * d71) - d399 * b0 * d2 * d36) + d401 * d0 * d36) + d372 * b0 * d0 * d71) - d404 * b2 * c2 * d36) + d63 * c0 * d71) + d406 * c0 * d36) - d344 * d0 * d36) - d407 * d26 * d2) - d412 * c0 * d36) + wb_mm_tmp * d0) - d1002 * b1 * d3 * d71) - d348 * b0 * d38 * d5) + 8.0 * a0 * a3 * b5 * d0 * d38) + d436 * d38 * d4) - d419 * d0 * d38) - d344 * d38 * d3) + d374 * d0 * d38) - d429 * c5 * d38) + d430 * c4 * d38) - d412 * c3 * d38) - d420 * d0) + d425 * c0 * d38) - d409 * b1 * d2 * d36) + d409 * b2 * d1 * d36) + d435 * b1 * d0 * d71) - d437 * c3 * d71) - d416 * b2 * c2 * d36) + d440 * c0 * d71) + 128.0 * a2 * b1 * b2 * c1 * d36) + d375 * d0 * d38) + d426 * c0 * d38) - d422 * c0 * d38) + d427 * c0 * d38) + d410 * b1 * d36 * d5) - d410 * b5 * d1 * d36) - d401 * d3 * d36) + d399 * b3 * d2 * d36) + d411 * b0 * d3 * d71) + d418 * b2 * d2 * d36) - d411 * b3 * d0 * d71) - d344 * d28 * d5) - d423 * b1 * d1 * d36) + d346 * d0 * d28) + d438 * c3 * d71) - d412 * c5 * d28) - 32.0 * a0 * b1 * b5 * c1 * d36) + d433 * b3 * c2 * d36) - d365 * b0 * d1 * d36) + d376 * d0 * d36) + d439 * d36) - d413 * b5 * c1 * d36) - d431 * d26 * d2) + d441 * c0 * d36) + d442 * b0 * d2 * d36) - xb_mm_tmp * d0 * d36) - d443 * d36) + d405 * b3 * c2 * d36) + d445 * d26 * d1) - d544 * c0 * d36) + d446 * b2 * c2 * d36) - d925 * c0 * d71) - d577 * b1 * c1 * d36) + d455 * c0 * d28) + d469 * d22 * d5) - d456 * b0 * d36 * d5) + d470 * d3 * d36) - d479 * c5 * d36) + d471 * c3 * d36) + d412 * d40 * d5) - d466 * d26 * d1) + d467 * d26 * d2) - d480 * d26 * d1) - d357 * d24 * d5) + d474 * d24 * d4) - d448 * b1 * d38 * d5) + d448 * b5 * d1 * d38) + d449 * b1 * d38 * d4) - d359 * d24 * d5) - d449 * b4 * d1 * d38) + d361 * d24 * d5) - d376 * d38 * d3) + d475 * d24 * d4) + d365 * b3 * d1 * d38) - d458 * d24 * d1) + 24.0 * a1 * b0 * b1 * d26 * d5) - d402 * d26 * d1) - j_mm_tmp * d38) + d416 * b4 * c4 * d38) - d441 * c3 * d38) + d459 * d24) - d460 * d0) - d461 * d24) + d462 * d0) + d477 * d24) + 32.0 * a1 * b3 * b5 * c1 * d38) + d377 * d24 * d5) - d463 * d24 * d2) - d378 * d24 * d5) - d464 * d24 * d4) + d465 * d24 * d2) + d478 * d24 * d4) - d472 * d0 * d22) + d61 * d24 * d3) - d60 * d24 * d2) + d483 * d22) - wb_mm_tmp * d3) + d64 * d26 * d2) - d481 * d26 * d1) - jc_mm_tmp * c5 * d24) + yb_mm_tmp * d0) + 16.0 * a2 * b1 * b5 * c4 * d24) + ac_mm_tmp * d24) - d492 * d0) - bc_mm_tmp * d24) - d519 * d22) + d490 * c3 * d24) - cc_mm_tmp * d24) + d487 * b1 * d1 * d38) - d493 * d24 * d2) + d509 * d26 * d2) + d510 * b5 * c1 * d38) - d495 * d24) - d525 * d26 * d1) - d496 * d24) + d497 * d0) - 128.0 * a4 * b1 * b4 * c1 * d38) + d499 * d24) - d512 * d26 * d1) - d500 * d0) + d522 * d24) + d488 * b3 * c1 * d38) - d503 * d24) - d504 * d24) - d513 * d26) + d514 * d26) - d527 * d26) + d515 * d26) + d456 * b3 * d38 * d5) - d418 * b4 * d38 * d4) - d373 * d24 * d5) - d408 * b3 * d38 * d4) + d379 * d24 * d5) + d419 * d38 * d3) + d507 * d24 * d4) - d520 * d22 * d5) - d59 * d24 * d5) + d508 * d24 * d4) + d524 * d0 * d22) - d62 * d24 * d3) - 18.0 * a0 * b0 * b3 * d26 * d5) + d516 * d26 * d4) - d528 * d22) + d420 * d3) - 32.0 * a0 * b3 * b4 * c4 * d38) - d530 * d24) + dc_mm_tmp * d0) + ec_mm_tmp * d24) + d366 * b1 * d3 * d71) - d366 * b3 * d1 * d71) + ic_mm_tmp * c3 * d71) + 32.0 * a2 * a3 * b2 * d28 * d5) - d442 * b5 * d28 * d2) - d531 * b2 * d28 * d4) + d531 * b4 * d28 * d2) + d380 * d28 * d3) - d369 * b3 * d28 * d2) + d544 * c5 * d28) - 128.0 * a2 * b2 * b4 * c4 * d28) + d555 * d28) - d549 * b5 * c2 * d28) - d532 * b0 * d38 * d4) + d543 * d0 * d38) - d381 * d24 * d5) - d487 * b2 * d28 * d2) - d550 * d0 * d38) + d558 * c5 * d38) - d446 * b4 * c4 * d38) - d559 * d24) + d560 * d0) - d541 * b3 * c1 * d71) - d540 * b5 * c2 * d28) - d552 * c0 * d38) + d561 * d24 * d4) - d421 * b3 * c4 * d38) + d422 * c3 * d38) + d562 * d24) - d563 * d0) + d564 * d24) + 128.0 * a4 * b2 * b4 * c2 * d28) + d557 * d38) - 24.0 * a4 * b4 * b5 * c0 * d24) - d565 * d24) + d566 * d0) + d415 * d24) + d548 * d22) - d537 * c3 * d24) - d542 * b3 * c2 * d28) + 18.0 * a5 * b3 * b5 * c0 * d24) + d546 * d26) - d372 * b3 * d3 * d71) - d419 * d28 * d5) + d408 * b5 * d28 * d4) + d423 * b4 * d28 * d4) - d567 * d28 * d3) - d412 * d42 * d5) + 32.0 * a0 * b4 * b5 * c4 * d28) + d441 * d40 * d5) + xb_mm_tmp * d3 * d36) - h_mm_tmp * d2 * d36) + d544 * c3 * d36) - d490 * d43 * d5) + d583 * d0 * d28) - d533 * c3 * d71) - d571 * c2 * d36) + d568 * b0 * d28 * d4) - d587 * d0 * d28) - d422 * c5 * d28) + d421 * b5 * c4 * d28) - d586 * d28) + d577 * b4 * c4 * d28) - d584 * d28) + d569 * d0) - d578 * d40 * d1) + d489 * d43 * d2) + d581 * d28) + d348 * b3 * d36 * d5) - d382 * d3 * d36) - d374 * d3 * d36) - d425 * c3 * d36) - d425 * d40 * d5) + d357 * d22 * d5) + d359 * d22 * d5) - d574 * d2 * d22) - d361 * d22 * d5) - d582 * d2 * d22) + d458 * d1 * d22) - 24.0 * a1 * b1 * b3 * d26 * d5) + d414 * d26 * d4) - d459 * d22) + d460 * d3) + d461 * d22) - d462 * d3) + d570 * d26 * d1) - d576 * d22) - d377 * d22 * d5) - d463 * d2 * d22) + d378 * d22 * d5) - d464 * d22 * d4) + d465 * d2 * d22) - d60 * d2 * d22) + 16.0 * a2 * b1 * b4 * c5 * d22) - yb_mm_tmp * d3) - ac_mm_tmp * d22) + d492 * d3) - bc_mm_tmp * d22) + 24.0 * a2 * b2 * b5 * c3 * d22) - d554 * d20 * d5) + d588 * d26 * d1) - cc_mm_tmp * d22) - 8.0 * a3 * a5 * b0 * d3 * d36) - d493 * d2 * d22) + d612 * d0 * d36) + d594 * c5 * d36) - d426 * c3 * d36) - d426 * d40 * d5) + d595 * d26 * d1) - d494 * d26 * d2) + d608 * d26 * d1) - d495 * d22) + d590 * c0 * d36) - d602 * d2 * d22) + d496 * d22) - d497 * d3) - d597 * d26 * d1) - d603 * d22) + d609 * d26 * d1) + d499 * d22) - d427 * c3 * d36) - d427 * d40 * d5) + d537 * d43 * d5) + d500 * d3) + d501 * d26 * d1) - d605 * d22) + d503 * d22) - d504 * d22) + d542 * b5 * d20 * d2) + fc_mm_tmp * d0) - d598 * c5) - d599 * d26) + d600 * d26) + d611 * d26) + d373 * d22 * d5) - d379 * d22 * d5) + d507 * d22 * d4) + d59 * d22 * d5) + d508 * d22 * d4) - d424 * d26 * d4) + d530 * d22) - dc_mm_tmp * d3) + ec_mm_tmp * d22) - d441 * d42 * d5) + d532 * b3 * d38 * d4) - d613 * d24 * d5) - d543 * d38 * d3) + d381 * d22 * d5) + d614 * d24 * d5) + d612 * d38 * d3) + 6.0 * a3 * a5 * b5 * d0 * d22) - 12.0 * a3 * a5 * b5 * d24 * d3) + 18.0 * a3 * b0 * b3 * d26 * d5) - d417 * d26 * d4) + d559 * d22) - d560 * d3) + d1097 * b4 * c4 * d38) + d590 * c3 * d38) + d1151 * d24) - gc_mm_tmp * d0) + d561 * d22 * d4) - d70 * d0 * d22) + d927 * d24 * d3) - d535 * d26 * d4) - d562 * d22) + d563 * d3) + d564 * d22) - d556 * c3 * d38) - d975 * d24) + hc_mm_tmp * d0) - d617 * c0 * d22) + d932 * d24) + d565 * d22) - d566 * d3) + d415 * d22) - 18.0 * a5 * b0 * b5 * c3 * d22) + d455 * d20 * d5) + d578 * d42 * d1) + d618 * c0 * d22) - d1152 * d24) - d592 * d26) - kc_mm_tmp * d26) + d425 * d42 * d5) - d490 * d48 * d5) + d612 * d28 * d5) - d396 * d28 * d3)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d426 * d42 * d5 + d590 * c5 * d28) + d427 * d42 * d5) - d569 * d3) + d489 * d48 * d2) - d591 * c3 * d28) - d615 * d0) + d616 * c5) + d590 * d40 * d5) + d617 * d43 * d5) + d537 * d48 * d5) - d618 * d43 * d5) - fc_mm_tmp * d3) - d619 * d43 * d4) + d589 * b4 * d26 * d4) + gc_mm_tmp * d3) - hc_mm_tmp * d3) + d585 * d20 * d5) - d591 * d20 * d5) - 32.0 * a5 * b4 * b5 * d20 * d4) - d590 * d42 * d5) + d615 * d3) + d617 * d48 * d5) - d618 * d48 * d5) - d619 * d48 * d4) + d404 * b1 * d1 * d36) - d428 * d0 * d36) - d407 * d2 * d22) + d429 * d0 * d36) + d66 * d0 * d22) + d429 * d38 * d3) - d65 * d0 * d22) - d620 * d38) + d429 * d28 * d5) - d430 * d28 * d4) + d412 * d28 * d3) - d425 * d0 * d28) - d624 * c2 * d2) - d431 * d2 * d22) + d445 * d1 * d22) + d623 * d0) - d426 * d0 * d28) + d422 * d0 * d28) - d427 * d0 * d28) - d593 * c0 * d28) + d429 * d3 * d36) + d627 * d2 * d22) - d466 * d1 * d22) + d467 * d2 * d22) + d625 * d0) + d403 * d22 * d5) + d628 * d2 * d22) - d402 * d1 * d22) - ic_mm_tmp * d24 * d5) + d468 * d38 * d3) + d414 * d24 * d4) + d450 * d0 * d22) - d450 * d24 * d3) - d451 * d24 * d4) - d452 * d0 * d22) + d452 * d24 * d3) + d570 * d24 * d1) + d64 * d2 * d22) - d1075 * d24 * d4) - jc_mm_tmp * d0 * d22) + mm_tmp_tmp * d24 * d3) + d491 * d0 * d22) - d491 * d24 * d3) + d509 * d2 * d22) - d620 * d36) - d635 * d24 * d4) - d510 * b3 * d1 * d38) + d595 * d24 * d1) + d494 * d24 * d2) + d631 * d2 * d22) - d485 * d0 * d22) + d485 * d24 * d3) - d597 * d24 * d1) - d512 * d1 * d22) + d501 * d24 * d1) + d634 * d22) - d513 * d22) + d514 * d22) + d598 * d0) - d637 * d24) - d515 * d22) + d599 * d24) + d600 * d24) - d63 * d22 * d5) - d516 * d22 * d4) - d424 * d24 * d4) - d529 * d0 * d22) + d529 * d24 * d3) - d629 * c2 * d2) - d544 * d28 * d3) + 32.0 * a2 * d75 * c1 * c2 * d1) + d533 * d24 * d5) - d594 * d38 * d3) - d417 * d24 * d4) - d534 * d0 * d22) + d534 * d24 * d3) + d571 * d28 * d2) - d535 * d24 * d4) + d536 * d0 * d22) - d536 * d24 * d3) - d538 * d0 * d22) + d538 * d24 * d3) - d638 * b5 * d42 * d1) + 32.0 * b0 * b2 * b3 * d42 * d2) - d592 * d24) - d546 * d22) + kc_mm_tmp * d24) + d425 * d28 * d3) + d147 * c0 * c5 * d5) - d639 * c1 * c2 * d4) - 16.0 * a0 * d75 * c1 * c4 * d2) + lc_mm_tmp * c5 * d1) + d101 * c2 * c3 * d2) - d639 * c2 * c4 * d1) + d642 * c1 * d5) + d640 * c2 * d4) + d640 * c4 * d2) + d642 * c5 * d1) + d644 * d0) + d646 * d0) - d623 * d3) - d622 * c3 * d2) - d621 * d0) - d594 * d28 * d5) + d426 * d28 * d3) - d590 * d0 * d28) + d105 * c2 * d2) + d427 * d28 * d3) - d647 * d0) - d648 * c0 * c1 * d1) + d593 * c3 * d28) - d660 * c2 * c4) - d506 * d43 * d5) + d505 * d43 * d4) + 32.0 * b1 * b3 * b5 * d40 * d1) + d657 * c5) + d114 * c0 * c2 * c4) - d650 * d43 * d2) - 8.0 * b2 * d75 * c0 * c2 * c3) - d103 * c3 * d5) + d624 * c4 * d4) - d625 * d3) - d102 * d0) - d651 * d0) - d654 * d0) + d655 * d0) - 32.0 * b0 * b3 * b4 * d40 * d4) - d545 * d43 * d5) + d656 * d43 * d4) - d658 * c5) - 32.0 * b2 * b3 * b5 * d20 * d2) - d659 * c5 * d5) + nc_mm_tmp * c5 * d5) - d663 * c5 * d5) + 8.0 * a3 * b3 * b4 * d24 * d4) + d67 * d24 * d3) - d68 * d24 * d3) + oc_mm_tmp * c5 * d2) - 32.0 * a5 * d35 * c1 * c5 * d1) + 8.0 * a5 * d37 * c0 * c5 * d0) + 32.0 * b0 * b4 * b5 * d20 * d4) - 8.0 * a0 * (b2 * b2) * c3 * c5 * d5) - d643 * c3 * d5) + d629 * c4 * d4) - d644 * d3) - d645 * c3 * d4) - d646 * d3) - d89 * c3 * c4 * d2) - d641 * c5 * d1) - d678 * c5 * d5) + d621 * d3) - d669 * c5 * d5) + d665 * c2 * d4) + d665 * c4 * d2) - d679 * c5 * d1) - d104 * c2 * c3 * d2) + d664 * c2 * c4 * d1) - 32.0 * a4 * d75 * c1 * c4 * d1) - d674 * c5 * d5) + d675 * c5 * d2) + d149 * c3 * d5) + d647 * d3) + d148 * d0) + d648 * c1 * c3 * d1) - d616 * d3) + d506 * d48 * d5) - d676 * d48 * d2) - d649 * c5) - d114 * c2 * c3 * c4) - d650 * d48 * d2) + d670 * c1 * c2 * c4) + d671 * c5) - d106 * c4 * d4) + d102 * d3) - d673 * c5 * d5) + d186 * c3 * d5) - d105 * c4 * d4) + d651 * d3) + d667 * d0) + d653 * c3 * d4) + d654 * d3) + d652 * d0) - d681 * c5 * d5) + d682 * c5 * d1) - d655 * d3) + d545 * d48 * d5) + d656 * d48 * d4) + d316 * c0 * c3 * c5) + 8.0 * b4 * d75 * c0 * c3 * c4) + sc_mm_tmp * c5 * d5) - tc_mm_tmp * c5 * d5) + uc_mm_tmp * c5 * d5) + d698 * c5 * d2) - d216 * c3 * d5) - d216 * c5 * d3) - d683 * d0) - d336 * c0 * c3 * c5) + d666 * c5 * d5) + d707 * c5 * d5) + d232 * c5 * d5) - d695 * c5 * d4) - d148 * d3) - d702 * c5 * d5) + d104 * c3 * c4 * d4) - d667 * d3) + d697 * c5 * d5) - d652 * d3) + d680 * c3 * c5 * d5) - d668 * c5 * d4) - vc_mm_tmp * c5 * d5) + d683 * d3) + d701 * c5 * d5) + d233 * c5 * d5) - d703 * c5 * d4) + lc_mm_tmp * d0 * d1) - d642 * d0 * d1) + d291 * c0 * c1 * d1) - d657 * d0) - d685 * d0 * d2) - d103 * d0 * d3) + d687 * d0 * d2) - d688 * c0 * c2 * d2) - d658 * d0) + d691 * d0) + d659 * d0 * d5) + d704 * c5 * d0) - d692 * d0 * d2) + d694 * d0 * d2) - 8.0 * a0 * (b2 * b2) * c0 * d3 * d5) - d147 * c3 * d0 * d5) + d706 * d0 * d4) - d151 * d0 * d3) - 16.0 * a0 * (b5 * b5) * c1 * d1 * d3) - 128.0 * a1 * d37 * c2 * d1 * d2) + 128.0 * a2 * d37 * c1 * d1 * d2) + d669 * d0 * d5) + d665 * d0 * d1) - d708 * c0 * d0 * d4) + 8.0 * a5 * d35 * c0 * d0 * d3) - mc_mm_tmp * c3 * d5) + pc_mm_tmp * c0 * c4 * d4) - mc_mm_tmp * c5 * d3) - d721 * c5 * d0) - d660 * c3 * d1) - 128.0 * b1 * d37 * c1 * c2 * d2) + 128.0 * b2 * d37 * c1 * c2 * d1) + d670 * c0 * c1 * d1) + d712 * d0 * d5) + d722 * c5 * d0) - d715 * d0) + d671 * d0) - d107 * c5 * d0 * d5) - d684 * c1 * d1 * d5) + d685 * d2 * d3) + 12.0 * a0 * d75 * c3 * d0 * d3) + d672 * c0 * d1 * d5) + d673 * d0 * d5) + d672 * c5 * d0 * d1) - d687 * d2 * d3) - d686 * c2 * d0 * d3) - d716 * d0 * d2) + d717 * d0 * d2) - 12.0 * a3 * d75 * c0 * d0 * d3) + d681 * d0 * d5) - d682 * d0 * d1) - d723 * c5 * d5) - d720 * c5 * d1) + d688 * c2 * c3 * d2) + 12.0 * b0 * d75 * c0 * c3 * d3) + d710 * c1 * d5) + d710 * c5 * d1) + d709 * c1 * c5 * d0) - d691 * d3) - d690 * c3 * d2) - d689 * d0) + d718 * c0 * c2 * d2) - 12.0 * b3 * d75 * c0 * c3 * d0) - d719 * c2 * d1 * d2) + d711 * b2 * c1 * d1 * d2) + d724 * c5 * d0) - 32.0 * d37 * b5 * c0 * c1 * d1) - 16.0 * a0 * d14 * d1 * d2 * d4) + d725 * c2 * d2 * d5) + d726 * d0 * d1 * d5) + d87 * d0 * d2 * d4) + d727 * c5 * d1 * d5) - nc_mm_tmp * d3 * d5) - d661 * c3 * d1 * d5) + 128.0 * a1 * d35 * c4 * d1 * d4) - d661 * c5 * d1 * d3) - 8.0 * a2 * d14 * d0 * d2 * d3) + d663 * d3 * d5) + d662 * c3 * d2 * d5) - 32.0 * a2 * d16 * c4 * d2 * d4) + d662 * c5 * d2 * d3) - d218 * c2 * d2 * d5) + d741 * c1 * d1 * d5) - d108 * d0 * d5) - d146 * c1 * d2 * d5) - d146 * c2 * d1 * d5) + 32.0 * a4 * d16 * c2 * d2 * d4) - d146 * c5 * d1 * d2) - 128.0 * a4 * d35 * c1 * d1 * d4) - d214 * c1 * d1 * d5) + d728 * c1 * d2 * d4) + d728 * c2 * d1 * d4) - oc_mm_tmp * d2 * d3) + d742 * d1 * d2) + 32.0 * a5 * (b2 * b2) * c1 * d1 * d3) - d734 * d0 * d2) + d152 * d0 * d3) + d744 * c5 * d2) - d730 * c3 * d5) + 128.0 * b1 * d35 * c1 * c4 * d4) - d730 * c5 * d3) - d729 * c5 * d1) - d287 * c0 * c5 * d0) + d735 * d0 * d5) - d736 * d0 * d5) + d292 * c1 * d1 * d5) - d731 * c1 * d2 * d4) - d731 * c2 * d1 * d4) + d692 * d2 * d3) - d731 * c4 * d1 * d2) + d732 * c0 * d1 * d5) + d123 * c0 * d2 * d4) + d737 * d0 * d5) + d738 * d0 * d4) + d739 * d0 * d2) + d740 * d0 * d1) - d694 * d2 * d3) - d693 * c2 * d0 * d3) - d745 * d0 * d2) + d746 * d0 * d2) - d747 * d0 * d1) + xc_mm_tmp * c5 * d5) + d749 * c2 * c3 * d5) - d750 * b2 * c2 * c4 * d4) + d321 * b2 * c2 * c5 * d3) + 8.0 * d16 * b2 * c3 * c5 * d2) - 8.0 * d16 * b3 * c2 * c5 * d2) - 16.0 * (b0 * b0) * b4 * c1 * c2 * d5) - d819 * c5 * d2) + d820 * c2 * c4 * d2) - d821 * c5 * d1) + x_mm_tmp * c2 * d4) + x_mm_tmp * c4 * d2) - d822 * c5 * d1) - d324 * c2 * c3 * d2) + d805 * c2 * c4 * d1) + d823 * c5 * d1) - 128.0 * d35 * b4 * c1 * c4 * d1) + d713 * b5 * c1 * c3 * d1) - d790 * c0 * c2 * d2) + d313 * c0 * c3 * d0) - 6.0 * a0 * d14 * d0 * d3 * d5) + 24.0 * a0 * d16 * c4 * d4 * d5) - 18.0 * a0 * d16 * c5 * d3 * d5) + d112 * d3 * d5) - d706 * d3 * d4) - 12.0 * a0 * d13 * c5 * d0 * d5) + d641 * d1 * d3) + d678 * d3 * d5) + d677 * c3 * d2 * d5) - 128.0 * a2 * d17 * c4 * d2 * d4) + d677 * c5 * d2 * d3) + d190 * c5 * d0 * d5) - 32.0 * a3 * d17 * c2 * d2 * d5) - d806 * d0 * d4) - d679 * d1 * d3) - d705 * c0 * d4 * d5) - d707 * d0 * d5) - d705 * c5 * d0 * d4) + 128.0 * a4 * d17 * c2 * d2 * d4)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((32.0 * a4 * (b2 * b2) * c0 * d3 * d4 + d754 * d0 * d4) + d708 * c4 * d0 * d3) + d674 * d3 * d5) + d232 * d0 * d5) - d695 * d0 * d4) + d234 * d0 * d3) - d675 * d2 * d3) - d188 * d0 * d3) + 12.0 * a5 * d13 * c0 * d0 * d5) - pc_mm_tmp * c3 * c4 * d4) + d262 * c3 * c5 * d3) - 12.0 * b0 * d13 * c0 * c5 * d5) + d649 * d3) - d296 * c1 * c3 * d1) - d712 * d3 * d5) - d755 * d0 * d5) + d756 * d0 * d4) - d280 * c5 * d0 * d3) - d757 * d0 * d5) - d758 * d0 * d4) + d759 * c0 * d0 * d3) + ad_mm_tmp * c5 * d5) - d752 * c4 * d5) - d752 * c5 * d4) - d760 * c5 * d0) + d753 * c3 * d5) - d324 * c0 * c4 * d4) + d753 * c5 * d3) + d761 * c5 * d0) + qc_mm_tmp * c3 * d5) - d762 * b2 * c2 * c4 * d4) + qc_mm_tmp * c5 * d3) + bd_mm_tmp * c5 * d2) - cd_mm_tmp * c5 * d2) + d762 * b4 * c2 * c4 * d2) - rc_mm_tmp * c2 * c3 * d2) - 32.0 * d35 * b3 * c0 * c4 * d4) + 32.0 * (b2 * b2) * b4 * c0 * c3 * d4) + d715 * d3) + d714 * d0) - d245 * c0 * c3 * d3) + 12.0 * d13 * b5 * c0 * c5 * d0) + 32.0 * a0 * d17 * c4 * d4 * d5) - d154 * d3 * d5) + d716 * d2 * d3) + d189 * d0 * d5) - d717 * d2 * d3) + d187 * d0 * d3) - d696 * c0 * d4 * d5) - d697 * d0 * d5) - d696 * c5 * d0 * d4) + d668 * d0 * d4) - d772 * c3 * c5 * d5) + d769 * c5 * d4) + d689 * d3) - d718 * c2 * c3 * d2) + 6.0 * b3 * (b5 * b5) * c0 * c3 * d3) - d770 * c5 * d2 * d5) + d325 * c2 * d2 * d5) + d771 * c5 * d1 * d5) - d763 * b5 * c1 * d1 * d5) - d767 * d0 * d5) + d768 * d0 * d5) + d167 * c0 * c5 * d5) - d765 * c4 * d5) - d765 * c5 * d4) - d764 * c4 * c5 * d0) + rc_mm_tmp * c0 * c4 * d4) - sc_mm_tmp * d3 * d5) - d726 * d1 * d3 * d5) - d87 * d2 * d3 * d4) - wc_mm_tmp * c5 * d1 * d5) + d180 * c1 * d4 * d5) + tc_mm_tmp * d3 * d5) + d766 * c3 * d2 * d5) + d180 * c4 * d1 * d5) - 32.0 * a2 * d13 * c4 * d2 * d4) + d180 * c5 * d1 * d4) + d766 * c5 * d2 * d3) + 16.0 * a3 * d14 * d1 * d2 * d4) - 24.0 * a3 * d13 * c2 * d2 * d5) + uc_mm_tmp * d3 * d5) + vc_mm_tmp * d0 * d5) + 8.0 * a3 * d37 * c5 * d0 * d3) + 32.0 * a4 * d13 * c2 * d2 * d4) + d150 * c1 * d1 * d5) - d733 * c1 * d2 * d4) - d734 * d1 * d4) + d698 * d2 * d3) - d733 * c4 * d1 * d2) - d217 * d0 * d3) - d699 * c5 * d3) - d786 * c5 * d5) + d773 * c4 * d5) + d773 * c5 * d4) + d775 * c3 * d5) - d784 * c2 * c4 * d4) + d775 * c5 * d3) + d787 * c5 * d2) + d788 * c5 * d1) + d776 * c3 * d5) + d776 * c5 * d3) + d327 * c3 * c5 * d0) - d780 * d0 * d5) - d789 * c5 * d2 * d5) + d783 * c2 * d2 * d5) + d301 * a5 * d0 * d3 * d5) - d735 * d3 * d5) - d781 * d0 * d5) + d736 * d3 * d5) + d782 * d0 * d5) + d307 * c5 * d0 * d3) - d737 * d3 * d5) - d738 * d3 * d4) - d732 * c3 * d1 * d5) - d123 * c3 * d2 * d4) + d719 * c4 * d1 * d4) - d739 * d2 * d3) - d740 * d1 * d3) + d745 * d2 * d3) - d295 * c1 * d1 * d5) + d778 * c1 * d2 * d4) + d778 * c2 * d1 * d4) - d746 * d2 * d3) + d778 * c4 * d1 * d2) - d711 * b4 * c1 * d1 * d4) + d747 * d1 * d3) + 32.0 * d13 * b4 * c2 * c4 * d2) - d791 * c2 * d4) - d791 * c4 * d2) + yc_mm_tmp * c5 * d1) + d309 * c2 * c3 * d2) - d790 * c2 * c4 * d1) - d335 * b5 * c0 * c3 * d3) + 8.0 * a0 * (b3 * b3) * c4 * d4 * d5) - d109 * c5 * d3 * d5) + 6.0 * a3 * d14 * d0 * d3 * d5) - d798 * c4 * d4 * d5) + 12.0 * a3 * d16 * c5 * d3 * d5) - d666 * d3 * d5) + d806 * d3 * d4) + 18.0 * a3 * d13 * c5 * d0 * d5) + 8.0 * a4 * d14 * d0 * d3 * d4) - d754 * d3 * d4) - d700 * c0 * d4 * d5) - d701 * d0 * d5) - d700 * c5 * d0 * d4) - 12.0 * a5 * d16 * c3 * d3 * d5) + d742 * d3 * d4) - d702 * d3 * d5) - d233 * d0 * d5) + d703 * d0 * d4) - d235 * d0 * d3) - d802 * c5 * d5) + d803 * c5 * d4) - d794 * d0 * d5) - d804 * c5 * d1 * d5) + d792 * b5 * c1 * d1 * d5) + d755 * d3 * d5) - d756 * d3 * d4) + d757 * d3 * d5) + d795 * d0 * d5) - d796 * d0 * d4) + d277 * c5 * d0 * d3) + d758 * d3 * d4) + d797 * d0 * d4) + d283 * c4 * d0 * d3) - d759 * c3 * d0 * d3) + d793 * b3 * c3 * c5 * d5) - d800 * c5 * d4) + d805 * c3 * c4 * d4) - d793 * b5 * c3 * c5 * d3) + d801 * c3 * c4 * d4) - d304 * c5 * d3) - d714 * d3) - d807 * c4 * d5) - d807 * c5 * d4) - d308 * c4 * c5 * d0) - d808 * c3 * d5) + d309 * c0 * c4 * d4) - d808 * c5 * d3) - d350 * c3 * c5 * d0) + d110 * c5 * d3 * d5) - 8.0 * a5 * d17 * c3 * d3 * d5) - ed_mm_tmp * c5 * d2 * d5) + 8.0 * d9 * b5 * c2 * d2 * d5) - d320 * a5 * d0 * d3 * d5) + d767 * d3 * d5) + d809 * d0 * d5) - d768 * d3 * d5) - d810 * d0 * d5) - d326 * c5 * d0 * d3) + d815 * c5 * d5) - d294 * c5 * d3) + d816 * c5 * d4 * d5) - d325 * c4 * d4 * d5) + d780 * d3 * d5) + d781 * d3 * d5) - d782 * d3 * d5) - d811 * d0 * d5) + d777 * c5 * d4 * d5) - d783 * c4 * d4 * d5) + d794 * d3 * d5) - d795 * d3 * d5) + d796 * d3 * d4) - d797 * d3 * d4) - d809 * d3 * d5) + d810 * d3 * d5) + d817 * c5 * d4 * d5) - d311 * c4 * d4 * d5) + d811 * d3 * d5) + d720 * d0 * d1) - d710 * d0 * d1) - d812 * d0 * d2) - d704 * d0 * d3) + d774 * d0 * d2) + d721 * d0 * d3) + d813 * d0 * d5) - d722 * d0 * d3) + d107 * d0 * d3 * d5) + d723 * d3 * d5) + d814 * d0 * d5) - d769 * d0 * d4) + d293 * c5 * d0 * d3) - 32.0 * b1 * d13 * c2 * d1 * d2) + d784 * c1 * d1 * d2) - d818 * d0 * d5) + d765 * d0 * d4) - d724 * d0 * d3) + d725 * d1 * d2 * d4) - d727 * d1 * d3 * d5) + wc_mm_tmp * d0 * d1 * d5) - d180 * d0 * d1 * d4) - 8.0 * a2 * (b3 * b3) * d0 * d2 * d3) - d798 * d1 * d2 * d4) + d146 * d1 * d2 * d3) - d310 * c1 * d1 * d5) + d743 * c1 * d2 * d4) + d744 * d1 * d4) - d812 * d2 * d3) + d743 * c4 * d1 * d2) + d699 * d0 * d3) + d729 * d1 * d3) + d785 * c0 * d1 * d5) + d786 * d0 * d5) + d785 * c5 * d0 * d1) - d274 * c0 * d1 * d4) - d774 * d2 * d3) - d773 * d0 * d4) - d775 * d0 * d3) - d787 * d0 * d2) - d788 * d0 * d1) - d776 * d0 * d3) - d306 * d0 * d3 * d5) - xc_mm_tmp * d3 * d5) - d748 * c3 * d1 * d5) + d750 * b1 * c4 * d1 * d4) - d748 * c5 * d1 * d3) - d749 * c3 * d2 * d3) + d329 * c1 * d1 * d5) - d799 * c1 * d2 * d4) - d799 * c2 * d1 * d4) + d329 * c2 * d2 * d3) - d800 * d1 * d2) - d820 * c1 * d1 * d4) + d819 * d2 * d3) + d821 * d1 * d3) + d284 * c3 * d1 * d2) + d822 * d1 * d3) - d823 * d1 * d3) - yc_mm_tmp * d0 * d1) + d109 * d0 * d3 * d5) - d190 * d0 * d3 * d5) + d705 * d0 * d3 * d4) + d813 * d3 * d5) + d802 * d0 * d5) - d803 * d0 * d4) + d281 * c5 * d0 * d3) + d804 * d0 * d1 * d5) - d792 * b2 * d0 * d2 * d3) - ad_mm_tmp * d3 * d5) - d323 * c3 * d0 * d5) + dd_mm_tmp * d0 * d4) - 6.0 * d16 * b3 * c5 * d0 * d3) + 8.0 * d16 * b4 * c0 * d3 * d4) + d751 * d0 * d4) + d760 * d0 * d3) - d761 * d0 * d3) - bd_mm_tmp * d2 * d3) + cd_mm_tmp * d2 * d3) + d304 * d0 * d3) + d807 * d0 * d4) + d808 * d0 * d3) - d110 * d0 * d3 * d5) + d814 * d3 * d5) + d770 * d2 * d3 * d5) - d312 * d1 * d2 * d5) + d272 * b5 * d1 * d2 * d4) - d771 * d1 * d3 * d5) - d818 * d3 * d5) - d815 * d0 * d5) - d297 * c5 * d0 * d3) + d294 * d0 * d3) - d816 * d0 * d4 * d5) + d779 * d0 * d3 * d5) + d789 * d2 * d3 * d5) + d763 * b4 * d0 * d3 * d4) - d777 * d0 * d4 * d5) - 6.0 * (b0 * b0) * b3 * c3 * d3 * d5) + dd_mm_tmp * d3 * d4) - d751 * d3 * d4) + d331 * d1 * d4 * d5) + ed_mm_tmp * d2 * d3 * d5) - d330 * b5 * d1 * d2 * d4) + d328 * d0 * d3 * d5) - d817 * d0 * d4 * d5) - d351 * d0 * d3 * d5) - d825 * c5 * d2 * d5) + d829 * d0 * d5) + d470 * c2 * d2 * d5) - d824 * d0 * d2) - d827 * c5 * d5) + d828 * c5 * d2) - d830 * d0 * d5) + d832 * d0 * d2) + d833 * c5 * d5) - d519 * c5 * d0) - d834 * c2 * d2) + fd_mm_tmp * d0) - gd_mm_tmp * d0 * d5) + hd_mm_tmp * d0 * d5) - rd_mm_tmp * c5 * d5) + 12.0 * a5 * b0 * b5 * c0 * c5 * d0) - sd_mm_tmp * c5 * d2 * d5) + g_mm_tmp * c5 * d1 * d5) + d953 * c2 * d2 * d5) - d952 * c2 * d1 * d2) - d1059 * c2 * c5 * d5) + d1060 * c5 * d2) - y_mm_tmp * b2 * c1 * d1 * d5) + y_mm_tmp * b5 * c1 * d1 * d2) + d1061 * c5 * d5) - d1015 * c5 * d1) - d1062 * b5 * c1 * c2 * d2) + d1063 * b5 * c1 * c2 * d1) - d1005 * c5 * d1 * d5) + d341 * a5 * d1 * d4 * d5) - d829 * d3 * d5) + d1054 * c5 * d2 * d5) - d399 * b4 * c5 * d1 * d5) + d1010 * c1 * d4 * d5) + d1010 * c4 * d1 * d5) + d1010 * c5 * d1 * d4) + d1055 * c5 * d2 * d5) - ab_mm_tmp * c2 * d2 * d5) + d353 * a5 * d1 * d2 * d5) - d408 * b2 * c5 * d1 * d5) + d1064 * c1 * d2 * d5) + d1064 * c2 * d1 * d5) + d1064 * c5 * d1 * d2) - d1007 * c5 * d1 * d5) + d1011 * c1 * d4 * d5) + d1011 * c4 * d1 * d5) + d1011 * c5 * d1 * d4) - bb_mm_tmp * c2 * d2 * d5) + d1065 * c1 * d2 * d5) + d1065 * c2 * d1 * d5) + d1065 * c5 * d1 * d2)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d567 * c1 * d1 * d5 - d837 * c1 * d2 * d4) - d837 * c2 * d1 * d4) + d824 * d2 * d3) - d837 * c4 * d1 * d2) - d852 * c5 * d5) + d473 * c2 * c5 * d5) - d433 * b4 * c1 * c5 * d5) + d839 * c4 * d5) + d839 * c5 * d4) + d847 * c5 * d1) - d850 * c5 * d2) + d841 * c2 * d5) + d841 * c5 * d2) + d853 * c5 * d1) - d842 * d0 * d4 * d5) + d843 * d0 * d5) - d474 * c0 * d4 * d5) - d844 * d0 * d5) - d845 * d0 * d4) - d846 * d0 * d2 * d5) + d854 * d0 * d5) - d574 * c0 * d2 * d5) - d855 * d0 * d5) - d856 * d0 * d2) - d857 * c5 * d1 * d5) - d858 * d0 * d5) - d475 * c0 * d4 * d5) - id_mm_tmp * d0 * d5) - d475 * c5 * d0 * d4) - d582 * c0 * d2 * d5) - 16.0 * a1 * a5 * b4 * c2 * d0 * d5) - jd_mm_tmp * d0 * d2) + d859 * c0 * d1 * d5) + d384 * c0 * d2 * d4) + d859 * c1 * d0 * d5) + d384 * c2 * d0 * d4) + d865 * d0 * d2) + d866 * d0 * d1) - d883 * c5 * d5) - d879 * c5 * d5) + d880 * c5 * d5) - d860 * c4 * d5) - d860 * c5 * d4) - d869 * d0) - d861 * c2 * d5) - d861 * c5 * d2) - d870 * d0) + d885 * c5 * d2 * d5) - d871 * d0 * d5) - d453 * b0 * c5 * d1 * d5) + d872 * d0 * d5) + d862 * c1 * d4 * d5) + d862 * c4 * d1 * d5) + d862 * c5 * d1 * d4) - d478 * c0 * d4 * d5) - d873 * d0 * d5) - d874 * d0 * d4) + d830 * d3 * d5) + d875 * d0 * d5) + d472 * c5 * d0 * d3) - d832 * d2 * d3) - d831 * c2 * d0 * d3) - d876 * d0 * d2) - d482 * c5 * d5) + d886 * c5 * d5) - d405 * b4 * c1 * c5 * d5) + d864 * c4 * d5) + d864 * c5 * d4) + d881 * c5 * d1) + d882 * c5 * d5) - d888 * c4 * d5) - d888 * c5 * d4) - d890 * d0) - d891 * c5 * d5) + d519 * c3 * d5) + d518 * c0 * c5 * d3) + kd_mm_tmp * d0) - od_mm_tmp * c2 * d2 * d5) + ld_mm_tmp * d0 * d2) + o_mm_tmp * c5 * d5) - 16.0 * a3 * b0 * b5 * c2 * c5 * d2) + 16.0 * a4 * a5 * b0 * c1 * d2 * d5) + d892 * c2 * d1 * d5) + d892 * c5 * d1 * d2) - d602 * c0 * d2 * d5) - d907 * d0 * d5) - d908 * d0 * d2) - d421 * b2 * c1 * c5 * d5) + d894 * c2 * d5) + d894 * c5 * d2) + td_mm_tmp * c5 * d1) + d909 * c0 * c5 * d5) - d895 * c2 * d5) - d895 * c5 * d2) - d910 * d0) - d915 * c5 * d5) + d897 * c4 * d5) + d897 * c5 * d4) + d912 * c5 * d1) - d913 * c5 * d2) + d899 * c2 * d5) + d899 * c5 * d2) + d916 * c5 * d1) - d901 * c2 * d4) - d901 * c4 * d2) + d914 * c5 * d1) + d573 * c2 * c3 * d2) - d900 * c2 * c4 * d1) - d902 * c4 * d5) - d902 * c5 * d4) - md_mm_tmp * d0) - d903 * c2 * d5) - d903 * c5 * d2) - d605 * c5 * d0) + d906 * c1 * d5) + d904 * c2 * d4) + d904 * c4 * d2) + d906 * c5 * d1) + d905 * c1 * c5 * d0) + d917 * d0) - fd_mm_tmp * d3) - d918 * c3 * d2) - d836 * d0) + d581 * c2 * d2) + d919 * c1 * c4 * c5) + d920 * c1 * c2 * c5) - d505 * c0 * c4 * c5) - d676 * c0 * c2 * c5) + d411 * b5 * c5 * d0 * d5) + qd_mm_tmp * c5 * d4 * d5) - nd_mm_tmp * d0 * d5) - d470 * c4 * d4 * d5) + gd_mm_tmp * d3 * d5) + d486 * d0 * d5) - hd_mm_tmp * d3 * d5) - d950 * d0 * d5) + d951 * d0 * d4) - d524 * c5 * d0 * d3) + d940 * c5 * d5) + d941 * c5 * d5) - d942 * c5 * d4) + d944 * c5 * d5) + d922 * d0 * d5) - d924 * d0 * d5) + d945 * c5 * d5) + d928 * d0 * d5) - d930 * d0 * d4) - d946 * c5 * d5) + d934 * d0) + d947 * c5 * d5) - d548 * c3 * d5) + d834 * c4 * d4) - d548 * c5 * d3) - pd_mm_tmp * d0) - d936 * c5 * d0) - d938 * c0 * c4 * d0) + d842 * d3 * d4 * d5) - d843 * d3 * d5) + d474 * c3 * d4 * d5) + d844 * d3 * d5) + d845 * d3 * d4) + d948 * c5 * d1 * d5) + d846 * d2 * d3 * d5) + d949 * c5 * d4 * d5) - d854 * d3 * d5) - d921 * c5 * d1 * d5) + d855 * d3 * d5) + d574 * c3 * d2 * d5) + d856 * d2 * d3) - d953 * c4 * d4 * d5) + d858 * d3 * d5) + d475 * c3 * d4 * d5) + id_mm_tmp * d3 * d5) + 16.0 * a1 * a5 * b2 * c5 * d3 * d4) + d457 * c5 * d1 * d5) + d582 * c2 * d3 * d5) + d582 * c3 * d2 * d5) + jd_mm_tmp * d2 * d3) - 16.0 * a1 * a5 * b5 * c1 * d3 * d5) - 32.0 * a1 * a5 * b5 * c2 * d3 * d4) - 16.0 * a1 * a5 * b5 * c3 * d1 * d5) - d384 * c3 * d2 * d4) + d952 * c4 * d1 * d4) - d865 * d2 * d3) - d866 * d1 * d3) + d957 * c4 * c5 * d5) + d434 * c5 * d5) - d956 * c4 * c5 * d4) - c_mm_tmp * c5 * d5) + d476 * c4 * d5) + d476 * c5 * d4) + d869 * d3) + d961 * c5 * d5) + d576 * c3 * d5) + d870 * d3) + d575 * c5 * d2) - d368 * a5 * d1 * d4 * d5) + d871 * d3 * d5) - d960 * c5 * d2 * d5) + d442 * b4 * c5 * d1 * d5) - d955 * c1 * d4 * d5) - d955 * c4 * d1 * d5) - d955 * c5 * d1 * d4) - d872 * d3 * d5) + d453 * b3 * c5 * d1 * d5) + d478 * c3 * d4 * d5) + d873 * d3 * d5) + d874 * d3 * d4) - d875 * d3 * d5) - d454 * c1 * d4 * d5) - d454 * c4 * d1 * d5) - d454 * c5 * d1 * d4) + d876 * d2 * d3) - d877 * c5 * d5) + d887 * c4 * d5) + d887 * c5 * d4) + d890 * d3) + d517 * c5 * d5) - kd_mm_tmp * d3) + d549 * b4 * c1 * c5 * d5) - d963 * c4 * d5) - d963 * c5 * d4) - d964 * c5 * d1) - d383 * a5 * d1 * d2 * d5) + d532 * b2 * c5 * d1 * d5) - d965 * c1 * d2 * d5) - d965 * c2 * d1 * d5) - d965 * c5 * d1 * d2) + 16.0 * a3 * a5 * b1 * c5 * d1 * d5) - 16.0 * a3 * a5 * b2 * c1 * d4 * d5) - d966 * c4 * d1 * d5) - d966 * c5 * d1 * d4) + d550 * c2 * d2 * d5) - d967 * c1 * d2 * d5) - d967 * c2 * d1 * d5) - d967 * c5 * d1 * d2) - d583 * c1 * d1 * d5) + d968 * c1 * d2 * d4) + d968 * c2 * d1 * d4) - ld_mm_tmp * d2 * d3) + d968 * c4 * d1 * d2) + d979 * c5 * d5) - d981 * c5 * d5) + d540 * b4 * c1 * c5 * d5) - d970 * c4 * d5) - d970 * c5 * d4) - d980 * c5 * d1) + d982 * c5 * d2) - d973 * c2 * d5) - d973 * c5 * d2) - d972 * c2 * c5 * d1) + d907 * d3 * d5) + d602 * c3 * d2 * d5) + d908 * d2 * d3) - d601 * c1 * d2 * d5) - d601 * c2 * d1 * d5) - d601 * c5 * d1 * d2) + d974 * b4 * c1 * d1 * d5) - d974 * b5 * c1 * d1 * d4) - d909 * c3 * c5 * d5) - ud_mm_tmp * c1 * c5 * d5) + d603 * c3 * d5) + d910 * d3) + d484 * c5 * d2) + d498 * b3 * c1 * c5 * d5) - d977 * c2 * d5) - d977 * c5 * d2) - d983 * c5 * d1) + d984 * c5 * d1) + d521 * c4 * d5) + d521 * c5 * d4) + md_mm_tmp * d3) + d986 * c5 * d5) + d605 * c3 * d5) + d604 * c2 * c5 * d3) + wd_mm_tmp * c5 * d2) - d502 * b5 * c1 * c3 * d5) + 64.0 * a5 * b1 * b5 * c1 * c4 * d4) - 16.0 * a5 * b1 * b5 * c1 * c5 * d3) - 32.0 * a5 * b1 * b5 * c2 * c3 * d4) - d917 * d3) - d578 * c3 * c4 * d2) - d1144 * c5 * d1) - d1113 * c4 * d5) - d1113 * c5 * d4) - d1115 * c5 * d1) + d836 * d3) - d1145 * c2 * d5) - d1145 * c5 * d2) - d1146 * c5 * d1) + d1117 * c2 * d4) + d1117 * c4 * d2) - d1147 * c5 * d1) - d580 * c2 * c3 * d2) + d1116 * c2 * c4 * d1) - 64.0 * a5 * b4 * b5 * c1 * c4 * d1) + d1132 * c5) + d1133 * c5) - 16.0 * b2 * b3 * b5 * c1 * c4 * c5) - d1148 * c5) - d1057 * c5 * d4 * d5) + ab_mm_tmp * c4 * d4 * d5) - 12.0 * a0 * a3 * b5 * c5 * d3 * d5) - d1066 * c5 * d4 * d5) + nd_mm_tmp * d3 * d5) + bb_mm_tmp * c4 * d4 * d5) - d486 * d3 * d5) + d950 * d3 * d5) - d951 * d3 * d4) - d1140 * c5 * d5) - d943 * c5 * d5) + d849 * c5 * d4) - d1083 * c5 * d4 * d5) + d1012 * d0 * d5)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((od_mm_tmp * c4 * d4 * d5 - d922 * d3 * d5) - d987 * d0 * d5) + d924 * d3 * d5) + d988 * d0 * d5) - d989 * d0 * d4) + d923 * c5 * d0 * d3) - d997 * c5 * d5) - d926 * c5 * d5) + d999 * c5 * d4) - d991 * c0 * c5 * d5) - d928 * d3 * d5) - d992 * d0 * d5) - d927 * c5 * d0 * d3) + d930 * d3 * d4) + d993 * d0 * d4) + d929 * c4 * d0 * d3) - d998 * c5 * d5) + d931 * c5 * d5) + d1000 * c5 * d5) - d933 * c3 * d5) - d934 * d3) - d1001 * d0) - d547 * c5 * d5) + d911 * c5 * d4) - d584 * c4 * d4) + pd_mm_tmp * d3) + d936 * c3 * d5) - d581 * c4 * d4) + d935 * c0 * c5 * d3) + d1152 * c5 * d0) + d937 * b5 * c0 * c3 * d4) + 16.0 * a5 * b4 * b5 * c0 * c4 * d3) + 16.0 * a5 * b4 * b5 * c3 * c4 * d0) + d1008 * c5 * d4 * d5) - d1012 * d3 * d5) - d550 * c4 * d4 * d5) + d987 * d3 * d5) - d988 * d3 * d5) + d989 * d3 * d4) + d_mm_tmp * c5 * d5) + d991 * c3 * c5 * d5) - d552 * c4 * c5 * d4) + d992 * d3 * d5) - d993 * d3 * d4) - d1009 * c5 * d5) + d1001 * d3) + d580 * c3 * c4 * d4) - 12.0 * a5 * b3 * b5 * c3 * c5 * d3) - d938 * c3 * c4 * d3) + d1004 * d0 * d2 * d5) - d1005 * d0 * d2 * d4) + d825 * d2 * d3 * d5) - d469 * d0 * d3 * d5) + d352 * d0 * d1 * d5) - d1010 * d0 * d1 * d4) - d436 * d1 * d2 * d5) + d1006 * d0 * d2 * d5) + d354 * d0 * d1 * d5) + d423 * b0 * d1 * d2 * d4) - d1007 * d0 * d2 * d4) - d1011 * d0 * d1 * d4) + d447 * c5 * d1 * d5) + d827 * d3 * d5) + d826 * c3 * d2 * d5) - d1003 * b2 * c4 * d2 * d4) + d826 * c5 * d2 * d3) - d479 * c2 * d2 * d5) - d430 * c1 * d2 * d5) - d430 * c2 * d1 * d5) + d1003 * b4 * c2 * d2 * d4) - d430 * c5 * d1 * d2) - d471 * c1 * d1 * d5) + d1013 * c1 * d2 * d4) + d1013 * c2 * d1 * d4) - d828 * d2 * d3) + d1014 * d1 * d2) + d627 * c0 * d2 * d5) + l_mm_tmp * d0 * d5) + k_mm_tmp * d0 * d2) - d851 * c0 * d2 * d4) - 16.0 * a0 * b1 * b5 * c2 * d0 * d4) - m_mm_tmp * d0 * d2) + 16.0 * a0 * b2 * b4 * c0 * d1 * d5) + d1016 * d0 * d5) + d1017 * d0 * d1) - d838 * c0 * d1 * d4) - d839 * d0 * d4) - d847 * d0 * d1) + d850 * d0 * d2) + d358 * d0 * d2 * d5) - d857 * d0 * d2 * d4) - d437 * c5 * d0 * d5) + d628 * c0 * d2 * d5) + d1018 * d0 * d5) + d1019 * d0 * d2) - d878 * c0 * d2 * d4) - d1020 * d0 * d4) - d1021 * d0 * d2) + d879 * d0 * d5) - d880 * d0 * d5) + d867 * b5 * c0 * d0 * d4) + d363 * d0 * d1 * d5) - d862 * d0 * d1 * d4) - d833 * d3 * d5) - d482 * d0 * d5) + d1028 * d0 * d4) - d483 * d0 * d3) + d481 * c0 * d1 * d5) + d1022 * d0 * d5) + d1023 * d0 * d1) - d863 * c0 * d1 * d4) - d864 * d0 * d4) - d881 * d0 * d1) - d882 * d0 * d5) + d444 * b5 * c0 * d0 * d4) + d891 * d0 * d5) - d1025 * d0 * d4) + d519 * d0 * d3) - d1026 * d0 * d2) + d994 * c2 * d0 * d2) - d1029 * d0 * d2) + d631 * c0 * d2 * d5) + d1030 * d0 * d5) + d1031 * d0 * d2) + d525 * c0 * d1 * d5) + d1032 * d0 * d5) + d525 * c5 * d0 * d1) - d1034 * c2 * d0 * d2) - d596 * b2 * c0 * d0 * d5) + vd_mm_tmp * d0 * d2) - 16.0 * a5 * b0 * b1 * c0 * d2 * d4) - 16.0 * a5 * b0 * b1 * c2 * d0 * d4) - d1041 * d0 * d2) - d896 * c0 * d1 * d4) - d897 * d0 * d4) - d912 * d0 * d1) + d913 * d0 * d2) + d914 * d0 * d1) + d488 * b2 * c0 * d0 * d4) - d906 * d0 * d1) - d1042 * d0 * d2) + d1035 * c2 * d5) + d1035 * c5 * d2) + xd_mm_tmp * d0) - d1037 * c2 * d4) - d1037 * c4 * d2) - d1036 * c2 * c4 * d0) + d1038 * c1 * d5) + d1038 * c5 * d1) + d1043 * d0) - d1039 * c1 * d4) - d1039 * c4 * d1) - 16.0 * b0 * b2 * b5 * c1 * c4 * d0) + d1049 * c0 * c2 * d2) - b_mm_tmp * c5 * d0) + d1040 * b5 * c0 * c4 * d0) - d1046 * d0) - qd_mm_tmp * d0 * d4 * d5) + d520 * d0 * d3 * d5) + d438 * c5 * d0 * d5) - d939 * c0 * d4 * d5) - d940 * d0 * d5) - d939 * c5 * d0 * d4) + rd_mm_tmp * d3 * d5) + d941 * d0 * d5) - d942 * d0 * d4) + d528 * d0 * d3) - d944 * d0 * d5) + d1047 * d0 * d4) - d945 * d0 * d5) + d946 * d0 * d5) + d1050 * d0 * d4) - d947 * d0 * d5) + d1051 * d0 * d4) - d548 * d0 * d3) - d1052 * c0 * c5 * d0) + ae_mm_tmp * d0) + sd_mm_tmp * d2 * d3 * d5) - g_mm_tmp * d1 * d3 * d5) + 64.0 * a1 * b1 * b2 * c2 * d3 * d5) + 64.0 * a1 * b1 * b2 * c3 * d2 * d5) - i_mm_tmp * b2 * c4 * d2 * d4) + d1059 * c5 * d2 * d3) - d954 * b3 * c2 * d2 * d5) + i_mm_tmp * b4 * c2 * d2 * d4) - d1060 * d2 * d3) + 64.0 * a1 * b3 * b5 * c2 * d1 * d2) - d1061 * d3 * d5) - d1053 * c3 * d1 * d5) + 256.0 * a2 * b1 * b2 * c4 * d1 * d4) - d1053 * c5 * d1 * d3) + d1056 * c1 * d1 * d5) - 256.0 * a2 * b2 * b4 * c1 * d1 * d4) + d1015 * d1 * d3) - 64.0 * a2 * b3 * b5 * c1 * d1 * d2) + 64.0 * a3 * b1 * b5 * c2 * d1 * d2) - d1058 * b5 * c1 * d1 * d2) - 256.0 * a4 * b1 * b4 * c2 * d1 * d2) + 256.0 * a4 * b2 * b4 * c1 * d1 * d2) + d1062 * b3 * c2 * d1 * d2) - d1063 * b3 * c1 * d1 * d2) + 64.0 * b1 * b3 * b5 * c1 * c2 * d2) - 64.0 * b2 * b3 * b5 * c1 * c2 * d1) - d1004 * d2 * d3 * d5) + d1005 * d1 * d3 * d5) + d1005 * d2 * d3 * d4) - d1054 * d1 * d4 * d5) - d1054 * d2 * d3 * d5) + d352 * d1 * d3 * d5) - d1055 * d1 * d4 * d5) - d1055 * d2 * d3 * d5) + d1057 * d1 * d2 * d5) - d1006 * d2 * d3 * d5) + d354 * d1 * d3 * d5) + d1066 * d1 * d2 * d5) - d1064 * d1 * d2 * d3) + d1007 * d1 * d3 * d5) + d1007 * d2 * d3 * d4) - d1065 * d1 * d2 * d3) - l_mm_tmp * d3 * d5) - d627 * c3 * d2 * d5) - k_mm_tmp * d2 * d3) + d852 * d3 * d5) + d851 * c2 * d3 * d4) + n_mm_tmp * d1 * d5) + n_mm_tmp * d2 * d4) - 64.0 * a0 * b1 * b5 * c4 * d1 * d4) + m_mm_tmp * d2 * d3) + d851 * c5 * d1 * d3) - 16.0 * a0 * b2 * b3 * c1 * d4 * d5) - 16.0 * a0 * b2 * b3 * c2 * d3 * d5) - d473 * c3 * d2 * d5) - d473 * c4 * d1 * d5) + 64.0 * a0 * b2 * b3 * c4 * d2 * d4) - d1067 * d1 * d4) - d1067 * d2 * d3) + d1016 * d3 * d5) + d480 * c3 * d1 * d5) + d1017 * d1 * d3) + d848 * c1 * d2 * d5) + d848 * c2 * d1 * d5) - 64.0 * a0 * b3 * b4 * c2 * d2 * d4) + d1071 * d1 * d2) + 64.0 * a0 * b4 * b5 * c1 * d1 * d4) - d841 * d2 * d3) - d853 * d1 * d3) - d1072 * d1 * d2) + d355 * d0 * d4 * d5) - d474 * d0 * d3 * d4) + d1073 * d0 * d4 * d5) - d1068 * d1 * d5) - d1068 * d2 * d4) - d358 * d2 * d3 * d5) - d949 * d0 * d4 * d5) + d921 * d0 * d1 * d5) + d574 * d0 * d2 * d3) + d857 * d1 * d3 * d5) + d857 * d2 * d3 * d4) - d475 * d0 * d3 * d4) - d1069 * d1 * d5) - d1069 * d2 * d4) + d582 * d0 * d2 * d3) + d1070 * b1 * c4 * d4 * d5) - d439 * d3 * d5) - d1018 * d3 * d5) - d628 * c3 * d2 * d5) - d1019 * d2 * d3) + d883 * d3 * d5) + d1020 * d3 * d4) + d1074 * d1 * d5) + d1074 * d2 * d4) - d1070 * b5 * c4 * d1 * d4) + d1021 * d2 * d3) + d878 * c5 * d1 * d3) + j_mm_tmp * d0 * d5) - d957 * c0 * d4 * d5) - d954 * b4 * c4 * d0 * d5) - d957 * c5 * d0 * d4) + 64.0 * a1 * b1 * b5 * c4 * d0 * d4) + 16.0 * a1 * b2 * b3 * c0 * d4 * d5) + 16.0 * a1 * b2 * b3 * c4 * d0 * d5) + d1141 * d0 * d4) - d860 * d3 * d4) - d476 * d0 * d4) - d477 * d0 * d3) - cb_mm_tmp * d1 * d5) - cb_mm_tmp * d2 * d4) - d961 * d0 * d5) - 16.0 * a1 * b3 * b5 * c2 * d0 * d4) - d959 * c4 * d0 * d2) - d959 * c5 * d0 * d1) + d861 * d2 * d3) + d576 * d0 * d3) + d575 * d0 * d2) - d885 * d1 * d4 * d5) - d885 * d2 * d3 * d5) + d368 * b1 * d0 * d4 * d5) - d386 * d0 * d1 * d5) + db_mm_tmp * d1 * d4) + db_mm_tmp * d2 * d3) + d363 * d1 * d3 * d5) + eb_mm_tmp * b2 * d0 * d3 * d4) - d387 * d0 * d1 * d5) - eb_mm_tmp * b4 * d0 * d2 * d3) - d478 * d0 * d3 * d4) + fb_mm_tmp * d1 * d4) + fb_mm_tmp * d2 * d3) + d443 * d3 * d5) - d1028 * d3 * d4) - d884 * c1 * d4 * d5) - d886 * d3 * d5) - d884 * c3 * d2 * d5) - d884 * c4 * d1 * d5) + d1027 * b3 * c4 * d2 * d4) - gb_mm_tmp * d1 * d4) - gb_mm_tmp * d2 * d3)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d1022 * d3 * d5 + d481 * c3 * d1 * d5) + d1023 * d1 * d3) + d1075 * c0 * d4 * d5) + d1076 * d0 * d5) + d1077 * d0 * d4) - d888 * d3 * d4) - d887 * d0 * d4) - d889 * d0 * d3) - d1078 * d0 * d4) + d1025 * d3 * d4) + d1079 * d0 * d4) + d1024 * c4 * d0 * d3) - d555 * d0 * d3) - d588 * c0 * d1 * d5) - d1080 * d0 * d5) - d1081 * d0 * d1) + d1026 * d1 * d4) + d1026 * d2 * d3) + d963 * d0 * d4) + d962 * c2 * d0 * d3) + d1082 * d0 * d2) + d964 * d0 * d1) + d1083 * d1 * d2 * d5) - d385 * d0 * d1 * d5) - e_mm_tmp * d1 * d5) - e_mm_tmp * d2 * d4) + d966 * d0 * d1 * d4) + d539 * b2 * d0 * d2 * d3) - d1085 * c1 * d4 * d5) - o_mm_tmp * d3 * d5) - d1085 * c3 * d2 * d5) - d1085 * c4 * d1 * d5) + d1087 * b2 * c4 * d2 * d4) - d1086 * d1 * d4) - d1086 * d2 * d3) + d1100 * c2 * d2 * d5) + d995 * c1 * d2 * d5) + d995 * c2 * d1 * d5) - d1087 * b4 * c2 * d2 * d4) + d1089 * d1 * d2) + d635 * c0 * d4 * d5) + d1090 * d0 * d5) + d1091 * d0 * d4) - d1088 * d1 * d5) - d1088 * d2 * d4) - d979 * d0 * d5) - d1092 * d0 * d4) - d1093 * d0 * d2) - d978 * c5 * d0 * d1) - d608 * c0 * d1 * d5) - d1094 * d0 * d5) - d1095 * d0 * d1) + d1029 * d1 * d4) + d1029 * d2 * d3) + d970 * d0 * d4) + d969 * c2 * d0 * d3) + d1096 * d0 * d2) + d980 * d0 * d1) - d1099 * d0 * d2) - d892 * d1 * d2 * d3) + d602 * d0 * d2 * d3) - d1030 * d3 * d5) - d631 * c3 * d2 * d5) - d1031 * d2 * d3) + d1032 * d3 * d5) + d525 * c3 * d1 * d5) + 16.0 * a4 * b0 * b2 * c5 * d1 * d3) + d996 * c1 * d2 * d5) + d996 * c2 * d1 * d5) - d1033 * b3 * c2 * d2 * d4) + d1101 * d1 * d2) - d1034 * c1 * d1 * d5) + 64.0 * a4 * b0 * b4 * c2 * d2 * d3) + d1033 * b5 * c1 * d1 * d4) - d894 * d2 * d3) - td_mm_tmp * d1 * d3) - d511 * b5 * c3 * d1 * d2) + ud_mm_tmp * c0 * d1 * d5) + 64.0 * a4 * b1 * b4 * c1 * d0 * d5) + 64.0 * a4 * b1 * b4 * c5 * d0 * d1) + 16.0 * a4 * b1 * b5 * c0 * d2 * d3) + d603 * d0 * d3) + d484 * d0 * d2) - d609 * c0 * d1 * d5) - d1107 * d0 * d5) - d1108 * d0 * d1) - vd_mm_tmp * d2 * d3) - d1102 * c2 * d0 * d3) - d1109 * d0 * d2) + d1110 * d0 * d2) - d984 * d0 * d1) + d915 * d3 * d5) + d572 * c2 * d3 * d4) + d1103 * d1 * d5) + d1103 * d2 * d4) - d1104 * b1 * c4 * d1 * d4) + d1041 * d2 * d3) + d572 * c5 * d1 * d3) + d1104 * b4 * c1 * d1 * d4) - d899 * d2 * d3) - d916 * d1 * d3) - d1106 * d1 * d2) - d901 * d1 * d3) - d902 * d3 * d4) - d521 * d0 * d4) - d522 * d0 * d3) - d1105 * d1 * d5) - d1105 * d2 * d4) - d986 * d0 * d5) - d1111 * d0 * d4) - d1112 * d0 * d2) - d985 * c5 * d0 * d1) + d903 * d2 * d3) + d605 * d0 * d3) + wd_mm_tmp * d0 * d2) + d1042 * d1 * d4) + d1042 * d2 * d3) + d1113 * d0 * d4) + d835 * c2 * d0 * d3) + d1114 * d0 * d2) + d1115 * d0 * d1) + d1117 * d0 * d1) - d634 * c3 * d5) - xd_mm_tmp * d3) - d633 * c3 * c5 * d2) + d1036 * c1 * c3 * d5) - 64.0 * b0 * b1 * b5 * c1 * c4 * d4) + d632 * b5 * c1 * c5 * d3) + 16.0 * b0 * b1 * b5 * c2 * c3 * d4) + 16.0 * b0 * b1 * b5 * c2 * c4 * d3) + d1118 * c4 * d2) + d1118 * c5 * d1) - d1119 * c4 * d5) - d1119 * c5 * d4) - d1120 * c3 * d5) + 64.0 * b0 * b2 * b3 * c2 * c4 * d4) - d1120 * c5 * d3) - d1134 * c5 * d2) - d1131 * c5 * d1) + d527 * c3 * d5) + d1043 * d3) + d526 * c5 * d1) + d1121 * c2 * d5) + d1121 * c5 * d2) - 64.0 * b0 * b3 * b4 * c2 * c4 * d2) + d1135 * c5 * d1) - 16.0 * b0 * b4 * b5 * c1 * c2 * d3) - 16.0 * b0 * b4 * b5 * c1 * c3 * d2) + 64.0 * b0 * b4 * b5 * c1 * c4 * d1) - d920 * c2 * c3 * d1) + d1122 * c4 * d5) + d1122 * c5 * d4) + d1127 * d0) - 16.0 * b1 * b2 * b5 * c0 * c3 * d4) - 16.0 * b1 * b2 * b5 * c0 * c4 * d3) - d1132 * d0) - d1125 * c1 * d5) - d1125 * c2 * d4) - d1125 * c4 * d2) - d1125 * c5 * d1) - d1124 * c1 * c5 * d0) - d1129 * d0) + 16.0 * b1 * b4 * b5 * c0 * c2 * d3) + 16.0 * b1 * b4 * b5 * c0 * c3 * d2) + d1133 * d0) - d1126 * c1 * d5) - d1126 * c5 * d1) - d1130 * d0) + d1045 * c1 * d4) + d1046 * d3) + d1045 * c3 * d2) + d1045 * c4 * d1) + d607 * c1 * c4 * d0) + mm_tmp * d0) + d1057 * d0 * d4 * d5) + d1066 * d0 * d4 * d5) - d1064 * d0 * d3 * d4) - 16.0 * a0 * a5 * b4 * d0 * d3 * d4) - f_mm_tmp * c4 * d4 * d5) + yd_mm_tmp * b3 * c5 * d3 * d5) - yd_mm_tmp * b5 * c3 * d3 * d5) + d1014 * d3 * d4) + d848 * c0 * d4 * d5) + d1140 * d0 * d5) + d1071 * d0 * d4) - d1047 * d3 * d4) - d1072 * d0 * d4) - d840 * c4 * d0 * d3) + d1083 * d0 * d4 * d5) - 24.0 * a3 * b0 * b3 * c5 * d0 * d5) + d995 * c0 * d4 * d5) + d997 * d0 * d5) + d1089 * d0 * d4) + 24.0 * a3 * b3 * b5 * c0 * d0 * d5) - d892 * d0 * d3 * d4) + d996 * c0 * d4 * d5) + d998 * d0 * d5) + d1101 * d0 * d4) - d1050 * d3 * d4) - d1138 * d0 * d4) - d893 * c4 * d0 * d3) - d557 * d0 * d5) + d586 * d0 * d3) - d1051 * d3 * d4) - d1106 * d0 * d4) - d898 * c4 * d0 * d3) + 24.0 * a5 * b0 * b5 * c3 * d0 * d3) - 24.0 * a5 * b3 * b5 * c0 * d0 * d3) + d1136 * c4 * d5) + d1136 * c5 * d4) + d1044 * c4 * c5 * d0) - d1137 * c3 * d4) - ae_mm_tmp * d3) - d1139 * d0) - d355 * d3 * d4 * d5) - d1073 * d3 * d4 * d5) + d948 * d2 * d3 * d4) + d457 * d2 * d3 * d4) + d440 * c5 * d3 * d5) - d434 * d3 * d5) - d451 * c3 * d4 * d5) - d451 * c4 * d3 * d5) - d1141 * d3 * d4) + c_mm_tmp * d3 * d5) + d959 * c2 * d3 * d4) + d959 * c3 * d2 * d4) + d958 * b5 * c4 * d2 * d3) - 32.0 * a1 * b4 * b5 * c3 * d2 * d3) - 16.0 * a2 * a3 * b1 * d3 * d4 * d5) + h_mm_tmp * d1 * d4 * d5) + d960 * d2 * d3 * d5) - d386 * d1 * d3 * d5) - d387 * d1 * d3 * d5) - d1075 * c3 * d4 * d5) - d1076 * d3 * d5) - d1077 * d3 * d4) + d877 * d3 * d5) - d517 * d3 * d5) + d1078 * d3 * d4) - d1079 * d3 * d4) - d1080 * d3 * d5) - d588 * c3 * d1 * d5) - d1081 * d1 * d3) - d1082 * d2 * d3) - d385 * d1 * d3 * d5) + d965 * d1 * d2 * d3) + d1084 * d2 * d3 * d4) - d487 * b3 * d1 * d2 * d4) + d967 * d1 * d2 * d3) - d635 * c3 * d4 * d5) - d1090 * d3 * d5) - d1091 * d3 * d4) - d630 * c5 * d1 * d5) + d1092 * d3 * d4) + d978 * c3 * d2 * d4) + d1093 * d2 * d3) + d571 * c1 * d4 * d5) + d981 * d3 * d5) + d606 * c3 * d2 * d5) + d571 * c4 * d1 * d5) - d1058 * b3 * c4 * d2 * d4) + d571 * c5 * d1 * d4) + d606 * c5 * d2 * d3) - d1094 * d3 * d5) - d608 * c3 * d1 * d5) - d1095 * d1 * d3) - d1096 * d2 * d3) + 64.0 * a3 * b3 * b4 * c2 * d2 * d4) + d552 * c1 * d1 * d5) - d1098 * c1 * d2 * d4) - d1099 * d1 * d4) + d982 * d2 * d3) - d1098 * c4 * d1 * d2) + d973 * d2 * d3) + d971 * b5 * c2 * d1 * d3) + d972 * c3 * d1 * d2) + 16.0 * a4 * a5 * b3 * d1 * d2 * d3) + 32.0 * a4 * b1 * b2 * c3 * d3 * d5) - d596 * b5 * c3 * d2 * d3) - d1107 * d3 * d5) - d609 * c3 * d1 * d5) - d1108 * d1 * d3) + d1109 * d2 * d3) - d1110 * d2 * d3) + d977 * d2 * d3) + d983 * d1 * d3) + d976 * c3 * d1 * d2) + d1111 * d3 * d4) + d985 * c3 * d2 * d4) + d1112 * d2 * d3) - d488 * b4 * c3 * d2 * d3) + d1144 * d1 * d3) - d1114 * d2 * d3) + d1145 * d2 * d3) + d1146 * d1 * d3) + d579 * c3 * d1 * d2) - d1147 * d1 * d3) - d636 * c4 * d5) - d636 * c5 * d4) - d1127 * d3) + d1149 * c5 * d3) + d1128 * c3 * d4) + d1129 * d3) + d1124 * c3 * c4 * d2) - 32.0 * b1 * b4 * b5 * c2 * c3 * d3) - d611 * c3 * d5) - d1130 * d3) - d610 * c5 * d1) - mm_tmp * d3) + d1148 * d3) + d1143 * c3 * d2) + d1142 * c2 * c3 * d1) + d943 * d3 * d5) - d849 * d3 * d4) + d1072 * d3 * d4) - d1008 * d0 * d4 * d5) + d613 * d0 * d3 * d5) - d614 * d0 * d3 * d5) + d558 * c4 * d4 * d5) - d925 * c5 * d3 * d5) + d926 * d3 * d5) - d999 * d3 * d4) - d551 * c0 * d4 * d5) - d_mm_tmp * d0 * d5) - d551 * c5 * d0 * d4) - d990 * b5 * c0 * d3 * d5) - 12.0 * a3 * b3 * b5 * c3 * d0 * d5) + 16.0 * a3 * b3 * b5 * c4 * d0 * d4) - d1151 * d0 * d3) - d931 * d3 * d5) + d1138 * d3 * d4) + d1000 * d3 * d5) + d1009 * d0 * d5) + d975 * d0 * d3) - d932 * d0 * d3) + d547 * d3 * d5) - d911 * d3 * d4) + d1106 * d3 * d4) + d1152 * d0 * d3) - d1049 * c3 * c4 * d4) + d1155 * c5 * d3) + d1139 * d3) - d447 * d1 * d3 * d5) - f_mm_tmp * d1 * d2 * d4) + d430 * d1 * d2 * d3) + d626 * d0 * d2 * d4) - d627 * d0 * d2 * d3) + d473 * d0 * d1 * d4) - d480 * d0 * d1 * d3) + d437 * d0 * d3 * d5) + d432 * d0 * d2 * d4) - d628 * d0 * d2 * d3) + d884 * d0 * d1 * d4) - d481 * d0 * d1 * d3) + d553 * d0 * d2 * d4) + d1085 * d0 * d1 * d4) - d631 * d0 * d2 * d3) - d525 * d0 * d1 * d3) + d1150 * c0 * d2 * d4) + d1153 * d0 * d4) + d1154 * d0 * d2) - d1035 * d2 * d3) - d634 * d0 * d3) - 16.0 * b0 * b1 * b4 * c3 * d0 * d2) + d523 * c0 * d1 * d4) + d1119 * d0 * d4) + d1131 * d0 * d1) - d1038 * d1 * d3) - d527 * d0 * d3) - d526 * d0 * d1) - d1156 * d0 * d1) - d1040 * b3 * c0 * d0 * d4) + b_mm_tmp * d0 * d3) + d1123 * b5 * c0 * d0 * d1) - d438 * d0 * d3 * d5) + 16.0 * a0 * b0 * b4 * d0 * d3 * d4) - 16.0 * b0 * b3 * b4 * c0 * d0 * d4) + 12.0 * b0 * b3 * b5 * c0 * d0 * d3) - d626 * d2 * d3 * d4) - d848 * d1 * d2 * d3) - d432 * d2 * d3 * d4) - d440 * d0 * d3 * d5) + d451 * d0 * d3 * d4) + d1075 * d0 * d3 * d4) + d588 * d0 * d1 * d3) - d553 * d2 * d3 * d4) + d1100 * d1 * d2 * d4) - d995 * d1 * d2 * d3) + d635 * d0 * d3 * d4) + d630 * d0 * d1 * d5) - d571 * d0 * d1 * d4) - d606 * d0 * d2 * d3) + d608 * d0 * d1 * d3) - d996 * d1 * d2 * d3) + d609 * d0 * d1 * d3) - d1153 * d3 * d4) - d1150 * c3 * d2 * d4) - d1154 * d2 * d3) + d638 * b4 * c3 * d2 * d3) - d1118 * d1 * d3) + d1134 * d2 * d3) - d1121 * d2 * d3) - d1135 * d1 * d3) - d1044 * c3 * d1 * d2) + d1156 * d1 * d3) + d1122 * d3 * d4) + d636 * d0 * d4) + d637 * d0 * d3) - d1149 * d0 * d3) + d1126 * d1 * d3) + d611 * d0 * d3) + d610 * d0 * d1) + d925 * d0 * d3 * d5) - d1155 * d0 * d3);
}

//

double coeff4(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b2,
              double b3, double b4, double b5, double c0, double c1, double c2, double c3, double c4, double c5,
              double d0, double d1, double d2, double d3, double d4, double d5) {
    double ab_mm_tmp;
    double ac_mm_tmp;
    double ad_mm_tmp;
    double ae_mm_tmp;
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double b_mm_tmp_tmp;
    double bb_mm_tmp;
    double bc_mm_tmp;
    double bd_mm_tmp;
    double be_mm_tmp;
    double c_mm_tmp;
    double c_mm_tmp_tmp;
    double cb_mm_tmp;
    double cc_mm_tmp;
    double cd_mm_tmp;
    double ce_mm_tmp;
    double d;
    double d10;
    double d100;
    double d1000;
    double d1001;
    double d1002;
    double d1003;
    double d1004;
    double d1005;
    double d1006;
    double d1007;
    double d1008;
    double d1009;
    double d101;
    double d1010;
    double d1011;
    double d1012;
    double d1013;
    double d1014;
    double d1015;
    double d1016;
    double d1017;
    double d1018;
    double d1019;
    double d102;
    double d1020;
    double d1021;
    double d1022;
    double d1023;
    double d1024;
    double d1025;
    double d1026;
    double d1027;
    double d1028;
    double d1029;
    double d103;
    double d1030;
    double d1031;
    double d1032;
    double d1033;
    double d1034;
    double d1035;
    double d1036;
    double d1037;
    double d1038;
    double d1039;
    double d104;
    double d1040;
    double d1041;
    double d1042;
    double d1043;
    double d1044;
    double d1045;
    double d1046;
    double d1047;
    double d1048;
    double d1049;
    double d105;
    double d1050;
    double d1051;
    double d1052;
    double d1053;
    double d1054;
    double d1055;
    double d1056;
    double d1057;
    double d1058;
    double d1059;
    double d106;
    double d1060;
    double d1061;
    double d1062;
    double d1063;
    double d1064;
    double d1065;
    double d1066;
    double d1067;
    double d1068;
    double d1069;
    double d107;
    double d1070;
    double d1071;
    double d1072;
    double d1073;
    double d1074;
    double d1075;
    double d1076;
    double d1077;
    double d1078;
    double d1079;
    double d108;
    double d1080;
    double d1081;
    double d1082;
    double d1083;
    double d1084;
    double d1085;
    double d1086;
    double d1087;
    double d1088;
    double d1089;
    double d109;
    double d1090;
    double d1091;
    double d1092;
    double d1093;
    double d1094;
    double d1095;
    double d1096;
    double d1097;
    double d1098;
    double d1099;
    double d11;
    double d110;
    double d1100;
    double d1101;
    double d1102;
    double d1103;
    double d1104;
    double d1105;
    double d1106;
    double d1107;
    double d1108;
    double d1109;
    double d111;
    double d1110;
    double d1111;
    double d1112;
    double d1113;
    double d1114;
    double d1115;
    double d1116;
    double d1117;
    double d1118;
    double d1119;
    double d112;
    double d1120;
    double d1121;
    double d1122;
    double d1123;
    double d1124;
    double d1125;
    double d1126;
    double d1127;
    double d1128;
    double d1129;
    double d113;
    double d1130;
    double d1131;
    double d1132;
    double d1133;
    double d1134;
    double d1135;
    double d1136;
    double d1137;
    double d1138;
    double d1139;
    double d114;
    double d1140;
    double d1141;
    double d1142;
    double d1143;
    double d1144;
    double d1145;
    double d1146;
    double d1147;
    double d1148;
    double d1149;
    double d115;
    double d1150;
    double d1151;
    double d1152;
    double d1153;
    double d1154;
    double d1155;
    double d1156;
    double d1157;
    double d1158;
    double d1159;
    double d116;
    double d1160;
    double d1161;
    double d1162;
    double d1163;
    double d1164;
    double d1165;
    double d1166;
    double d1167;
    double d1168;
    double d1169;
    double d117;
    double d1170;
    double d1171;
    double d1172;
    double d1173;
    double d1174;
    double d1175;
    double d1176;
    double d1177;
    double d1178;
    double d1179;
    double d118;
    double d1180;
    double d1181;
    double d1182;
    double d1183;
    double d1184;
    double d1185;
    double d1186;
    double d1187;
    double d1188;
    double d1189;
    double d119;
    double d1190;
    double d1191;
    double d1192;
    double d1193;
    double d1194;
    double d1195;
    double d1196;
    double d1197;
    double d1198;
    double d1199;
    double d12;
    double d120;
    double d1200;
    double d1201;
    double d1202;
    double d1203;
    double d1204;
    double d1205;
    double d1206;
    double d1207;
    double d1208;
    double d1209;
    double d121;
    double d1210;
    double d1211;
    double d1212;
    double d1213;
    double d1214;
    double d1215;
    double d1216;
    double d1217;
    double d1218;
    double d1219;
    double d122;
    double d1220;
    double d1221;
    double d1222;
    double d1223;
    double d1224;
    double d1225;
    double d1226;
    double d1227;
    double d1228;
    double d1229;
    double d123;
    double d1230;
    double d1231;
    double d1232;
    double d1233;
    double d1234;
    double d1235;
    double d1236;
    double d1237;
    double d1238;
    double d1239;
    double d124;
    double d1240;
    double d1241;
    double d1242;
    double d1243;
    double d1244;
    double d1245;
    double d1246;
    double d1247;
    double d1248;
    double d1249;
    double d125;
    double d1250;
    double d1251;
    double d1252;
    double d1253;
    double d1254;
    double d1255;
    double d1256;
    double d1257;
    double d1258;
    double d1259;
    double d126;
    double d1260;
    double d1261;
    double d1262;
    double d1263;
    double d1264;
    double d1265;
    double d1266;
    double d1267;
    double d1268;
    double d1269;
    double d127;
    double d1270;
    double d1271;
    double d1272;
    double d1273;
    double d1274;
    double d1275;
    double d1276;
    double d1277;
    double d1278;
    double d1279;
    double d128;
    double d1280;
    double d1281;
    double d1282;
    double d1283;
    double d1284;
    double d1285;
    double d1286;
    double d1287;
    double d1288;
    double d1289;
    double d129;
    double d1290;
    double d1291;
    double d1292;
    double d1293;
    double d1294;
    double d1295;
    double d1296;
    double d1297;
    double d1298;
    double d1299;
    double d13;
    double d130;
    double d1300;
    double d1301;
    double d1302;
    double d1303;
    double d1304;
    double d1305;
    double d1306;
    double d1307;
    double d1308;
    double d1309;
    double d131;
    double d1310;
    double d1311;
    double d1312;
    double d1313;
    double d1314;
    double d1315;
    double d1316;
    double d1317;
    double d1318;
    double d1319;
    double d132;
    double d1320;
    double d1321;
    double d1322;
    double d1323;
    double d1324;
    double d1325;
    double d1326;
    double d1327;
    double d1328;
    double d1329;
    double d133;
    double d1330;
    double d1331;
    double d1332;
    double d1333;
    double d1334;
    double d1335;
    double d1336;
    double d1337;
    double d1338;
    double d1339;
    double d134;
    double d1340;
    double d1341;
    double d1342;
    double d1343;
    double d1344;
    double d1345;
    double d1346;
    double d1347;
    double d1348;
    double d1349;
    double d135;
    double d1350;
    double d1351;
    double d1352;
    double d1353;
    double d1354;
    double d1355;
    double d1356;
    double d1357;
    double d1358;
    double d1359;
    double d136;
    double d1360;
    double d1361;
    double d1362;
    double d1363;
    double d1364;
    double d1365;
    double d1366;
    double d1367;
    double d1368;
    double d1369;
    double d137;
    double d1370;
    double d1371;
    double d1372;
    double d1373;
    double d1374;
    double d1375;
    double d1376;
    double d1377;
    double d1378;
    double d1379;
    double d138;
    double d1380;
    double d1381;
    double d1382;
    double d1383;
    double d1384;
    double d1385;
    double d1386;
    double d1387;
    double d1388;
    double d1389;
    double d139;
    double d1390;
    double d1391;
    double d1392;
    double d1393;
    double d1394;
    double d1395;
    double d1396;
    double d1397;
    double d1398;
    double d1399;
    double d14;
    double d140;
    double d1400;
    double d1401;
    double d1402;
    double d1403;
    double d1404;
    double d1405;
    double d1406;
    double d1407;
    double d1408;
    double d1409;
    double d141;
    double d1410;
    double d1411;
    double d1412;
    double d1413;
    double d1414;
    double d1415;
    double d1416;
    double d1417;
    double d1418;
    double d1419;
    double d142;
    double d1420;
    double d1421;
    double d1422;
    double d1423;
    double d1424;
    double d1425;
    double d1426;
    double d1427;
    double d1428;
    double d143;
    double d144;
    double d145;
    double d146;
    double d147;
    double d148;
    double d149;
    double d15;
    double d150;
    double d151;
    double d152;
    double d153;
    double d154;
    double d155;
    double d156;
    double d157;
    double d158;
    double d159;
    double d16;
    double d160;
    double d161;
    double d162;
    double d163;
    double d164;
    double d165;
    double d166;
    double d167;
    double d168;
    double d169;
    double d17;
    double d170;
    double d171;
    double d172;
    double d173;
    double d174;
    double d175;
    double d176;
    double d177;
    double d178;
    double d179;
    double d18;
    double d180;
    double d181;
    double d182;
    double d183;
    double d184;
    double d185;
    double d186;
    double d187;
    double d188;
    double d189;
    double d19;
    double d190;
    double d191;
    double d192;
    double d193;
    double d194;
    double d195;
    double d196;
    double d197;
    double d198;
    double d199;
    double d20;
    double d200;
    double d201;
    double d202;
    double d203;
    double d204;
    double d205;
    double d206;
    double d207;
    double d208;
    double d209;
    double d21;
    double d210;
    double d211;
    double d212;
    double d213;
    double d214;
    double d215;
    double d216;
    double d217;
    double d218;
    double d219;
    double d22;
    double d220;
    double d221;
    double d222;
    double d223;
    double d224;
    double d225;
    double d226;
    double d227;
    double d228;
    double d229;
    double d23;
    double d230;
    double d231;
    double d232;
    double d233;
    double d234;
    double d235;
    double d236;
    double d237;
    double d238;
    double d239;
    double d24;
    double d240;
    double d241;
    double d242;
    double d243;
    double d244;
    double d245;
    double d246;
    double d247;
    double d248;
    double d249;
    double d25;
    double d250;
    double d251;
    double d252;
    double d253;
    double d254;
    double d255;
    double d256;
    double d257;
    double d258;
    double d259;
    double d26;
    double d260;
    double d261;
    double d262;
    double d263;
    double d264;
    double d265;
    double d266;
    double d267;
    double d268;
    double d269;
    double d27;
    double d270;
    double d271;
    double d272;
    double d273;
    double d274;
    double d275;
    double d276;
    double d277;
    double d278;
    double d279;
    double d28;
    double d280;
    double d281;
    double d282;
    double d283;
    double d284;
    double d285;
    double d286;
    double d287;
    double d288;
    double d289;
    double d29;
    double d290;
    double d291;
    double d292;
    double d293;
    double d294;
    double d295;
    double d296;
    double d297;
    double d298;
    double d299;
    double d30;
    double d300;
    double d301;
    double d302;
    double d303;
    double d304;
    double d305;
    double d306;
    double d307;
    double d308;
    double d309;
    double d31;
    double d310;
    double d311;
    double d312;
    double d313;
    double d314;
    double d315;
    double d316;
    double d317;
    double d318;
    double d319;
    double d32;
    double d320;
    double d321;
    double d322;
    double d323;
    double d324;
    double d325;
    double d326;
    double d327;
    double d328;
    double d329;
    double d33;
    double d330;
    double d331;
    double d332;
    double d333;
    double d334;
    double d335;
    double d336;
    double d337;
    double d338;
    double d339;
    double d34;
    double d340;
    double d341;
    double d342;
    double d343;
    double d344;
    double d345;
    double d346;
    double d347;
    double d348;
    double d349;
    double d35;
    double d350;
    double d351;
    double d352;
    double d353;
    double d354;
    double d355;
    double d356;
    double d357;
    double d358;
    double d359;
    double d36;
    double d360;
    double d361;
    double d362;
    double d363;
    double d364;
    double d365;
    double d366;
    double d367;
    double d368;
    double d369;
    double d37;
    double d370;
    double d371;
    double d372;
    double d373;
    double d374;
    double d375;
    double d376;
    double d377;
    double d378;
    double d379;
    double d38;
    double d380;
    double d381;
    double d382;
    double d383;
    double d384;
    double d385;
    double d386;
    double d387;
    double d388;
    double d389;
    double d39;
    double d390;
    double d391;
    double d392;
    double d393;
    double d394;
    double d395;
    double d396;
    double d397;
    double d398;
    double d399;
    double d40;
    double d400;
    double d401;
    double d402;
    double d403;
    double d404;
    double d405;
    double d406;
    double d407;
    double d408;
    double d409;
    double d41;
    double d410;
    double d411;
    double d412;
    double d413;
    double d414;
    double d415;
    double d416;
    double d417;
    double d418;
    double d419;
    double d42;
    double d420;
    double d421;
    double d422;
    double d423;
    double d424;
    double d425;
    double d426;
    double d427;
    double d428;
    double d429;
    double d43;
    double d430;
    double d431;
    double d432;
    double d433;
    double d434;
    double d435;
    double d436;
    double d437;
    double d438;
    double d439;
    double d44;
    double d440;
    double d441;
    double d442;
    double d443;
    double d444;
    double d445;
    double d446;
    double d447;
    double d448;
    double d449;
    double d45;
    double d450;
    double d451;
    double d452;
    double d453;
    double d454;
    double d455;
    double d456;
    double d457;
    double d458;
    double d459;
    double d46;
    double d460;
    double d461;
    double d462;
    double d463;
    double d464;
    double d465;
    double d466;
    double d467;
    double d468;
    double d469;
    double d47;
    double d470;
    double d471;
    double d472;
    double d473;
    double d474;
    double d475;
    double d476;
    double d477;
    double d478;
    double d479;
    double d48;
    double d480;
    double d481;
    double d482;
    double d483;
    double d484;
    double d485;
    double d486;
    double d487;
    double d488;
    double d489;
    double d49;
    double d490;
    double d491;
    double d492;
    double d493;
    double d494;
    double d495;
    double d496;
    double d497;
    double d498;
    double d499;
    double d50;
    double d500;
    double d501;
    double d502;
    double d503;
    double d504;
    double d505;
    double d506;
    double d507;
    double d508;
    double d509;
    double d51;
    double d510;
    double d511;
    double d512;
    double d513;
    double d514;
    double d515;
    double d516;
    double d517;
    double d518;
    double d519;
    double d52;
    double d520;
    double d521;
    double d522;
    double d523;
    double d524;
    double d525;
    double d526;
    double d527;
    double d528;
    double d529;
    double d53;
    double d530;
    double d531;
    double d532;
    double d533;
    double d534;
    double d535;
    double d536;
    double d537;
    double d538;
    double d539;
    double d54;
    double d540;
    double d541;
    double d542;
    double d543;
    double d544;
    double d545;
    double d546;
    double d547;
    double d548;
    double d549;
    double d55;
    double d550;
    double d551;
    double d552;
    double d553;
    double d554;
    double d555;
    double d556;
    double d557;
    double d558;
    double d559;
    double d56;
    double d560;
    double d561;
    double d562;
    double d563;
    double d564;
    double d565;
    double d566;
    double d567;
    double d568;
    double d569;
    double d57;
    double d570;
    double d571;
    double d572;
    double d573;
    double d574;
    double d575;
    double d576;
    double d577;
    double d578;
    double d579;
    double d58;
    double d580;
    double d581;
    double d582;
    double d583;
    double d584;
    double d585;
    double d586;
    double d587;
    double d588;
    double d589;
    double d59;
    double d590;
    double d591;
    double d592;
    double d593;
    double d594;
    double d595;
    double d596;
    double d597;
    double d598;
    double d599;
    double d6;
    double d60;
    double d600;
    double d601;
    double d602;
    double d603;
    double d604;
    double d605;
    double d606;
    double d607;
    double d608;
    double d609;
    double d61;
    double d610;
    double d611;
    double d612;
    double d613;
    double d614;
    double d615;
    double d616;
    double d617;
    double d618;
    double d619;
    double d62;
    double d620;
    double d621;
    double d622;
    double d623;
    double d624;
    double d625;
    double d626;
    double d627;
    double d628;
    double d629;
    double d63;
    double d630;
    double d631;
    double d632;
    double d633;
    double d634;
    double d635;
    double d636;
    double d637;
    double d638;
    double d639;
    double d64;
    double d640;
    double d641;
    double d642;
    double d643;
    double d644;
    double d645;
    double d646;
    double d647;
    double d648;
    double d649;
    double d65;
    double d650;
    double d651;
    double d652;
    double d653;
    double d654;
    double d655;
    double d656;
    double d657;
    double d658;
    double d659;
    double d66;
    double d660;
    double d661;
    double d662;
    double d663;
    double d664;
    double d665;
    double d666;
    double d667;
    double d668;
    double d669;
    double d67;
    double d670;
    double d671;
    double d672;
    double d673;
    double d674;
    double d675;
    double d676;
    double d677;
    double d678;
    double d679;
    double d68;
    double d680;
    double d681;
    double d682;
    double d683;
    double d684;
    double d685;
    double d686;
    double d687;
    double d688;
    double d689;
    double d69;
    double d690;
    double d691;
    double d692;
    double d693;
    double d694;
    double d695;
    double d696;
    double d697;
    double d698;
    double d699;
    double d7;
    double d70;
    double d700;
    double d701;
    double d702;
    double d703;
    double d704;
    double d705;
    double d706;
    double d707;
    double d708;
    double d709;
    double d71;
    double d710;
    double d711;
    double d712;
    double d713;
    double d714;
    double d715;
    double d716;
    double d717;
    double d718;
    double d719;
    double d72;
    double d720;
    double d721;
    double d722;
    double d723;
    double d724;
    double d725;
    double d726;
    double d727;
    double d728;
    double d729;
    double d73;
    double d730;
    double d731;
    double d732;
    double d733;
    double d734;
    double d735;
    double d736;
    double d737;
    double d738;
    double d739;
    double d74;
    double d740;
    double d741;
    double d742;
    double d743;
    double d744;
    double d745;
    double d746;
    double d747;
    double d748;
    double d749;
    double d75;
    double d750;
    double d751;
    double d752;
    double d753;
    double d754;
    double d755;
    double d756;
    double d757;
    double d758;
    double d759;
    double d76;
    double d760;
    double d761;
    double d762;
    double d763;
    double d764;
    double d765;
    double d766;
    double d767;
    double d768;
    double d769;
    double d77;
    double d770;
    double d771;
    double d772;
    double d773;
    double d774;
    double d775;
    double d776;
    double d777;
    double d778;
    double d779;
    double d78;
    double d780;
    double d781;
    double d782;
    double d783;
    double d784;
    double d785;
    double d786;
    double d787;
    double d788;
    double d789;
    double d79;
    double d790;
    double d791;
    double d792;
    double d793;
    double d794;
    double d795;
    double d796;
    double d797;
    double d798;
    double d799;
    double d8;
    double d80;
    double d800;
    double d801;
    double d802;
    double d803;
    double d804;
    double d805;
    double d806;
    double d807;
    double d808;
    double d809;
    double d81;
    double d810;
    double d811;
    double d812;
    double d813;
    double d814;
    double d815;
    double d816;
    double d817;
    double d818;
    double d819;
    double d82;
    double d820;
    double d821;
    double d822;
    double d823;
    double d824;
    double d825;
    double d826;
    double d827;
    double d828;
    double d829;
    double d83;
    double d830;
    double d831;
    double d832;
    double d833;
    double d834;
    double d835;
    double d836;
    double d837;
    double d838;
    double d839;
    double d84;
    double d840;
    double d841;
    double d842;
    double d843;
    double d844;
    double d845;
    double d846;
    double d847;
    double d848;
    double d849;
    double d85;
    double d850;
    double d851;
    double d852;
    double d853;
    double d854;
    double d855;
    double d856;
    double d857;
    double d858;
    double d859;
    double d86;
    double d860;
    double d861;
    double d862;
    double d863;
    double d864;
    double d865;
    double d866;
    double d867;
    double d868;
    double d869;
    double d87;
    double d870;
    double d871;
    double d872;
    double d873;
    double d874;
    double d875;
    double d876;
    double d877;
    double d878;
    double d879;
    double d88;
    double d880;
    double d881;
    double d882;
    double d883;
    double d884;
    double d885;
    double d886;
    double d887;
    double d888;
    double d889;
    double d89;
    double d890;
    double d891;
    double d892;
    double d893;
    double d894;
    double d895;
    double d896;
    double d897;
    double d898;
    double d899;
    double d9;
    double d90;
    double d900;
    double d901;
    double d902;
    double d903;
    double d904;
    double d905;
    double d906;
    double d907;
    double d908;
    double d909;
    double d91;
    double d910;
    double d911;
    double d912;
    double d913;
    double d914;
    double d915;
    double d916;
    double d917;
    double d918;
    double d919;
    double d92;
    double d920;
    double d921;
    double d922;
    double d923;
    double d924;
    double d925;
    double d926;
    double d927;
    double d928;
    double d929;
    double d93;
    double d930;
    double d931;
    double d932;
    double d933;
    double d934;
    double d935;
    double d936;
    double d937;
    double d938;
    double d939;
    double d94;
    double d940;
    double d941;
    double d942;
    double d943;
    double d944;
    double d945;
    double d946;
    double d947;
    double d948;
    double d949;
    double d95;
    double d950;
    double d951;
    double d952;
    double d953;
    double d954;
    double d955;
    double d956;
    double d957;
    double d958;
    double d959;
    double d96;
    double d960;
    double d961;
    double d962;
    double d963;
    double d964;
    double d965;
    double d966;
    double d967;
    double d968;
    double d969;
    double d97;
    double d970;
    double d971;
    double d972;
    double d973;
    double d974;
    double d975;
    double d976;
    double d977;
    double d978;
    double d979;
    double d98;
    double d980;
    double d981;
    double d982;
    double d983;
    double d984;
    double d985;
    double d986;
    double d987;
    double d988;
    double d989;
    double d99;
    double d990;
    double d991;
    double d992;
    double d993;
    double d994;
    double d995;
    double d996;
    double d997;
    double d998;
    double d999;
    double d_mm_tmp;
    double d_mm_tmp_tmp;
    double db_mm_tmp;
    double dc_mm_tmp;
    double dd_mm_tmp;
    double de_mm_tmp;
    double e_mm_tmp;
    double eb_mm_tmp;
    double ec_mm_tmp;
    double ed_mm_tmp;
    double ee_mm_tmp;
    double f_mm_tmp;
    double fb_mm_tmp;
    double fc_mm_tmp;
    double fd_mm_tmp;
    double fe_mm_tmp;
    double g_mm_tmp;
    double gb_mm_tmp;
    double gc_mm_tmp;
    double gd_mm_tmp;
    double ge_mm_tmp;
    double h_mm_tmp;
    double hb_mm_tmp;
    double hc_mm_tmp;
    double hd_mm_tmp;
    double he_mm_tmp;
    double i_mm_tmp;
    double ib_mm_tmp;
    double ic_mm_tmp;
    double id_mm_tmp;
    double ie_mm_tmp;
    double j_mm_tmp;
    double jb_mm_tmp;
    double jc_mm_tmp;
    double jd_mm_tmp;
    double je_mm_tmp;
    double k_mm_tmp;
    double kb_mm_tmp;
    double kc_mm_tmp;
    double kd_mm_tmp;
    double ke_mm_tmp;
    double l_mm_tmp;
    double lb_mm_tmp;
    double lc_mm_tmp;
    double ld_mm_tmp;
    double le_mm_tmp;
    double m_mm_tmp;
    double mb_mm_tmp;
    double mc_mm_tmp;
    double md_mm_tmp;
    double me_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    double n_mm_tmp;
    double nb_mm_tmp;
    double nc_mm_tmp;
    double nd_mm_tmp;
    double ne_mm_tmp;
    double o_mm_tmp;
    double ob_mm_tmp;
    double oc_mm_tmp;
    double od_mm_tmp;
    double oe_mm_tmp;
    double p_mm_tmp;
    double pb_mm_tmp;
    double pc_mm_tmp;
    double pd_mm_tmp;
    double pe_mm_tmp;
    double q_mm_tmp;
    double qb_mm_tmp;
    double qc_mm_tmp;
    double qd_mm_tmp;
    double qe_mm_tmp;
    double r_mm_tmp;
    double rb_mm_tmp;
    double rc_mm_tmp;
    double rd_mm_tmp;
    double re_mm_tmp;
    double s_mm_tmp;
    double sb_mm_tmp;
    double sc_mm_tmp;
    double sd_mm_tmp;
    double se_mm_tmp;
    double t_mm_tmp;
    double tb_mm_tmp;
    double tc_mm_tmp;
    double td_mm_tmp;
    double te_mm_tmp;
    double u_mm_tmp;
    double ub_mm_tmp;
    double uc_mm_tmp;
    double ud_mm_tmp;
    double ue_mm_tmp;
    double v_mm_tmp;
    double vb_mm_tmp;
    double vc_mm_tmp;
    double vd_mm_tmp;
    double ve_mm_tmp;
    double w_mm_tmp;
    double wb_mm_tmp;
    double wc_mm_tmp;
    double wd_mm_tmp;
    double we_mm_tmp;
    double x_mm_tmp;
    double xb_mm_tmp;
    double xc_mm_tmp;
    double xd_mm_tmp;
    double y_mm_tmp;
    double yb_mm_tmp;
    double yc_mm_tmp;
    double yd_mm_tmp;
    d = b0 * b0;
    b_d1 = 3.0 * a0 * d;
    b_d2 = std::pow(c5, 3.0);
    b_d3 = b1 * b1;
    b_d4 = 4.0 * a0 * b_d3;
    b_d5 = a5 * a5;
    d6 = 3.0 * a0 * b_d5;
    d7 = b3 * b3;
    d8 = std::pow(d0, 3.0);
    d9 = std::pow(d3, 3.0);
    d10 = b5 * b5;
    d11 = 3.0 * a5 * d10;
    d12 = a2 * a2;
    d13 = 4.0 * d12;
    d14 = 3.0 * a3 * d7;
    d15 = std::pow(c3, 3.0);
    d16 = std::pow(c0, 3.0);
    mm_tmp = std::pow(a5, 3.0);
    d17 = 3.0 * mm_tmp;
    d18 = d17 * c0;
    d19 = d0 * d0;
    d20 = c5 * c5;
    d21 = 4.0 * mm_tmp;
    d22 = d1 * d1;
    d23 = std::pow(b0, 3.0);
    d24 = std::pow(b3, 3.0);
    d17 *= c3;
    d25 = d3 * d3;
    d26 = d5 * d5;
    d27 = 3.0 * d24;
    d28 = d27 * c0;
    d29 = c2 * c2;
    d30 = 4.0 * d24 * d29;
    d31 = 3.0 * d23;
    d32 = d31 * c3;
    d33 = c4 * c4;
    d34 = 4.0 * d23 * d33;
    d35 = std::pow(a0, 3.0);
    d36 = 3.0 * d35;
    d37 = std::pow(a3, 3.0);
    d38 = 3.0 * d37;
    d39 = d2 * d2;
    d40 = b2 * b2;
    d41 = a4 * a4;
    d42 = d4 * d4;
    d43 = b4 * b4;
    d44 = c0 * c0;
    d45 = a0 * a0;
    d46 = 3.0 * d45;
    d47 = c3 * c3;
    d48 = d13 * a5;
    d49 = a3 * a3;
    d50 = 3.0 * d49;
    d51 = 4.0 * d41;
    d52 = d13 * b0;
    d53 = 3.0 * b0 * d10;
    d54 = 4.0 * a3 * b_d3;
    d55 = d46 * b5;
    d56 = d51 * b3;
    d57 = 4.0 * d43 * b5;
    d58 = d50 * b5;
    d59 = 4.0 * d40;
    d60 = 8.0 * a0 * a2;
    d61 = d60 * b2;
    d62 = 6.0 * a0 * a5;
    d63 = d62 * b0;
    d64 = 6.0 * a0 * b0;
    d65 = 8.0 * a1 * b0;
    d66 = 8.0 * a1 * b1;
    d67 = d65 * b1;
    d68 = d66 * b3;
    d69 = d64 * b3;
    d70 = 3.0 * b3 * d10;
    d71 = d59 * b5;
    d72 = 8.0 * a3 * a4;
    d73 = d72 * b4;
    d74 = 6.0 * a3 * a5;
    d75 = d74 * b3;
    d76 = 6.0 * a3 * b0;
    d77 = d76 * b3;
    d78 = 6.0 * mm_tmp;
    d79 = 4.0 * a0 * b_d5;
    d80 = d79 * c0;
    d81 = 4.0 * a0 * d10;
    d82 = d81 * c0;
    d83 = 4.0 * a0 * d12;
    d84 = 4.0 * a0 * d40;
    d85 = a1 * a1;
    d86 = c1 * c1;
    d87 = 16.0 * a1 * b_d5;
    d88 = d87 * c1;
    d89 = 16.0 * a1 * d10;
    d90 = d89 * c1;
    d91 = 4.0 * a0 * d41;
    d92 = 4.0 * a2 * b_d5 * c2;
    d93 = 4.0 * a2 * d10;
    d94 = 4.0 * a3 * b_d5;
    d95 = d94 * c0;
    d96 = 4.0 * a3 * d10;
    d97 = d96 * c0;
    d98 = 4.0 * d45;
    d99 = d6 * c5;
    d100 = 3.0 * a0 * d10;
    d101 = 4.0 * a3 * d40;
    d102 = 3.0 * a5 * d;
    d103 = d46 * a5;
    d104 = 16.0 * d85;
    d105 = d13 * a3;
    d106 = d84 * c0;
    d107 = d81 * d86;
    d108 = 16.0 * a1 * d43 * c1;
    d109 = 16.0 * a1 * d40 * c1;
    d110 = 4.0 * a2 * d * c2;
    d111 = d100 * d44;
    d112 = 16.0 * a2 * b_d3 * c2;
    d113 = d101 * c0;
    d114 = d102 * c0;
    d115 = 4.0 * a0 * d43;
    d116 = 4.0 * a5 * b_d3;
    d117 = 12.0 * a5 * d10;
    d118 = 4.0 * d85;
    d119 = d118 * a5;
    d120 = 9.0 * a5 * d10;
    d121 = 4.0 * a5 * d;
    d122 = d98 * a5;
    d123 = d122 * c5;
    d124 = 4.0 * a3 * d41;
    d125 = d94 * c3;
    d126 = 4.0 * a3 * d43;
    d127 = 16.0 * a5 * b_d3;
    d128 = 4.0 * a5 * d40;
    d129 = d104 * a5;
    d130 = d129 * c5;
    d131 = d48 * c5;
    d132 = 3.0 * a3 * b_d5;
    d133 = d132 * c5;
    d134 = 3.0 * a3 * d10;
    d135 = 4.0 * a4 * b_d5 * c4;
    d136 = 4.0 * a4 * d10;
    d137 = 3.0 * a5 * d7;
    d138 = d50 * a5;
    d139 = 16.0 * d12;
    d140 = 4.0 * a2 * d7 * c2;
    d141 = d101 * c3;
    d142 = 9.0 * d45;
    d143 = 16.0 * a4 * b_d3 * c4;
    d144 = d121 * d33;
    d145 = d121 * d29;
    d146 = d128 * d44;
    d147 = 16.0 * a5 * d40;
    d148 = d127 * d29;
    d149 = d147 * d86;
    d150 = 4.0 * a4 * d * c4;
    d151 = d96 * d86;
    d152 = 4.0 * a5 * d43;
    d153 = 12.0 * d85;
    d154 = 4.0 * d49;
    d155 = 4.0 * a5 * d7;
    d156 = d154 * a5;
    d157 = d156 * c5;
    d158 = 16.0 * a0 * d43;
    d159 = 16.0 * d41;
    d160 = 4.0 * a0 * d7;
    d161 = 16.0 * a0 * d12;
    d162 = 16.0 * a0 * d41;
    d163 = 16.0 * a0 * d40;
    d164 = d163 * d33;
    d165 = d158 * d29;
    d166 = 16.0 * b0 * d40;
    d167 = 16.0 * b0 * d43;
    d168 = 16.0 * a0 * b_d3;
    d169 = d126 * c3;
    d127 *= d33;
    d170 = 16.0 * a5 * d43;
    d171 = d170 * d86;
    d172 = d159 * a5;
    d173 = d152 * d47;
    d174 = d155 * d29;
    d175 = 4.0 * b0 * b_d3;
    d176 = d175 * c0;
    d177 = 4.0 * a4 * d7 * c4;
    d178 = d137 * c3;
    d179 = d134 * d47;
    d180 = d155 * d33;
    d181 = d118 * b0;
    d182 = d139 * b0;
    d183 = d159 * b0;
    d184 = 4.0 * b_d5;
    d185 = d184 * b0;
    d186 = 12.0 * a0 * d;
    d187 = 9.0 * a0 * d;
    d188 = 4.0 * a3 * d;
    d189 = 4.0 * d;
    d190 = 4.0 * a1 * b_d5;
    d191 = 4.0 * a1 * d10;
    d192 = 4.0 * b1 * d10;
    d193 = d52 * d20;
    d194 = 12.0 * a3 * d7;
    d195 = 4.0 * a1 * d;
    d196 = d189 * b1 * c1;
    d197 = 3.0 * a0 * d7;
    d198 = 3.0 * a3 * d;
    d199 = 6.0 * a0 * d10;
    d200 = 6.0 * a0 * b_d5;
    d201 = 16.0 * a2 * d7;
    d202 = 6.0 * a0 * d7;
    d203 = 16.0 * a2 * d41;
    d204 = 16.0 * a2 * d43;
    d205 = 6.0 * b0 * d7;
    d206 = d205 * c0;
    d207 = 64.0 * b1;
    d208 = 16.0 * a3 * d40;
    d209 = 64.0 * d41;
    d210 = 16.0 * a4 * d;
    d211 = d142 * b0;
    d212 = 3.0 * b_d5;
    d213 = d212 * b0;
    d214 = 6.0 * d49;
    d215 = 9.0 * b_d5;
    d216 = 16.0 * d;
    d217 = 3.0 * d;
    d218 = d217 * b3;
    d219 = d218 * c0;
    d220 = d46 * b3;
    d221 = 8.0 * a0 * d10;
    d222 = 8.0 * a0 * b_d5;
    d223 = 6.0 * b_d5;
    b_mm_tmp = d223 * b0;
    d224 = b_mm_tmp * c0;
    d225 = 8.0 * a0 * b_d3;
    d226 = 8.0 * a3 * b_d5;
    d227 = 16.0 * a3 * d43;
    d228 = 8.0 * a3 * d10;
    d229 = 16.0 * a3 * b_d3;
    d230 = 8.0 * a3 * b_d3;
    d231 = d214 * b0;
    d232 = 16.0 * b2 * d43;
    d233 = 64.0 * d12;
    d234 = d159 * b2 * c2;
    d235 = 16.0 * a3 * d41;
    d236 = d208 * d33;
    d237 = d227 * d29;
    d238 = 8.0 * d85;
    d239 = 64.0 * d85;
    d240 = d51 * b0;
    d241 = 8.0 * b_d5;
    d242 = d98 * b5;
    d243 = 4.0 * b0 * d43;
    d244 = 16.0 * b3 * d43;
    d245 = d139 * a3;
    d246 = d139 * b3;
    d247 = d240 * c5;
    d248 = d240 * d20;
    d249 = d159 * b3;
    d250 = d185 * d33;
    d251 = d184 * b2;
    d252 = 16.0 * d40;
    d253 = d252 * b3;
    d254 = 16.0 * b_d5;
    d255 = 12.0 * d45;
    d256 = d255 * b0;
    d257 = d98 * b2;
    d258 = d139 * b1;
    d259 = d189 * b5;
    d260 = d241 * b0;
    d261 = 8.0 * a0 * d40;
    d262 = 8.0 * a0 * d12;
    d263 = d254 * b1;
    d264 = d241 * b3;
    d265 = d264 * c0;
    d266 = d260 * c3;
    d267 = 8.0 * b_d3;
    d268 = d238 * b0;
    d269 = d249 * c0;
    d270 = d267 * b3;
    d271 = d270 * c0;
    d272 = d238 * b3;
    d273 = 64.0 * b_d3;
    d274 = 8.0 * a0 * d7;
    d275 = 4.0 * a1 * d7;
    d276 = 8.0 * d12;
    d277 = d13 * b3;
    d278 = 8.0 * d49;
    d13 *= b5;
    d279 = 16.0 * a4 * d40;
    d280 = d55 * d20;
    d281 = d104 * b5;
    d282 = d139 * a4;
    d283 = d277 * c5;
    d284 = d277 * d20;
    d285 = d139 * b4 * c4;
    d286 = 16.0 * b0 * b_d3 * d33;
    d287 = d167 * d86;
    d288 = 4.0 * b1 * d7 * c1;
    d289 = d104 * b0;
    d290 = d98 * b3;
    d291 = d104 * b2;
    d292 = 16.0 * d45;
    d293 = d292 * b4;
    d294 = 8.0 * a5 * d40;
    d295 = 8.0 * b0 * d40;
    d296 = d276 * b0;
    d297 = d276 * b5;
    d298 = d297 * c0;
    d299 = 8.0 * a5 * d7;
    d300 = d276 * a5;
    d301 = d278 * a5;
    d302 = 8.0 * b0 * d7;
    d303 = d296 * c5;
    d304 = d292 * a4;
    d305 = d289 * c5;
    d306 = d278 * b0;
    d307 = d278 * b5;
    d308 = d159 * b5;
    d309 = 8.0 * d45;
    d310 = 8.0 * d41;
    d311 = d184 * b3;
    d312 = d154 * b5;
    d313 = d56 * d20;
    d314 = d311 * d33;
    d315 = d51 * b5;
    d316 = 4.0 * b0 * d7;
    d317 = d154 * b0;
    d318 = d243 * d47;
    d319 = d154 * b2;
    d320 = d118 * b3;
    d321 = 8.0 * a5 * d43;
    d322 = d309 * a5;
    d323 = d309 * b5;
    d324 = d310 * a5;
    d325 = d310 * b5;
    d326 = 8.0 * b3 * d43;
    d327 = d310 * b3;
    d328 = d325 * c3;
    d329 = d309 * b3;
    d330 = 8.0 * d;
    d331 = d330 * b3;
    d332 = d330 * b5;
    d333 = 4.0 * b_d3;
    d334 = d333 * b3;
    d335 = d334 * c3;
    d336 = 4.0 * d7;
    d337 = d336 * b5;
    d338 = 6.0 * d45;
    d339 = 16.0 * d49;
    d340 = d215 * b5;
    d341 = 9.0 * d49;
    d342 = d58 * d20;
    d212 *= b3;
    d343 = d184 * b4;
    d344 = d340 * d47;
    d345 = 12.0 * d49;
    d346 = d345 * b3;
    d59 *= b3;
    d347 = d59 * d47;
    d348 = d98 * b4;
    d349 = 6.0 * a5 * d;
    d350 = 6.0 * d;
    d351 = d350 * b5;
    d352 = d338 * a5;
    d353 = d338 * b5;
    d354 = 16.0 * d7;
    d355 = 6.0 * a5 * d7;
    d356 = 6.0 * d7 * b5;
    d357 = d214 * a5;
    d214 *= b5;
    d358 = d353 * c5;
    d359 = d139 * b5;
    d360 = d214 * c5;
    d361 = d252 * b4;
    d362 = d104 * b4;
    d363 = d317 * d0;
    d364 = 3.0 * b0 * d7;
    d365 = d316 * d29;
    d333 *= b5;
    d366 = d333 * d47;
    d367 = d337 * d86;
    d368 = d341 * b3;
    d369 = d154 * b4;
    d370 = 12.0 * b_d5;
    d371 = d364 * c3;
    d372 = d370 * b5 * d86;
    d159 *= b1;
    d373 = d189 * b3;
    d374 = 16.0 * b_d3;
    d375 = d373 * d33;
    d376 = 16.0 * b2 * d7;
    d377 = d339 * b2;
    d378 = d373 * d29;
    d59 *= d44;
    d50 *= b0;
    d379 = d104 * b3;
    d380 = 16.0 * a1 * a2;
    d381 = d380 * a4;
    d382 = 8.0 * a0 * a3;
    d383 = 6.0 * a0 * a3;
    d384 = d383 * a5;
    d385 = d382 * a5;
    d386 = d385 * c5;
    d387 = 8.0 * a0 * a1;
    d388 = 32.0 * a0 * a2;
    d389 = 16.0 * a0 * a2;
    d390 = 8.0 * a1 * a3;
    d391 = d387 * b1;
    d392 = 16.0 * a2 * a3;
    d393 = d216 * b4;
    d394 = d389 * a4;
    d395 = d392 * a4;
    d396 = d259 * d86;
    d397 = d374 * b3 * d29;
    d333 *= d44;
    d398 = d253 * d86;
    d399 = d388 * b2;
    d400 = d383 * b0;
    d401 = d60 * b0;
    d402 = d61 * d20;
    c_mm_tmp = 8.0 * a0 * a5;
    d403 = c_mm_tmp * b0;
    d404 = 8.0 * a0 * b0;
    d405 = 8.0 * a2 * b0;
    d406 = 16.0 * a0 * a1;
    d407 = 32.0 * a0 * a4;
    d408 = 128.0 * a1 * a2;
    d409 = 32.0 * a0 * a1;
    d410 = 12.0 * a0 * a3;
    d411 = 32.0 * a1 * a2;
    d412 = 32.0 * a1 * a5;
    d413 = 32.0 * a2 * a3;
    d414 = c_mm_tmp * b5;
    d415 = d412 * b1;
    d416 = 8.0 * a3 * a5;
    d417 = 32.0 * a0 * a3;
    d418 = 16.0 * a0 * a3;
    d419 = d407 * b4;
    d420 = d63 * d20;
    d421 = d64 * b5;
    d422 = d413 * b2;
    d423 = 32.0 * a1 * b1;
    d424 = d416 * b0;
    d425 = d382 * b5;
    d426 = c_mm_tmp * b3;
    d427 = d409 * b1;
    d428 = d407 * b0;
    d429 = d411 * b1;
    d430 = d411 * b2;
    d431 = d423 * b2 * c2;
    d432 = 32.0 * a2 * b1;
    d433 = d432 * b2 * c1;
    d434 = d387 * b5;
    d435 = d60 * b3;
    d436 = d382 * b2;
    d437 = 16.0 * a0 * a4;
    d438 = 16.0 * a1 * a3;
    d_mm_tmp = d389 * b2;
    d439 = 32.0 * a0 * a5;
    d440 = d_mm_tmp * c5;
    d441 = d389 * b4;
    d442 = d418 * b0;
    d443 = d437 * b2;
    d444 = d399 * c3;
    d445 = d438 * b1;
    d446 = d410 * b3;
    d447 = d410 * b0;
    d448 = d427 * c5;
    d449 = 16.0 * a0 * a5;
    d450 = d449 * b0;
    d451 = c_mm_tmp * b1;
    d452 = d404 * b5;
    d453 = d380 * b4;
    d454 = 32.0 * a1 * a3;
    d455 = 16.0 * a1 * a4;
    d456 = d455 * b2;
    d457 = 128.0 * a1 * a4;
    d458 = 8.0 * a1 * a5;
    d459 = d458 * b1;
    d460 = 8.0 * a2 * a3;
    d461 = d460 * b2;
    d462 = 16.0 * a2 * a4;
    d463 = d462 * b1;
    d464 = 32.0 * a2 * a4;
    d465 = 16.0 * a2 * a5;
    d466 = 8.0 * a2 * a5;
    d467 = d456 * c5;
    d468 = d456 * d20;
    d469 = d459 * c5;
    d470 = d459 * d20;
    d471 = 16.0 * a1 * a5;
    d472 = d458 * b5 * c1;
    d66 *= b5;
    d473 = 16.0 * a1 * b2;
    d474 = d473 * b4;
    d475 = d460 * a5;
    d476 = d463 * d20;
    d477 = d464 * b2 * c4;
    d478 = d464 * b4 * c2;
    d479 = d466 * b3 * c2;
    d480 = 16.0 * a2 * b1;
    d481 = d480 * b4;
    d482 = 8.0 * a2 * b2;
    d483 = d482 * b3;
    d484 = d466 * b2;
    d485 = d454 * b1;
    d65 = d65 * b5 * c1;
    d486 = d66 * c0;
    d487 = d474 * c0;
    d488 = d460 * b0;
    d489 = d405 * b3 * c2;
    d490 = d481 * c0;
    d491 = d483 * c0;
    d492 = 16.0 * a2 * b0;
    d493 = d380 * b5;
    d494 = d493 * c4;
    d495 = d471 * b2;
    d496 = d495 * c4;
    d497 = d465 * b1;
    d498 = d497 * c4;
    d499 = d465 * b2;
    d500 = d499 * c0;
    d501 = d462 * b0;
    d502 = d492 * b4;
    d503 = d502 * c1;
    d504 = d485 * c5;
    d505 = d453 * c5;
    d506 = d453 * d20;
    d507 = 32.0 * a3 * a5;
    d508 = d416 * b2 * c2;
    d509 = 8.0 * a3 * b0;
    d510 = d509 * b2 * c2;
    d511 = 16.0 * a4 * b0;
    d512 = d511 * b2;
    d513 = d512 * c1;
    d514 = 16.0 * a4 * b1;
    d515 = d514 * b2;
    e_mm_tmp = 8.0 * a5 * b0;
    d516 = d383 * b5;
    d517 = 8.0 * a0 * a4;
    d518 = d517 * b4;
    d519 = d62 * b3;
    d520 = 12.0 * a0 * a5;
    d521 = 128.0 * a2 * a4;
    d522 = 32.0 * a2 * a5;
    d523 = 32.0 * a3 * a4;
    d524 = d74 * b0;
    d525 = d522 * b2;
    d526 = d516 * c5;
    d527 = d516 * d20;
    d528 = d517 * a5;
    d529 = d518 * c5;
    d530 = d518 * d20;
    d531 = d517 * b5 * c4;
    d532 = 6.0 * a0 * b3 * b5;
    d533 = d523 * b4;
    d534 = d524 * c5;
    d535 = d524 * d20;
    d76 *= b5;
    d536 = 8.0 * a4 * a5;
    d537 = d536 * b0 * c4;
    d62 *= b5;
    d538 = d390 * b1;
    d539 = d517 * b0;
    d540 = d404 * b4 * c4;
    d541 = d532 * c0;
    d542 = d76 * c0;
    d543 = 16.0 * a3 * a5;
    d544 = d543 * b3;
    d545 = d520 * b5;
    d546 = d520 * b0;
    d547 = d546 * c5;
    d548 = d545 * c0;
    d549 = d525 * c3;
    d550 = d533 * c0;
    d551 = d418 * b3;
    d552 = 8.0 * a4 * b0;
    d553 = d552 * b4;
    d554 = 6.0 * a5 * b0;
    d555 = d554 * b3;
    d383 *= b3;
    d556 = 32.0 * a1 * a4;
    d557 = d458 * b3;
    d558 = d423 * b4 * c4;
    d559 = d455 * b5;
    d560 = d559 * c2;
    d561 = d471 * b4;
    d562 = d561 * c2;
    d563 = d66 * c3;
    d564 = d474 * c3;
    d565 = 8.0 * a1 * b3 * b5 * c1;
    d566 = 16.0 * a3 * a4;
    d567 = d416 * b3;
    d568 = 16.0 * a4 * a5;
    d569 = e_mm_tmp * b5;
    d570 = d416 * b5;
    d571 = d509 * b5;
    d572 = e_mm_tmp * b3;
    d573 = 8.0 * a5 * b3 * b5;
    d554 *= b5;
    d574 = d481 * c3;
    d575 = d483 * c3;
    d416 *= b1;
    d576 = d571 * d29;
    d577 = 8.0 * a3 * b1;
    d578 = d577 * b5 * c1;
    d579 = 8.0 * a3 * b2;
    d580 = d579 * b3 * c2;
    d581 = 32.0 * a4 * b1;
    d582 = d382 * b4;
    d583 = 32.0 * a2 * b2;
    d584 = 8.0 * a5 * b1;
    d585 = d583 * b5 * d86;
    d586 = d554 * d44;
    d587 = 32.0 * a5 * b2;
    d588 = 16.0 * a2 * b3;
    d589 = 16.0 * a3 * b2;
    d590 = d568 * b1;
    d591 = d590 * c2;
    d462 *= b3;
    d592 = d588 * b4;
    d593 = d592 * c1;
    d594 = d566 * b2;
    d595 = d589 * b4;
    d596 = d595 * c1;
    f_mm_tmp = 16.0 * a4 * b2 * b3;
    d597 = f_mm_tmp * c1;
    d517 *= b3;
    d598 = 12.0 * a3 * a5;
    d599 = d73 * d20;
    d600 = d75 * d20;
    d601 = 6.0 * a3 * b3 * b5;
    d602 = 8.0 * a4 * b3 * b4;
    d603 = d570 * d33;
    d74 *= b5;
    d604 = d536 * b4;
    g_mm_tmp = 8.0 * a0 * b3;
    d605 = g_mm_tmp * b5;
    d606 = d532 * c3;
    d607 = d423 * b5;
    d608 = d607 * d33;
    d609 = d72 * b0;
    d610 = d509 * b4 * c4;
    d611 = d76 * c3;
    d612 = d555 * c3;
    d613 = d569 * d86;
    d482 *= b5;
    d614 = 32.0 * a5 * b1;
    d615 = d412 * b5;
    d616 = d614 * b5;
    d617 = d566 * b4;
    d618 = d598 * b3;
    d619 = d598 * b5;
    d620 = d619 * c3;
    d621 = d568 * b4;
    d622 = d621 * c3;
    d623 = d618 * c5;
    d466 *= b5;
    d624 = d616 * c1;
    d625 = d571 * d33;
    d626 = d572 * d33;
    d627 = 8.0 * a5 * b2;
    d628 = d627 * b5;
    d629 = 32.0 * a4 * a5;
    d630 = 8.0 * a3 * b3;
    d536 *= b5;
    d631 = 8.0 * a4 * b4 * b5;
    d632 = 6.0 * a5 * b3 * b5;
    d633 = 8.0 * a5 * b4 * b5;
    d634 = d382 * b0;
    d635 = 32.0 * a0 * b0;
    d636 = d404 * b3;
    d637 = 32.0 * a1 * b0;
    d638 = d637 * b1;
    d639 = d630 * b5;
    d72 *= b3;
    d630 = d630 * b4 * c4;
    d640 = d601 * c3;
    d641 = 32.0 * a4 * b4 * b5;
    d642 = d631 * d47;
    d643 = d632 * d47;
    d644 = d573 * d86;
    d645 = d404 * b1;
    d646 = d629 * b4;
    d647 = d639 * d33;
    d648 = d382 * b3;
    d649 = d648 * d0;
    d650 = d635 * b4;
    d651 = 32.0 * a4 * b0;
    d652 = d651 * b4;
    d653 = d406 * b4;
    d654 = d437 * b1;
    d655 = 16.0 * a0 * b1;
    d656 = d655 * b4;
    d657 = d656 * c2;
    d658 = d380 * b3;
    d659 = d452 * d33;
    d660 = d605 * d29;
    d661 = d438 * b2;
    d662 = d390 * b5;
    d663 = d455 * b0;
    d664 = 16.0 * a1 * b0;
    d509 *= b3;
    d423 *= b3;
    d665 = 128.0 * a1 * b1;
    d666 = 32.0 * a3 * b1;
    d667 = d664 * b1;
    d668 = d664 * b4;
    d669 = d668 * c2;
    d670 = 16.0 * a1 * b1;
    d671 = d473 * b3;
    d672 = d671 * c4;
    d673 = d392 * b1;
    d674 = d480 * b3;
    d675 = d674 * c4;
    d676 = 16.0 * a3 * b1;
    d677 = d676 * b2;
    d678 = d670 * b3;
    d679 = d677 * c4;
    d680 = d511 * b1;
    d681 = d680 * c2;
    d682 = d652 * d29;
    d683 = d583 * b3;
    d684 = 32.0 * a3 * b0;
    d685 = d683 * d33;
    d686 = 8.0 * b0 * b3;
    d687 = d686 * b5;
    d688 = 12.0 * a0 * b0;
    d689 = d688 * b3;
    d690 = 12.0 * a3 * b0;
    d691 = d413 * b3;
    d692 = d690 * b3;
    d693 = 32.0 * a0 * b1;
    d694 = 32.0 * a3 * b2;
    d695 = d694 * b3;
    d696 = 16.0 * a0 * b0;
    d697 = 16.0 * a0 * d10 * c1;
    d698 = 8.0 * a1 * d10;
    d699 = d473 * b5;
    d480 *= b5;
    d700 = 16.0 * a2 * b2;
    d701 = d700 * b5;
    d702 = d696 * b3;
    d703 = d696 * b5;
    d704 = d492 * b2;
    d607 *= d29;
    d705 = d482 * d44;
    d583 *= b4;
    d706 = 8.0 * a2 * b3 * b5;
    d579 *= b5;
    d707 = 32.0 * a4 * b2 * b4;
    d708 = 32.0 * b0 * b1;
    d709 = 16.0 * a5 * b1;
    d710 = d709 * b2;
    d711 = d584 * b5;
    d627 *= b3;
    d712 = 16.0 * b1 * b2;
    h_mm_tmp = d712 * b4;
    d713 = d552 * b5;
    d714 = 32.0 * a4 * b3 * b4;
    d715 = d714 * d29;
    d716 = e_mm_tmp * b4;
    d717 = 6.0 * b0 * b3 * b5;
    d718 = 8.0 * b0 * b4 * b5;
    d719 = d199 * c0 * c3;
    d577 *= b3;
    d720 = d717 * d44;
    d721 = 16.0 * a3 * b0;
    d722 = 12.0 * a5 * b0;
    d723 = d722 * b5;
    d724 = 16.0 * a3 * b3;
    d725 = d724 * b5;
    d726 = d721 * b3;
    d727 = 8.0 * a0 * b4 * b5;
    d728 = 32.0 * a5 * b0;
    d729 = 16.0 * a5 * b0;
    d717 *= d47;
    d730 = 6.0 * a3 * d10;
    d731 = d730 * c0 * c3;
    d732 = 16.0 * a4 * b3;
    d733 = 16.0 * a4 * b4 * b5;
    d734 = 12.0 * a5 * b3 * b5;
    d735 = 12.0 * a3 * b3 * b5;
    d736 = d732 * b4;
    d737 = d321 * c0 * c3;
    d738 = d261 * c0;
    d739 = 32.0 * a0 * d43;
    d740 = 32.0 * a1 * d43;
    d741 = d740 * c0;
    d742 = 32.0 * a2 * d43;
    d743 = d742 * c0;
    d744 = d743 * c2;
    d745 = d222 * c2;
    d746 = 8.0 * a2 * b_d5;
    d747 = d746 * c0;
    d748 = d241 * b2;
    d749 = d748 * c0;
    d750 = d749 * c2;
    d751 = d200 * c0;
    d752 = 32.0 * a0 * d40;
    d753 = d260 * c0;
    d754 = d224 * c5;
    d755 = 8.0 * a0 * d43;
    d756 = 8.0 * a3 * d40;
    d757 = 32.0 * a4 * d40;
    i_mm_tmp = 16.0 * b0 * b1;
    d758 = i_mm_tmp * b4;
    d759 = d712 * b3;
    d760 = 16.0 * a3 * d10;
    d761 = d294 * c0 * c3;
    d762 = h_mm_tmp * d47;
    d763 = d739 * c1;
    d764 = d755 * c0;
    d765 = d261 * c3;
    d766 = d756 * c0;
    d767 = d295 * c0 * c3;
    d768 = d225 * c0;
    d769 = 32.0 * a3 * d43;
    d770 = 32.0 * b_d5;
    d771 = 16.0 * a0 * b_d5;
    d772 = 8.0 * a1 * b_d5;
    d773 = 32.0 * a1 * d40;
    d774 = d773 * c1;
    d775 = 8.0 * a2 * d;
    d776 = d775 * c2;
    d777 = d210 * c1;
    d778 = 32.0 * a3 * d40;
    d779 = d262 * c5;
    d780 = d772 * c1;
    d781 = d87 * c2;
    d782 = d772 * c5;
    d783 = d746 * c3;
    d784 = d226 * c2;
    d785 = 16.0 * a0 * d7;
    d786 = d785 * c2;
    d787 = 8.0 * a1 * d;
    d788 = d787 * c1;
    d773 *= c3;
    d775 *= c3;
    d789 = 8.0 * a3 * d;
    d790 = d789 * c2;
    d791 = d778 * c1;
    d792 = 32.0 * a4 * d;
    d793 = d210 * c2;
    d794 = 32.0 * b1 * d43 * c0 * c1;
    d795 = 16.0 * a5 * d;
    d796 = d795 * c1;
    d797 = 8.0 * a5 * d;
    d798 = d797 * c1;
    d799 = 16.0 * a5 * d7;
    d800 = d254 * b0;
    d801 = d800 * c1;
    d802 = d263 * c0;
    d803 = d241 * b1;
    d804 = d803 * c0;
    d805 = 32.0 * a2 * b_d3;
    d806 = d805 * c2;
    d748 = d748 * c2 * c3;
    d807 = 24.0 * b_d5 * b5;
    d808 = d200 * c3;
    d809 = d222 * c4;
    d810 = 6.0 * a3 * b_d5;
    d811 = d810 * c0;
    d812 = d296 * c0;
    d813 = d330 * b2 * c2 * c3;
    d814 = d393 * c1;
    d815 = d814 * c2;
    d816 = 18.0 * a0 * d * c3;
    d817 = 24.0 * a0 * d * c4;
    d805 *= c3;
    d818 = 6.0 * a3 * d;
    d819 = d818 * c0;
    d820 = d698 * c1 * c3;
    d821 = d260 * c1;
    d822 = 8.0 * a4 * b_d5;
    d823 = d822 * c0;
    j_mm_tmp = 8.0 * a4 * d;
    d824 = j_mm_tmp * c0;
    d825 = d349 * c0;
    d826 = 32.0 * a4 * b_d3;
    d827 = d826 * c0;
    d828 = 32.0 * a5 * b_d3;
    d829 = 32.0 * d12;
    d830 = 32.0 * b_d3;
    k_mm_tmp = d223 * b3;
    d831 = d241 * b4;
    d832 = 18.0 * b_d5 * b5 * c0 * c3;
    d833 = 8.0 * a0 * d41 * c5;
    d834 = d324 * c0;
    d835 = d310 * b0;
    d836 = 32.0 * d40;
    d837 = d349 * c3;
    d838 = d330 * b4;
    d839 = d838 * c0;
    d840 = d839 * c4;
    d841 = d351 * c0 * c3;
    d842 = d830 * b2 * c2 * c3;
    d843 = 32.0 * a1 * d12;
    d844 = d309 * a2;
    d845 = d309 * b2;
    d846 = d323 * c2;
    d847 = d829 * b1;
    d848 = d847 * c1;
    d849 = d829 * b5 * c1;
    d850 = 32.0 * a0 * b_d3 * c4;
    d325 *= c0;
    d851 = d325 * c5;
    d755 *= c3;
    d852 = d201 * c1;
    d853 = 8.0 * a2 * d7;
    d854 = d853 * c2;
    d855 = 16.0 * a3 * b_d5;
    d856 = 8.0 * a3 * d43;
    d857 = d856 * c0;
    d858 = d799 * c1;
    d859 = 32.0 * d85;
    d860 = d352 * c5;
    d861 = d276 * a3 * c5;
    d862 = d300 * c3;
    d863 = d859 * a5;
    d864 = d859 * b5;
    d865 = 32.0 * a2 * d7;
    d866 = 8.0 * a1 * d7;
    d867 = d866 * c1;
    d868 = d853 * c3;
    d869 = d201 * c4;
    d870 = 24.0 * a3 * d7 * c2;
    d871 = d299 * c1;
    d872 = 8.0 * b2 * d7;
    d873 = d376 * c1 * c4;
    d874 = d872 * c2 * c3;
    d875 = d326 * c0 * c3;
    d876 = d353 * c0;
    d877 = d859 * a2;
    d878 = d859 * b2;
    d879 = d878 * c2;
    d296 *= c3;
    d276 *= b3;
    d880 = d276 * c0;
    d881 = d254 * b3;
    d882 = d881 * c1;
    d883 = 8.0 * a4 * d7;
    d884 = d883 * c0;
    d885 = d355 * c0;
    d886 = d810 * c3;
    d887 = d226 * c4;
    d888 = d822 * c3;
    d889 = d238 * a5 * c5;
    d890 = 16.0 * a3 * d;
    d891 = d890 * c4;
    d892 = d202 * c3;
    d893 = d274 * c4;
    d894 = 32.0 * a1 * d41;
    d895 = 18.0 * a3 * d7 * c0;
    d896 = d264 * c1;
    d897 = d238 * b5;
    d898 = d897 * c0;
    d899 = 32.0 * d41;
    d900 = d899 * b1;
    d901 = d900 * c1;
    d902 = d899 * b5 * c1;
    d903 = 8.0 * a3 * d41;
    l_mm_tmp = 8.0 * a5 * b_d3;
    d904 = 8.0 * d7;
    d905 = d904 * b4 * c0 * c4;
    d906 = d356 * c0 * c3;
    d907 = d230 * c3;
    d908 = l_mm_tmp * c3;
    d909 = d309 * a4;
    d910 = d309 * b4;
    d911 = d910 * c4;
    d353 *= c3;
    d912 = d323 * c4;
    d913 = d859 * a4;
    d914 = 8.0 * a2 * d49;
    d915 = d278 * b2;
    d916 = d915 * c2;
    d276 *= c3;
    d917 = d214 * c0;
    d918 = d357 * c5;
    d919 = d859 * b4;
    d920 = d919 * c4;
    d897 *= c3;
    d921 = d864 * c4;
    d922 = k_mm_tmp * c3;
    d923 = d230 * c0;
    m_mm_tmp = 8.0 * b0 * b_d3;
    d267 = d267 * b5 * c0 * c3;
    d924 = d274 * c2;
    d853 *= c0;
    d925 = 16.0 * b0 * d7;
    d926 = d925 * c1;
    d927 = d302 * c1;
    d872 *= c0;
    d928 = d376 * c0;
    d929 = 128.0 * d41;
    d330 *= b1;
    d930 = d330 * c1;
    d931 = d216 * b3;
    d932 = d931 * c1;
    d933 = 32.0 * d;
    d934 = d829 * b4;
    d935 = d934 * c0;
    d330 *= c3;
    d936 = d331 * c1;
    d904 = d904 * b5 * c0;
    d937 = d872 * c2;
    d938 = d202 * c0;
    d939 = d899 * b0;
    d940 = d899 * b2;
    d350 *= b3;
    d941 = d350 * c0;
    d942 = j_mm_tmp * c3;
    d943 = d940 * c3;
    d944 = d899 * b3 * c2;
    d350 *= c3;
    d945 = d350 * c5;
    d838 = d838 * c3 * c4;
    d946 = 8.0 * d40;
    d947 = d302 * c0;
    d948 = d206 * c5;
    d949 = d939 * c2;
    d950 = d940 * c0;
    d951 = d946 * b3 * c0 * c3;
    d952 = d225 * c3;
    d953 = m_mm_tmp * c3;
    d954 = 32.0 * d45;
    d955 = d292 * b5;
    d956 = 128.0 * d12;
    d957 = d829 * b3;
    d958 = d339 * b5;
    d959 = d958 * c2;
    d960 = d955 * c4;
    d961 = d339 * b0;
    d962 = d338 * b3;
    d963 = 128.0 * d85;
    d964 = 32.0 * d49;
    d965 = d957 * c4;
    d966 = d934 * c3;
    d967 = d278 * b1;
    d968 = d379 * c5;
    d969 = 16.0 * a2 * d49;
    d970 = d359 * c3;
    d278 *= b4;
    d971 = d292 * b3;
    d972 = d278 * c4;
    d214 *= c3;
    d973 = d307 * c4;
    d974 = d389 * b0;
    d975 = 64.0 * a1 * a2;
    d976 = 64.0 * a1 * a5;
    d977 = 64.0 * a2 * a5;
    d978 = d389 * a5;
    d979 = d389 * b5;
    d980 = d979 * c1;
    d981 = d437 * a5;
    d982 = d437 * b5;
    d983 = d982 * c1;
    d984 = d449 * b2;
    d985 = d984 * c1;
    d986 = d449 * b4;
    d987 = d986 * c1;
    d988 = d976 * b1;
    d989 = d976 * b5 * c1;
    d990 = d418 * b5;
    d991 = d449 * b3;
    d992 = d406 * a5;
    d993 = d406 * b5;
    d994 = d_mm_tmp * c3;
    d995 = d979 * c4;
    d996 = d990 * c2;
    d997 = d449 * b1;
    d998 = d984 * c4;
    d999 = d991 * c2;
    d1000 = d975 * b1;
    d1001 = d1000 * c2;
    d975 *= b2;
    d1002 = d975 * c1;
    d1003 = d988 * c2;
    d1004 = d993 * c1;
    d1005 = d389 * a3;
    d389 *= b3;
    d1006 = d389 * c2;
    d1007 = d418 * b2;
    d1008 = d1007 * c2;
    d1009 = d982 * c2;
    d1010 = d997 * c1;
    d1011 = d986 * c2;
    d1012 = d977 * b2 * c1;
    d1013 = d439 * b5;
    d1014 = d1013 * c1;
    d449 *= b5;
    d1015 = d449 * c1;
    d1016 = 16.0 * a0 * b2;
    d1017 = d1016 * b5;
    d1018 = 16.0 * a0 * b4 * b5;
    d1019 = d493 * c0;
    d455 *= a5;
    d1020 = d559 * c0;
    d1021 = d495 * c0;
    d1022 = d561 * c0;
    d1023 = d615 * c0;
    d1024 = d471 * b5;
    d1025 = d1024 * c0;
    d1026 = d465 * b0;
    d1027 = d1026 * c1;
    d1028 = d497 * c0;
    d1029 = d494 * c5;
    d1030 = d455 * c2;
    d1031 = d455 * c5;
    d1032 = d556 * b2;
    d1033 = d560 * c5;
    d1034 = d471 * b1;
    d1035 = d496 * c5;
    d1036 = d562 * c5;
    d1037 = d1024 * c1;
    d1038 = d1037 * c5;
    d1039 = d615 * c2;
    d1040 = d1039 * c4;
    d1041 = 16.0 * a1 * b4 * b5;
    d1042 = d392 * b2;
    d1043 = d498 * c5;
    d1044 = d1032 * c0;
    d1045 = d471 * b0;
    d1046 = d1034 * c0;
    d1047 = d1042 * c0;
    d1048 = d464 * b1;
    d1049 = d1045 * c1;
    d1050 = d699 * c0;
    d1051 = d1050 * c4;
    d1052 = d1041 * c0;
    d1053 = d1052 * c2;
    d1054 = d392 * b0;
    d1055 = d1054 * c2;
    d499 = d499 * c3 * c5;
    n_mm_tmp = d465 * b5;
    d1056 = n_mm_tmp * c0;
    d1057 = d492 * b5;
    d1058 = d380 * a5;
    d493 *= c3;
    d1059 = 64.0 * a1 * a4;
    d495 *= c3;
    d1060 = d392 * a5;
    d1061 = d411 * b4;
    d1062 = d438 * a5;
    d1063 = d438 * b5;
    d1064 = d1063 * c1;
    d1065 = d1059 * b1;
    d1066 = d1065 * c4;
    d1059 *= b4;
    d1067 = d1059 * c1;
    d559 *= c3;
    d988 *= c4;
    d1068 = d471 * b3;
    d1069 = d1068 * c1;
    d1070 = d699 * c3 * c4;
    d1071 = d1041 * c2 * c3;
    d1072 = d1061 * c3;
    d1034 *= c3;
    d1024 *= c3;
    d1042 *= c3;
    d1073 = d392 * b3;
    d1074 = d1073 * c2;
    d1075 = d392 * b5;
    d1076 = d465 * b3;
    d1077 = d1076 * c1;
    d1078 = d566 * a5;
    d1079 = d566 * b5;
    d1080 = d1079 * c1;
    d1081 = d543 * b2;
    d1082 = d1081 * c1;
    d1083 = d543 * b4;
    d1084 = d1083 * c1;
    d1085 = d507 * b5;
    d1086 = d1085 * c1;
    d1087 = d543 * b5;
    d1088 = d568 * b3;
    d1089 = d1088 * c1;
    d1090 = 64.0 * a4 * a5;
    d588 *= b5;
    d1091 = d589 * b5;
    d1092 = d1076 * c4;
    d1093 = d588 * c1 * c4;
    d1094 = d543 * b1;
    d1095 = d1094 * c1;
    d1096 = d1081 * c4;
    d1097 = d1091 * c1 * c4;
    d1098 = d590 * c3;
    d1099 = d1090 * b4 * c1;
    d1100 = d1079 * c2;
    d1101 = d544 * c2;
    d1102 = d1083 * c2;
    d1103 = d1087 * c1;
    d1104 = 16.0 * a3 * b4 * b5;
    d1105 = d1088 * c2;
    d1106 = d591 * c5;
    d514 *= b5;
    d732 *= b5;
    d1107 = d732 * c1;
    d1108 = d1107 * c2;
    d1109 = d710 * c3 * c4;
    d1110 = d709 * b4;
    d1111 = d709 * b5;
    d1112 = 16.0 * a5 * b2;
    d1113 = d1112 * b3;
    d1114 = 16.0 * a5 * b3;
    d619 *= c0;
    d621 *= c0;
    d1115 = d568 * b5;
    d1116 = d1115 * c0;
    d1117 = d620 * c5;
    d1118 = d622 * c5;
    d1115 = d1115 * c3 * c4;
    d1119 = d543 * b0;
    d1120 = d437 * b4;
    d520 *= b3;
    d598 *= b0;
    d1121 = d418 * b4;
    d1122 = d437 * b3;
    d1123 = d566 * b0;
    d1124 = d1121 * c4;
    d1125 = d1122 * c4;
    d1126 = d1123 * c4;
    d1127 = d410 * b5;
    d1128 = d1127 * c3;
    d990 *= c4;
    d1129 = d1120 * c3;
    d1130 = d520 * c3;
    d991 *= c4;
    d1131 = d566 * b3;
    d1132 = d1131 * c4;
    d1133 = d618 * c3;
    d1134 = d544 * c4;
    d1135 = d733 * c0 * c3;
    d1136 = d734 * c0 * c3;
    d1137 = d1087 * c0;
    d410 = d410 * a5 * c5;
    d545 = d545 * c3 * c5;
    d1138 = d619 * c5;
    d1139 = d621 * c5;
    d1140 = d1116 * c4;
    d1141 = d406 * a4;
    d1142 = d406 * b0;
    d1143 = d406 * b1;
    d1144 = d653 * c2;
    d1145 = d653 * c5;
    d1146 = 64.0 * a0 * a2;
    d1147 = 64.0 * a0 * a4;
    d1148 = d439 * b0;
    d1149 = d1146 * b2 * c4;
    d1150 = d441 * c1;
    d1151 = d441 * c5;
    d1152 = d654 * c2;
    d1153 = d654 * c5;
    d1154 = d443 * c1;
    d1155 = d997 * c2;
    d1156 = d997 * c4;
    d1157 = d1148 * c4;
    d1158 = d696 * b1;
    d1159 = d1158 * c1;
    d1160 = d696 * b2;
    d1161 = d1160 * c2;
    d1162 = 64.0 * a0 * b0;
    d1163 = d635 * b5;
    d1164 = d656 * c0;
    d1165 = d655 * b5;
    d1166 = d1165 * c0;
    d1167 = d1016 * b4;
    d1168 = d1167 * c0;
    d1169 = d1017 * c0;
    d1170 = d668 * c0;
    d1171 = d664 * b5;
    d1172 = d1171 * c0;
    d1173 = 32.0 * a1 * b2;
    d1174 = d657 * c5;
    d1175 = d1165 * c2;
    d1176 = d1175 * c4;
    d1177 = d1167 * c1;
    d1178 = d1177 * c5;
    d1179 = 16.0 * a0 * b3;
    d1180 = d663 * c2;
    d1181 = d663 * c5;
    d1182 = d1045 * c2;
    d1183 = d1045 * c4;
    d1184 = d669 * c5;
    d1185 = d1171 * c2;
    d1186 = d1185 * c4;
    d670 *= b5;
    d1187 = d1173 * b4;
    d1188 = d1179 * b5;
    d1189 = d703 * c1;
    d1190 = d667 * c0;
    d1191 = d670 * c0;
    d1192 = d1187 * c0;
    d1193 = d501 * c1;
    d1194 = 64.0 * a2 * a4;
    d1195 = d704 * c0;
    d1196 = d502 * c0;
    d1197 = d1057 * c0;
    d1198 = d680 * c0;
    d1199 = d512 * c0;
    o_mm_tmp = d729 * b1;
    d1200 = o_mm_tmp * c0;
    d1201 = d729 * b2;
    d1202 = d1201 * c0;
    d1203 = d1076 * c0;
    d1204 = 64.0 * a2 * b0;
    d1205 = d1204 * b2;
    d1206 = d503 * c5;
    d1207 = 64.0 * a2 * b2;
    d1208 = d588 * c0;
    d1209 = d1208 * c2;
    d1210 = d1081 * c0;
    d1211 = d1091 * c0;
    d1212 = d1211 * c2;
    d1213 = d681 * c5;
    d1214 = d513 * c5;
    d1215 = 64.0 * a4 * b0;
    d1216 = d1215 * b4;
    d1217 = 64.0 * a4 * b2;
    d1218 = d432 * b4;
    d1219 = d581 * b2;
    d1220 = d1217 * b4;
    d1221 = d721 * b5;
    d1222 = d704 * c3;
    d700 *= b3;
    d1057 = d1057 * c1 * c4;
    d1223 = o_mm_tmp * c2;
    d1224 = d1223 * c4;
    d1225 = d1219 * c0;
    d1201 = d1201 * c1 * c4;
    d1226 = d729 * b3;
    d1227 = d729 * b5;
    d1228 = d1113 * c0;
    d1229 = i_mm_tmp * b5;
    d1230 = 16.0 * b0 * b2;
    d437 *= b0;
    d1231 = d696 * b4;
    d1232 = d1231 * c0;
    d1233 = d688 * b5;
    d1234 = d1233 * c0;
    d1235 = 256.0 * a1 * a2;
    d568 *= b0;
    d1236 = d511 * b5;
    d1237 = d982 * c0;
    d1238 = d986 * c0;
    d1239 = d1018 * c0;
    d1240 = d1239 * c4;
    d1241 = d568 * c0;
    d1242 = d1236 * c0;
    d1243 = d1242 * c4;
    d729 *= b4;
    d1244 = d729 * c0;
    d1245 = d1244 * c4;
    d1246 = 12.0 * a0 * b3 * b5;
    d690 *= b5;
    d1247 = d511 * b4;
    d722 *= b3;
    d1248 = d689 * c0;
    d1249 = d690 * c0;
    d1250 = d1247 * c0;
    d1251 = d722 * c0;
    d1252 = d437 * c4;
    d1120 *= c0;
    d1253 = d546 * c3;
    d1254 = d450 * c4;
    d520 *= c0;
    d1255 = d598 * c0;
    d1256 = d723 * c0 * c3;
    d1257 = 64.0 * a1 * a3;
    d1258 = 256.0 * a1 * a4;
    d1259 = 64.0 * a1 * b1;
    d1260 = d1259 * b2;
    d1261 = d993 * c3;
    d1262 = d389 * c5;
    d1263 = d1007 * c5;
    d1264 = 64.0 * a0 * a3;
    d1265 = d418 * a4;
    d1266 = d1121 * c5;
    d1267 = d417 * b3;
    d1268 = 64.0 * a0 * a1;
    d1269 = d997 * c3;
    d1270 = 64.0 * a0 * a5;
    d1271 = d1165 * c1;
    d1165 *= c3;
    d1016 *= b3;
    d1272 = d1016 * c1;
    d1273 = d1016 * c2;
    d1179 *= b4;
    d1274 = d1179 * c1;
    d1275 = d982 * c3;
    d1276 = d986 * c3;
    d656 *= c3;
    d1277 = d1016 * c4;
    d1167 *= c3;
    d1278 = d1016 * c3;
    d1279 = d1179 * c2;
    d380 *= a3;
    d1280 = d1062 * d0;
    d1281 = d1063 * c0;
    d1282 = d1045 * c3;
    d1283 = d661 * c4;
    d1284 = d661 * c5;
    d1285 = d1068 * c0;
    d1286 = d1068 * c2;
    d1287 = d1171 * c1;
    d1171 *= c3;
    d1288 = d1259 * b4;
    d1289 = d1288 * c0;
    d1290 = d671 * c0;
    d1291 = 16.0 * a1 * b3 * b5;
    d1292 = d1291 * c0;
    d1293 = d1060 * d0;
    d1294 = d672 * c5;
    d1295 = d1291 * c2;
    d1296 = d1295 * c4;
    d1297 = 64.0 * a1 * b0;
    d668 *= c3;
    d1298 = d1259 * b5;
    d1299 = 64.0 * a2 * a3;
    d1300 = d1054 * c5;
    d1301 = d673 * c4;
    d1302 = d673 * c5;
    d1303 = d1299 * b2;
    d392 *= b4;
    d1304 = d1194 * b2;
    d1194 *= b4;
    d492 *= b3;
    d1305 = d492 * c1;
    d1306 = d492 * c2;
    d1307 = d1075 * c3;
    d1308 = d1304 * c3;
    d1309 = d462 * c1;
    d1310 = d462 * c5;
    d1311 = d1194 * c3;
    d1312 = d1076 * c3;
    d1313 = d492 * c4;
    d1314 = d492 * c3;
    d1315 = d674 * c0;
    d1316 = d480 * c0;
    d1317 = d1207 * b3;
    d1318 = 64.0 * a3 * a4;
    d1319 = d1094 * c0;
    d1320 = d721 * b2;
    d1321 = d1320 * c1;
    d1322 = d1320 * c2;
    d1323 = 64.0 * a3 * b0;
    d1324 = d1123 * c5;
    d588 = d588 * c2 * c3;
    d1325 = d594 * c1;
    d1326 = d594 * c5;
    d1327 = d1318 * b4 * c2;
    d1328 = d1094 * c2;
    d1329 = d1094 * c4;
    d1330 = d1081 * c3;
    d1331 = d507 * b3;
    d1332 = d1331 * c2;
    d1333 = d592 * c0;
    d1334 = d1320 * c3;
    d1335 = d1320 * c4;
    d1336 = d684 * b3;
    d1337 = d1336 * c2;
    d1338 = d721 * b4;
    d1339 = d1338 * c1;
    d1340 = d1338 * c2;
    d1341 = d677 * c0;
    d1342 = d676 * b5;
    d1343 = d595 * c0;
    d1344 = d511 * b3;
    d1345 = d1344 * c1;
    d1346 = d1236 * c1;
    d1347 = 64.0 * a4 * b1 * b4;
    d1348 = d1347 * c0;
    d1349 = d568 * c3;
    d1350 = d1342 * c2;
    d1351 = d1350 * c4;
    d1352 = d596 * c5;
    d1091 = d1091 * c2 * c3;
    d1353 = 32.0 * a3 * b3;
    d1354 = d1353 * b5;
    d590 *= c0;
    d1355 = d1346 * c2;
    d680 *= c3;
    d512 *= c3;
    d1356 = d1216 * c1;
    d1357 = d514 * c0;
    d1358 = d1357 * c2;
    p_mm_tmp = d1230 * b3;
    d1359 = 16.0 * b1 * b3 * b5;
    d1360 = d1359 * c0;
    d1361 = 16.0 * b2 * b3;
    d1362 = d1361 * b5 * c0;
    d1363 = 24.0 * a0 * a3;
    d1364 = 24.0 * a0 * a5;
    q_mm_tmp = 16.0 * b0 * b3;
    d1365 = q_mm_tmp * b4;
    d1366 = 16.0 * b0 * b4 * b5;
    d1361 *= b4;
    d1367 = d417 * b0;
    d1368 = d1360 * c1;
    d1369 = 16.0 * b1 * b4 * b5;
    d1370 = p_mm_tmp * c1 * c4;
    d1371 = d1230 * b4;
    d1372 = d1371 * c1 * c3;
    d1373 = p_mm_tmp * c2 * c3;
    d1374 = d1365 * c1;
    d1375 = d1374 * c2;
    d1376 = d759 * c0;
    d1377 = d1376 * c4;
    d1378 = d1361 * c0;
    d1379 = d1378 * c1;
    d1380 = 24.0 * a0 * b0;
    d1381 = 24.0 * a3 * a5;
    d1382 = d1338 * c0;
    d1383 = d1344 * c0;
    d1384 = d1018 * c3 * c4;
    d1385 = d1236 * c3 * c4;
    d1386 = d729 * c3 * c4;
    d1387 = d1365 * c0 * c4;
    d1388 = d646 * c0;
    d1389 = d438 * b3;
    d671 *= c3;
    d1390 = d678 * c3;
    d670 *= c3;
    d674 *= c3;
    d677 *= c3;
    d1391 = d695 * c1;
    d589 *= b3;
    d1392 = d589 * c2;
    d1393 = 64.0 * a3 * b2;
    d1394 = d1393 * b3;
    d676 *= b3;
    d1395 = d676 * c1;
    d1396 = d589 * c3;
    d1397 = d695 * c4;
    d595 *= c3;
    d709 *= b3;
    d1398 = d709 * c2;
    d1399 = d1398 * c4;
    d1400 = d1113 * c2 * c3;
    d1401 = f_mm_tmp * c3;
    d1402 = d759 * c3 * c4;
    d1361 = d1361 * c1 * c3;
    d1403 = d1246 * c3;
    d724 *= b4;
    d1404 = d724 * c0;
    d1405 = d735 * c0;
    d1406 = d736 * c0;
    d406 *= b3;
    d1407 = d418 * b1;
    d1408 = d692 * c3;
    d1409 = d726 * c4;
    d690 *= c3;
    d1247 *= c3;
    d722 *= c3;
    d655 *= b3;
    d664 *= b3;
    d1410 = d655 * c2;
    d1411 = d655 * c4;
    d1412 = d1188 * c1;
    d1413 = d438 * b0;
    d1414 = d667 * c3;
    d1415 = d664 * c2;
    d1416 = d664 * c4;
    d1417 = d678 * c0;
    d1418 = 32.0 * b1 * b2;
    d1419 = d1418 * b4 * c0 * c3;
    d1420 = d689 * c3;
    d1421 = d702 * c4;
    r_mm_tmp = 64.0 * a2 * b1 * b2;
    d1422 = r_mm_tmp * c3;
    d1423 = d1317 * c1;
    d1424 = 64.0 * a3 * b1;
    d1425 = 12.0 * b0 * b3 * b5 * c0 * c3;
    d721 *= b1;
    d1426 = d721 * c4;
    d1427 = d726 * c2;
    d1428 = d1221 * c1;
    d589 *= c0;
    s_mm_tmp = 9.0 * a3 * d7;
    t_mm_tmp = 256.0 * a2 * a4;
    u_mm_tmp = r_mm_tmp * c1;
    v_mm_tmp = 64.0 * a3 * a5;
    w_mm_tmp = o_mm_tmp * c1;
    x_mm_tmp = o_mm_tmp * c3;
    mm_tmp_tmp = d729 * c1;
    y_mm_tmp = mm_tmp_tmp * c2;
    ab_mm_tmp = 64.0 * a5 * b0;
    bb_mm_tmp = d728 * b5 * c1;
    cb_mm_tmp = d710 * c0;
    db_mm_tmp = cb_mm_tmp * c4;
    eb_mm_tmp = d709 * c0;
    b_mm_tmp_tmp = d1110 * c0;
    fb_mm_tmp = b_mm_tmp_tmp * c2;
    c_mm_tmp_tmp = i_mm_tmp * b3;
    gb_mm_tmp = c_mm_tmp_tmp * c0;
    hb_mm_tmp = d758 * c2 * c3;
    ib_mm_tmp = p_mm_tmp * c0;
    jb_mm_tmp = d374 * b5;
    kb_mm_tmp = d1226 * c1;
    lb_mm_tmp = c_mm_tmp_tmp * c2;
    mb_mm_tmp = lb_mm_tmp * c4;
    nb_mm_tmp = d1229 * c1 * c3;
    ob_mm_tmp = q_mm_tmp * b5;
    pb_mm_tmp = 8.0 * mm_tmp * c1;
    qb_mm_tmp = d79 * c3;
    rb_mm_tmp = d116 * c0;
    sb_mm_tmp = d116 * c3;
    tb_mm_tmp = d184 * b1 * c1;
    ub_mm_tmp = 4.0 * (a4 * a4) * a5;
    vb_mm_tmp = d118 * b5;
    wb_mm_tmp = d461 * c5;
    xb_mm_tmp = 18.0 * a0 * a3;
    yb_mm_tmp = d519 * c5;
    ac_mm_tmp = d519 * d20;
    bc_mm_tmp = c_mm_tmp * b4 * c4;
    cc_mm_tmp = d573 * c0;
    dc_mm_tmp = d452 * d29;
    ec_mm_tmp = 8.0 * a0 * b1 * b5 * c1;
    fc_mm_tmp = 8.0 * a0 * b2 * b3 * c2;
    gc_mm_tmp = d556 * b1;
    hc_mm_tmp = d460 * b3;
    ic_mm_tmp = d515 * c0;
    jc_mm_tmp = d515 * c3;
    kc_mm_tmp = d581 * b4 * c1;
    lc_mm_tmp = e_mm_tmp * b1 * c1;
    mc_mm_tmp = g_mm_tmp * b4 * c4;
    nc_mm_tmp = 32.0 * a2 * b0;
    oc_mm_tmp = d552 * b3 * c4;
    pc_mm_tmp = d602 * c3;
    qc_mm_tmp = d641 * d86;
    rc_mm_tmp = 8.0 * b2 * b3 * b5;
    sc_mm_tmp = 8.0 * a3 * b0 * b3;
    tc_mm_tmp = h_mm_tmp * d44;
    uc_mm_tmp = 32.0 * a1 * b_d5;
    vc_mm_tmp = d298 * c5;
    wc_mm_tmp = d803 * c1;
    xc_mm_tmp = d770 * b1 * c1;
    yc_mm_tmp = b_mm_tmp * c3 * c5;
    ad_mm_tmp = k_mm_tmp * c0;
    bd_mm_tmp = d831 * c3 * c4;
    cd_mm_tmp = d903 * c5;
    dd_mm_tmp = l_mm_tmp * c0;
    ed_mm_tmp = m_mm_tmp * c0;
    fd_mm_tmp = 8.0 * b0 * d43 * c0 * c3;
    gd_mm_tmp = 32.0 * b1 * d40 * c1 * c3;
    d_mm_tmp_tmp = 8.0 * b1 * d7;
    hd_mm_tmp = d_mm_tmp_tmp * c0;
    id_mm_tmp = 32.0 * a3 * b_d3 * c2;
    jd_mm_tmp = j_mm_tmp * c4;
    kd_mm_tmp = d953 * c5;
    ld_mm_tmp = d308 * c0;
    md_mm_tmp = d818 * c3;
    nd_mm_tmp = d307 * c2;
    od_mm_tmp = 8.0 * d49 * a4;
    pd_mm_tmp = 16.0 * a4 * a5 * b0 * c1;
    qd_mm_tmp = d449 * c0;
    rd_mm_tmp = d1058 * c5;
    sd_mm_tmp = d1075 * c1;
    td_mm_tmp = 16.0 * a2 * a5 * b1 * c3;
    ud_mm_tmp = n_mm_tmp * c2 * c3;
    vd_mm_tmp = d_mm_tmp * c0;
    wd_mm_tmp = d1048 * c0;
    xd_mm_tmp = d701 * c0 * c3;
    yd_mm_tmp = d1119 * c2;
    ae_mm_tmp = 256.0 * a1 * b1;
    be_mm_tmp = d993 * c2;
    ce_mm_tmp = d993 * c4;
    de_mm_tmp = d443 * c5;
    ee_mm_tmp = 16.0 * a2 * a3 * b5 * c0;
    fe_mm_tmp = d1075 * c4;
    ge_mm_tmp = d501 * c5;
    he_mm_tmp = d1304 * c0;
    ie_mm_tmp = d1194 * c0;
    je_mm_tmp = nc_mm_tmp * b2;
    ke_mm_tmp = d1316 * c4;
    le_mm_tmp = d480 * c3 * c4;
    me_mm_tmp = d1207 * b4 * c0;
    ne_mm_tmp = me_mm_tmp * c4;
    oe_mm_tmp = d1342 * c0;
    pe_mm_tmp = 16.0 * a3 * b1 * b5 * c0;
    qe_mm_tmp = d514 * c2 * c3;
    h_mm_tmp = f_mm_tmp * c0;
    b_mm_tmp = 32.0 * a5 * b3 * b5;
    k_mm_tmp = 16.0 * a0 * b3 * b4 * c0;
    l_mm_tmp = d1063 * c2;
    m_mm_tmp = d1068 * c4;
    j_mm_tmp = d392 * c1;
    n_mm_tmp = d392 * c5;
    d_mm_tmp = d675 * c5;
    f_mm_tmp = 64.0 * a2 * b2 * b4 * c3 * c4;
    re_mm_tmp = d679 * c5;
    se_mm_tmp = d1354 * c1;
    te_mm_tmp = d597 * c5;
    ue_mm_tmp = 64.0 * a4 * b3 * b4;
    ve_mm_tmp = d1114 * b5;
    we_mm_tmp = d617 * c0;
    c_mm_tmp = d1160 * c3;
    e_mm_tmp = d635 * b3;
    g_mm_tmp = d1297 * b1 * c4;
    r_mm_tmp = d502 * c3;
    o_mm_tmp = vb_mm_tmp * c5;
    i_mm_tmp = d1259 * b3 * c2;
    p_mm_tmp = d1218 * c3;
    q_mm_tmp = d700 * c3;
    mm_tmp = d1231 * c3;
    return (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((b_d1 * b_d2 + b_d4 * b_d2) - d6 * d9) + d197 * b_d2) + d132 * d8) - 3.0 * a3 * (b0 * b0) * b_d2) - d54 * b_d2) - ub_mm_tmp * d8) - d11 * d16) + d48 * d9) - d14 * b_d2) + d11 * d15) - b_d1 * d9) - d52 * d9) + d14 * d8) + d56 * d8) - d53 * d15) + d70 * d16) + d55 * d9) - d58 * d8) - d57 * d16) + d71 * d15) - d18 * d19) - d21 * c0 * d22) - d18 * d25) + d17 * d19) - d32 * d20) + d28 * d20) + d21 * c3 * d22) + d34 * c5) + d36 * c5 * d26) - d30 * c5) + d17 * d25) - d38 * c5 * d26) + d28 * d19) + d30 * d0) - d32 * d25) - d34 * d3) - d36 * d3 * d26) + d38 * d0 * d26) + d31 * d47 * d5) - d27 * d44 * d5) + 4.0 * d35 * d42 * d5) - 4.0 * d37 * d39 * d5) - d61 * d9) + d67 * b_d2) + d63 * d9) - d69 * b_d2) - d68 * b_d2) + d73 * d8) - d75 * d8) + d77 * b_d2) - pb_mm_tmp * d0 * d1) + 8.0 * d24 * c0 * c2 * d2) + d78 * c0 * d0 * d3) - 6.0 * d24 * c0 * c5 * d0) + pb_mm_tmp * d1 * d3) - d78 * c3 * d0 * d3) - 8.0 * d23 * c3 * c4 * d4) + 6.0 * d23 * c3 * c5 * d3) + d83 * c0 * d26) - d80 * d39) + d106 * d20) - d82 * d29) - d91 * c0 * d26) + d80 * d42) - d115 * c0 * d20) + d82 * d33) + 16.0 * a1 * d12 * c1 * d26) - d88 * d39) + d109 * d20) - d90 * d29) + d92 * d19) - d110 * d20) + d93 * d44 * c2) - d98 * a2 * c2 * d26) - d83 * c3 * d26) + qb_mm_tmp * d39) + d99 * d19) - d84 * c3 * d20) + d111 * c5) + d81 * d29 * c3) + 16.0 * a2 * b_d5 * c2 * d22) - d112 * d20) + 16.0 * a2 * d10 * d86 * c2) + d95 * d39) - d113 * d20) + d97 * d29) - d114 * d20) - d103 * c0 * d26) - d104 * a2 * c2 * d26) - d105 * c0 * d26) + 12.0 * a0 * d85 * c5 * d26) + d79 * c5 * d22) + d107 * c5) - 16.0 * a1 * d41 * c1 * d26) + d88 * d42) - d108 * d20) + d90 * d33) - rb_mm_tmp * d20) - d117 * c0 * d86) - d119 * c0 * d26) + d91 * c3 * d26) - qb_mm_tmp * d42) + d115 * c3 * d20) - d81 * c3 * d33) - 4.0 * a2 * d49 * c2 * d26) + d92 * d25) - d140 * d20) + d93 * c2 * d47) + d124 * c0 * d26) - d95 * d42) + d126 * c0 * d20) - d97 * d33) + d145 * c5) - d146 * c5) + d123 * d39) - d131 * d19) + 9.0 * a0 * d49 * c5 * d26) + d99 * d25) + d100 * d47 * c5) - d125 * d39) - d133 * d19) + d141 * d20) - d134 * d44 * c5) - d96 * d29 * c3) - d135 * d19) + d150 * d20) - d136 * d44 * c4) + d102 * c3 * d20) + d148 * c5) - d149 * c5) - d137 * c0 * d20) - d120 * c0 * d47) + d120 * d44 * c3) - d142 * a3 * c5 * d26) + d98 * a4 * c4 * d26) + d103 * c3 * d26) + d130 * d39) + d105 * c3 * d26) - d139 * a5 * c5 * d22) - d138 * c0 * d26) - d94 * c5 * d22) - d151 * c5) - 16.0 * a4 * b_d5 * c4 * d22) + d143 * d20) - 16.0 * a4 * d10 * d86 * c4) - d144 * c5) + sb_mm_tmp * d20) + d152 * d44 * c5) + d117 * d86 * c3) - d123 * d42) - d153 * a3 * c5 * d26) + d104 * a4 * c4 * d26) + d119 * c3 * d26) + d51 * a5 * c5 * d19) - d124 * c3 * d26) + d125 * d42) - d169 * d20) + d96 * c3 * d33) - d127 * c5) - d128 * d47 * c5) + d174 * c5) + d171 * c5) - d130 * d42) - d131 * d25) + d157 * d39) + d172 * c5 * d22) - d133 * d25) - d179 * c5) - d135 * d25) + d177 * d20) - d136 * d47 * c4) + d178 * d20) + d154 * a4 * c4 * d26) + d138 * c3 * d26) - d180 * c5) + d173 * c5) - d157 * d42) + 4.0 * (a4 * a4) * a5 * c5 * d25) - d168 * c0 * d42) + d106 * d25) - d160 * c0 * d39) + d158 * c0 * d22) - 4.0 * a0 * d85 * d0 * d26) + d161 * d0 * d42) - d162 * d0 * d39) + d79 * d0 * d22) - b_d4 * d20 * d0) + d164 * d0) - d165 * d0) + d107 * d0) + 16.0 * a1 * d * c1 * d42) - d108 * d19) - d176 * d20) + d166 * c0 * d33) - d167 * c0 * d29) + 4.0 * b0 * d10 * c0 * d86) - d181 * c0 * d26) + d182 * c0 * d42) - d183 * c0 * d39) + d185 * c0 * d22) - d186 * c3 * d42) - 4.0 * a0 * d7 * c0 * d42) + 4.0 * a0 * d43 * c0 * d25) - 4.0 * a0 * (b4 * b4) * c3 * d19) - d190 * d19 * d1) + d195 * d20 * d1) + d109 * d25) - 16.0 * a1 * d7 * c1 * d39) - d191 * d44 * d1) - d110 * d25) + d140 * d19) + d188 * c0 * d42) + 12.0 * a3 * d43 * c0 * d19) - d192 * d44 * c1) + d98 * a1 * d1 * d26) + d98 * b1 * c1 * d26) + d193 * d0) - d185 * d29 * d0) - tb_mm_tmp * d19) + d196 * d20) - 6.0 * a0 * d49 * d0 * d26) + d200 * d0 * d25) - d6 * d19 * d3) + d187 * c5 * d25) - d187 * d20 * d3) - 12.0 * a0 * d40 * c3 * d25) - d160 * c3 * d39) + d197 * c5 * d19) - d202 * d20 * d0) - d111 * d3) + d199 * d47 * d0) + 64.0 * a1 * d12 * d1 * d42) - 64.0 * a1 * d41 * d1 * d39) + 64.0 * a1 * d40 * d33 * d1) - 64.0 * a1 * d43 * d29 * d1) + d203 * d19 * d2) - 16.0 * a2 * d * d33 * d2) - d112 * d25) + d201 * c2 * d22) + d204 * d44 * d2) + d188 * c3 * d39) + d198 * d20 * d0) + d113 * d25) - d141 * d19) + d194 * c0 * d39) + 9.0 * a3 * d10 * d44 * d0) - d114 * d25) - 9.0 * a5 * d7 * c0 * d19) - d206 * d20) + 6.0 * b0 * d10 * c0 * d47) - d53 * d44 * c3) + d207 * d40 * c1 * d33) - d207 * d43 * c1 * d29) + d232 * d44 * c2) - 16.0 * d45 * a2 * d2 * d42) + d46 * a3 * d0 * d26) - d211 * c3 * d26) - d292 * b2 * c2 * d42) + d220 * c0 * d26) + d233 * b1 * c1 * d42) - d231 * c0 * d26) - d209 * b1 * c1 * d39) + d234 * d19) + d224 * d25) - d213 * c3 * d19) + d215 * b3 * c0 * d19) - d216 * b2 * c2 * d33) + d219 * d20) - 8.0 * a0 * d85 * d3 * d26) - d161 * d3 * d42) + d91 * d19 * d5) + d162 * d39 * d3) - d222 * d22 * d3) + d186 * d33 * d5) + b_d4 * c5 * d25) - d225 * d20 * d3) - d164 * d3) - d160 * c5 * d22) + d115 * d44 * d5) + d165 * d3) - d221 * d86 * d3) + 64.0 * a2 * d41 * d22 * d2) - 64.0 * a2 * b_d3 * d33 * d2) + 64.0 * a2 * d43 * d86 * d2) + d235 * d0 * d39) + d226 * d0 * d22) + d188 * c5 * d22) + d229 * c3 * d39) - d54 * c5 * d19) + d230 * d20 * d0) - d208 * c3 * d22) - d236 * d0) + d237 * d0) + d228 * d86 * d0) - d210 * c4 * d22) + d143 * d19) + d121 * c3 * d22) - d144 * d0) + rb_mm_tmp * d25) - sb_mm_tmp * d19) - d155 * c0 * d22) - 12.0 * a5 * d43 * d44 * d0) - 8.0 * b0 * (b1 * b1) * c3 * d20) - d166 * c3 * d33) + d243 * d44 * c5) + d167 * d29 * c3) - 8.0 * b0 * d10 * d86 * c3) + 64.0 * b2 * d43 * d86 * c2) + d244 * c0 * d29) + 8.0 * b3 * d10 * c0 * d86) - d122 * d0 * d42) + d256 * c5 * d42) - d257 * d20 * d2) - d242 * c0 * d42) - d239 * a2 * d2 * d42) + d238 * a3 * d0 * d26) - d268 * c3 * d26) - d239 * b2 * c2 * d42) + d272 * c0 * d26) - d245 * d0 * d42) - d182 * c3 * d42) + d258 * d20 * d1) - d246 * c0 * d42) + d183 * c3 * d39) + d247 * d19) - d248 * d0) + d209 * b2 * c2 * d22) + d269 * d39) - 12.0 * d41 * b5 * c0 * d19) - d266 * d22) + d250 * d0) - d263 * d29 * d1) + d251 * d44 * d2) + d265 * d22) - d259 * c0 * d33) - d273 * b2 * c2 * d33) + d271 * d20) - d253 * c0 * d33) + 16.0 * a0 * d85 * d42 * d5) + d262 * d25 * d5) + 8.0 * a0 * d49 * d39 * d5) - d162 * d22 * d5) + d168 * d33 * d5) + d261 * d47 * d5) + d274 * d29 * d5) - d158 * d86 * d5) - 4.0 * a1 * d49 * d1 * d26) + d190 * d1 * d25) - d275 * d20 * d1) + d191 * d47 * d1) + 4.0 * a3 * d * c3 * d42) - d188 * d29 * d5) + d101 * d44 * d5) - d169 * d19) + d210 * d29 * d4) - d279 * d44 * d4) - d145 * d3) + d127 * d0) + d146 * d3) - d294 * d47 * d0) - d299 * d29 * d0) - d171 * d0) + d286 * c5) + d295 * d47 * c5) + d302 * d29 * c5) - d287 * c5) - d288 * d20) + d192 * c1 * d47) - d98 * a3 * d39 * d5) + d304 * d39 * d4) - d122 * d39 * d3) + d211 * d20 * d5) - d290 * c5 * d39) + d293 * c4 * d39) - d242 * c3 * d39) - d280 * d0) + d129 * d0 * d42) + d305 * d42) - d291 * d20 * d2) + d281 * c0 * d42) + d105 * d19 * d5) - d282 * d19 * d4) - d300 * d0 * d25) + d48 * d19 * d3) + d303 * d25) - d193 * d3) + d283 * d19) - d284 * d0) - d285 * d19) - d298 * d25) + d13 * c3 * d19) - d301 * d0 * d39) + d306 * c5 * d39) - d154 * b1 * c1 * d26) - d307 * c0 * d39) - d172 * d0 * d22) - d183 * c5 * d22) - ld_mm_tmp * d22) + d213 * d44 * d5) + d184 * b0 * (c2 * c2) * d3) + tb_mm_tmp * d25) + 16.0 * b_d5 * b2 * d86 * d2) + 4.0 * b_d5 * b3 * d29 * d0) - 9.0 * (a5 * a5) * b5 * d44 * d0) - d378 * c5) + d393 * d29 * c4) - d259 * d29 * c3) + jb_mm_tmp * c0 * d33) + d59 * c5) - d361 * d44 * c4) - d946 * b5 * c0 * d47) + d71 * d44 * c3) - d904 * d29) - 16.0 * d43 * b5 * c0 * d86) - 3.0 * a0 * d49 * d3 * d26) - d197 * d20 * d3) - 9.0 * a0 * d10 * d47 * d3) - d969 * d2 * d42) + d203 * d2 * d25) - d201 * d33 * d2) + d204 * d47 * d2) + d132 * d0 * d25) - d810 * d19 * d3) - d198 * c5 * d25) + d818 * d20 * d3) - d229 * d29 * d5) + d208 * d86 * d5) - s_mm_tmp * c5 * d19) + s_mm_tmp * d20 * d0) - d730 * d44 * d3) + d179 * d0) - d150 * d25) + 64.0 * a4 * b_d3 * d29 * d4) - 64.0 * a4 * d40 * d86 * d4) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d321 * d44 * d3 - d173 * d0) + d316 * d33 * c5) - d318 * c5) - d326 * d44 * c5) - d244 * d29 * c3) - 4.0 * b3 * d10 * d86 * c3) - d309 * a3 * d42 * d5) + d322 * d3 * d42) - d329 * c5 * d42) + d323 * c3 * d42) + d242 * d29 * d5) + d118 * a3 * d3 * d26) + d320 * c3 * d26) + d245 * d3 * d42) + d246 * c3 * d42) - d13 * d44 * d5) + d156 * d0 * d42) + d317 * c5 * d42) - d319 * d20 * d2) + d312 * c0 * d42) - ub_mm_tmp * d0 * d25) + d324 * d19 * d3) - d247 * d25) + d248 * d3) - d249 * c3 * d39) - d327 * c5 * d19) + d313 * d0) - d315 * c0 * d25) + d328 * d19) - d250 * d3) + d251 * d47 * d2) - d311 * c3 * d22) - d314 * d0) - d331 * d33 * c5) + d332 * c3 * d33) + d335 * d20) + d253 * c3 * d33) + d337 * c0 * d33) - d57 * c0 * d47) + 8.0 * d43 * b5 * d44 * c3) - d101 * d47 * d5) - d194 * d29 * d5) - d279 * d47 * d4) + 16.0 * a4 * d7 * d29 * d4) - d349 * d47 * d5) + 12.0 * a5 * d40 * d47 * d3) + d355 * d44 * d5) + d174 * d3) - d352 * d25 * d5) - d142 * b3 * d20 * d5) + d348 * d20 * d4) - d358 * d25) + d280 * d3) + d281 * d29 * d5) - d105 * d25 * d5) - d282 * d25 * d4) - d283 * d25) + d284 * d3) - d285 * d25) + 12.0 * d12 * b5 * c3 * d25) - d359 * d86 * d5) + d339 * a4 * d39 * d4) + d357 * d19 * d5) + d156 * d39 * d3) + d341 * b0 * d20 * d5) - d346 * c5 * d39) + d339 * b4 * c4 * d39) + d312 * c3 * d39) + d360 * d19) - d342 * d0) + d213 * d47 * d5) - d212 * d44 * d5) - d311 * d29 * d3) - d343 * d44 * d4) + d340 * d44 * d3) - d344 * d0) - d351 * d47 * c5) - d347 * c5) - d361 * d47 * c4) + d354 * b4 * d29 * c4) + d356 * d44 * c5) + d337 * d29 * c3) - d116 * d47 * d5) + d155 * d86 * d5) - d242 * d33 * d5) - d119 * d25 * d5) - d153 * b3 * d20 * d5) + d362 * d20 * d4) - o_mm_tmp * d25) + vb_mm_tmp * d20 * d3) + 4.0 * d49 * a5 * d22 * d5) + 4.0 * d49 * b5 * c5 * d22) + 4.0 * (a4 * a4) * b5 * d44 * d5) - d311 * d86 * d5) - d254 * b4 * d86 * d4) + d372 * d3) - d366 * c5) + d367 * c5) - d281 * d33 * d5) - d13 * d47 * d5) + d312 * d29 * d5) - d313 * d3) + d308 * d86 * d5) + d314 * d3) - d368 * d20 * d5) + d369 * d20 * d4) + d342 * d3) - d212 * d47 * d5) - d343 * d47 * d4) + d344 * d3) - d312 * d33 * d5) + d315 * d47 * d5) - b_d4 * d0 * d25) + d160 * d0 * d22) - d176 * d25) + d316 * c0 * d22) + d195 * d1 * d25) - d275 * d19 * d1) - d286 * d0) + 4.0 * b0 * d40 * d47 * d0) - d365 * d0) + d287 * d0) - d288 * d19) - d289 * d0 * d42) + d52 * d0 * d25) - d363 * d39) + d183 * d0 * d22) + d196 * d25) - d197 * d19 * d3) + d198 * d0 * d25) - d371 * d19) - 16.0 * b1 * d43 * d44 * d1) + d292 * b1 * d1 * d42) - d159 * d19 * d1) + d216 * b1 * d33 * d1) + d219 * d25) - d188 * d22 * d3) + d54 * d19 * d3) - 4.0 * b0 * d7 * d33 * d0) - 4.0 * b0 * d43 * d44 * d3) + d318 * d0) + 16.0 * b1 * d40 * d47 * d1) - 16.0 * b1 * d7 * d29 * d1) + 4.0 * b2 * d7 * d44 * d2) + 12.0 * b3 * d43 * d44 * d0) - d256 * d3 * d42) - d257 * d2 * d25) + d290 * d0 * d42) + d258 * d1 * d25) - d363 * d42) - d339 * b1 * d1 * d39) + d319 * d19 * d2) + d240 * d0 * d25) - d240 * d19 * d3) - d189 * b2 * d47 * d2) - d373 * c3 * d22) + d375 * d0) + d335 * d19) - 12.0 * b0 * d40 * d47 * d3) + d364 * d44 * d5) - d365 * d3) + d376 * d86 * d2) + d211 * d25 * d5) + d290 * d39 * d3) - d55 * d0 * d25) - d291 * d2 * d25) + d277 * d0 * d25) - d277 * d19 * d3) + d50 * d19 * d5) - d317 * d39 * d3) + d377 * d22 * d2) + d346 * d0 * d39) + d378 * d3) - d217 * b5 * d47 * d0) - d374 * b2 * d47 * d2) - d59 * d3) + d347 * d0) - 9.0 * d7 * b5 * d44 * d0) + d175 * d47 * d5) - d316 * d86 * d5) + d290 * d22 * d5) - d293 * d22 * d4) + d242 * d22 * d3) + d181 * d25 * d5) - d320 * d19 * d5) + d379 * d39 * d3) + d362 * d19 * d4) + vb_mm_tmp * d0 * d25) - vb_mm_tmp * d19 * d3) - 16.0 * d12 * b3 * d22 * d3) - 4.0 * d49 * b0 * d22 * d5) - 4.0 * (a3 * a3) * b5 * d0 * d22) + d373 * d86 * d5) - d393 * d86 * d4) + d396 * d3) - d334 * d44 * d5) + d397 * d3) + d374 * b4 * d44 * d4) - d333 * d3) + d366 * d0) - d398 * d3) - d367 * d0) - 4.0 * b3 * d43 * d44 * d3) + d290 * d3 * d42) - d56 * d19 * d3) + d375 * d3) - d220 * d25 * d5) - d348 * d25 * d4) - d368 * d19 * d5) + d369 * d19 * d4) + d58 * d19 * d3) - d218 * d47 * d5) - d189 * b4 * d47 * d4) + 9.0 * d * b5 * d47 * d3) + d336 * b4 * d44 * d4) + 3.0 * d7 * b5 * d44 * d3) - d387 * a5 * c1 * d26) + d60 * a3 * c2 * d26) - d394 * c1 * d26) + d381 * c0 * d26) + d384 * c0 * d26) - d386 * d39) - d381 * c3 * d26) + d390 * a5 * c1 * d26) + d395 * c1 * d26) - d382 * a4 * c4 * d26) - d384 * c3 * d26) + d386 * d42) + d387 * b0 * c1 * d26) - d391 * c0 * d26) - d388 * b0 * c2 * d42) + d399 * c0 * d42) + d400 * c0 * d26) - d401 * d20 * d2) + d402 * d0) - d403 * c0 * d42) - d404 * b2 * c2 * d20) + d405 * b2 * c0 * d20) - d1143 * c3 * d26) + 8.0 * a0 * a3 * a5 * d0 * d39) - 8.0 * a0 * a3 * b0 * c5 * d39) + d425 * c0 * d39) + d428 * c4 * d39) - d419 * c0 * d39) - d403 * c3 * d39) - d420 * d0) + d426 * c0 * d39) - d421 * c0 * d20) - d408 * b1 * c2 * d42) + d408 * b2 * c1 * d42) + d445 * c0 * d26) + d424 * c0 * d39) - d409 * a5 * d1 * d42) + d448 * d42) - d409 * b5 * c1 * d42) + d388 * a3 * d2 * d42) - d444 * d42) + d388 * b3 * c2 * d42) + d447 * c3 * d26) + d417 * b2 * c2 * d42) - d446 * c0 * d26) - d403 * c5 * d22) - d439 * b1 * c1 * d42) + d414 * c0 * d22) - d429 * d20 * d2) + d430 * d20 * d1) - d412 * b0 * c1 * d42) + d415 * c0 * d42) - d431 * d20) + d413 * b0 * c2 * d42) - d422 * c0 * d42) + d433 * d20) + 24.0 * a0 * a1 * b1 * d20 * d5) - d434 * d20 * d1) + d440 * d25) - d402 * d3) + d435 * d20 * d2) - d441 * d20 * d1) - d442 * c5 * d42) + d436 * d20 * d2) - d443 * d20 * d1) + d450 * c3 * d42) + d403 * d29 * d5) - d451 * d20 * d1) - d414 * d29 * d0) + dc_mm_tmp * c5) - ec_mm_tmp * d20) + fc_mm_tmp * d20) - d1177 * d20) - 16.0 * a1 * a2 * a4 * d19 * d5) + d1058 * d19 * d4) - d505 * d19) + d506 * d0) + d494 * d19) + d454 * a5 * d1 * d39) - d504 * d39) + d454 * b5 * c1 * d39) + d457 * b1 * c4 * d39) - d467 * d19) + d468 * d0) - d457 * b4 * c1 * d39) - d458 * b0 * d20 * d1) - d415 * c3 * d39) + d469 * d19) - d470 * d0) + d496 * d19) + d412 * b3 * c1 * d39) - d472 * d19) - d65 * d20) - d486 * d20) + d487 * d20) - d475 * d19 * d2) + d488 * d20 * d2) + wb_mm_tmp * d19) - d461 * d20 * d0) - d460 * b5 * c2 * d19) - d501 * d20 * d1) - d463 * c5 * d19) + d476 * d0) - d477 * d19) + d478 * d19) + d498 * d19) - d500 * d25) + d484 * c3 * d19) - d479 * d19) - 8.0 * a2 * b0 * b2 * c3 * d20) + d489 * d20) - d503 * d20) + d490 * d20) - d491 * d20) + d507 * b1 * c1 * d39) - d508 * d19) + d510 * d20) - d513 * d20) + ic_mm_tmp * d20) - lc_mm_tmp * d20) - d569 * c0 * d29) - d417 * a4 * d39 * d4) - 6.0 * a0 * a3 * a5 * d19 * d5) - xb_mm_tmp * b0 * d20 * d5) + d551 * c5 * d39) - d417 * b4 * c4 * d39) - d526 * d19) + d527 * d0) + d528 * d19 * d4) + d539 * d20 * d4) - d407 * b3 * c4 * d39) + d419 * c3 * d39) + d529 * d19) - d530 * d0) + d531 * d19) - d547 * d25) + d420 * d3) - yb_mm_tmp * d19) + ac_mm_tmp * d0) + bc_mm_tmp * d19) + d548 * d25) - d62 * c3 * d19) + d540 * d20) + d421 * c3 * d20) + d541 * d20) + d538 * c3 * d26) - d390 * b3 * c1 * d26) - d413 * a5 * d22 * d2) + d422 * c5 * d22) - d413 * b5 * c2 * d22) - d521 * b2 * c4 * d22) + d521 * b4 * c2 * d22) + d549 * d22) - d522 * b3 * c2 * d22) - d523 * b0 * c4 * d39) + d550 * d39) - d534 * d19) + d535 * d0) - d507 * b2 * c2 * d22) - d544 * c0 * d39) + 18.0 * a3 * a5 * b5 * c0 * d19) + d542 * d20) + d537 * d19) - 24.0 * a4 * a5 * b4 * c0 * d19) - d553 * c0 * d20) + d555 * c0 * d20) - d383 * c3 * d26) + d407 * a5 * d22 * d4) - d419 * c5 * d22) + d407 * b5 * c4 * d22) - d403 * d33 * d5) + d439 * b4 * c4 * d22) - 16.0 * a0 * a5 * b5 * c3 * d22) + 8.0 * a0 * a5 * b5 * d33 * d0) - d659 * c5) + d415 * d29 * d5) - d615 * d29 * d1) + d607 * c5) + d422 * c3 * d42) - d691 * c2 * d42) - d484 * d44 * d5) + d466 * d44 * d2) - d705 * c5) + d1137 * d22) + d629 * b0 * c4 * d22) - d1388 * d22) + 8.0 * a5 * b0 * b5 * c0 * d33) - d624 * d29) + d628 * d44 * c2) - d385 * d3 * d42) + d648 * c5 * d42) - d425 * c3 * d42) - d425 * d29 * d5) - d426 * c3 * d42) - d426 * d29 * d5) + d62 * d44 * d5) + 8.0 * a0 * a5 * b5 * (c2 * c2) * d3) - d660 * c5) + d381 * d25 * d5) + d505 * d25) - d506 * d3) - 24.0 * a1 * a3 * b1 * d20 * d5) + d662 * d20 * d1) - d455 * d2 * d25)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((gc_mm_tmp * d20 * d4 + d467 * d25) - d468 * d3) - d556 * b4 * d20 * d1) - d560 * d25) - d469 * d25) + d470 * d3) + d557 * d20 * d1) - d562 * d25) + d472 * d25) + d558 * d20) + d563 * d20) - d564 * d20) + d565 * d20) - d475 * d2 * d25) - wb_mm_tmp * d25) + d460 * b2 * (c5 * c5) * d3) - hc_mm_tmp * d20 * d2) + 16.0 * a2 * a3 * b4 * d20 * d1) - 8.0 * a2 * a3 * b5 * c2 * d25) + 16.0 * a2 * a4 * b1 * c5 * d25) - d476 * d3) - d477 * d25) + d462 * d20 * d1) + d478 * d25) + 24.0 * a2 * a5 * b2 * c3 * d25) - d525 * d86 * d5) - d479 * d25) + d522 * b5 * d86 * d2) - d574 * d20) + d575 * d20) - d585 * c5) + d593 * d20) + d594 * d20 * d1) - d424 * c3 * d42) - d424 * d29 * d5) + d416 * d20 * d1) - d508 * d25) + d567 * c0 * d42) + d570 * d29 * d0) - d576 * c5) + d578 * d20) - d580 * d20) + d596 * d20) - d591 * d25) - jc_mm_tmp * d20) - kc_mm_tmp * d20) + d597 * d20) - d572 * d29 * c5) + d586 * c5) + d569 * d29 * c3) + d584 * b3 * c1 * d20) + d587 * b5 * d86 * c2) + cc_mm_tmp * d29) + d384 * d25 * d5) + xb_mm_tmp * b3 * d20 * d5) - d582 * d20 * d4) + d526 * d25) - d527 * d3) + d528 * d25 * d4) - d517 * d20 * d4) - d529 * d25) + d530 * d3) + d531 * d25) + yb_mm_tmp * d25) - ac_mm_tmp * d3) + bc_mm_tmp * d25) - 18.0 * a0 * a5 * b5 * c3 * d25) + 8.0 * a0 * a5 * b5 * d86 * d5) - mc_mm_tmp * d20) - d606 * d20) - d415 * d33 * d5) + d615 * d33 * d1) - d608 * c5) - d609 * d20 * d4) + d523 * b3 * c4 * d39) - d533 * c3 * d39) - d617 * c5 * d19) + d599 * d0) + d534 * d25) - d535 * d3) + d567 * c3 * d39) + d623 * d19) - d600 * d0) + d74 * c0 * d25) - d620 * d19) - d610 * d20) - d611 * d20) - d601 * c0 * d20) + d537 * d25) - d604 * c0 * d25) + d622 * d19) - oc_mm_tmp * d20) + d553 * c3 * d20) + d602 * c0 * d20) - d612 * d20) + d613 * c5) + d624 * d33) + d425 * d33 * d5) + d426 * d33 * d5) - d414 * d33 * d3) + d605 * d33 * c5) - d484 * d47 * d5) + d466 * d47 * d2) - d482 * d47 * c5) + d424 * d33 * d5) + d567 * c5 * d22) - d570 * c3 * d22) - d603 * d0) + d625 * c5) + d626 * c5) - d569 * c3 * d33) + d628 * c2 * d47) - cc_mm_tmp * d33) + d62 * d47 * d5) + d567 * d29 * d5) - d74 * d44 * d5) - 8.0 * a3 * a5 * b5 * d29 * d3) + 8.0 * a3 * b3 * b5 * d29 * c5) + 8.0 * a4 * a5 * b4 * d44 * d5) - d536 * d44 * d4) + d631 * d44 * c5) + d554 * d47 * c5) - d632 * d44 * c5) - d573 * d29 * c3) - d633 * d44 * c4) + d72 * d20 * d4) - d599 * d3) + d600 * d3) - d570 * d86 * d5) + d630 * d20) + d640 * d20) + d646 * d86 * d5) - d629 * b5 * d86 * d4) - pc_mm_tmp * d20) + qc_mm_tmp * c5) - d644 * c5) - 32.0 * a5 * b4 * b5 * d86 * c4) - d567 * d33 * d5) + d603 * d3) - d647 * c5) + d573 * c3 * d33) - d74 * d47 * d5) + d604 * d47 * d5) - d536 * d47 * d4) + d642 * c5) - d643 * c5) - d633 * d47 * c4) + d409 * b0 * d1 * d42) - d427 * d0 * d42) + d635 * b1 * c1 * d42) - d638 * c0 * d42) - d401 * d2 * d25) + d61 * d0 * d25) + d634 * d0 * d42) + d645 * d20 * d1) - 8.0 * a0 * b0 * b2 * c2 * d25) + d636 * c0 * d42) - d67 * d20 * d0) + 8.0 * a2 * b0 * b2 * c0 * d25) + d634 * d39 * d3) - d649 * d39) - d63 * d0 * d25) - d635 * b2 * d33 * d2) + d636 * c3 * d39) + d69 * d20 * d0) - d64 * b5 * c0 * d25) + je_mm_tmp * d33 * d0) - sc_mm_tmp * c0 * d39) + d634 * d22 * d5) - d425 * d0 * d22) - d428 * d22 * d4) + d419 * d0 * d22) + d403 * d22 * d3) - d426 * d0 * d22) + d636 * c5 * d22) - d650 * c4 * d22) + d452 * c3 * d22) - d659 * d0) - d605 * c0 * d22) - d429 * d2 * d25) + d430 * d1 * d25) - d431 * d25) + d433 * d25) - d424 * d0 * d22) - d571 * c0 * d22) + d652 * c0 * d22) - d572 * c0 * d22) + d391 * d25 * d5) + d653 * d2 * d25) - d434 * d1 * d25) + d435 * d2 * d25) + d634 * d3 * d42) + d436 * d2 * d25) - d649 * d42) + d654 * d2 * d25) - d451 * d1 * d25) + 8.0 * a0 * b0 * b3 * c3 * d42) - d636 * d29 * d5) + d650 * d29 * d4) - dc_mm_tmp * d3) + d657 * d25) - ec_mm_tmp * d25) + fc_mm_tmp * d25) + d660 * d0) - d658 * d19 * d4) - d453 * d0 * d25) + d453 * d19 * d3) - d538 * d19 * d5) + d485 * d39 * d3) - d661 * d19 * d4) - d454 * b3 * d1 * d39) + d662 * d19 * d1) + d663 * d2 * d25) + gc_mm_tmp * d19 * d4) - d456 * d0 * d25) + 16.0 * a1 * a4 * b2 * d19 * d3) - 32.0 * a1 * a4 * b4 * d19 * d1) - 8.0 * a1 * a5 * b0 * d1 * d25) + d459 * d0 * d25) - d459 * d19 * d3) + d557 * d19 * d1) + d67 * c5 * d25) - d667 * d20 * d3) + d669 * d25) - d65 * d25) - d665 * b2 * d33 * d2) + d423 * c3 * d39) - d68 * c5 * d19) + d678 * d20 * d0) + d558 * d19) + d486 * d25) - d563 * d19) - d672 * d19) - d487 * d25) + d564 * d19) + d565 * d19) + d488 * d2 * d25) - d673 * d19 * d4) + d461 * d0 * d25) - d461 * d19 * d3) + hc_mm_tmp * d19 * d2) - d463 * d0 * d25) + d463 * d19 * d3) - 24.0 * a2 * b0 * b2 * c3 * d25) + d489 * d25) + 128.0 * a2 * b1 * b2 * d33 * d1) - d675 * d19) - d490 * d25) + d574 * d19) + d491 * d25) - d575 * d19) + d416 * d19 * d1) + d510 * d25) - d509 * c0 * d42) + d576 * d0) - d679 * d19) - d666 * b3 * c1 * d39) + d578 * d19) + d580 * d19) + d681 * d25) - d682 * d0) - ic_mm_tmp * d25) + jc_mm_tmp * d19) - kc_mm_tmp * d19) - lc_mm_tmp * d25) + 8.0 * a5 * b0 * b3 * (c2 * c2) * d0) + 8.0 * a5 * b1 * b3 * c1 * d19) + d687 * c0 * d29) - d400 * d25 * d5) + d383 * d19 * d5) - d648 * d39 * d3) - d582 * d19 * d4) - d516 * d0 * d25) + d516 * d19 * d3) - d539 * d25 * d4) - d517 * d19 * d4) + d518 * d0 * d25) - d518 * d19 * d3) - d519 * d0 * d25) + d519 * d19 * d3) - d69 * c5 * d25) + d689 * d20 * d3) - d540 * d25) + 18.0 * a0 * b0 * b5 * c3 * d25) - d452 * d86 * d5) - d693 * b5 * d33 * d1) + 32.0 * a0 * b2 * b3 * d33 * d2) - mc_mm_tmp * d19) - d541 * d25) + d606 * d19) + d638 * d33 * d5) - d637 * b5 * d33 * d1) + d608 * d0) - d422 * d22 * d3) + d691 * d22 * d2) - 32.0 * a2 * b0 * b2 * (c4 * c4) * d3) + nc_mm_tmp * b3 * d33 * d2) - d683 * c3 * d22) - d685 * d0) - d609 * d19 * d4) - d524 * d0 * d25) + d524 * d19 * d3) + d684 * b2 * d33 * d2) - d509 * c3 * d39) + d77 * c5 * d19) - d692 * d20 * d0) - d610 * d19) - d542 * d25) + d611 * d19) + d695 * c2 * d22) - 18.0 * a3 * b3 * b5 * c0 * d19) - oc_mm_tmp * d19) + d552 * b4 * c0 * d25) - d552 * b4 * c3 * d19) + 24.0 * a4 * b3 * b4 * c0 * d19) - d728 * b1 * d33 * d1) - 6.0 * a5 * b0 * b3 * c0 * d25) + d612 * d19) + d613 * d0) - d708 * b5 * c1 * d33) + 32.0 * b0 * b2 * b3 * c2 * d33) - d648 * d22 * d5) + d425 * d22 * d3) + d426 * d22 * d3) - d702 * d33 * d5) + d703 * d33 * d3) + d605 * c3 * d22) - d697 * c2 * c4) - d423 * d29 * d5) + d665 * b4 * d29 * d4) + d66 * d44 * d5) - d607 * d3) - d474 * d44 * d5) + d699 * d44 * d4) + 32.0 * a1 * b3 * b5 * d29 * d1) + d698 * c0 * c1 * c5) + d89 * c0 * c2 * c4) + d704 * d47 * d5) - d481 * d44 * d5) + d480 * d44 * d4) + d483 * d44 * d5) - d583 * d44 * d4) + d705 * d3) - d701 * d47 * d0) - d706 * d44 * d2) - 8.0 * a2 * d10 * c0 * c2 * c3) + d424 * d22 * d3) - d567 * d0 * d22) - d509 * c5 * d22) + d571 * c3 * d22) + d666 * b5 * d29 * d1) - d579 * d44 * d2) - d639 * c0 * d22) - d515 * d44 * d5) - 128.0 * a4 * b1 * b4 * d29 * d1) + d707 * d44 * d2) + d572 * c3 * d22) + d710 * d44 * d4) + d614 * b3 * d29 * d1) - d711 * d44 * d1) - d627 * d44 * d2) - tc_mm_tmp * c5) + d712 * b5 * d44 * c4) + 32.0 * b1 * b3 * b5 * c1 * d29) - rc_mm_tmp * d44 * c2) - d1233 * d47 * d5) - 32.0 * a0 * b3 * b4 * d29 * d4) - d532 * d44 * d5) + d727 * d44 * d4) - d719 * c5) + d68 * d20 * d3) + d683 * d86 * d5) - 128.0 * a2 * b2 * b4 * d86 * d4) + d585 * d3) - 32.0 * a2 * b3 * b5 * d86 * d2) + d726 * d29 * d5) - d684 * b4 * d29 * d4) - d76 * d44 * d5) - d577 * d20 * d1) - d694 * b5 * d86 * d2) - d725 * d29 * d0) - d651 * b3 * d29 * d4) + d553 * d44 * d5) + d682 * d3) + d713 * d44 * d4) + 128.0 * a4 * b2 * b4 * d86 * d2) + d715 * d0) - 24.0 * a4 * b4 * b5 * d44 * d0) - d555 * d44 * d5) + d716 * d44 * d4) - d586 * d3) + d723 * d47 * d0) - d587 * b3 * d86 * d2) + 18.0 * a5 * b3 * b5 * d44 * d0) - 32.0 * b0 * b3 * b4 * d29 * c4) - d720 * c5) + d718 * d44 * c4) - 32.0 * b2 * b3 * b5 * d86 * c2) + 32.0 * a0 * b4 * b5 * d86 * d4) + d685 * d3) + d72 * d19 * d4) - d73 * d19 * d3) + d75 * d19 * d3) - d77 * d20 * d3) - d695 * d33 * d2) + d630 * d19) + d640 * d19) - d652 * d86 * d5) + d651 * b5 * d86 * d4) - pc_mm_tmp * d19) - qc_mm_tmp * d0) + d728 * b4 * d86 * d4) - d1227 * d86 * d3) + ve_mm_tmp * d86 * d0) + 32.0 * b0 * b4 * b5 * d86 * c4) - 8.0 * a0 * b3 * b5 * d33 * d3) - d66 * d47 * d5) + d474 * d47 * d5) - d1041 * d47 * d2) - d820 * c5) - d89 * c2 * c3 * c4) + d481 * d47 * d5) - d483 * d47 * d5) - d583 * d47 * d4) + 24.0 * a2 * b2 * b5 * d47 * d3) - d706 * d47 * d2) + d509 * d33 * d5) - d625 * d3) - d579 * d47 * d2) + d647 * d0) + d760 * c1 * c2 * c4) + d515 * d47 * d5) - d514 * d47 * d2) + d707 * d47 * d2) - d626 * d3) - d1110 * d47 * d2) + d711 * d47 * d1) - d627 * d47 * d2) + d761 * c5) - d687 * c3 * d33) + d762 * c5) - d1369 * c2 * d47) - rc_mm_tmp * c2 * d47) + d532 * d47 * d5) + d727 * d47 * d4) + d76 * d47 * d5) + d1353 * b4 * d29 * d4)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d735 * d44 * d5 + d639 * d29 * d3) + d731 * c5) - d553 * d47 * d5) + d713 * d47 * d4) - d736 * d44 * d5) - d715 * d3) + d733 * d44 * d3) - d642 * d0) + 8.0 * a4 * d10 * c0 * c3 * c4) + d555 * d47 * d5) + d716 * d47 * d4) - 18.0 * a5 * b0 * b5 * d47 * d3) - d734 * d44 * d3) + d643 * d0) + d717 * c5) + d718 * d47 * c4) + d639 * d86 * d5) - d644 * d3) - d737 * c5) + d645 * d1 * d25) - d67 * d0 * d25) + d69 * d0 * d25) - d636 * d22 * d3) + d221 * c0 * c1 * d1) - 8.0 * a1 * d10 * c0 * c1 * d0) + sc_mm_tmp * d0 * d22) - d739 * c0 * c2 * d2) - d719 * d0) + d68 * d19 * d3) + d744 * d0) - d577 * d19 * d1) - d745 * d0 * d2) + d764 * c5 * d0) + d747 * d0 * d2) - d77 * d19 * d3) - d687 * d86 * d0) - d753 * c2 * d2) + d750 * d0) + d751 * d0 * d5) - d738 * c3 * d5) + d752 * c0 * c4 * d4) - d738 * c5 * d3) - d765 * c5 * d0) - d697 * c3 * d1) - 128.0 * a1 * d43 * c1 * c2 * d2) + 128.0 * a2 * d43 * c1 * c2 * d1) + d766 * c5 * d0) + d760 * c0 * c1 * d1) - d757 * c0 * c4 * d0) + d761 * d0) + d758 * d47 * d2) - 8.0 * b0 * b1 * b5 * d47 * d1) + 8.0 * b0 * b2 * b3 * d47 * d2) - d767 * c5) - d759 * d44 * d4) + tc_mm_tmp * d3) - d762 * d0) + 8.0 * b1 * b3 * b5 * d44 * d1) + d754 * d0) - d768 * c5 * d5) - d763 * c5 * d1) + d739 * c2 * c3 * d2) + 12.0 * a0 * d10 * c0 * c3 * d3) - uc_mm_tmp * c2 * d1 * d2) + d741 * c1 * d5) + d741 * c5 * d1) + d740 * c1 * c5 * d0) + 32.0 * a2 * b_d5 * c1 * d1 * d2) - d744 * d3) - d743 * c3 * d2) - d742 * c2 * c3 * d0) + d769 * c0 * c2 * d2) - 12.0 * a3 * d10 * c0 * c3 * d0) + dd_mm_tmp * c5 * d0) - 32.0 * a5 * d43 * c0 * c1 * d1) - d686 * b4 * d44 * d4) + d720 * d3) - d717 * d0) + d794 * c5) - 32.0 * b2 * d43 * c0 * c2 * c3) - xc_mm_tmp * c2 * d2) + d770 * b2 * c1 * c2 * d1) + d779 * d0 * d5) + d222 * c1 * d1 * d5) - d771 * c1 * d2 * d4) - d771 * c2 * d1 * d4) + d745 * d2 * d3) - d771 * c4 * d1 * d2) + d786 * c5 * d2) + d772 * c0 * d1 * d5) + d87 * c0 * d2 * d4) + d780 * d0 * d5) + d781 * d0 * d4) + d87 * c4 * d0 * d2) + d782 * d0 * d1) + d788 * c5 * d5) - d774 * c3 * d5) + 128.0 * a1 * d40 * c1 * c4 * d4) - d774 * c5 * d3) - d773 * c5 * d1) - d747 * d2 * d3) - d746 * c2 * d0 * d3) - d783 * d0 * d2) + d776 * c3 * d5) - 32.0 * a2 * d * c2 * c4 * d4) + d776 * c5 * d3) + d775 * c5 * d2) + d784 * d0 * d2) - d790 * c5 * d2) + d791 * c5 * d1) - d227 * c0 * c5 * d0) - d777 * c2 * d5) - d777 * c5 * d2) + d792 * c2 * c4 * d2) - d793 * c5 * d1) - 128.0 * a4 * d40 * c1 * c4 * d1) + d796 * c2 * d4) + d796 * c4 * d2) - d798 * c5 * d1) - d797 * c2 * c3 * d2) + d795 * c2 * c4 * d1) + 32.0 * a5 * d40 * c1 * c3 * d1) - d799 * c0 * c2 * d2) + d170 * c0 * c3 * d0) + 8.0 * b0 * b3 * b5 * (c1 * c1) * d3) - gd_mm_tmp * c5) - 8.0 * d12 * a5 * c0 * d0 * d5) + d812 * c5 * d5) - vc_mm_tmp * d0) - d801 * c2 * d4) - d801 * c4 * d2) + d821 * c5 * d1) + d260 * c2 * c3 * d2) - d800 * c2 * c4 * d1) + d804 * c1 * d5) + d802 * c2 * d4) + d802 * c4 * d2) + d804 * c5 * d1) + wc_mm_tmp * c5 * d0) + d263 * c2 * c4 * d0) - d750 * d3) - d749 * c3 * d2) - d748 * d0) + d265 * c2 * d2) - d807 * c0 * c1 * d1) + d813 * c5) - d815 * c5) + d216 * b5 * c1 * c2 * c4) - d751 * d3 * d5) - d808 * d0 * d5) + d809 * d0 * d4) - d200 * c5 * d0 * d3) - d816 * c5 * d5) + d817 * c5 * d4) - d752 * c3 * c4 * d4) + d163 * c3 * c5 * d3) - 12.0 * a0 * d7 * c0 * c5 * d5) + d820 * d3) + d806 * c3 * d5) - 128.0 * a2 * b_d3 * c2 * c4 * d4) + d806 * c5 * d3) + d805 * c5 * d2) - d811 * d0 * d5) + d819 * c5 * d5) - id_mm_tmp * c5 * d2) - d778 * c0 * c4 * d4) - d228 * c1 * c3 * d1) - d823 * d0 * d4) - d824 * c4 * d5) - d824 * c5 * d4) - jd_mm_tmp * c5 * d0) + 128.0 * a4 * b_d3 * c2 * c4 * d2) + 32.0 * a4 * d40 * c0 * c3 * d4) + 32.0 * a4 * d40 * c0 * c4 * d3) + 32.0 * a4 * (b2 * b2) * c3 * c4 * d0) + d825 * c3 * d5) - d797 * c0 * c4 * d4) + d825 * c5 * d3) + d837 * c5 * d0) - d828 * c2 * c3 * d2) - d147 * c0 * c3 * d3) + 12.0 * a5 * d7 * c0 * c5 * d0) - d224 * c3 * d5) + d753 * c4 * d4) - d754 * d3) - yc_mm_tmp * d0) - ad_mm_tmp * c5 * d0) - d831 * c0 * c4 * d0) + d832 * d0) - d840 * c5) + d841 * c5) + d842 * c5) + d836 * b4 * c0 * c3 * c4) - d833 * d0 * d5) - d168 * c3 * c5 * d5) + d850 * c5 * d4) + d843 * c5 * d1 * d5) + 32.0 * a2 * (b4 * b4) * c2 * c3 * d3) + d229 * c0 * c5 * d5) - d769 * c2 * c3 * d2) + d731 * d3) - d827 * c4 * d5) - d827 * c5 * d4) - d826 * c4 * c5 * d0) + d828 * c0 * c4 * d4) - d844 * c5 * d2 * d5) + d322 * c2 * d2 * d5) - d845 * c2 * c5 * d5) + d846 * c5 * d2) - d829 * a5 * c1 * d1 * d5) + d848 * c5 * d5) - d849 * c5 * d1) + d834 * d0 * d5) - d835 * c0 * c5 * d5) + d851 * d0) - d830 * b4 * c0 * c4 * c5) - d779 * d3 * d5) - d755 * c5 * d3) - d780 * d3 * d5) - d781 * d3 * d4) - d772 * c3 * d1 * d5) - d87 * c3 * d2 * d4) + uc_mm_tmp * c4 * d1 * d4) - 16.0 * a1 * b_d5 * c4 * d2 * d3) - d782 * d1 * d3) - d867 * c5 * d5) + d783 * d2 * d3) + d852 * c4 * d5) + d852 * c5 * d4) + d854 * c3 * d5) - d865 * c2 * c4 * d4) + d854 * c5 * d3) + d868 * c5 * d2) + d869 * c5 * d1) - d226 * c1 * d1 * d5) + d855 * c1 * d2 * d4) + d855 * c2 * d1 * d4) - d784 * d2 * d3) + d855 * c4 * d1 * d2) - d870 * c5 * d2) + d857 * c3 * d5) + d857 * c5 * d3) + d856 * c3 * c5 * d0) - 32.0 * a4 * b_d5 * c1 * d1 * d4) + 32.0 * a4 * d7 * c2 * c4 * d2) - d858 * c2 * d4) - d858 * c4 * d2) + d871 * c5 * d1) + d299 * c2 * c3 * d2) - d799 * c2 * c4 * d1) - d737 * d3) + d873 * c5) + d874 * c5) + d875 * c5) - d860 * d0 * d5) - d876 * c5 * d5) - d877 * c5 * d2 * d5) + d863 * c2 * d2 * d5) - d879 * c5 * d5) + d864 * c2 * c5 * d2) - d861 * d0 * d5) + d300 * c0 * d3 * d5) + d862 * d0 * d5) + d300 * c5 * d0 * d3) - d296 * c5 * d5) - d880 * c5 * d5) + d298 * c3 * d5) + vc_mm_tmp * d3) + d297 * c3 * c5 * d0) - wc_mm_tmp * c3 * d5) + xc_mm_tmp * c4 * d4) - d241 * b1 * c1 * c5 * d3) - d254 * b1 * c2 * c3 * d4) - 16.0 * b_d5 * b1 * c2 * c4 * d3) - 16.0 * b_d5 * b1 * c3 * c4 * d2) - 8.0 * (a5 * a5) * b1 * c3 * c5 * d1) + d748 * d3) + d882 * c2 * d4) + d882 * c4 * d2) - d896 * c5 * d1) - d264 * c2 * c3 * d2) + d881 * c2 * c4 * d1) - d770 * b4 * c1 * c4 * d1) + d807 * c1 * c3 * d1) - d354 * b5 * c1 * c2 * c4) + d808 * d3 * d5) - d809 * d3 * d4) - d892 * c5 * d5) + d893 * c5 * d4) - d894 * c5 * d1 * d5) + d811 * d3 * d5) + d886 * d0 * d5) - d887 * d0 * d4) + d810 * c5 * d0 * d3) + 12.0 * a3 * d * c3 * c5 * d5) - d891 * c5 * d4) + d778 * c3 * c4 * d4) - d756 * c3 * c5 * d3) + d895 * c5 * d5) + d823 * d3 * d4) + d888 * d0 * d4) + d822 * c4 * d0 * d3) - d757 * c3 * c4 * d3) - d884 * c4 * d5) - d884 * c5 * d4) - d883 * c4 * c5 * d0) + d795 * c3 * c4 * d4) - 12.0 * a5 * d * c3 * c5 * d3) - d885 * c3 * d5) + d299 * c0 * c4 * d4) - d885 * c5 * d3) - d355 * c3 * c5 * d0) - d889 * d0 * d5) - d898 * c5 * d5) + d899 * a5 * c1 * d1 * d5) - d901 * c5 * d5) + d902 * c5 * d1) - d266 * c4 * d4) + yc_mm_tmp * d3) + ad_mm_tmp * c3 * d5) - d265 * c4 * d4) + d223 * b3 * c0 * c5 * d3) + d223 * b3 * c3 * c5 * d0) + 8.0 * b_d5 * b4 * c0 * c3 * d4) + 8.0 * b_d5 * b4 * c0 * c4 * d3) + bd_mm_tmp * d0) - d832 * d3) - d905 * c5) - d906 * c5) + d833 * d3 * d5) - d914 * c5 * d2 * d5) + cd_mm_tmp * d0 * d5) + d907 * c5 * d5) - d908 * c5 * d3) + d301 * c2 * d2 * d5) - d916 * c5 * d5) + nd_mm_tmp * c5 * d2) - d834 * d3 * d5) - d324 * c3 * d0 * d5) - d324 * c5 * d0 * d3) + d835 * c3 * c5 * d5) + d327 * c0 * c5 * d5) - d325 * c3 * d5) - d851 * d3) - d328 * c5 * d0) + d909 * c5 * d4 * d5) - d322 * c4 * d4 * d5) + d860 * d3 * d5) + d911 * c5 * d5) + d353 * c5 * d5) - d912 * c5 * d4) + d861 * d3 * d5) - d862 * d3 * d5) + d276 * c5 * d5) - 8.0 * (a2 * a2) * b5 * c3 * c5 * d3) - d918 * d0 * d5) - d917 * c5 * d5) - d886 * d3 * d5) + d887 * d3 * d4) - d888 * d3 * d4) + d913 * c5 * d4 * d5) - d863 * c4 * d4 * d5) + d889 * d3 * d5) + d920 * c5 * d5) + d897 * c5 * d5) - d921 * c5 * d4) + d264 * c3 * c4 * d4) - d922 * c5 * d3) - bd_mm_tmp * d3) - cd_mm_tmp * d3 * d5) + d310 * a5 * c3 * d3 * d5) - d327 * c3 * c5 * d5) + 8.0 * d41 * b5 * c3 * c5 * d3) + od_mm_tmp * c5 * d4 * d5) - 8.0 * (a3 * a3) * a5 * c4 * d4 * d5) + d918 * d3 * d5) + d972 * c5 * d5) + d214 * c5 * d5) - d973 * c5 * d4) + d763 * d0 * d1) - d741 * d0 * d1) + 32.0 * b0 * d43 * c0 * c1 * d1) - d794 * d0) - d924 * d0 * d2) - d764 * d0 * d3) + d853 * d0 * d2) - d947 * c2 * d2) - fd_mm_tmp * d0) + d937 * d0) + d821 * d0 * d1) - d804 * d0 * d1) + d765 * d0 * d3) + d938 * d0 * d5) - d766 * d0 * d3) + d767 * d3) + d948 * d0) - d949 * d0 * d2) + d950 * d0 * d2) - d224 * d0 * d3) - d951 * d0) + d768 * d3 * d5) + d952 * d0 * d5) - d850 * d0 * d4) + d225 * c5 * d0 * d3) - 32.0 * a1 * d7 * c2 * d1 * d2)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d865 * c1 * d1 * d2 - d923 * d0 * d5) + d827 * d0 * d4) - dd_mm_tmp * d0 * d3) + ed_mm_tmp * c3 * d5) - 32.0 * b0 * b_d3 * c0 * c4 * d4) + ed_mm_tmp * c5 * d3) + kd_mm_tmp * d0) - 32.0 * b1 * d7 * c1 * c2 * d2) + 32.0 * b2 * d7 * c1 * c2 * d1) + 8.0 * d41 * b0 * c0 * d0 * d5) - 8.0 * b_d3 * b3 * c0 * c5 * d0) + 32.0 * (b1 * b1) * b4 * c0 * c4 * d0) - d267 * d0) - d262 * d0 * d3 * d5) - d274 * c1 * d1 * d5) + d785 * c1 * d2 * d4) + d786 * d1 * d4) - d924 * d2 * d3) + d785 * c4 * d1 * d2) + d755 * d0 * d3) - d788 * d3 * d5) - d787 * c3 * d1 * d5) + 32.0 * a1 * d * c4 * d1 * d4) - d787 * c5 * d1 * d3) + d773 * d1 * d3) + d866 * c0 * d1 * d5) + d867 * d0 * d5) + d866 * c5 * d0 * d1) - d775 * d2 * d3) - d201 * c0 * d1 * d4) - d853 * d2 * d3) - d852 * d0 * d4) - d854 * d0 * d3) - d868 * d0 * d2) - d869 * d0 * d1) + d789 * c1 * d1 * d5) - d890 * c1 * d2 * d4) - d890 * c2 * d1 * d4) + d790 * d2 * d3) - d891 * d1 * d2) - d791 * d1 * d3) + d870 * d0 * d2) - d857 * d0 * d3) - d792 * c1 * d1 * d4) + d777 * d2 * d3) + d793 * d1 * d3) + d210 * c3 * d1 * d2) + d798 * d1 * d3) - d871 * d0 * d1) + d926 * c2 * d4) + d926 * c4 * d2) - d927 * c5 * d1) - d302 * c2 * c3 * d2) + d925 * c2 * c4 * d1) + fd_mm_tmp * d3) + gd_mm_tmp * d3) + hd_mm_tmp * c1 * d5) + hd_mm_tmp * c5 * d1) + d_mm_tmp_tmp * c1 * c5 * d0) - d928 * c1 * d4) - d937 * d3) - d872 * c3 * d2) - d928 * c4 * d1) - d873 * d0) - d874 * d0) - d875 * d0) - d812 * d3 * d5) - d296 * d0 * d5) + d829 * b0 * c4 * d0 * d4) - d303 * d0 * d3) + d880 * d0 * d5) - d935 * d0 * d4) + d298 * d0 * d3) - d929 * b1 * c2 * d1 * d2) + d929 * b2 * c1 * d1 * d2) - d801 * d1 * d3) + d882 * d0 * d1) - d930 * c3 * d5) + d933 * b1 * c1 * c4 * d4) - d930 * c5 * d3) - d330 * c5 * d1) - d813 * d3) - d932 * c2 * d4) - d932 * c4 * d2) + d936 * c5 * d1) + d331 * c2 * c3 * d2) - d931 * c2 * c4 * d1) + d815 * d3) + d814 * c3 * d2) - d933 * b4 * c1 * c4 * d1) + d393 * c2 * c3 * d1) + d332 * c1 * c3 * d1) - d836 * b3 * c1 * c3 * d1) - d904 * c1 * d1) + d816 * d3 * d5) - d817 * d3 * d4) + d938 * d3 * d5) + d892 * d0 * d5) - d893 * d0 * d4) + d202 * c5 * d0 * d3) + d894 * d0 * d1 * d5) - 32.0 * a2 * d41 * d0 * d2 * d3) - d805 * d2 * d3) - d819 * d3 * d5) - md_mm_tmp * d0 * d5) + d789 * c4 * d0 * d4) - d818 * c5 * d0 * d3) + id_mm_tmp * d2 * d3) + 8.0 * a3 * (b2 * b2) * c3 * d0 * d3) - d895 * d0 * d5) + d824 * d3 * d4) + d942 * d0 * d4) + jd_mm_tmp * d0 * d3) + d884 * d0 * d4) - d837 * d0 * d3) + d885 * d0 * d3) + d206 * c3 * d5) - d947 * c4 * d4) + d948 * d3) + d205 * c3 * c5 * d0) - d268 * c5 * d0 * d5) + d898 * d0 * d5) - d939 * c1 * d1 * d5) + d949 * d2 * d3) + d900 * c0 * d1 * d5) + d901 * d0 * d5) + d900 * c5 * d0 * d1) - d950 * d2 * d3) - d940 * c2 * d0 * d3) - d943 * d0 * d2) + d944 * d0 * d2) - d902 * d0 * d1) + d370 * b0 * c3 * d0 * d3) - d370 * b3 * c0 * d0 * d3) - d941 * c3 * d5) + d331 * c0 * c4 * d4) - d941 * c5 * d3) - d945 * d0) + d839 * c3 * d4) + d840 * d3) + d838 * d0) - d841 * d3) - d842 * d3) + d830 * b3 * c2 * c3 * d2) + d951 * d3) + d905 * d0) + d906 * d0) + d952 * d3 * d5) - d843 * d1 * d3 * d5) - d923 * d3 * d5) - d907 * d0 * d5) - d230 * c5 * d0 * d3) + d908 * d0 * d3) + kd_mm_tmp * d3) + d844 * d2 * d3 * d5) - d304 * d1 * d2 * d5) + d292 * a5 * d1 * d2 * d4) + d309 * b1 * c5 * d1 * d5) + 8.0 * d45 * b2 * c2 * d3 * d5) + 8.0 * d45 * b2 * c3 * d2 * d5) - d954 * b2 * c4 * d2 * d4) + d845 * c5 * d2 * d3) - d329 * c2 * d2 * d5) - d293 * c1 * d2 * d5) - d293 * c2 * d1 * d5) + d954 * b4 * c2 * d2 * d4) - d293 * c5 * d1 * d2) - d323 * c1 * d1 * d5) + d955 * c1 * d2 * d4) + d955 * c2 * d1 * d4) - d846 * d2 * d3) + d960 * d1 * d2) - d848 * d3 * d5) - d847 * c3 * d1 * d5) + d956 * b1 * c4 * d1 * d4) - d847 * c5 * d1 * d3) + d957 * c1 * d1 * d5) - d956 * b4 * c1 * d1 * d4) + d849 * d1 * d3) + d961 * c2 * d2 * d5) - d959 * d0 * d2) - d269 * d0 * d5) + ld_mm_tmp * d0 * d3) - d271 * c3 * d5) - d271 * c5 * d3) - d270 * c3 * c5 * d0) + d267 * d3) - d909 * d0 * d4 * d5) + d352 * d0 * d3 * d5) + 24.0 * d45 * b0 * c4 * d4 * d5) - 18.0 * d45 * b0 * c5 * d3 * d5) + d962 * c5 * d0 * d5) - d910 * c0 * d4 * d5) - d911 * d0 * d5) - d910 * c5 * d0 * d4) + d876 * d3 * d5) + d353 * d0 * d5) - d912 * d0 * d4) + d358 * d0 * d3) + d877 * d2 * d3 * d5) + d879 * d3 * d5) + d878 * c3 * d2 * d5) - d963 * b2 * c4 * d2 * d4) + d878 * c5 * d2 * d3) - d859 * b3 * c2 * d2 * d5) + d963 * b4 * c2 * d2 * d4) - d859 * b5 * c2 * d2 * d3) + 32.0 * d12 * a4 * d0 * d3 * d4) + 16.0 * d12 * b0 * c3 * d3 * d5) - 32.0 * (a2 * a2) * b0 * c4 * d3 * d4) - d965 * d0 * d4) + d935 * d3 * d4) + d966 * d0 * d4) + d934 * c4 * d0 * d3) - d970 * d0 * d3) - d345 * b0 * c5 * d0 * d5) + d345 * b5 * c0 * d0 * d5) + d803 * c3 * d1 * d3) - d896 * d1 * d3) - md_mm_tmp * d3 * d5) + 8.0 * a3 * (b0 * b0) * c4 * d3 * d4) - d942 * d3 * d4) - d913 * d0 * d4 * d5) + d859 * b0 * c4 * d4 * d5) - d305 * d3 * d5) + d968 * d0 * d5) - d919 * c0 * d4 * d5) - d920 * d0 * d5) - d919 * c5 * d0 * d4) + d921 * d0 * d4) + d943 * d2 * d3) - d944 * d2 * d3) + d922 * d0 * d3) + d331 * c3 * c4 * d4) - d945 * d3) - d838 * d3) + d969 * d1 * d4 * d5) + d914 * d2 * d3 * d5) + d903 * d0 * d3 * d5) - d339 * a5 * d1 * d2 * d4) - d967 * c5 * d1 * d5) + d377 * c1 * d4 * d5) + d916 * d3 * d5) + d915 * c3 * d2 * d5) + d377 * c4 * d1 * d5) - d964 * b2 * c4 * d2 * d4) + d377 * c5 * d1 * d4) + d915 * c5 * d2 * d3) - 24.0 * d49 * b3 * c2 * d2 * d5) + d964 * b4 * c2 * d2 * d4) + d307 * c1 * d1 * d5) - d958 * c1 * d2 * d4) - d959 * d1 * d4) + nd_mm_tmp * d2 * d3) - d958 * c4 * d1 * d2) - d310 * b0 * c3 * d3 * d5) + d310 * b3 * c0 * d3 * d5) + 8.0 * d41 * b3 * c3 * d0 * d5) + 8.0 * d41 * b3 * c5 * d0 * d3) - d328 * d0 * d3) - d971 * c4 * d4 * d5) + d255 * b3 * c5 * d3 * d5) - d255 * b5 * c3 * d3 * d5) + d960 * d3 * d4) - d276 * d3 * d5) + d965 * d3 * d4) - d966 * d3 * d4) - od_mm_tmp * d0 * d4 * d5) - d357 * d0 * d3 * d5) + d306 * c4 * d4 * d5) - d231 * c5 * d3 * d5) + 18.0 * d49 * b3 * c5 * d0 * d5) - d278 * c0 * d4 * d5) - d972 * d0 * d5) - d278 * c5 * d0 * d4) - d917 * d3 * d5) - d214 * d0 * d5) + d973 * d0 * d4) - d360 * d0 * d3) + d272 * c5 * d3 * d5) - d897 * d3 * d5) + d927 * d0 * d1) - 8.0 * b1 * (b3 * b3) * c0 * d0 * d1) - d206 * d0 * d3) - d953 * d0 * d3) + d271 * d0 * d3) + d330 * d1 * d3) - d936 * d1 * d3) + d268 * d0 * d3 * d5) + d350 * d0 * d3) - 8.0 * (a0 * a0) * b1 * d1 * d3 * d5) - d971 * d1 * d2 * d4) + d293 * d1 * d2 * d3) + d961 * d1 * d2 * d4) + d967 * d0 * d1 * d5) - d377 * d0 * d1 * d4) - d915 * d0 * d2 * d3) - d962 * d0 * d3 * d5) + d910 * d0 * d3 * d4) + d231 * d0 * d3 * d5) - d272 * d0 * d3 * d5) - d974 * c2 * c5 * d5) + vd_mm_tmp * c5 * d5) + d450 * c2 * c5 * d2) - qd_mm_tmp * c2 * d2) - d465 * b2 * c0 * c5 * d0) + 16.0 * a2 * a5 * b5 * c0 * c2 * d0) - 12.0 * a0 * a5 * b0 * c0 * c5 * d5) + 12.0 * a0 * a5 * b5 * c0 * c5 * d0) - d1001 * c5 * d5) + d1002 * c5 * d5) + d1003 * c5 * d2) - d989 * c2 * d2) - d1012 * c5 * d1) + d977 * b5 * c1 * c2 * d1) - d992 * c5 * d1 * d5) - d1004 * c5 * d5) + d1005 * c5 * d2 * d5) - d388 * a4 * c5 * d1 * d5) + d978 * c1 * d4 * d5) + d978 * c4 * d1 * d5) + d978 * c5 * d1 * d4) - d994 * c5 * d5) + d1006 * c5 * d5) - d388 * b4 * c1 * c5 * d5) + d980 * c4 * d5) + d980 * c5 * d4) + d995 * c5 * d1) - d418 * a5 * c2 * d2 * d5) + d1008 * c5 * d5) - d996 * c5 * d2) + d981 * c1 * d2 * d5) + d981 * c2 * d1 * d5) + d981 * c5 * d1 * d2) - d407 * b2 * c1 * c5 * d5) + d983 * c2 * d5) + d983 * c5 * d2) + d1009 * c5 * d1) - d1010 * c5 * d5) + d985 * c4 * d5) + d985 * c5 * d4) + d998 * c5 * d1) - d999 * c5 * d2) + d987 * c2 * d5) + d987 * c5 * d2) + d1011 * c5 * d1) - d1014 * c2 * d4) - d1014 * c4 * d2) + d1015 * c5 * d1) + d449 * c2 * c3 * d2) - d1013 * c2 * c4 * d1) + d1017 * c1 * c4 * c5) + d1018 * c1 * c2 * c5) + d411 * a4 * c5 * d0 * d5) - d1058 * c0 * d4 * d5) - d1058 * c4 * d0 * d5) - rd_mm_tmp * d0 * d4) + 32.0 * a1 * a2 * b4 * c0 * c5 * d5) - d1019 * c4 * d5) - d1019 * c5 * d4) - d1029 * d0) - d455 * c0 * d2 * d5) - d1030 * d0 * d5) - d1031 * d0 * d2) + d1044 * c5 * d5) - d1020 * c2 * d5) - d1020 * c5 * d2) - d1033 * d0) - d1049 * c5 * d5) - d1046 * c5 * d5) - d1021 * c4 * d5) - d1021 * c5 * d4) - d1035 * d0) - d1022 * c2 * d5) - d1022 * c5 * d2) - d1036 * d0) + d1025 * c1 * d5) + d1023 * c2 * d4) + d1023 * c4 * d2) + d1025 * c5 * d1) + d1038 * d0) + d1040 * d0) - d1051 * c5) - d1053 * c5) + d1055 * c5 * d5) - d1047 * c5 * d5) - d464 * b0 * c1 * c5 * d5) + wd_mm_tmp * c5 * d5) + d1027 * c4 * d5) + d1027 * c5 * d4) + d1026 * c4 * c5 * d1) - d1028 * c4 * d5) - d1028 * c5 * d4) - d1043 * d0) + d500 * c3 * d5) + 16.0 * a2 * a5 * b2 * c0 * c5 * d3) + d499 * d0) - d1056 * c2 * d3) - d1056 * c3 * d2) - ud_mm_tmp * d0) + d1057 * c5) - ke_mm_tmp * c5) + xd_mm_tmp * c5) - yd_mm_tmp * c5 * d2) + d543 * b5 * c0 * c2 * d2) + pd_mm_tmp * c2 * d5) + pd_mm_tmp * c5 * d2) + 16.0 * a4 * a5 * b0 * c2 * c5 * d1) - d590 * c2 * d5) - d590 * c5 * d2) - d1106 * d0) + d1355 * c5) - d1358 * c5) + d1201 * c5) + y_mm_tmp * c5) - bb_mm_tmp * c2 * c4) - db_mm_tmp * c5) - fb_mm_tmp * c5) + 16.0 * a5 * b1 * b5 * c0 * c1 * c5) + d616 * c0 * c2 * c4) - d1112 * b5 * c0 * c2 * c3) + d410 * d0 * d5) + d1127 * c0 * c5 * d5) + d1252 * c5 * d5) - d1120 * c5 * d5) + d1253 * c5 * d5) - d1254 * c5 * d4) + d520 * c5 * d5) - d548 * c3 * d5) + qd_mm_tmp * c4 * d4) - d548 * c5 * d3) - d545 * d0) + d1255 * c5 * d5) - d1138 * d0) + d1139 * d0) - d1140 * d0) - d1256 * c5) - 32.0 * a1 * a2 * a4 * c5 * d3 * d5) + d1058 * c3 * d4 * d5)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d1058 * c4 * d3 * d5 + rd_mm_tmp * d3 * d4) - d1072 * c5 * d5) + d493 * c4 * d5) + d493 * c5 * d4) + d1029 * d3) + d1062 * c5 * d1 * d5) + d1064 * c5 * d5) + d1030 * d3 * d5) + d455 * c3 * d2 * d5) + d1031 * d2 * d3) + d1066 * c5 * d5) - d1032 * c3 * c5 * d5) - d1067 * c5 * d5) + d560 * c3 * d5) + d1033 * d3) + d559 * c5 * d2) + d1034 * c5 * d5) - d988 * c5 * d4) + d495 * c4 * d5) + d495 * c5 * d4) + d1035 * d3) + d1069 * c5 * d5) + d562 * c3 * d5) + d1036 * d3) + d561 * c3 * c5 * d2) - d1037 * c3 * d5) + d989 * c4 * d4) - d1038 * d3) - d1039 * c3 * d4) - d1040 * d3) - d615 * c3 * c4 * d2) - d1024 * c5 * d1) + d1070 * c5) + d1071 * c5) + d413 * a4 * c5 * d1 * d5) - d1060 * c1 * d4 * d5) - d1060 * c4 * d1 * d5) - d1060 * c5 * d1 * d4) + d1042 * c5 * d5) - d1074 * c5 * d5) + d413 * b4 * c1 * c5 * d5) - sd_mm_tmp * c4 * d5) - sd_mm_tmp * c5 * d4) - fe_mm_tmp * c5 * d1) - d1048 * c3 * c5 * d5) + d464 * b3 * c1 * c5 * d5) + td_mm_tmp * c4 * d5) + td_mm_tmp * c5 * d4) + d1043 * d3) - d499 * d3) - d1077 * c4 * d5) - d1077 * c5 * d4) - d1092 * c5 * d1) + ud_mm_tmp * d3) + le_mm_tmp * c5) - d1093 * c5) - d1078 * c1 * d2 * d5) - d1078 * c2 * d1 * d5) - d1078 * c5 * d1 * d2) + d523 * b2 * c1 * c5 * d5) - d1080 * c2 * d5) - d1080 * c5 * d2) - d1100 * c5 * d1) + d1095 * c5 * d5) - d1082 * c4 * d5) - d1082 * c5 * d4) - d1096 * c5 * d1) + d1101 * c5 * d2) - d1084 * c2 * d5) - d1084 * c5 * d2) - d1102 * c5 * d1) + d1086 * c2 * d4) + d1086 * c4 * d2) - d1103 * c5 * d1) - d1087 * c2 * c3 * d2) + d1085 * c2 * c4 * d1) - d1097 * c5) - d1104 * c1 * c2 * c5) + d591 * c3 * d5) + d1106 * d3) + d1098 * c5 * d2) - d1089 * c2 * d5) - d1089 * c5 * d2) - d1105 * c5 * d1) + d1099 * c5 * d1) - d1090 * b5 * c1 * c4 * d1) + qe_mm_tmp * c5) - d1108 * c5) + d1109 * c5) + d1110 * c2 * c3 * c5) - d1111 * c1 * c3 * c5) - d616 * c2 * c3 * c4) - d1113 * c1 * c4 * c5) - d1114 * b4 * c1 * c2 * c5) + b_mm_tmp * c1 * c2 * c4) - 16.0 * a0 * a3 * a4 * c5 * d4 * d5) + 16.0 * a0 * a3 * a5 * c4 * d4 * d5) - d410 * d3 * d5) - d1124 * c5 * d5) - d1128 * c5 * d5) + d990 * c5 * d4) - d1125 * c5 * d5) + d1129 * c5 * d5) - d1130 * c5 * d5) + d991 * c5 * d4) - d449 * c3 * c4 * d4) + d545 * d3) - d1126 * c5 * d5) + we_mm_tmp * c5 * d5) - d598 * c3 * c5 * d5) + d1119 * c4 * c5 * d4) - d618 * c0 * c5 * d5) + d619 * c3 * d5) - d1137 * c4 * d4) + d1138 * d3) + d1117 * d0) - d621 * c3 * d5) - d1139 * d3) - d1118 * d0) + d1116 * c3 * d4) + d1140 * d3) + d1115 * d0) - d1135 * c5) + d1136 * c5) + 16.0 * a5 * b4 * b5 * c0 * c3 * c4) + d1132 * c5 * d5) - d617 * c3 * c5 * d5) + d1133 * c5 * d5) - d1134 * c5 * d4) + d1087 * c3 * c4 * d4) - d1117 * d3) + d1118 * d3) - d1115 * d3) + d1141 * d0 * d2 * d5) - d992 * d0 * d2 * d4) + d1142 * c5 * d1 * d5) - d1143 * c5 * d0 * d5) + d653 * c0 * d2 * d5) + d1144 * d0 * d5) + d1145 * d0 * d2) - d993 * c0 * d2 * d4) - be_mm_tmp * d0 * d4) - ce_mm_tmp * d0 * d2) + d394 * d0 * d1 * d5) - 16.0 * a0 * a2 * a5 * d0 * d1 * d4) + 16.0 * a0 * a2 * b0 * c2 * d3 * d5) + 16.0 * a0 * a2 * b0 * c3 * d2 * d5) - d1146 * b0 * c4 * d2 * d4) + d974 * c5 * d2 * d3) - vd_mm_tmp * d3 * d5) - d994 * d0 * d5) + d1149 * d0 * d4) - d440 * d0 * d3) + d441 * c0 * d1 * d5) + d1150 * d0 * d5) + d1151 * d0 * d1) - d979 * c0 * d1 * d4) - d980 * d0 * d4) - d995 * d0 * d1) - d442 * c2 * d2 * d5) + d996 * d0 * d2) - d428 * c1 * d2 * d5) - d428 * c2 * d1 * d5) + d1147 * b0 * c2 * d2 * d4) - d428 * c5 * d1 * d2) + d654 * c0 * d2 * d5) + d1152 * d0 * d5) + d1153 * d0 * d2) + d443 * c0 * d1 * d5) + d1154 * d0 * d5) + de_mm_tmp * d0 * d1) - d1147 * b4 * c2 * d0 * d2) - d450 * c1 * d1 * d5) + d1148 * c1 * d2 * d4) + d1148 * c2 * d1 * d4) - 16.0 * a0 * a5 * b0 * c2 * d2 * d3) + d1157 * d1 * d2) - d997 * c0 * d2 * d4) - d1155 * d0 * d4) - d1156 * d0 * d2) - d984 * c0 * d1 * d4) - d985 * d0 * d4) - d998 * d0 * d1) + d999 * d0 * d2) + d1015 * d0 * d1) + d1159 * c5 * d5) + d1161 * c3 * d5) - d1162 * b2 * c2 * c4 * d4) + d1161 * c5 * d3) + c_mm_tmp * c5 * d2) - d702 * c2 * c5 * d2) - d650 * c1 * c2 * d5) - d635 * b4 * c1 * c5 * d2) + d1162 * b4 * c2 * c4 * d2) - 32.0 * a0 * b0 * b4 * c2 * c5 * d1) + 32.0 * a0 * b0 * b5 * c1 * c2 * d4) + d1163 * c1 * c4 * d2) - d1189 * c5 * d1) - d703 * c2 * c3 * d2) + d1163 * c2 * c4 * d1) + d1164 * c2 * d5) + d1164 * c5 * d2) + d1174 * d0) - d1166 * c2 * d4) - d1166 * c4 * d2) - d1176 * d0) + d1168 * c1 * d5) + d1168 * c5 * d1) + d1178 * d0) - d1169 * c1 * d4) - d1169 * c4 * d1) - 16.0 * a0 * b2 * b5 * c1 * c4 * d0) + d1188 * c0 * c2 * d2) - d1061 * c0 * d0 * d5) + d411 * b5 * c0 * d0 * d4) + d663 * c0 * d2 * d5) + d1180 * d0 * d5) + d1181 * d0 * d2) - d1044 * d0 * d5) - d1045 * c0 * d2 * d4) - d1182 * d0 * d4) - d1183 * d0 * d2) + d1046 * d0 * d5) + d412 * b2 * c0 * d0 * d4) - d1025 * d0 * d1) - d1190 * c5 * d5) + d1170 * c2 * d5) + d1170 * c5 * d2) + d1184 * d0) - d1172 * c2 * d4) - d1172 * c4 * d2) - d1186 * d0) + d1191 * c5 * d0) - d1192 * c5 * d0) + d1173 * b5 * c0 * c4 * d0) + d1047 * d0 * d5) - d1075 * c0 * d0 * d2) + d501 * c0 * d1 * d5) + d1193 * d0 * d5) + ge_mm_tmp * d0 * d1) - wd_mm_tmp * d0 * d5) - he_mm_tmp * d0 * d4) + ie_mm_tmp * d0 * d2) - 16.0 * a2 * a5 * b0 * c0 * d1 * d4) - 16.0 * a2 * a5 * b0 * c1 * d0 * d4) - 16.0 * a2 * a5 * b0 * c4 * d0 * d1) + d522 * b1 * c0 * d0 * d4) + d500 * d0 * d3) - d1203 * d0 * d2) - d1195 * c3 * d5) + d1205 * c0 * c4 * d4) - d1195 * c5 * d3) - d1222 * c5 * d0) + d1196 * c1 * d5) + d1196 * c5 * d1) + d1206 * d0) - d1197 * c1 * d4) - d1197 * c4 * d1) - d1057 * d0) - d1218 * c0 * c5 * d0) + d432 * b5 * c0 * c4 * d0) + d700 * c0 * c5 * d0) - ne_mm_tmp * d0) + xd_mm_tmp * d0) - d1209 * d0) + yd_mm_tmp * d0 * d2) - d1210 * d0 * d2) + d1221 * c0 * c2 * d2) - d1212 * d0) + d1198 * c2 * d5) + d1198 * c5 * d2) + d1213 * d0) + d1199 * c1 * d5) + d1199 * c5 * d1) + d1214 * d0) - d1216 * c0 * c2 * d2) - d1225 * c5 * d0) + d1220 * c0 * c2 * d0) - d1200 * c2 * d4) - d1200 * c4 * d2) - d1224 * d0) - d1202 * c1 * d4) - d1202 * c4 * d1) - d1201 * d0) + d1226 * c0 * c2 * d2) + d1227 * c0 * c1 * d1) + d614 * b2 * c0 * c4 * d0) - d1111 * c0 * c1 * d0) - d1228 * c2 * d0) + d758 * c0 * c2 * c5) - d1229 * c0 * c2 * c4) + d1371 * c0 * c1 * c5) - d1230 * b5 * c0 * c1 * c4) + 12.0 * a0 * a3 * b0 * c5 * d0 * d5) - 12.0 * a0 * a3 * b5 * c0 * d0 * d5) - d437 * c0 * d4 * d5) - d1252 * d0 * d5) - d437 * c5 * d0 * d4) + d1120 * d0 * d5) + d1237 * d0 * d4) + d546 * c0 * d3 * d5) + d1253 * d0 * d5) - d1254 * d0 * d4) + d547 * d0 * d3) - d520 * d0 * d5) + d1238 * d0 * d4) - d548 * d0 * d3) + d1248 * c5 * d5) - d1232 * c4 * d5) - d1232 * c5 * d4) - d1231 * c4 * c5 * d0) + d1234 * c3 * d5) - d703 * c0 * c4 * d4) + d1234 * c5 * d3) + d1233 * c3 * c5 * d0) - d1246 * c0 * c5 * d0) + d1240 * d0) - d1255 * d0 * d5) - d1249 * c5 * d0) + d1241 * d0 * d4) + d1250 * c5 * d0) + d1243 * d0) - d1251 * c5 * d0) + d1245 * d0) - d1256 * d0) + d1001 * d3 * d5) + d1000 * c3 * d2 * d5) - d1235 * b1 * c4 * d2 * d4) + d1000 * c5 * d2 * d3) - d1002 * d3 * d5) - d975 * c3 * d1 * d5) + d1235 * b2 * c4 * d1 * d4) - d975 * c5 * d1 * d3) - d1257 * b1 * c2 * d2 * d5) + d1257 * b5 * c2 * d1 * d2) + d1258 * b1 * c2 * d2 * d4) - d1258 * b4 * c2 * d1 * d2) - d1003 * d2 * d3) + d976 * b3 * c2 * d1 * d2) + d1260 * c2 * c3 * d5) - ae_mm_tmp * b2 * c2 * c4 * d4) + d1259 * b2 * c2 * c5 * d3) + 64.0 * a1 * b1 * b2 * c3 * c5 * d2) - i_mm_tmp * c5 * d2) + ae_mm_tmp * b4 * c2 * c4 * d2) - d1298 * c2 * c3 * d2) + 64.0 * a1 * b3 * b5 * c1 * c2 * d2) + d1303 * c1 * d1 * d5) - d1299 * b5 * c1 * d1 * d2) - t_mm_tmp * b2 * c1 * d1 * d4) + t_mm_tmp * b4 * c1 * d1 * d2) + d1012 * d1 * d3) - d977 * b3 * c1 * d1 * d2) - u_mm_tmp * c3 * d5) + 256.0 * a2 * b1 * b2 * c1 * c4 * d4) - u_mm_tmp * c5 * d3) - d1422 * c5 * d1) + d1423 * c5 * d1) - 256.0 * a2 * b2 * b4 * c1 * c4 * d1) + d1207 * b5 * c1 * c3 * d1) - 64.0 * a2 * b3 * b5 * c1 * c2 * d1) + v_mm_tmp * b1 * c2 * d1 * d2) - v_mm_tmp * b2 * c1 * d1 * d2) + d1424 * b5 * c1 * c2 * d2) - d1393 * b5 * c1 * c2 * d1) - 256.0 * a4 * b1 * b4 * c1 * c2 * d2) + 256.0 * a4 * b2 * b4 * c1 * c2 * d1) + 64.0 * a5 * b1 * b3 * c1 * c2 * d2) - 64.0 * a5 * b2 * b3 * c1 * c2 * d1) - d1141 * d2 * d3 * d5) + d992 * d1 * d3 * d5) + d992 * d2 * d3 * d4) + d1268 * b1 * c4 * d4 * d5) - d448 * d3 * d5) - d1144 * d3 * d5) - d653 * c3 * d2 * d5) - d1145 * d2 * d3)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d1004 * d3 * d5 + be_mm_tmp * d3 * d4) + d1261 * d1 * d5) + d1261 * d2 * d4) - d1268 * b5 * c4 * d1 * d4) + ce_mm_tmp * d2 * d3) + d993 * c5 * d1 * d3) - d1005 * d1 * d4 * d5) - d1005 * d2 * d3 * d5) + d394 * d1 * d3 * d5) + d444 * d3 * d5) - d1149 * d3 * d4) - d389 * c1 * d4 * d5) - d1006 * d3 * d5) - d389 * c3 * d2 * d5) - d389 * c4 * d1 * d5) + d1146 * b3 * c4 * d2 * d4) - d1262 * d1 * d4) - d1262 * d2 * d3) + d1150 * d3 * d5) + d441 * c3 * d1 * d5) + d1151 * d1 * d3) + d1265 * d1 * d2 * d5) - d1007 * c1 * d4 * d5) - d1008 * d3 * d5) - d1007 * c3 * d2 * d5) - d1007 * c4 * d1 * d5) + d1264 * b2 * c4 * d2 * d4) - d1263 * d1 * d4) - d1263 * d2 * d3) + d1267 * c2 * d2 * d5) + d1121 * c1 * d2 * d5) + d1121 * c2 * d1 * d5) - d1264 * b4 * c2 * d2 * d4) + d1266 * d1 * d2) - d981 * d1 * d2 * d3) - d1152 * d3 * d5) - d654 * c3 * d2 * d5) - d1153 * d2 * d3) + d1154 * d3 * d5) + d443 * c3 * d1 * d5) + de_mm_tmp * d1 * d3) + d1122 * c1 * d2 * d5) + d1122 * c2 * d1 * d5) - d1147 * b3 * c2 * d2 * d4) + 16.0 * a0 * a4 * b3 * c5 * d1 * d2) - 64.0 * a0 * a4 * b4 * c1 * d1 * d5) + 64.0 * a0 * a4 * b4 * c2 * d2 * d3) + d1147 * b5 * c1 * d1 * d4) - d983 * d2 * d3) - d1009 * d1 * d3) - d1275 * d1 * d2) + d1010 * d3 * d5) + d1155 * d3 * d4) + d1269 * d1 * d5) + d1269 * d2 * d4) - d1270 * b1 * c4 * d1 * d4) + d1156 * d2 * d3) + d997 * c5 * d1 * d3) + d1270 * b4 * c1 * d1 * d4) - d987 * d2 * d3) - d1011 * d1 * d3) - d1276 * d1 * d2) - d1014 * d1 * d3) - d657 * c3 * d5) - d1174 * d3) - d656 * c5 * d2) + d1271 * c3 * d5) - 64.0 * a0 * b1 * b5 * c1 * c4 * d4) + d1271 * c5 * d3) + d1175 * c3 * d4) + d1176 * d3) + d1165 * c4 * d2) + d1165 * c5 * d1) - d1272 * c4 * d5) - d1272 * c5 * d4) - d1273 * c3 * d5) + 64.0 * a0 * b2 * b3 * c2 * c4 * d4) - d1273 * c5 * d3) - d1278 * c5 * d2) - d1277 * c5 * d1) + d1177 * c3 * d5) + d1178 * d3) + d1167 * c5 * d1) + d1274 * c2 * d5) + d1274 * c5 * d2) - 64.0 * a0 * b3 * b4 * c2 * c4 * d2) + d1279 * c5 * d1) - 16.0 * a0 * b4 * b5 * c1 * c2 * d3) - 16.0 * a0 * b4 * b5 * c1 * c3 * d2) + 64.0 * a0 * b4 * b5 * c1 * c4 * d1) - d1018 * c2 * c3 * d1) + d380 * d0 * d4 * d5) - d1058 * d0 * d3 * d4) + d658 * c0 * d4 * d5) + 16.0 * a1 * a2 * b3 * c4 * d0 * d5) + 16.0 * a1 * a2 * b3 * c5 * d0 * d4) - d1019 * d3 * d4) - d493 * d0 * d4) - d494 * d0 * d3) - d1280 * d1 * d5) - d1280 * d2 * d4) + d504 * d0 * d5) + d661 * c0 * d4 * d5) + d1283 * d0 * d5) + d1284 * d0 * d4) - d1281 * d1 * d5) - d1281 * d2 * d4) - d1064 * d0 * d5) - l_mm_tmp * d0 * d4) - d1063 * c4 * d0 * d2) - d1063 * c5 * d0 * d1) + d455 * d0 * d2 * d3) - d1180 * d3 * d5) - d663 * c3 * d2 * d5) - d1181 * d2 * d3) - d1065 * c0 * d4 * d5) - d1066 * d0 * d5) - d1065 * c5 * d0 * d4) + d1059 * c0 * d1 * d5) + d1067 * d0 * d5) + d1059 * c5 * d0 * d1) + d1020 * d2 * d3) + d560 * d0 * d3) + d559 * d0 * d2) + d1049 * d3 * d5) + d1182 * d3 * d4) + d1282 * d1 * d5) + d1282 * d2 * d4) - d976 * b0 * c4 * d1 * d4) + d1183 * d2 * d3) + d1045 * c5 * d1 * d3) + d988 * d0 * d4) - d1021 * d3 * d4) - d495 * d0 * d4) - d496 * d0 * d3) - d1285 * d1 * d5) - d1285 * d2 * d4) - d1069 * d0 * d5) - d1286 * d0 * d4) - m_mm_tmp * d0 * d2) - d1068 * c5 * d0 * d1) + d471 * b4 * c0 * d2 * d3) + d471 * b4 * c2 * d0 * d3) + 16.0 * a1 * a5 * b4 * c3 * d0 * d2) - 32.0 * a1 * b0 * b1 * c3 * c5 * d5) + g_mm_tmp * c5 * d4) - d669 * c3 * d5) - d1184 * d3) - d668 * c5 * d2) + d1287 * c3 * d5) - d1297 * b5 * c1 * c4 * d4) + d1287 * c5 * d3) + d1185 * c3 * d4) + d1186 * d3) + d1171 * c4 * d2) + d1171 * c5 * d1) + d423 * c0 * c5 * d5) - d1289 * c4 * d5) - d1289 * c5 * d4) - d1288 * c4 * c5 * d0) + d1298 * c0 * c4 * d4) + d1290 * c4 * d5) + d1290 * c5 * d4) + d1294 * d0) - d1050 * c3 * d4) - d1051 * d3) - d1070 * d0) - d1292 * c1 * d5) - d1292 * c2 * d4) - d1292 * c4 * d2) - d1292 * c5 * d1) - d1291 * c1 * c5 * d0) - d1296 * d0) + d1053 * d3) + d1052 * c3 * d2) + d1071 * d0) - d395 * d0 * d1 * d5) + d1293 * d1 * d4) + d1293 * d2 * d3) - d1054 * c1 * d4 * d5) - d1055 * d3 * d5) - d1054 * c3 * d2 * d5) - d1054 * c4 * d1 * d5) + d1299 * b0 * c4 * d2 * d4) - d1300 * d1 * d4) - d1300 * d2 * d3) + d673 * c0 * d4 * d5) + d1301 * d0 * d5) + d1302 * d0 * d4) - d1303 * c4 * d0 * d4) - d392 * c0 * d1 * d5) - j_mm_tmp * d0 * d5) - n_mm_tmp * d0 * d1) + ee_mm_tmp * d1 * d4) + ee_mm_tmp * d2 * d3) + sd_mm_tmp * d0 * d4) + d1075 * c2 * d0 * d3) + d1307 * d0 * d2) + fe_mm_tmp * d0 * d1) + d1193 * d3 * d5) + d501 * c3 * d1 * d5) + ge_mm_tmp * d1 * d3) + he_mm_tmp * d3 * d4) + d1308 * d0 * d4) + d1304 * c4 * d0 * d3) - d462 * c0 * d1 * d5) - d1309 * d0 * d5) - d1310 * d0 * d1) - ie_mm_tmp * d2 * d3) - d1194 * c2 * d0 * d3) - d1311 * d0 * d2) - d1028 * d3 * d4) - d497 * c3 * d0 * d4) - d498 * d0 * d3) - d549 * d0 * d3) + d1203 * d1 * d4) + d1203 * d2 * d3) + d1077 * d0 * d4) + d1076 * c2 * d0 * d3) + d1312 * d0 * d2) + d1092 * d0 * d1) - d1205 * c3 * c4 * d4) + je_mm_tmp * c3 * c5 * d3) - d1305 * c4 * d5) - d1305 * c5 * d4) - d1306 * c3 * d5) + d1204 * b3 * c2 * c4 * d4) - d1306 * c5 * d3) - d1314 * c5 * d2) - d1313 * c5 * d1) + d503 * c3 * d5) + d1206 * d3) + r_mm_tmp * c5 * d1) + d1315 * c4 * d5) + d1315 * c5 * d4) + d_mm_tmp * d0) - d1316 * c3 * d4) - ke_mm_tmp * d3) - le_mm_tmp * d0) - d1317 * c0 * c4 * d4) + me_mm_tmp * c3 * d4) + ne_mm_tmp * d3) + f_mm_tmp * d0) - 32.0 * a2 * b2 * b5 * c0 * c3 * d3) - 16.0 * a2 * b3 * b4 * c0 * c1 * d5) - d1333 * c5 * d1) - d593 * c5 * d0) + d1208 * c1 * d4) + d1209 * d3) + d1208 * c3 * d2) + d1208 * c4 * d1) + d1093 * d0) + d588 * d0) + d1123 * c1 * d2 * d5) + d1123 * c2 * d1 * d5) - d1318 * b0 * c2 * d2 * d4) + d1324 * d1 * d2) - d594 * c0 * d1 * d5) - d1325 * d0 * d5) - d1326 * d0 * d1) + d1327 * d0 * d2) - d1319 * d1 * d5) - d1319 * d2 * d4) - d1095 * d0 * d5) - d1328 * d0 * d4) - d1329 * d0 * d2) - d1094 * c5 * d0 * d1) + d1210 * d1 * d4) + d1210 * d2 * d3) + d1082 * d0 * d4) + d1081 * c2 * d0 * d3) + d1330 * d0 * d2) + d1096 * d0 * d1) - d1332 * d0 * d2) + d1086 * d0 * d1) - d1321 * c4 * d5) - d1321 * c5 * d4) - d1322 * c3 * d5) + d1323 * b2 * c2 * c4 * d4) - d1322 * c5 * d3) - d1334 * c5 * d2) - d1335 * c5 * d1) + d1337 * c5 * d2) + d1339 * c2 * d5) + d1339 * c5 * d2) - d1323 * b4 * c2 * c4 * d2) + d1340 * c5 * d1) + d1341 * c4 * d5) + d1341 * c5 * d4) + re_mm_tmp * d0) - oe_mm_tmp * c1 * d5) - oe_mm_tmp * c2 * d4) - pe_mm_tmp * c4 * d2) - pe_mm_tmp * c5 * d1) - d1342 * c1 * c5 * d0) - d1351 * d0) - d1343 * c1 * d5) - d1343 * c5 * d1) - d1352 * d0) + d1211 * c1 * d4) + d1212 * d3) + d1211 * c3 * d2) + d1211 * c4 * d1) + d1097 * d0) + d1091 * d0) - d1354 * c0 * c2 * d2) + d1090 * b0 * c1 * d1 * d4) - d568 * c1 * d2 * d3) - d568 * c2 * d1 * d3) - d1349 * d1 * d2) + d590 * d2 * d3) + d591 * d0 * d3) + d1098 * d0 * d2) - d1099 * d0 * d1) - d681 * c3 * d5) - d1213 * d3) - d680 * c5 * d2) + d513 * c3 * d5) + d1214 * d3) + d512 * c5 * d1) + d1345 * c2 * d5) + d1345 * c5 * d2) - d1215 * b3 * c2 * c4 * d2) + d1344 * c2 * c5 * d1) - d1356 * c5 * d1) + d1216 * c2 * c3 * d2) - d1355 * d3) - d1346 * c3 * d2) + d1215 * b5 * c1 * c4 * d1) - d1236 * c2 * c3 * d1) + d1348 * c1 * d5) + d1348 * c5 * d1) + d1347 * c1 * c5 * d0) + d1358 * d3) + d1357 * c3 * d2) + qe_mm_tmp * d0) - h_mm_tmp * c1 * d5) - h_mm_tmp * c5 * d1) - te_mm_tmp * d0) - d1217 * b4 * c0 * c2 * d3) - d1217 * b4 * c0 * c3 * d2) - 64.0 * a4 * b2 * b4 * c2 * c3 * d0) + ue_mm_tmp * c0 * c2 * d2) - 64.0 * a4 * b4 * b5 * c0 * c1 * d1) + w_mm_tmp * c3 * d5) - ab_mm_tmp * b1 * c1 * c4 * d4) + w_mm_tmp * c5 * d3) + d1223 * c3 * d4) + d1224 * d3) + x_mm_tmp * c4 * d2) + x_mm_tmp * c5 * d1) - y_mm_tmp * d3) - mm_tmp_tmp * c3 * d2) + ab_mm_tmp * b4 * c1 * c4 * d1) - d729 * c2 * c3 * d1) - bb_mm_tmp * c3 * d1) - cb_mm_tmp * c3 * d4) - db_mm_tmp * d3) - d1109 * d0) - eb_mm_tmp * c1 * d5) - eb_mm_tmp * c2 * d4) - eb_mm_tmp * c4 * d2) - eb_mm_tmp * c5 * d1) - d709 * c1 * c5 * d0) - d1399 * d0) + fb_mm_tmp * d3) + b_mm_tmp_tmp * c3 * d2) + 16.0 * a5 * b1 * b4 * c2 * c3 * d0) + d1228 * c1 * d4) + 16.0 * a5 * b2 * b3 * c0 * c2 * d3) + d1228 * c3 * d2) + d1228 * c4 * d1) + 16.0 * a5 * b2 * b3 * c1 * c4 * d0) + d1400 * d0) + b_mm_tmp * c0 * c1 * d1) - hb_mm_tmp * c5) + nb_mm_tmp * c5)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d1229 * c2 * c3 * c4 - d1370 * c5) - d1373 * c5) + d1372 * c5) + d1375 * c5) - d1366 * c1 * c2 * c3) + d1377 * c5) - 16.0 * b1 * b2 * b5 * c0 * c3 * c4) - d1368 * c5) - d1360 * c2 * c4) + d1369 * c0 * c2 * c3) - d1379 * c5) + d1362 * c1 * c4) + d1362 * c2 * c3) + d1265 * d0 * d4 * d5) - d1367 * c4 * d4 * d5) + d1363 * b0 * c5 * d3 * d5) - d1363 * b3 * c5 * d0 * d5) + d1121 * c0 * d4 * d5) + d1124 * d0 * d5) + d1266 * d0 * d4) - d981 * d0 * d3 * d4) + d1122 * c0 * d4 * d5) + d1125 * d0 * d5) + d1122 * c5 * d0 * d4) - d1237 * d3 * d4) - d1275 * d0 * d4) - d982 * c4 * d0 * d3) - d1364 * b0 * c3 * d3 * d5) + d1157 * d3 * d4) - d1238 * d3 * d4) - d1276 * d0 * d4) - d986 * c4 * d0 * d3) + d1364 * b5 * c3 * d0 * d3) + d1380 * b3 * c3 * c5 * d5) - e_mm_tmp * c4 * c5 * d4) + d1163 * c3 * c4 * d4) - d1380 * b5 * c3 * c5 * d3) + k_mm_tmp * c4 * d5) + k_mm_tmp * c5 * d4) + 16.0 * a0 * b3 * b4 * c4 * c5 * d0) - d1239 * c3 * d4) - d1240 * d3) - d1384 * d0) + d1123 * c0 * d4 * d5) + d1126 * d0 * d5) + d1324 * d0 * d4) - d550 * d0 * d5) + d1381 * b3 * c0 * d0 * d5) - d1381 * b5 * c0 * d0 * d3) - 24.0 * a3 * b0 * b3 * c0 * c5 * d5) + d1382 * c4 * d5) + d1382 * c5 * d4) + d1338 * c4 * c5 * d0) + 24.0 * a3 * b3 * b5 * c0 * c5 * d0) - d1241 * d3 * d4) - d1349 * d0 * d4) - d568 * c4 * d0 * d3) + d1388 * d0 * d3) + d1383 * c4 * d5) + d1383 * c5 * d4) + d1344 * c4 * c5 * d0) - d1242 * c3 * d4) - d1243 * d3) - d1385 * d0) - d714 * c0 * c5 * d0) + d641 * c0 * c3 * d0) - d1244 * c3 * d4) - d1245 * d3) - d1386 * d0) + 24.0 * a5 * b0 * b5 * c0 * c3 * d3) - 24.0 * a5 * b3 * b5 * c0 * c3 * d0) + d1387 * c5) - d1366 * c0 * c3 * c4) - d380 * d3 * d4 * d5) - d658 * c3 * d4 * d5) - d658 * c4 * d3 * d5) - d658 * c5 * d3 * d4) + d1072 * d3 * d5) + d1062 * d2 * d3 * d4) + d445 * c5 * d3 * d5) - d661 * c3 * d4 * d5) - d1283 * d3 * d5) - d1284 * d3 * d4) - d1389 * c5 * d1 * d5) + l_mm_tmp * d3 * d4) + d1063 * c3 * d2 * d4) + d438 * b5 * c4 * d2 * d3) + 32.0 * a1 * a4 * b2 * c3 * d3 * d5) - d556 * b5 * c3 * d2 * d3) - d1034 * d3 * d5) + d1286 * d3 * d4) + d1068 * c3 * d2 * d4) + m_mm_tmp * d2 * d3) - d412 * b4 * c3 * d2 * d3) + d1024 * d1 * d3) + d1390 * c5 * d5) - d670 * c5 * d3) - d671 * c4 * d5) - d671 * c5 * d4) - d1294 * d3) + d1187 * c3 * c5 * d3) + d1295 * c3 * d4) + d1296 * d3) + d1291 * c3 * c4 * d2) - 32.0 * a1 * b4 * b5 * c2 * c3 * d3) - d395 * d1 * d3 * d5) - d673 * c3 * d4 * d5) - d1301 * d3 * d5) - d1302 * d3 * d4) - d1042 * d3 * d5) + 64.0 * a2 * a3 * b2 * c4 * d3 * d4) + d691 * c1 * d4 * d5) + d1074 * d3 * d5) + d1073 * c3 * d2 * d5) + d691 * c4 * d1 * d5) - d1299 * b3 * c4 * d2 * d4) + d691 * c5 * d1 * d4) + d1073 * c5 * d2 * d3) - j_mm_tmp * d3 * d5) - d392 * c3 * d1 * d5) - n_mm_tmp * d1 * d3) - d1307 * d2 * d3) + 32.0 * a2 * a4 * b1 * c3 * d3 * d5) - d1308 * d3 * d4) - d1309 * d3 * d5) - d462 * c3 * d1 * d5) - d1310 * d1 * d3) + d1311 * d2 * d3) - d1312 * d2 * d3) - d674 * c4 * d5) - d674 * c5 * d4) - d_mm_tmp * d3) + p_mm_tmp * c5 * d3) + d1317 * c3 * c4 * d4) - q_mm_tmp * c5 * d3) - f_mm_tmp * d3) - 16.0 * a2 * b3 * b4 * c1 * c3 * d5) - 16.0 * a2 * b3 * b4 * c1 * c5 * d3) - 16.0 * a2 * b3 * b4 * c3 * c5 * d1) - d588 * d3) + d1078 * d1 * d2 * d3) - d1325 * d3 * d5) - d594 * c3 * d1 * d5) - d1326 * d1 * d3) + d1318 * b3 * c2 * d2 * d4) - d1327 * d2 * d3) + d1080 * d2 * d3) + d1100 * d1 * d3) + d1079 * c3 * d1 * d2) + d1328 * d3 * d4) + d1094 * c3 * d2 * d4) + d1329 * d2 * d3) - d1330 * d2 * d3) + d544 * c1 * d1 * d5) - d1331 * c1 * d2 * d4) - d1332 * d1 * d4) + d1101 * d2 * d3) - d1331 * c4 * d1 * d2) + d1084 * d2 * d3) + d1102 * d1 * d3) + d1083 * c3 * d1 * d2) - d1103 * d1 * d3) - d677 * c4 * d5) - d677 * c5 * d4) - re_mm_tmp * d3) - d1395 * c5 * d5) + d1350 * c3 * d4) + d1351 * d3) + d1342 * c3 * c4 * d2) + d1391 * c4 * d5) + d1391 * c5 * d4) + d1392 * c3 * d5) - d1394 * c2 * c4 * d4) + d1392 * c5 * d3) + d1396 * c5 * d2) + d1397 * c5 * d1) - d596 * c3 * d5) - d1352 * d3) - d595 * c5 * d1) - d1091 * d3) + 64.0 * a3 * b3 * b4 * c2 * c4 * d2) - se_mm_tmp * c2 * d4) - se_mm_tmp * c4 * d2) + d725 * c1 * c5 * d1) + d725 * c2 * c3 * d2) - d1354 * c2 * c4 * d1) + 16.0 * a3 * b4 * b5 * c1 * c2 * d3) + 16.0 * a3 * b4 * b5 * c1 * c3 * d2) + d1104 * c2 * c3 * d1) - d629 * b1 * c3 * d2 * d3) + d1089 * d2 * d3) + d1105 * d1 * d3) + d1088 * c3 * d1 * d2) + d1219 * c3 * c5 * d3) - d581 * b5 * c2 * c3 * d3) - d597 * c3 * d5) - te_mm_tmp * d3) - d1401 * c5 * d1) + d1220 * c2 * c3 * d3) - ue_mm_tmp * c2 * c3 * d2) + d1108 * d3) + d1107 * c3 * d2) + d732 * c2 * c3 * d1) + d1398 * c3 * d4) + d1399 * d3) + d709 * c3 * c4 * d2) - d614 * b4 * c2 * c3 * d3) + 16.0 * a5 * b1 * b5 * c1 * c3 * d3) - d1400 * d3) + 16.0 * a5 * b3 * b4 * c1 * c2 * d3) + 16.0 * a5 * b3 * b4 * c1 * c3 * d2) + 16.0 * a5 * b3 * b4 * c2 * c3 * d1) - ve_mm_tmp * c1 * c3 * d1) - d1402 * c5) + d1359 * c2 * c3 * c4) - d1361 * c5) + 16.0 * b3 * b4 * b5 * c1 * c2 * c3) + d551 * c4 * d4 * d5) - d446 * c5 * d3 * d5) + d1128 * d3 * d5) - d990 * d3 * d4) - d1129 * d3 * d5) + d1275 * d3 * d4) + d1130 * d3 * d5) - d991 * d3 * d4) + d1276 * d3 * d4) - d1188 * c3 * c4 * d4) + d1403 * c5 * d3) + d1384 * d3) - d1131 * c0 * d4 * d5) - d1132 * d0 * d5) - d1131 * c5 * d0 * d4) + we_mm_tmp * d3 * d5) + d566 * b4 * c3 * d0 * d5) + d566 * b4 * c5 * d0 * d3) + 12.0 * a3 * a5 * b0 * c3 * d3 * d5) - 16.0 * a3 * a5 * b0 * c4 * d3 * d4) - 12.0 * a3 * a5 * b3 * c0 * d3 * d5) - d1133 * d0 * d5) + d1134 * d0 * d4) - d623 * d0 * d3) + d620 * d0 * d3) - d1408 * c5 * d5) + d1409 * c5 * d4) - d1221 * c3 * c4 * d4) + d690 * c5 * d3) - d1404 * c4 * d5) - d1404 * c5 * d4) - d724 * c4 * c5 * d0) - d1405 * c3 * d5) + d725 * c0 * c4 * d4) - d1405 * c5 * d3) - d735 * c3 * c5 * d0) + d1349 * d3 * d4) - d622 * d0 * d3) - d1247 * c5 * d3) + d1385 * d3) + d1406 * c3 * d5) + d1406 * c5 * d3) + d736 * c3 * c5 * d0) - d1135 * d3) - d1226 * c3 * c4 * d4) + d722 * c5 * d3) + d1386 * d3) + d1136 * d3) - d1142 * d1 * d3 * d5) + d1143 * d0 * d3 * d5) + d406 * d0 * d2 * d4) - d653 * d0 * d2 * d3) + d389 * d0 * d1 * d4) - d441 * d0 * d1 * d3) - d1367 * d1 * d2 * d4) + d1407 * d0 * d2 * d4) + d1007 * d0 * d1 * d4) + d428 * d1 * d2 * d3) - d654 * d0 * d2 * d3) - d443 * d0 * d1 * d3) - d1159 * d3 * d5) - d1158 * c3 * d1 * d5) + d1162 * b1 * c4 * d1 * d4) - d1158 * c5 * d1 * d3) - c_mm_tmp * d2 * d3) + d702 * c1 * d1 * d5) - e_mm_tmp * c1 * d2 * d4) - e_mm_tmp * c2 * d1 * d4) + 16.0 * a0 * b0 * b3 * c2 * d2 * d3) - 32.0 * a0 * b0 * b3 * c4 * d1 * d2) - 64.0 * a0 * b0 * b4 * c1 * d1 * d4) + 32.0 * a0 * b0 * b4 * c1 * d2 * d3) + d650 * c2 * d1 * d3) + d650 * c3 * d1 * d2) + d1189 * d1 * d3) + d655 * c0 * d2 * d4) + d1410 * d0 * d4) + d1411 * d0 * d2) - d1164 * d2 * d3) - d657 * d0 * d3) - d656 * d0 * d2) + d1016 * c0 * d1 * d4) + d1272 * d0 * d4) + d1277 * d0 * d1) - d1168 * d1 * d3) - d1177 * d0 * d3) - d1167 * d0 * d1) - d1412 * d0 * d1) + d1413 * d0 * d2 * d4) - d663 * d0 * d2 * d3) + d1190 * d3 * d5) + d1414 * d0 * d5) - g_mm_tmp * d0 * d4) + d667 * c5 * d0 * d3) + d664 * c0 * d2 * d4) + d1415 * d0 * d4) + d1416 * d0 * d2) - d1170 * d2 * d3) - d669 * d0 * d3) - d668 * d0 * d2) - d1417 * d0 * d5) + d1289 * d0 * d4) - d1191 * d0 * d3) - d1173 * b3 * c0 * d0 * d4) + d1192 * d0 * d3) + d1292 * d0 * d1) + d1054 * d0 * d1 * d4) - d501 * d0 * d1 * d3) + d1222 * d0 * d3) + d492 * c0 * d1 * d4) + d1305 * d0 * d4) + d1313 * d0 * d1) - d1196 * d1 * d3) - d503 * d0 * d3) - r_mm_tmp * d0 * d1) - d432 * b3 * c0 * d0 * d4) + d432 * b4 * c0 * d0 * d3) - 16.0 * a2 * b2 * b3 * c0 * d0 * d3) + 16.0 * a3 * b0 * b1 * c0 * d2 * d4) + 16.0 * a3 * b0 * b1 * c2 * d0 * d4) + d1426 * d0 * d2) + d1320 * c0 * d1 * d4) + d1321 * d0 * d4) + d1335 * d0 * d1) - d1427 * d0 * d2) - d1428 * d0 * d1) - d666 * b2 * c0 * d0 * d4) + pe_mm_tmp * d0 * d1) + d589 * d0 * d2) - d1198 * d2 * d3) - d681 * d0 * d3) - d680 * d0 * d2) - d1199 * d1 * d3) - d513 * d0 * d3) - d512 * d0 * d1) + d1356 * d0 * d1) + d1225 * d0 * d3) - d1348 * d0 * d1) - kb_mm_tmp * d0 * d1) + eb_mm_tmp * d0 * d1) + gb_mm_tmp * c2 * d4) + gb_mm_tmp * c4 * d2) + mb_mm_tmp * d0) - 16.0 * b0 * b1 * b4 * c0 * c2 * d3) - 16.0 * b0 * b1 * b4 * c0 * c3 * d2) - hb_mm_tmp * d0) + ib_mm_tmp * c1 * d4) + ib_mm_tmp * c4 * d1) + d1370 * d0) - 16.0 * b0 * b2 * b4 * c0 * c1 * d3) - 16.0 * b0 * b2 * b4 * c0 * c3 * d1) - d1372 * d0) - ob_mm_tmp * c0 * c1 * d1) - d1418 * b3 * c0 * c4 * d0)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d177 * d19 + 9.0 * a5 * d * c3 * d25) - d121 * d86 * d5) + d116 * d44 * d5) - d148 * d3) + d149 * d3) + d178 * d19) - d371 * d20) - d376 * c2 * d33) + d232 * c2 * d47) + d70 * c0 * d47) - 6.0 * b3 * d10 * d44 * c3) + d338 * a3 * d3 * d26) - d122 * d22 * d5) + d962 * c3 * d26) - d242 * c5 * d22) - d104 * a3 * d39 * d5) + d239 * a4 * d39 * d4) + d119 * d19 * d5) - d129 * d39 * d3) + d153 * b0 * d20 * d5) - d968 * d39) + d239 * b4 * c4 * d39) - d281 * c3 * d39) + o_mm_tmp * d19) - d118 * b5 * (c5 * c5) * d0) + d245 * d22 * d5) - 64.0 * d12 * a4 * d22 * d4) + 16.0 * d12 * a5 * d22 * d3) + 16.0 * (a2 * a2) * b3 * c5 * d22) - d233 * b4 * c4 * d22) + d970 * d22) - d50 * c3 * d26) - d377 * c2 * d42) + d368 * c0 * d26) - d159 * d20 * d1) + d234 * d25) - d215 * b0 * c3 * d25) + d185 * d86 * d5) + d263 * d33 * d1) + d212 * c0 * d25) - d922 * d19) - d372 * d0) + d350 * d20) - d396 * c5) - d397 * c5) + d273 * b4 * d29 * c4) + d333 * c5) - jb_mm_tmp * d29 * c3) + d398 * c5) - 64.0 * d40 * b4 * d86 * c4) + d252 * b5 * d86 * c3) + 4.0 * a0 * d49 * d42 * d5) - d91 * d25 * d5) + d160 * d33 * d5) - d115 * d47 * d5) - d903 * d19 * d5) - d235 * d39 * d3) - d94 * d22 * d3) - d789 * d33 * d5) + d54 * d20 * d3) + d236 * d3) - d856 * d44 * d5) - d237 * d3) - d151 * d3) + d797 * d33 * d3) + d180 * d0)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d1419 * d0 + d1368 * d0) - d447 * d0 * d3 * d5) + d437 * d0 * d3 * d4) - d1248 * d3 * d5) - d1420 * d0 * d5) + d1421 * d0 * d4) - d689 * c5 * d0 * d3) + d1232 * d3 * d4) + mm_tmp * d0 * d4) + d696 * b4 * c4 * d0 * d3) - d688 * b5 * c3 * d0 * d3) - k_mm_tmp * d0 * d4) + 12.0 * a0 * b3 * b5 * c0 * d0 * d3) + 12.0 * a3 * b0 * b3 * c0 * d0 * d5) - d1382 * d0 * d4) + d1249 * d0 * d3) - d1383 * d0 * d4) - d1250 * d0 * d3) + d1251 * d0 * d3) - d1387 * d0) + d1425 * d0) - d1260 * c3 * d2 * d3) + i_mm_tmp * d2 * d3) + d1422 * d1 * d3) - d1423 * d1 * d3) - d1424 * b3 * c2 * d1 * d2) + d1394 * c1 * d1 * d2) - d406 * d2 * d3 * d4) - d1407 * d2 * d3 * d4) + d1267 * d1 * d2 * d4) - d1121 * d1 * d2 * d3) - d1122 * d1 * d2 * d3) - d1410 * d3 * d4) - d655 * c3 * d2 * d4) - d1411 * d2 * d3) + d693 * b4 * c3 * d2 * d3) - d1165 * d1 * d3) + d1278 * d2 * d3) - d1274 * d2 * d3) - d1279 * d1 * d3) - d1179 * c3 * d1 * d2) + d1412 * d1 * d3) + d658 * d0 * d3 * d4) - d1413 * d2 * d3 * d4) - d445 * d0 * d3 * d5) + d661 * d0 * d3 * d4) + d1389 * d0 * d1 * d5) + d1414 * d3 * d5) - d1415 * d3 * d4) - d664 * c3 * d2 * d4) - d1416 * d2 * d3) + d637 * b4 * c3 * d2 * d3) - d1171 * d1 * d3) - d1417 * d3 * d5) - d1390 * d0 * d5) - d678 * c5 * d0 * d3) + d670 * d0 * d3) + d1290 * d3 * d4) + d671 * d0 * d4) + d473 * b3 * c4 * d0 * d3) - d1173 * b4 * c3 * d0 * d3) + 16.0 * a2 * a3 * b1 * d0 * d3 * d4) - 32.0 * a2 * a3 * b3 * d0 * d1 * d4) - d1073 * d0 * d2 * d3) + d392 * d0 * d1 * d3) + d462 * d0 * d1 * d3) + d1314 * d2 * d3) + d1315 * d3 * d4) + d674 * d0 * d4) + d675 * d0 * d3) - p_mm_tmp * d0 * d3) + q_mm_tmp * d0 * d3) + d1333 * d1 * d3) + d593 * d0 * d3) + d592 * c3 * d0 * d1) - d1123 * d1 * d2 * d3) + d594 * d0 * d1 * d3) - d721 * c2 * d3 * d4) - d721 * c3 * d2 * d4) - d1426 * d2 * d3) + d1334 * d2 * d3) - d726 * c1 * d1 * d5) + d1336 * c1 * d2 * d4) + d1337 * d1 * d4) - d1427 * d2 * d3) + d1336 * c4 * d1 * d2) - d1339 * d2 * d3) - d1340 * d1 * d3) - d1338 * c3 * d1 * d2) + d1428 * d1 * d3) + d1341 * d3 * d4) + d677 * d0 * d4) + d679 * d0 * d3) + d676 * c0 * d1 * d5) + d1395 * d0 * d5) + d676 * c5 * d0 * d1) - d695 * c0 * d1 * d4) - d589 * d2 * d3) - d1391 * d0 * d4) - d1392 * d0 * d3) - d1396 * d0 * d2) - d1397 * d0 * d1) + d1343 * d1 * d3) + d596 * d0 * d3) + d595 * d0 * d1) - 16.0 * a3 * b3 * b5 * c1 * d0 * d1) + d651 * b1 * c3 * d2 * d3) - d1345 * d2 * d3) - d511 * b3 * c2 * d1 * d3) - d1344 * c3 * d1 * d2) - 32.0 * a4 * b1 * b2 * c3 * d0 * d3) + 16.0 * a4 * b2 * b3 * c0 * d1 * d3) + 16.0 * a4 * b2 * b3 * c1 * d0 * d3) + d1401 * d0 * d1) - x_mm_tmp * d1 * d3) + kb_mm_tmp * d1 * d3) - lb_mm_tmp * c3 * d4) - mb_mm_tmp * d3) - c_mm_tmp_tmp * c3 * c4 * d2) + d708 * b4 * c2 * c3 * d3) - nb_mm_tmp * d3) + d1373 * d3) - d1375 * d3) - d1374 * c3 * d2) - d1365 * c2 * c3 * d1) + ob_mm_tmp * c1 * c3 * d1) + d1376 * c3 * d4) + d1377 * d3) + d1402 * d0) - d1419 * d3) + d1379 * d3) + d1378 * c3 * d1) + d1361 * d0) + d446 * d0 * d3 * d5) - d1420 * d3 * d5) + d1421 * d3 * d4) - mm_tmp * d3 * d4) - d1403 * d0 * d3) + d692 * c0 * d3 * d5) + d1408 * d0 * d5) - d1409 * d0 * d4) + d692 * c5 * d0 * d3) - d690 * d0 * d3) + d1404 * d0 * d4) + d1405 * d0 * d3) + d1247 * d0 * d3) - d1406 * d0 * d3) - d722 * d0 * d3) - d1425 * d3);
}

//

double coeff5(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b2,
              double b3, double b4, double b5, double c0, double c1, double c2, double c3, double c4, double c5,
              double d0, double d1, double d2, double d3, double d4, double d5) {
    double ab_mm_tmp;
    double ac_mm_tmp;
    double ad_mm_tmp;
    double ae_mm_tmp;
    double af_mm_tmp;
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double b_mm_tmp_tmp;
    double bb_mm_tmp;
    double bc_mm_tmp;
    double bd_mm_tmp;
    double be_mm_tmp;
    double bf_mm_tmp;
    double c_mm_tmp;
    double c_mm_tmp_tmp;
    double cb_mm_tmp;
    double cc_mm_tmp;
    double cd_mm_tmp;
    double ce_mm_tmp;
    double cf_mm_tmp;
    double d;
    double d10;
    double d100;
    double d1000;
    double d1001;
    double d1002;
    double d1003;
    double d1004;
    double d1005;
    double d1006;
    double d1007;
    double d1008;
    double d1009;
    double d101;
    double d1010;
    double d1011;
    double d1012;
    double d1013;
    double d1014;
    double d1015;
    double d1016;
    double d1017;
    double d1018;
    double d1019;
    double d102;
    double d1020;
    double d1021;
    double d1022;
    double d1023;
    double d1024;
    double d1025;
    double d1026;
    double d1027;
    double d1028;
    double d1029;
    double d103;
    double d1030;
    double d1031;
    double d1032;
    double d1033;
    double d1034;
    double d1035;
    double d1036;
    double d1037;
    double d1038;
    double d1039;
    double d104;
    double d1040;
    double d1041;
    double d1042;
    double d1043;
    double d1044;
    double d1045;
    double d1046;
    double d1047;
    double d1048;
    double d1049;
    double d105;
    double d1050;
    double d1051;
    double d1052;
    double d1053;
    double d1054;
    double d1055;
    double d1056;
    double d1057;
    double d1058;
    double d1059;
    double d106;
    double d1060;
    double d1061;
    double d1062;
    double d1063;
    double d1064;
    double d1065;
    double d1066;
    double d1067;
    double d1068;
    double d1069;
    double d107;
    double d1070;
    double d1071;
    double d1072;
    double d1073;
    double d1074;
    double d1075;
    double d1076;
    double d1077;
    double d1078;
    double d1079;
    double d108;
    double d1080;
    double d1081;
    double d1082;
    double d1083;
    double d1084;
    double d1085;
    double d1086;
    double d1087;
    double d1088;
    double d1089;
    double d109;
    double d1090;
    double d1091;
    double d1092;
    double d1093;
    double d1094;
    double d1095;
    double d1096;
    double d1097;
    double d1098;
    double d1099;
    double d11;
    double d110;
    double d1100;
    double d1101;
    double d1102;
    double d1103;
    double d1104;
    double d1105;
    double d1106;
    double d1107;
    double d1108;
    double d1109;
    double d111;
    double d1110;
    double d1111;
    double d1112;
    double d1113;
    double d1114;
    double d1115;
    double d1116;
    double d1117;
    double d1118;
    double d1119;
    double d112;
    double d1120;
    double d1121;
    double d1122;
    double d1123;
    double d1124;
    double d1125;
    double d1126;
    double d1127;
    double d1128;
    double d1129;
    double d113;
    double d1130;
    double d1131;
    double d1132;
    double d1133;
    double d1134;
    double d1135;
    double d1136;
    double d1137;
    double d1138;
    double d1139;
    double d114;
    double d1140;
    double d1141;
    double d1142;
    double d1143;
    double d1144;
    double d1145;
    double d1146;
    double d1147;
    double d1148;
    double d1149;
    double d115;
    double d1150;
    double d1151;
    double d1152;
    double d1153;
    double d1154;
    double d1155;
    double d1156;
    double d1157;
    double d1158;
    double d1159;
    double d116;
    double d1160;
    double d1161;
    double d1162;
    double d1163;
    double d1164;
    double d1165;
    double d1166;
    double d1167;
    double d1168;
    double d1169;
    double d117;
    double d1170;
    double d1171;
    double d1172;
    double d1173;
    double d1174;
    double d1175;
    double d1176;
    double d1177;
    double d1178;
    double d1179;
    double d118;
    double d1180;
    double d1181;
    double d119;
    double d12;
    double d120;
    double d121;
    double d122;
    double d123;
    double d124;
    double d125;
    double d126;
    double d127;
    double d128;
    double d129;
    double d13;
    double d130;
    double d131;
    double d132;
    double d133;
    double d134;
    double d135;
    double d136;
    double d137;
    double d138;
    double d139;
    double d14;
    double d140;
    double d141;
    double d142;
    double d143;
    double d144;
    double d145;
    double d146;
    double d147;
    double d148;
    double d149;
    double d15;
    double d150;
    double d151;
    double d152;
    double d153;
    double d154;
    double d155;
    double d156;
    double d157;
    double d158;
    double d159;
    double d16;
    double d160;
    double d161;
    double d162;
    double d163;
    double d164;
    double d165;
    double d166;
    double d167;
    double d168;
    double d169;
    double d17;
    double d170;
    double d171;
    double d172;
    double d173;
    double d174;
    double d175;
    double d176;
    double d177;
    double d178;
    double d179;
    double d18;
    double d180;
    double d181;
    double d182;
    double d183;
    double d184;
    double d185;
    double d186;
    double d187;
    double d188;
    double d189;
    double d19;
    double d190;
    double d191;
    double d192;
    double d193;
    double d194;
    double d195;
    double d196;
    double d197;
    double d198;
    double d199;
    double d20;
    double d200;
    double d201;
    double d202;
    double d203;
    double d204;
    double d205;
    double d206;
    double d207;
    double d208;
    double d209;
    double d21;
    double d210;
    double d211;
    double d212;
    double d213;
    double d214;
    double d215;
    double d216;
    double d217;
    double d218;
    double d219;
    double d22;
    double d220;
    double d221;
    double d222;
    double d223;
    double d224;
    double d225;
    double d226;
    double d227;
    double d228;
    double d229;
    double d23;
    double d230;
    double d231;
    double d232;
    double d233;
    double d234;
    double d235;
    double d236;
    double d237;
    double d238;
    double d239;
    double d24;
    double d240;
    double d241;
    double d242;
    double d243;
    double d244;
    double d245;
    double d246;
    double d247;
    double d248;
    double d249;
    double d25;
    double d250;
    double d251;
    double d252;
    double d253;
    double d254;
    double d255;
    double d256;
    double d257;
    double d258;
    double d259;
    double d26;
    double d260;
    double d261;
    double d262;
    double d263;
    double d264;
    double d265;
    double d266;
    double d267;
    double d268;
    double d269;
    double d27;
    double d270;
    double d271;
    double d272;
    double d273;
    double d274;
    double d275;
    double d276;
    double d277;
    double d278;
    double d279;
    double d28;
    double d280;
    double d281;
    double d282;
    double d283;
    double d284;
    double d285;
    double d286;
    double d287;
    double d288;
    double d289;
    double d29;
    double d290;
    double d291;
    double d292;
    double d293;
    double d294;
    double d295;
    double d296;
    double d297;
    double d298;
    double d299;
    double d30;
    double d300;
    double d301;
    double d302;
    double d303;
    double d304;
    double d305;
    double d306;
    double d307;
    double d308;
    double d309;
    double d31;
    double d310;
    double d311;
    double d312;
    double d313;
    double d314;
    double d315;
    double d316;
    double d317;
    double d318;
    double d319;
    double d32;
    double d320;
    double d321;
    double d322;
    double d323;
    double d324;
    double d325;
    double d326;
    double d327;
    double d328;
    double d329;
    double d33;
    double d330;
    double d331;
    double d332;
    double d333;
    double d334;
    double d335;
    double d336;
    double d337;
    double d338;
    double d339;
    double d34;
    double d340;
    double d341;
    double d342;
    double d343;
    double d344;
    double d345;
    double d346;
    double d347;
    double d348;
    double d349;
    double d35;
    double d350;
    double d351;
    double d352;
    double d353;
    double d354;
    double d355;
    double d356;
    double d357;
    double d358;
    double d359;
    double d36;
    double d360;
    double d361;
    double d362;
    double d363;
    double d364;
    double d365;
    double d366;
    double d367;
    double d368;
    double d369;
    double d37;
    double d370;
    double d371;
    double d372;
    double d373;
    double d374;
    double d375;
    double d376;
    double d377;
    double d378;
    double d379;
    double d38;
    double d380;
    double d381;
    double d382;
    double d383;
    double d384;
    double d385;
    double d386;
    double d387;
    double d388;
    double d389;
    double d39;
    double d390;
    double d391;
    double d392;
    double d393;
    double d394;
    double d395;
    double d396;
    double d397;
    double d398;
    double d399;
    double d40;
    double d400;
    double d401;
    double d402;
    double d403;
    double d404;
    double d405;
    double d406;
    double d407;
    double d408;
    double d409;
    double d41;
    double d410;
    double d411;
    double d412;
    double d413;
    double d414;
    double d415;
    double d416;
    double d417;
    double d418;
    double d419;
    double d42;
    double d420;
    double d421;
    double d422;
    double d423;
    double d424;
    double d425;
    double d426;
    double d427;
    double d428;
    double d429;
    double d43;
    double d430;
    double d431;
    double d432;
    double d433;
    double d434;
    double d435;
    double d436;
    double d437;
    double d438;
    double d439;
    double d44;
    double d440;
    double d441;
    double d442;
    double d443;
    double d444;
    double d445;
    double d446;
    double d447;
    double d448;
    double d449;
    double d45;
    double d450;
    double d451;
    double d452;
    double d453;
    double d454;
    double d455;
    double d456;
    double d457;
    double d458;
    double d459;
    double d46;
    double d460;
    double d461;
    double d462;
    double d463;
    double d464;
    double d465;
    double d466;
    double d467;
    double d468;
    double d469;
    double d47;
    double d470;
    double d471;
    double d472;
    double d473;
    double d474;
    double d475;
    double d476;
    double d477;
    double d478;
    double d479;
    double d48;
    double d480;
    double d481;
    double d482;
    double d483;
    double d484;
    double d485;
    double d486;
    double d487;
    double d488;
    double d489;
    double d49;
    double d490;
    double d491;
    double d492;
    double d493;
    double d494;
    double d495;
    double d496;
    double d497;
    double d498;
    double d499;
    double d50;
    double d500;
    double d501;
    double d502;
    double d503;
    double d504;
    double d505;
    double d506;
    double d507;
    double d508;
    double d509;
    double d51;
    double d510;
    double d511;
    double d512;
    double d513;
    double d514;
    double d515;
    double d516;
    double d517;
    double d518;
    double d519;
    double d52;
    double d520;
    double d521;
    double d522;
    double d523;
    double d524;
    double d525;
    double d526;
    double d527;
    double d528;
    double d529;
    double d53;
    double d530;
    double d531;
    double d532;
    double d533;
    double d534;
    double d535;
    double d536;
    double d537;
    double d538;
    double d539;
    double d54;
    double d540;
    double d541;
    double d542;
    double d543;
    double d544;
    double d545;
    double d546;
    double d547;
    double d548;
    double d549;
    double d55;
    double d550;
    double d551;
    double d552;
    double d553;
    double d554;
    double d555;
    double d556;
    double d557;
    double d558;
    double d559;
    double d56;
    double d560;
    double d561;
    double d562;
    double d563;
    double d564;
    double d565;
    double d566;
    double d567;
    double d568;
    double d569;
    double d57;
    double d570;
    double d571;
    double d572;
    double d573;
    double d574;
    double d575;
    double d576;
    double d577;
    double d578;
    double d579;
    double d58;
    double d580;
    double d581;
    double d582;
    double d583;
    double d584;
    double d585;
    double d586;
    double d587;
    double d588;
    double d589;
    double d59;
    double d590;
    double d591;
    double d592;
    double d593;
    double d594;
    double d595;
    double d596;
    double d597;
    double d598;
    double d599;
    double d6;
    double d60;
    double d600;
    double d601;
    double d602;
    double d603;
    double d604;
    double d605;
    double d606;
    double d607;
    double d608;
    double d609;
    double d61;
    double d610;
    double d611;
    double d612;
    double d613;
    double d614;
    double d615;
    double d616;
    double d617;
    double d618;
    double d619;
    double d62;
    double d620;
    double d621;
    double d622;
    double d623;
    double d624;
    double d625;
    double d626;
    double d627;
    double d628;
    double d629;
    double d63;
    double d630;
    double d631;
    double d632;
    double d633;
    double d634;
    double d635;
    double d636;
    double d637;
    double d638;
    double d639;
    double d64;
    double d640;
    double d641;
    double d642;
    double d643;
    double d644;
    double d645;
    double d646;
    double d647;
    double d648;
    double d649;
    double d65;
    double d650;
    double d651;
    double d652;
    double d653;
    double d654;
    double d655;
    double d656;
    double d657;
    double d658;
    double d659;
    double d66;
    double d660;
    double d661;
    double d662;
    double d663;
    double d664;
    double d665;
    double d666;
    double d667;
    double d668;
    double d669;
    double d67;
    double d670;
    double d671;
    double d672;
    double d673;
    double d674;
    double d675;
    double d676;
    double d677;
    double d678;
    double d679;
    double d68;
    double d680;
    double d681;
    double d682;
    double d683;
    double d684;
    double d685;
    double d686;
    double d687;
    double d688;
    double d689;
    double d69;
    double d690;
    double d691;
    double d692;
    double d693;
    double d694;
    double d695;
    double d696;
    double d697;
    double d698;
    double d699;
    double d7;
    double d70;
    double d700;
    double d701;
    double d702;
    double d703;
    double d704;
    double d705;
    double d706;
    double d707;
    double d708;
    double d709;
    double d71;
    double d710;
    double d711;
    double d712;
    double d713;
    double d714;
    double d715;
    double d716;
    double d717;
    double d718;
    double d719;
    double d72;
    double d720;
    double d721;
    double d722;
    double d723;
    double d724;
    double d725;
    double d726;
    double d727;
    double d728;
    double d729;
    double d73;
    double d730;
    double d731;
    double d732;
    double d733;
    double d734;
    double d735;
    double d736;
    double d737;
    double d738;
    double d739;
    double d74;
    double d740;
    double d741;
    double d742;
    double d743;
    double d744;
    double d745;
    double d746;
    double d747;
    double d748;
    double d749;
    double d75;
    double d750;
    double d751;
    double d752;
    double d753;
    double d754;
    double d755;
    double d756;
    double d757;
    double d758;
    double d759;
    double d76;
    double d760;
    double d761;
    double d762;
    double d763;
    double d764;
    double d765;
    double d766;
    double d767;
    double d768;
    double d769;
    double d77;
    double d770;
    double d771;
    double d772;
    double d773;
    double d774;
    double d775;
    double d776;
    double d777;
    double d778;
    double d779;
    double d78;
    double d780;
    double d781;
    double d782;
    double d783;
    double d784;
    double d785;
    double d786;
    double d787;
    double d788;
    double d789;
    double d79;
    double d790;
    double d791;
    double d792;
    double d793;
    double d794;
    double d795;
    double d796;
    double d797;
    double d798;
    double d799;
    double d8;
    double d80;
    double d800;
    double d801;
    double d802;
    double d803;
    double d804;
    double d805;
    double d806;
    double d807;
    double d808;
    double d809;
    double d81;
    double d810;
    double d811;
    double d812;
    double d813;
    double d814;
    double d815;
    double d816;
    double d817;
    double d818;
    double d819;
    double d82;
    double d820;
    double d821;
    double d822;
    double d823;
    double d824;
    double d825;
    double d826;
    double d827;
    double d828;
    double d829;
    double d83;
    double d830;
    double d831;
    double d832;
    double d833;
    double d834;
    double d835;
    double d836;
    double d837;
    double d838;
    double d839;
    double d84;
    double d840;
    double d841;
    double d842;
    double d843;
    double d844;
    double d845;
    double d846;
    double d847;
    double d848;
    double d849;
    double d85;
    double d850;
    double d851;
    double d852;
    double d853;
    double d854;
    double d855;
    double d856;
    double d857;
    double d858;
    double d859;
    double d86;
    double d860;
    double d861;
    double d862;
    double d863;
    double d864;
    double d865;
    double d866;
    double d867;
    double d868;
    double d869;
    double d87;
    double d870;
    double d871;
    double d872;
    double d873;
    double d874;
    double d875;
    double d876;
    double d877;
    double d878;
    double d879;
    double d88;
    double d880;
    double d881;
    double d882;
    double d883;
    double d884;
    double d885;
    double d886;
    double d887;
    double d888;
    double d889;
    double d89;
    double d890;
    double d891;
    double d892;
    double d893;
    double d894;
    double d895;
    double d896;
    double d897;
    double d898;
    double d899;
    double d9;
    double d90;
    double d900;
    double d901;
    double d902;
    double d903;
    double d904;
    double d905;
    double d906;
    double d907;
    double d908;
    double d909;
    double d91;
    double d910;
    double d911;
    double d912;
    double d913;
    double d914;
    double d915;
    double d916;
    double d917;
    double d918;
    double d919;
    double d92;
    double d920;
    double d921;
    double d922;
    double d923;
    double d924;
    double d925;
    double d926;
    double d927;
    double d928;
    double d929;
    double d93;
    double d930;
    double d931;
    double d932;
    double d933;
    double d934;
    double d935;
    double d936;
    double d937;
    double d938;
    double d939;
    double d94;
    double d940;
    double d941;
    double d942;
    double d943;
    double d944;
    double d945;
    double d946;
    double d947;
    double d948;
    double d949;
    double d95;
    double d950;
    double d951;
    double d952;
    double d953;
    double d954;
    double d955;
    double d956;
    double d957;
    double d958;
    double d959;
    double d96;
    double d960;
    double d961;
    double d962;
    double d963;
    double d964;
    double d965;
    double d966;
    double d967;
    double d968;
    double d969;
    double d97;
    double d970;
    double d971;
    double d972;
    double d973;
    double d974;
    double d975;
    double d976;
    double d977;
    double d978;
    double d979;
    double d98;
    double d980;
    double d981;
    double d982;
    double d983;
    double d984;
    double d985;
    double d986;
    double d987;
    double d988;
    double d989;
    double d99;
    double d990;
    double d991;
    double d992;
    double d993;
    double d994;
    double d995;
    double d996;
    double d997;
    double d998;
    double d999;
    double d_mm_tmp;
    double d_mm_tmp_tmp;
    double db_mm_tmp;
    double dc_mm_tmp;
    double dd_mm_tmp;
    double de_mm_tmp;
    double df_mm_tmp;
    double e_mm_tmp;
    double e_mm_tmp_tmp;
    double eb_mm_tmp;
    double ec_mm_tmp;
    double ed_mm_tmp;
    double ee_mm_tmp;
    double ef_mm_tmp;
    double f_mm_tmp;
    double fb_mm_tmp;
    double fc_mm_tmp;
    double fd_mm_tmp;
    double fe_mm_tmp;
    double ff_mm_tmp;
    double g_mm_tmp;
    double gb_mm_tmp;
    double gc_mm_tmp;
    double gd_mm_tmp;
    double ge_mm_tmp;
    double gf_mm_tmp;
    double h_mm_tmp;
    double hb_mm_tmp;
    double hc_mm_tmp;
    double hd_mm_tmp;
    double he_mm_tmp;
    double hf_mm_tmp;
    double i_mm_tmp;
    double ib_mm_tmp;
    double ic_mm_tmp;
    double id_mm_tmp;
    double ie_mm_tmp;
    double if_mm_tmp;
    double j_mm_tmp;
    double jb_mm_tmp;
    double jc_mm_tmp;
    double jd_mm_tmp;
    double je_mm_tmp;
    double jf_mm_tmp;
    double k_mm_tmp;
    double kb_mm_tmp;
    double kc_mm_tmp;
    double kd_mm_tmp;
    double ke_mm_tmp;
    double kf_mm_tmp;
    double l_mm_tmp;
    double lb_mm_tmp;
    double lc_mm_tmp;
    double ld_mm_tmp;
    double le_mm_tmp;
    double m_mm_tmp;
    double mb_mm_tmp;
    double mc_mm_tmp;
    double md_mm_tmp;
    double me_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    double mm_tmp_tmp_tmp;
    double n_mm_tmp;
    double nb_mm_tmp;
    double nc_mm_tmp;
    double nd_mm_tmp;
    double ne_mm_tmp;
    double o_mm_tmp;
    double ob_mm_tmp;
    double oc_mm_tmp;
    double od_mm_tmp;
    double oe_mm_tmp;
    double p_mm_tmp;
    double pb_mm_tmp;
    double pc_mm_tmp;
    double pd_mm_tmp;
    double pe_mm_tmp;
    double q_mm_tmp;
    double qb_mm_tmp;
    double qc_mm_tmp;
    double qd_mm_tmp;
    double qe_mm_tmp;
    double r_mm_tmp;
    double rb_mm_tmp;
    double rc_mm_tmp;
    double rd_mm_tmp;
    double re_mm_tmp;
    double s_mm_tmp;
    double sb_mm_tmp;
    double sc_mm_tmp;
    double sd_mm_tmp;
    double se_mm_tmp;
    double t_mm_tmp;
    double tb_mm_tmp;
    double tc_mm_tmp;
    double td_mm_tmp;
    double te_mm_tmp;
    double u_mm_tmp;
    double ub_mm_tmp;
    double uc_mm_tmp;
    double ud_mm_tmp;
    double ue_mm_tmp;
    double v_mm_tmp;
    double vb_mm_tmp;
    double vc_mm_tmp;
    double vd_mm_tmp;
    double ve_mm_tmp;
    double w_mm_tmp;
    double wb_mm_tmp;
    double wc_mm_tmp;
    double wd_mm_tmp;
    double we_mm_tmp;
    double x_mm_tmp;
    double xb_mm_tmp;
    double xc_mm_tmp;
    double xd_mm_tmp;
    double xe_mm_tmp;
    double y_mm_tmp;
    double yb_mm_tmp;
    double yc_mm_tmp;
    double yd_mm_tmp;
    double ye_mm_tmp;
    d = a0 * a0;
    b_d1 = a1 * a1;
    b_d2 = std::pow(c5, 3.0);
    b_d3 = b5 * b5;
    b_d4 = std::pow(d3, 3.0);
    b_d5 = std::pow(d0, 3.0);
    d6 = a3 * a3;
    d7 = 3.0 * d6;
    d8 = std::pow(c0, 3.0);
    d9 = std::pow(c3, 3.0);
    d10 = a5 * a5;
    d11 = 3.0 * d10;
    d12 = d11 * b5;
    d13 = b2 * b2;
    d14 = d7 * b3;
    d15 = b4 * b4;
    d16 = std::pow(a5, 3.0);
    d17 = d5 * d5;
    d18 = 3.0 * d16;
    d19 = c0 * c0;
    d20 = d18 * d19;
    d21 = std::pow(b0, 3.0);
    d22 = c3 * c3;
    d23 = std::pow(b3, 3.0);
    d24 = std::pow(a0, 3.0);
    d25 = c1 * c1;
    d26 = 4.0 * d16 * d25;
    d27 = 3.0 * d24;
    d28 = std::pow(a3, 3.0);
    d18 *= d22;
    d29 = 3.0 * d28;
    d30 = c5 * c5;
    d31 = 3.0 * d23 * d19;
    d32 = 4.0 * d28;
    d33 = d2 * d2;
    d34 = 3.0 * d21 * d22;
    d35 = 4.0 * d24;
    d36 = d4 * d4;
    d37 = a2 * a2;
    d38 = a4 * a4;
    d39 = c4 * c4;
    d40 = c2 * c2;
    d41 = 4.0 * a0 * d37;
    d42 = d0 * d0;
    d43 = b0 * b0;
    d44 = d3 * d3;
    d45 = b3 * b3;
    d46 = 3.0 * a0 * b_d3;
    d47 = 4.0 * a5 * d13;
    d48 = 3.0 * d;
    d49 = d48 * a5;
    d50 = 3.0 * a3 * b_d3;
    d51 = 4.0 * a3 * d38;
    d52 = 4.0 * a5 * d15;
    d53 = d7 * a5;
    d54 = d7 * b0;
    d55 = 3.0 * d43;
    d56 = d55 * b5;
    d57 = 4.0 * b_d1;
    d58 = d57 * b3;
    d59 = d48 * b3;
    d60 = 3.0 * d45 * b5;
    d61 = 8.0 * a0 * a1;
    d62 = d61 * b1;
    d63 = 4.0 * b0 * d13;
    d64 = 6.0 * a0 * a3;
    d65 = d64 * b0;
    mm_tmp = 8.0 * a1 * a3;
    d66 = mm_tmp * b1;
    d67 = d64 * b3;
    d68 = 8.0 * a2 * b2;
    d69 = 6.0 * d16 * c0 * c3;
    d70 = 4.0 * a0 * d10;
    d71 = 16.0 * a0 * d37;
    d72 = 16.0 * a0 * d38;
    d73 = d1 * d1;
    d74 = b1 * b1;
    d75 = 16.0 * a0 * d13;
    d76 = 16.0 * a0 * d15;
    d77 = 4.0 * d;
    b_mm_tmp = 4.0 * d10;
    d78 = b_mm_tmp * b0;
    d79 = d78 * c0;
    d80 = d41 * d30;
    d81 = 3.0 * a0 * d10;
    d82 = d70 * d40;
    d83 = 4.0 * a1 * d10 * c1;
    d84 = 4.0 * a1 * b_d3;
    d85 = 16.0 * d;
    d86 = 4.0 * d37;
    d87 = d86 * b0;
    d88 = 16.0 * a2 * d38 * c2;
    d89 = 16.0 * a2 * d15;
    d90 = 4.0 * a0 * d74;
    d91 = d90 * c0;
    d92 = 4.0 * a0 * b_d1;
    d93 = 3.0 * a3 * d43;
    d94 = d48 * a3;
    d95 = 6.0 * a0 * d10;
    d96 = d95 * c0;
    d97 = 6.0 * a0 * d45;
    d98 = d97 * c0;
    d99 = 6.0 * a0 * d6;
    d100 = 4.0 * a1 * d43 * c1;
    d101 = d87 * c0;
    d102 = 9.0 * a0 * d43;
    d103 = d102 * c3;
    d104 = d93 * c0;
    d105 = 8.0 * a0 * b_d1;
    d106 = d71 * c3;
    d107 = 4.0 * a0 * d38;
    d108 = d107 * c5;
    d109 = 8.0 * a0 * d10;
    d110 = 12.0 * a0;
    d111 = 16.0 * d37;
    d112 = 4.0 * a5 * d43;
    d113 = d77 * a5;
    d114 = 16.0 * d10;
    d115 = 16.0 * a1 * d10;
    d116 = 16.0 * a3 * d13;
    d117 = 64.0 * b_d1;
    d118 = d111 * a3;
    d119 = d114 * b1;
    d120 = d119 * c1;
    d121 = 4.0 * a0 * d15;
    d122 = 4.0 * a2 * d10;
    d123 = 16.0 * a3 * d38;
    d124 = 16.0 * a3 * d15;
    d125 = 4.0 * d38;
    d126 = d125 * b0;
    d127 = b_mm_tmp * b2;
    d128 = 16.0 * a0 * b_d1;
    d129 = 16.0 * a1 * d37;
    d130 = d77 * a2;
    d131 = d77 * b2 * c2;
    d132 = d111 * b1 * c1;
    d133 = 12.0 * d38;
    d134 = 8.0 * b_d1;
    d135 = 8.0 * a0 * d37;
    d136 = 8.0 * a3 * d10;
    d137 = d136 * c0;
    d138 = 8.0 * a0 * d45;
    c_mm_tmp = 8.0 * a0 * d74;
    d139 = c_mm_tmp * c3;
    d140 = d123 * c0;
    d141 = 8.0 * a3 * d74;
    d142 = d141 * c0;
    d143 = d128 * c5;
    d144 = 8.0 * a0 * d6;
    d145 = d134 * a3;
    d146 = d121 * d19;
    d147 = 8.0 * a0 * d13;
    d148 = d135 * c5;
    d149 = 4.0 * a1 * d45 * c1;
    d150 = 4.0 * a3 * d10;
    d151 = 16.0 * b_d1;
    d152 = d86 * a3;
    d153 = 16.0 * a5 * d74;
    d154 = d151 * a5;
    d_mm_tmp = 16.0 * d38;
    d155 = b_mm_tmp * b3;
    d156 = d155 * c0;
    d157 = 3.0 * a3 * d10;
    d158 = 16.0 * a4 * d13;
    d159 = d49 * d30;
    d48 *= b5;
    d160 = d152 * c5;
    d161 = d152 * d30;
    d162 = d111 * a4 * c4;
    d163 = d86 * b3;
    d164 = d11 * b0;
    d86 *= a5;
    d165 = d_mm_tmp * a5;
    d166 = d77 * a3;
    d167 = d163 * c0;
    d168 = d164 * d19;
    d169 = 8.0 * d37;
    d170 = 8.0 * d6;
    e_mm_tmp = d169 * a5;
    d171 = 6.0 * a3 * d10;
    d172 = 16.0 * a2 * d45;
    d173 = e_mm_tmp * c0;
    d174 = d171 * c3;
    d175 = d170 * a5;
    d176 = 8.0 * a5 * d45 * c0;
    d177 = d85 * a4;
    d178 = d165 * c0;
    d179 = 16.0 * a2 * d6;
    d180 = 3.0 * a0 * d45;
    d181 = d180 * c3;
    d182 = 16.0 * a1 * d38;
    d183 = 3.0 * a0 * d6;
    d184 = d48 * c0;
    d185 = d151 * a2;
    d186 = d151 * b2 * c2;
    d187 = 6.0 * a3 * d43;
    d188 = d187 * c3;
    d189 = 16.0 * a3 * d74 * d40;
    d190 = d116 * d25;
    d191 = 9.0 * a3 * d45;
    d192 = d191 * c0;
    d193 = 64.0 * a4;
    d194 = d57 * a5;
    d195 = 4.0 * a5 * d45;
    d196 = 6.0 * d;
    d197 = d111 * a5;
    d198 = 4.0 * a5 * d74;
    d199 = d194 * c5;
    d200 = d194 * d30;
    d201 = d57 * b5;
    d202 = 12.0 * d10;
    d203 = d202 * b5;
    d204 = d51 * d30;
    d205 = d150 * d39;
    d206 = 4.0 * a0 * d45;
    d207 = 4.0 * a0 * d6;
    d121 *= d22;
    d208 = 4.0 * a2 * d6;
    d209 = 4.0 * a3 * d74;
    d210 = d209 * c3;
    d211 = 64.0 * d37;
    d212 = d112 * d25;
    d213 = d198 * d19;
    d214 = d151 * a3;
    d215 = d201 * c0;
    d216 = 8.0 * a3 * d15;
    d217 = 8.0 * a3 * d38;
    d218 = 8.0 * a3 * d43;
    d219 = 8.0 * a5 * d43;
    d220 = d196 * a3;
    d221 = d197 * c3;
    d222 = d214 * c5;
    d223 = d217 * c5;
    d224 = d_mm_tmp * b1 * c1;
    d225 = d78 * d25;
    d226 = d206 * d39;
    d227 = 8.0 * d;
    d228 = d227 * a3;
    d229 = d227 * a5;
    d230 = d77 * b5;
    d231 = d57 * a3;
    f_mm_tmp = 4.0 * d6;
    d232 = f_mm_tmp * a5;
    d233 = d125 * a5;
    d234 = d151 * b5;
    d235 = d125 * b3;
    d236 = 4.0 * a4 * d10;
    d237 = d53 * d30;
    d7 *= b5;
    d238 = 16.0 * d6;
    d239 = d163 * c3;
    d240 = 6.0 * d6;
    d241 = d77 * a4;
    d242 = d77 * b4 * c4;
    d243 = 9.0 * d;
    d244 = d234 * d40;
    d245 = d111 * b5;
    d246 = d245 * d25;
    d247 = 8.0 * d38;
    d248 = 12.0 * d37;
    d249 = 6.0 * a5 * d43;
    d250 = d247 * a5;
    d251 = d196 * a5;
    d252 = 6.0 * a5 * d45;
    d253 = d250 * c3;
    d254 = d240 * a5;
    d255 = d251 * c5;
    d256 = d254 * c5;
    g_mm_tmp = 4.0 * a3 * d13;
    d257 = g_mm_tmp * d22;
    d258 = 12.0 * a3 * d45 * d40;
    d11 *= b3;
    d259 = b_mm_tmp * b4;
    d260 = 9.0 * d10;
    d261 = d260 * b5;
    d262 = f_mm_tmp * b5;
    d125 *= b5;
    d198 *= d22;
    d263 = d230 * d39;
    d264 = d151 * a4;
    d265 = d151 * b4 * c4;
    d266 = d201 * c3;
    d234 *= d39;
    d267 = d235 * c3;
    d268 = d_mm_tmp * b5;
    d269 = d268 * d25;
    d270 = f_mm_tmp * a4;
    d271 = d262 * d39;
    d272 = d125 * d22;
    d273 = d155 * d25;
    d274 = d262 * d40;
    d275 = d207 * d0;
    d276 = 4.0 * a3 * d43;
    d277 = 4.0 * b0 * d15;
    d278 = 12.0 * d;
    d279 = d278 * b0;
    d280 = d77 * b3;
    d281 = 4.0 * b0 * d45;
    d282 = d77 * b1;
    d283 = d281 * c0;
    d284 = f_mm_tmp * b0;
    d285 = d284 * c0;
    d286 = 4.0 * d13 * b3;
    d287 = 64.0 * d38;
    d288 = 4.0 * d43;
    d289 = d288 * b3;
    d290 = 16.0 * d74;
    d291 = d238 * b2;
    d292 = 9.0 * d6;
    d293 = 12.0 * d6;
    d294 = d293 * b3;
    d295 = 16.0 * a4 * d43;
    d296 = 6.0 * d10 * b0;
    d297 = d240 * b0;
    d298 = d111 * b3;
    d299 = 8.0 * d10;
    d300 = 4.0 * d74;
    d301 = d300 * b5;
    d302 = d85 * b4;
    d303 = d_mm_tmp * b0;
    d304 = d151 * b3;
    d305 = d298 * d39;
    d306 = d_mm_tmp * b3;
    d307 = d306 * d40;
    d57 *= b0;
    d308 = d289 * d25;
    d300 = d300 * b3 * d19;
    d309 = 16.0 * d43;
    d310 = d309 * b4;
    d311 = d134 * b0;
    d312 = d111 * b0;
    d313 = d299 * b3;
    d314 = d134 * b3;
    d315 = d312 * d39;
    d316 = d303 * d40;
    d317 = 4.0 * d45;
    d111 *= b4;
    d318 = f_mm_tmp * b1;
    d319 = d169 * b0;
    d320 = d196 * b3;
    d151 *= b0;
    d321 = d170 * b5;
    d322 = d170 * b0;
    d323 = d292 * b3;
    d55 = d55 * b3 * d22;
    d324 = d247 * b5;
    d325 = d227 * b3;
    d196 *= b5;
    d326 = d227 * b5;
    d327 = d247 * b3;
    d240 *= b5;
    d328 = 3.0 * b0 * d45 * d19;
    d329 = 8.0 * a0 * a2;
    d330 = d329 * b0 * c2;
    d331 = d329 * b2;
    d332 = 8.0 * a0 * a3;
    d333 = d332 * a5;
    h_mm_tmp = 6.0 * a0 * a5;
    d334 = 32.0 * a0 * a1;
    d335 = 32.0 * a1;
    d336 = 16.0 * a0 * a2;
    d337 = 8.0 * a0 * a5;
    d338 = 16.0 * a1 * a2;
    d339 = d338 * a4;
    d340 = 8.0 * a1 * a5;
    d341 = 8.0 * a2 * a3;
    d342 = 16.0 * a2 * a4;
    d343 = d64 * a5;
    d344 = 8.0 * a0 * a4;
    d345 = d337 * b0;
    d346 = d337 * b5;
    d347 = d346 * c0;
    d348 = d339 * c5;
    d349 = d339 * d30;
    d350 = d338 * b4;
    d351 = 16.0 * a1 * a4;
    d352 = d351 * b2;
    d353 = d340 * b1;
    d354 = d341 * a5 * c2;
    d355 = d341 * b2;
    d356 = d342 * b1;
    d357 = d343 * c5;
    d358 = d343 * d30;
    d64 *= b5;
    d359 = d344 * a5 * c4;
    d360 = d344 * b4;
    d361 = h_mm_tmp * b3;
    d362 = 6.0 * a3 * a5;
    d363 = d362 * b0;
    d364 = 32.0 * a0 * a4;
    d365 = d345 * d39;
    d366 = d61 * a5;
    d367 = d61 * b5 * c1;
    d368 = d329 * a3;
    d329 = d329 * b3 * c2;
    d369 = d332 * b2 * c2;
    d370 = 16.0 * a0 * a4;
    d371 = d345 * d40;
    d372 = d337 * b1 * c1;
    d373 = d350 * c0;
    d374 = 32.0 * a1 * a3;
    d375 = d340 * b0 * c1;
    d376 = d353 * c0;
    d377 = d341 * b0 * c2;
    d378 = d355 * c0;
    d379 = d356 * c0;
    d380 = 32.0 * a0 * a3;
    d381 = d64 * c0;
    d382 = d344 * b0 * c4;
    d383 = d360 * c0;
    d384 = 32.0 * a2 * a3;
    d385 = d363 * c0;
    d386 = d338 * a5;
    d387 = d386 * c4;
    d388 = d336 * a4;
    d389 = d336 * b4;
    d390 = d389 * c1;
    d391 = d370 * b2;
    d392 = d391 * c1;
    d393 = d342 * b0;
    d394 = d393 * c1;
    d395 = h_mm_tmp * b0;
    d396 = 32.0 * a1 * a5;
    d397 = d396 * b1;
    d398 = d397 * d40;
    d399 = d396 * b5;
    d400 = d399 * c1;
    i_mm_tmp = 8.0 * a2 * a5;
    d401 = i_mm_tmp * b2;
    d402 = d401 * d19;
    d403 = 32.0 * a1 * a4;
    d404 = 16.0 * a2 * a3;
    d405 = 32.0 * a2 * a5;
    d406 = 8.0 * a3 * a5;
    d407 = 8.0 * a3 * a4;
    d408 = d406 * b0;
    d409 = d350 * c3;
    d410 = mm_tmp * a5;
    d411 = d353 * c3;
    d412 = d340 * b3 * c1;
    d413 = d355 * c3;
    d414 = d341 * b3 * c2;
    d415 = d356 * c3;
    d416 = d408 * d40;
    d417 = d406 * b1 * c1;
    d418 = d332 * a4;
    d419 = d332 * b4 * c4;
    d420 = d64 * c3;
    d421 = d344 * b3 * c4;
    d422 = d360 * c3;
    d397 *= d39;
    d423 = d407 * b0 * c4;
    d424 = d363 * c3;
    d425 = d405 * b2;
    d426 = d425 * d25;
    j_mm_tmp = 16.0 * a3 * a4;
    d427 = d406 * b5;
    d428 = d351 * a5;
    d429 = d428 * c2;
    d430 = d404 * a4;
    d431 = d404 * b4;
    d432 = d431 * c1;
    d342 *= b3;
    d433 = j_mm_tmp * b2;
    d434 = d433 * c1;
    d435 = d342 * c1;
    d436 = d407 * b4;
    d437 = d332 * b5;
    d438 = d437 * d39;
    d439 = d337 * b3;
    d440 = d439 * d39;
    d441 = 6.0 * a0 * b0;
    d442 = d441 * b3;
    d443 = d442 * c0;
    d444 = 32.0 * a2 * b0;
    d445 = d444 * b2;
    d446 = d332 * b0;
    d447 = 16.0 * a0 * a1;
    d448 = 8.0 * a0 * b0;
    d449 = d448 * b5;
    d450 = 128.0 * a1 * a2;
    d332 *= b3;
    d451 = d374 * b1;
    d452 = d364 * b4;
    d453 = d452 * d40;
    d454 = 8.0 * a0 * b3;
    d455 = d454 * b5;
    d456 = 32.0 * a0 * b0;
    d457 = d447 * a4;
    d458 = d447 * b1;
    d459 = d447 * b4;
    d460 = d459 * c2;
    d461 = d364 * b0;
    d462 = d370 * b1;
    d463 = d462 * c2;
    d464 = d456 * b4;
    d465 = d338 * a3;
    d466 = d338 * b3;
    d467 = d466 * c4;
    d468 = d446 * c3;
    d469 = d332 * c0;
    d470 = d448 * b3;
    d471 = d470 * d40;
    d472 = 16.0 * a1 * a3;
    d473 = d472 * b1;
    d474 = d472 * b2;
    d475 = d474 * c4;
    d476 = 32.0 * a0 * a2;
    d477 = 12.0 * a0 * a3;
    d478 = 8.0 * a5 * b0;
    d479 = 128.0 * a1 * b1;
    d480 = 32.0 * a4 * b0;
    d481 = d480 * b4;
    d482 = 8.0 * a3 * b0;
    d483 = d482 * b5;
    d484 = d478 * b3;
    d485 = 16.0 * a1 * b0;
    d486 = d477 * b0;
    d487 = d476 * b2;
    d488 = d404 * b1;
    d489 = d488 * c4;
    d490 = d477 * b3;
    d491 = d485 * b1;
    d492 = d491 * c3;
    d493 = 16.0 * a1 * b1;
    d494 = d493 * b3;
    d495 = d494 * c0;
    d496 = d334 * b1;
    d497 = d487 * d39;
    d498 = 18.0 * a0 * a5;
    d499 = 32.0 * a0 * a5;
    k_mm_tmp = 12.0 * a0 * b0;
    d500 = 32.0 * a1 * b0;
    d501 = d384 * b2;
    d502 = 16.0 * a0 * b0;
    d503 = 128.0 * a1 * a4;
    d504 = 32.0 * a1 * b1;
    d505 = 32.0 * a2 * b2;
    d506 = 16.0 * a0 * a3;
    d507 = d505 * b3;
    d508 = 18.0 * a3 * a5;
    d509 = 32.0 * a3 * b0;
    d510 = 16.0 * a0 * a5;
    d511 = d501 * d39;
    d512 = d384 * b3;
    d513 = 32.0 * a5 * b0;
    d514 = d500 * b1 * d39;
    d338 *= b5;
    d515 = d336 * b2;
    d516 = d510 * b0;
    d517 = d506 * b0;
    d518 = d502 * b3;
    d519 = d502 * b5;
    l_mm_tmp = 12.0 * a3 * b0;
    d520 = l_mm_tmp * b3;
    d521 = d520 * c0;
    d522 = 16.0 * a1 * a5;
    d523 = d522 * b2;
    d340 *= b5;
    m_mm_tmp = 8.0 * a1 * b1;
    d524 = 32.0 * a2 * a4;
    d525 = 16.0 * a2 * a5;
    d526 = 16.0 * a2 * b1;
    d527 = 12.0 * a0 * a5;
    d528 = 32.0 * a3 * a5;
    d341 *= b5;
    d529 = d524 * b2;
    d530 = d524 * b4;
    d531 = i_mm_tmp * b3;
    d532 = d526 * b4;
    d533 = d68 * b3;
    d534 = d505 * b4;
    d535 = 8.0 * a2 * b3 * b5;
    d536 = d406 * b2;
    d406 *= b3;
    d537 = 8.0 * a3 * b2;
    d538 = d537 * b5;
    d539 = 16.0 * a4 * b1;
    d540 = d539 * b2;
    d541 = 32.0 * a4 * b2 * b4;
    d542 = 16.0 * a5 * b1;
    d543 = 8.0 * a5 * b1;
    d344 *= b5;
    d544 = d532 * d19;
    d545 = d533 * d19;
    d546 = 32.0 * a3 * b1;
    d547 = d540 * d19;
    d548 = d525 * b1;
    d549 = d525 * b2;
    d550 = 16.0 * a2 * b0;
    d551 = d550 * b2;
    d552 = d527 * b0;
    d553 = d526 * b5;
    d554 = d542 * b2;
    d555 = d506 * b3;
    d556 = 16.0 * a2 * b2;
    d557 = d337 * b4;
    d558 = d527 * b5;
    d559 = k_mm_tmp * b5;
    d560 = 6.0 * a0 * b3;
    d561 = d560 * b5;
    d562 = 128.0 * a2 * a4;
    d563 = 32.0 * a3 * a4;
    d564 = 8.0 * a4 * b0;
    d565 = d563 * b4;
    d566 = d565 * d40;
    n_mm_tmp = 6.0 * a3 * b0;
    d567 = n_mm_tmp * b5;
    o_mm_tmp = 8.0 * a4 * a5;
    d568 = o_mm_tmp * b0;
    d569 = d564 * b4;
    d570 = d564 * b5;
    d571 = 32.0 * a4 * b3 * b4;
    d572 = 6.0 * a5 * b0;
    d573 = d572 * b3;
    d574 = d478 * b4;
    d575 = 8.0 * a3 * b1;
    d576 = d507 * d25;
    d577 = d567 * d19;
    d578 = 32.0 * a3 * b2;
    d579 = d569 * d19;
    d580 = d573 * d19;
    p_mm_tmp = 16.0 * a3 * a5;
    d581 = d510 * b5;
    d582 = 16.0 * a3 * b0;
    d583 = p_mm_tmp * b3;
    d584 = 16.0 * a3 * b3;
    d585 = d582 * b3;
    d586 = d584 * b5 * c0;
    d587 = d575 * b3 * c1;
    d588 = 12.0 * a5 * b0;
    d589 = 32.0 * a4 * a5;
    d590 = 8.0 * a3 * b3;
    d591 = d590 * b5;
    q_mm_tmp = m_mm_tmp * b5;
    d592 = q_mm_tmp * d22;
    r_mm_tmp = 16.0 * a1 * b2;
    d593 = r_mm_tmp * b4;
    d594 = d593 * d22;
    d532 *= d22;
    d533 *= d22;
    d595 = d482 * b3;
    d596 = d595 * d39;
    d597 = d351 * b5;
    d598 = d522 * b4;
    d599 = 16.0 * a5 * b0;
    d600 = 16.0 * a1 * b4 * b5;
    d601 = d589 * b4;
    d602 = 16.0 * a5 * b3;
    d603 = d601 * d25;
    d604 = d406 * d39;
    d605 = d481 * d25;
    d606 = 16.0 * a4 * a5;
    d607 = d606 * b1;
    d540 *= d22;
    d539 *= b5;
    d608 = d542 * b4;
    d609 = 12.0 * a3 * a5;
    d567 *= d22;
    d569 *= d22;
    d573 *= d22;
    d610 = d591 * d25;
    d611 = d609 * b5;
    d612 = d606 * b4;
    d613 = 32.0 * a3 * b3;
    d614 = 16.0 * a4 * b3;
    d615 = j_mm_tmp * b4;
    d616 = d609 * b3;
    d617 = 12.0 * a3 * b3 * b5;
    d618 = d614 * b4;
    d619 = d362 * b5;
    d620 = o_mm_tmp * b4;
    d621 = d427 * d25;
    d622 = d619 * d22;
    d623 = d620 * d22;
    d61 *= b0;
    d624 = d448 * b1 * c1;
    d625 = 8.0 * a1 * b0;
    d626 = d625 * b1;
    d627 = d626 * c0;
    d628 = 16.0 * b1 * b2;
    d629 = d628 * b4;
    s_mm_tmp = 16.0 * a4 * b0;
    d630 = s_mm_tmp * b1;
    d631 = r_mm_tmp * b3;
    d526 *= b3;
    d632 = 16.0 * a3 * b1;
    d633 = d632 * b2;
    d634 = 32.0 * a4 * b1;
    d635 = 16.0 * b0 * b1;
    d636 = d635 * b4;
    d637 = 6.0 * b0 * b3 * b5;
    d638 = 16.0 * a0 * d10;
    d639 = d638 * c1;
    d640 = d115 * c0;
    d641 = 8.0 * a1 * d10;
    d642 = d641 * c0;
    d643 = 8.0 * a2 * d10;
    d644 = d643 * c0;
    d645 = 8.0 * b0 * b3;
    d646 = d641 * c1;
    d647 = d646 * c5;
    d648 = d115 * c2;
    d649 = d648 * c4;
    d643 = d643 * c2 * c3;
    d650 = 32.0 * a1 * d13 * c1 * c3;
    d651 = 8.0 * a2 * d43 * c2 * c3;
    d652 = d578 * b3;
    d653 = d595 * d40;
    d654 = d455 * d25;
    d655 = d644 * c2;
    d656 = d483 * d25;
    d657 = d135 * c0;
    d658 = d295 * c1;
    d659 = d658 * c2;
    d660 = d484 * d25;
    d661 = d645 * b5;
    d662 = 16.0 * a3 * d10;
    d663 = d662 * c1;
    d95 = d95 * c3 * c5;
    d171 *= c0;
    d664 = d171 * c5;
    d665 = 8.0 * a4 * d10;
    d666 = d665 * c0;
    d667 = d666 * c4;
    d668 = 8.0 * a0 * d38;
    d250 *= c0;
    d669 = d250 * c5;
    d670 = 8.0 * a2 * d45;
    d671 = d172 * c1 * c4;
    d672 = d670 * c2 * c3;
    d673 = d216 * c0 * c3;
    d674 = 32.0 * d37;
    d675 = 32.0 * a2 * d74 * c2 * c3;
    d676 = 8.0 * a4 * d43;
    d677 = d676 * c0;
    d678 = d677 * c4;
    d679 = d249 * c0 * c3;
    d680 = 32.0 * a1 * d37;
    d681 = d680 * c1;
    d682 = d227 * a2;
    d683 = d682 * c2;
    d684 = d229 * c2;
    d685 = d674 * a5 * c1;
    d641 *= c3;
    d686 = d136 * c1;
    d687 = d109 * c0;
    d688 = d96 * c5;
    d689 = d296 * c0 * c3;
    d690 = d668 * c0;
    d691 = 32.0 * a4 * d74 * c0 * c4;
    d135 *= c3;
    d692 = d251 * c0;
    d693 = 32.0 * b_d1;
    d694 = d693 * a2;
    d695 = d694 * c2;
    d696 = d693 * a5;
    d697 = d169 * a3;
    d698 = d697 * c0;
    d699 = d174 * c5;
    d665 = d665 * c3 * c4;
    d700 = d134 * a5;
    d701 = d253 * c5;
    d702 = 32.0 * a1 * d38;
    d703 = d702 * c1;
    d704 = 8.0 * a4 * d45 * c0 * c4;
    d705 = d252 * c0 * c3;
    d706 = d700 * c0;
    d707 = 32.0 * d38;
    d708 = d227 * a4;
    d709 = d708 * c4;
    d251 *= c3;
    d710 = d229 * c4;
    d711 = d693 * a4;
    d712 = d711 * c4;
    d713 = d696 * c4;
    d714 = 8.0 * a2 * d6;
    d715 = d714 * c2;
    d716 = d217 * c0;
    d217 *= c3;
    d717 = d175 * c2;
    d718 = d324 * c0 * c3;
    d719 = d254 * c0;
    d700 *= c3;
    d720 = d170 * a4;
    d721 = d720 * c4;
    d254 *= c3;
    d722 = d175 * c4;
    d723 = 8.0 * a1 * d43;
    d724 = d723 * c1;
    d725 = 8.0 * a1 * d45;
    d726 = d725 * c0;
    d670 *= c0;
    d727 = d172 * c0;
    d728 = 16.0 * a3 * d43;
    d729 = d728 * c1;
    d723 *= c3;
    d730 = d218 * c1;
    d731 = 8.0 * b1 * d45 * c0 * c1;
    d732 = 16.0 * b2 * d45;
    d733 = d674 * a4;
    d734 = d733 * c0;
    d735 = 128.0 * d38;
    d736 = 32.0 * a0 * d38;
    d737 = 32.0 * a2 * d38;
    d187 *= c0;
    d738 = 8.0 * d43;
    d739 = d737 * c3;
    d740 = 32.0 * a3 * d38 * c2;
    d741 = d188 * c5;
    d676 = d676 * c3 * c4;
    d742 = d736 * c2;
    d743 = d98 * c5;
    d744 = d737 * c0;
    d745 = 8.0 * a3 * d13 * c0 * c3;
    d746 = 6.0 * b0 * d45 * c0 * c3;
    d134 *= b5;
    t_mm_tmp = d707 * b2;
    d747 = t_mm_tmp * c0;
    d748 = 32.0 * d;
    d749 = d85 * a5;
    d750 = d227 * b2;
    d751 = d750 * c2;
    d752 = d707 * b3;
    d753 = d749 * c4;
    d754 = d747 * c2;
    d755 = d139 * c5;
    d756 = d142 * c5;
    d757 = 8.0 * a5 * d74 * c0 * c3;
    d758 = 6.0 * d43 * b3 * c0 * c3;
    d759 = 16.0 * a0 * d6;
    d760 = d227 * a1;
    d761 = d227 * b1;
    d762 = d761 * c1;
    d750 *= c3;
    d763 = d325 * c2;
    d764 = d302 * c1;
    d765 = d748 * b4;
    d766 = 128.0 * d37;
    d767 = d674 * b1;
    d768 = d767 * c1;
    d227 *= b4;
    d769 = d227 * c0;
    d770 = d674 * a3;
    d771 = d674 * b3;
    d772 = d238 * a5;
    d773 = d772 * c2;
    d774 = d238 * b5;
    d775 = d85 * b5;
    d776 = 8.0 * d74 * b3 * c0 * c3;
    d777 = d238 * b0;
    d778 = d777 * c2;
    d779 = 18.0 * d * b0 * c3;
    d780 = 24.0 * d * b0 * c4;
    d781 = d320 * c0;
    d782 = d227 * c4;
    d783 = 32.0 * a0 * d37 * c4;
    d767 *= c3;
    d784 = d771 * c1;
    d785 = d196 * c0;
    d786 = d196 * c3;
    d787 = 128.0 * b_d1;
    d788 = d693 * b2;
    d789 = d674 * b4;
    d790 = d789 * c0;
    d791 = d693 * b5;
    d789 = d789 * c3 * c4;
    d792 = d788 * c3;
    d793 = d693 * b3 * c2;
    d794 = d693 * b4;
    d795 = d794 * c0;
    d796 = d291 * c1;
    d797 = 32.0 * d6;
    d798 = d170 * b2;
    d799 = d798 * c2;
    d800 = d774 * c1;
    d801 = d327 * c0;
    d247 *= b0;
    d802 = d170 * b1;
    d803 = d798 * c3;
    d804 = d291 * c4;
    d805 = 24.0 * d6 * b3 * c2;
    d806 = d321 * c1;
    d807 = d247 * c3;
    d808 = d797 * b2;
    d809 = d85 * a3;
    d810 = d85 * b3;
    d811 = d810 * c4;
    d812 = d170 * b4;
    d813 = d812 * c0;
    d814 = d240 * c0;
    d815 = d169 * b3;
    d816 = d322 * c2;
    d817 = d815 * c3;
    d818 = d297 * c3;
    d819 = d322 * c4;
    d820 = 18.0 * d6 * b3 * c0;
    d821 = d314 * c3;
    d822 = d134 * c3;
    d823 = 8.0 * b0 * d74 * c0 * c3;
    d247 *= c0;
    d824 = d138 * c1;
    d825 = d297 * c0;
    d826 = d320 * c3;
    d827 = d325 * c4;
    d227 *= c3;
    d828 = d314 * c0;
    d829 = d447 * a5;
    d830 = d829 * c1;
    d831 = d336 * a3;
    d832 = d831 * c2;
    d833 = d336 * a5;
    d834 = d833 * c1;
    u_mm_tmp = d336 * b5;
    d835 = d386 * c0;
    d836 = d428 * c0;
    d837 = 32.0 * a1 * a2;
    d838 = d837 * a4;
    d386 *= c3;
    d839 = d387 * c5;
    d840 = d429 * c5;
    v_mm_tmp = d522 * b5;
    d841 = d477 * a5;
    d842 = d510 * b2;
    d843 = d842 * c1 * c4;
    d844 = d838 * c0;
    d845 = d525 * b0;
    d846 = d845 * c1 * c4;
    d847 = d549 * c0 * c3;
    d848 = d841 * c0;
    d849 = d510 * b4;
    d850 = d558 * c0 * c3;
    d851 = d606 * b0;
    d852 = d849 * c1;
    d853 = d852 * c2;
    d854 = d499 * b5 * c1;
    d855 = d338 * c0;
    d856 = d472 * a5;
    d428 *= c3;
    d857 = d597 * c0;
    d858 = d857 * c2;
    d859 = d597 * c2 * c3;
    d860 = d523 * c0;
    d861 = d860 * c4;
    d862 = d523 * c3 * c4;
    d863 = d607 * c0;
    d864 = d863 * c2;
    d838 *= c3;
    d865 = d404 * a5;
    d866 = d865 * c1;
    d867 = d865 * c4;
    d868 = d404 * b5;
    d869 = d525 * b3;
    d870 = d459 * c0;
    d871 = d447 * b5;
    d872 = d871 * c0;
    d873 = d336 * b0;
    d874 = d873 * c2;
    d875 = 64.0 * a0 * a2;
    d876 = d515 * c0;
    d877 = p_mm_tmp * b2;
    d878 = d871 * c2;
    d879 = d878 * c4;
    d880 = d388 * c1;
    d881 = d388 * c5;
    d882 = d875 * b2;
    d883 = d506 * a4;
    d884 = d877 * c1 * c4;
    d885 = d528 * b5;
    d886 = d607 * c2 * c3;
    d887 = d883 * c4;
    d888 = p_mm_tmp * b4;
    d889 = d888 * c1;
    d890 = d889 * c2;
    d841 *= c3;
    w_mm_tmp = d506 * a5;
    d891 = w_mm_tmp * c4;
    d892 = d611 * c0 * c3;
    d893 = d612 * c0 * c3;
    d894 = d447 * b0;
    d895 = d894 * c1;
    d896 = d458 * c0;
    d873 *= c3;
    d897 = d457 * c2;
    d898 = d457 * c5;
    d899 = d829 * c2;
    d900 = d829 * c4;
    d901 = d460 * c5;
    d902 = d515 * c3;
    d903 = d389 * c0;
    d904 = d462 * c0;
    d905 = d391 * c0;
    d906 = 64.0 * a0 * a4;
    d907 = d499 * b0;
    d908 = d907 * c1;
    d909 = d510 * b1;
    d910 = d909 * c0;
    d842 *= c0;
    d911 = 16.0 * a0 * b1;
    d912 = 16.0 * a0 * b2;
    d913 = d351 * b0;
    d914 = d913 * c0;
    d915 = d392 * c5;
    d916 = d906 * b4;
    d917 = d909 * c2;
    d918 = d917 * c4;
    d919 = d911 * b4;
    d920 = d911 * b5;
    d921 = d912 * b4;
    d922 = d913 * c2;
    d923 = d922 * c5;
    d924 = d837 * b4;
    d925 = d403 * b2;
    d510 *= b3;
    d926 = d906 * b0;
    d927 = d461 * c2;
    d928 = d516 * c1;
    d929 = d919 * c0;
    d930 = d929 * c2;
    d931 = d921 * c0;
    d932 = d931 * c1;
    d933 = d924 * c0;
    d934 = d925 * c0;
    d935 = d522 * b0;
    d936 = d935 * c0;
    d937 = d935 * c2;
    d938 = d937 * c4;
    d939 = d522 * b1;
    d940 = d939 * c0;
    d941 = d485 * b4;
    d942 = d485 * b5;
    d943 = 64.0 * a2 * a4;
    d845 *= c0;
    x_mm_tmp = d370 * b0;
    d944 = x_mm_tmp * c0;
    d945 = d552 * c0;
    d946 = d370 * a5;
    d947 = d370 * b5;
    d948 = d394 * c5;
    d949 = d943 * b2;
    d950 = d949 * c0;
    d951 = d950 * c4;
    y_mm_tmp = d943 * b4;
    d952 = d869 * c0;
    d953 = d952 * c2;
    d954 = d550 * b4;
    d955 = d877 * c0;
    d956 = d955 * c2;
    d957 = s_mm_tmp * b2;
    d958 = d599 * b1;
    d959 = d946 * c0;
    d960 = d947 * c0;
    d961 = d960 * c4;
    d962 = d477 * b5;
    d963 = d370 * b4;
    d527 *= b3;
    d964 = p_mm_tmp * b0;
    d965 = d393 * c0;
    d524 *= b1;
    d966 = d524 * c0;
    d967 = d551 * c0 * c3;
    d968 = d954 * c0;
    d969 = d968 * c1;
    d970 = d630 * c0;
    d971 = d970 * c2;
    d972 = d957 * c0;
    d973 = d972 * c1;
    d974 = d962 * c0;
    d975 = x_mm_tmp * c4;
    d976 = d963 * c0;
    d977 = d552 * c3;
    d978 = d527 * c0;
    ab_mm_tmp = d502 * b4;
    d979 = ab_mm_tmp * c0;
    d980 = d979 * c4;
    d981 = d559 * c0 * c3;
    d609 *= b0;
    d982 = d609 * c0;
    d983 = d851 * c0;
    d984 = d983 * c4;
    d985 = 64.0 * a1 * a2;
    d986 = d985 * b1;
    d987 = d986 * c2;
    d988 = 256.0 * a1 * a2;
    d989 = d985 * b2;
    d990 = d871 * c3;
    d991 = d831 * c5;
    d336 *= b3;
    d992 = d336 * c1;
    d993 = d336 * c2;
    d994 = d506 * b2;
    d995 = d994 * c1;
    d996 = 64.0 * a0 * a3;
    d997 = d994 * c2;
    d998 = d883 * c5;
    d999 = d336 * c4;
    d389 *= c3;
    d1000 = d994 * c4;
    d1001 = d336 * c3;
    d1002 = d994 * c3;
    d871 *= c1;
    d1003 = d380 * b3;
    d1004 = d1003 * c2;
    d1005 = d506 * b4;
    d1006 = d1005 * c1;
    d1007 = d1005 * c2;
    d1008 = d370 * b3;
    d1009 = d1008 * c1;
    d1010 = d947 * c1;
    d1011 = d909 * c1;
    d909 *= c3;
    d1012 = 64.0 * a0 * a5;
    d1013 = d912 * b3;
    d1014 = d465 * c4;
    d1015 = d465 * c5;
    d391 *= c3;
    d1016 = d916 * c1;
    d1017 = d919 * c2 * c3;
    d1018 = d1013 * c1 * c4;
    d921 = d921 * c1 * c3;
    d1019 = 16.0 * a0 * b3;
    d1020 = d1008 * c2;
    d1021 = d920 * c1 * c3;
    d1022 = d1013 * c2 * c3;
    d1023 = d1019 * b4;
    d1024 = d1023 * c1;
    d1025 = d1024 * c2;
    d1026 = d466 * c0;
    d1027 = d474 * c0;
    d1028 = d472 * b5;
    d1029 = d1028 * c0;
    d1030 = 64.0 * a1 * a4;
    d1031 = d1030 * b1;
    d1032 = d1031 * c0;
    d1030 *= b4;
    d1033 = d1030 * c0;
    d1034 = d935 * c1;
    d935 *= c3;
    d1035 = 64.0 * a1 * a5;
    d1036 = d856 * c4;
    d1037 = d475 * c5;
    d1038 = d1028 * c2;
    d1039 = d1038 * c4;
    d913 *= c3;
    d1040 = d1035 * b1;
    d1041 = d522 * b3;
    d1042 = d1041 * c0;
    d1043 = 16.0 * a1 * b3;
    d1044 = d1043 * b5;
    d1045 = d1044 * c0;
    d1046 = 16.0 * a2 * a3 * a5 * c0;
    d1047 = d404 * b0;
    d1048 = d1047 * c1;
    d1049 = d1047 * c2;
    d1050 = d488 * c0;
    d1051 = 64.0 * a2 * a3;
    d1052 = d431 * c0;
    d1053 = 16.0 * a2 * a3 * b5 * c0;
    d1054 = 64.0 * a1 * b1;
    d1055 = d1047 * c4;
    d1056 = d631 * c0;
    d1057 = d1056 * c4;
    d1047 *= c3;
    d1058 = d1051 * b2;
    d1059 = d489 * c5;
    d1060 = d432 * c5;
    d1061 = d868 * c2 * c3;
    d393 *= c3;
    d949 = d949 * c3 * c4;
    d1062 = d342 * c0;
    d1063 = d550 * b3;
    d1064 = 16.0 * a2 * b3;
    d1065 = d1064 * b5 * c0;
    d1066 = j_mm_tmp * b0;
    d1067 = d1066 * c1;
    d1068 = d433 * c0;
    d1069 = 64.0 * a3 * a4;
    d1070 = p_mm_tmp * b1;
    d1071 = d1070 * c0;
    d1072 = d1070 * c2;
    d1073 = d1072 * c4;
    d877 = d877 * c2 * c3;
    d1074 = d528 * b3;
    d1075 = d1063 * c1 * c4;
    d954 = d954 * c1 * c3;
    d1076 = 64.0 * a2 * b2;
    d1077 = d1063 * c2 * c3;
    d1078 = d526 * c0;
    d1079 = d1066 * c2;
    d1080 = d869 * c2 * c3;
    d1081 = d1064 * b4;
    d1082 = d434 * c5;
    d1083 = d1069 * b4;
    d1084 = d582 * b2;
    d1085 = d1084 * c1 * c4;
    d1086 = d1084 * c2 * c3;
    d1087 = d582 * b4;
    d1088 = d1087 * c1;
    d1089 = d633 * c0;
    d1090 = d632 * b5;
    d1091 = 16.0 * a3 * b2;
    d1092 = 64.0 * a4 * a5;
    d542 *= b3;
    d1093 = d542 * c0;
    d1094 = 16.0 * a5 * b2 * b3 * c0;
    d1095 = 24.0 * a0 * a3;
    d1096 = d1005 * c0;
    d1097 = d1008 * c0;
    d1098 = s_mm_tmp * b3;
    d1099 = s_mm_tmp * b5;
    d1100 = d599 * b4;
    d1101 = 16.0 * a4 * b2 * b3;
    d1102 = d946 * c3;
    d1103 = d380 * b0;
    d1104 = d1103 * c4;
    d1105 = d630 * c2 * c3;
    d957 = d957 * c1 * c3;
    d1106 = 64.0 * a4 * b1 * b4 * c0 * c1;
    d1107 = d1098 * c1;
    d1108 = d1107 * c2;
    d1109 = d1101 * c0;
    d1110 = d947 * c3 * c4;
    d1111 = 24.0 * a0 * a5;
    d1112 = d1066 * c0;
    d1113 = 24.0 * a3 * a5;
    d466 *= c3;
    d474 *= c3;
    d1114 = d1041 * c2;
    d1115 = d851 * c3 * c4;
    d924 *= c3;
    d1116 = d472 * b3;
    d1117 = d1116 * c1;
    d925 *= c3;
    d939 *= c3;
    d1118 = d1087 * c0 * c4;
    d1119 = d1098 * c0 * c4;
    d1120 = d1074 * c1;
    d1121 = d583 * c1;
    d1122 = d633 * c3 * c4;
    d1123 = d1091 * b3;
    d1124 = d1091 * b4;
    d1125 = j_mm_tmp * b3;
    d1126 = d1125 * c0;
    d1127 = d615 * c0;
    d1128 = d616 * c0;
    d1129 = d506 * b5;
    d1130 = d490 * c3;
    d1131 = d555 * c4;
    d962 *= c3;
    d963 *= c3;
    d527 *= c3;
    d609 *= c3;
    d584 = d584 * b4 * c0 * c4;
    d1132 = d617 * c0 * c3;
    d1133 = d618 * c0 * c3;
    d1134 = 64.0 * a0 * a1;
    d1135 = d1134 * b1 * c4;
    d1136 = d447 * b3;
    d506 *= b1;
    d1137 = d502 * b1;
    d1138 = d1137 * c1;
    d1139 = d506 * c2;
    d1140 = d506 * c4;
    d1141 = d555 * c2;
    d1142 = d1129 * c1;
    d1143 = d510 * c1;
    d459 *= c3;
    d1137 *= c3;
    d1144 = d456 * b3;
    d911 *= b3;
    d1145 = d911 * c0;
    d1013 *= c0;
    d1146 = d472 * b0;
    d491 *= c0;
    d485 *= b3;
    d1147 = d485 * c0;
    d1148 = d911 * c2;
    d1149 = d1148 * c4;
    d1019 *= b5;
    d1150 = d1146 * c2;
    d1151 = d1146 * c4;
    d1152 = d492 * c5;
    d1153 = d485 * c2;
    d1154 = d1153 * c4;
    d1155 = 32.0 * a1 * b2;
    d1063 *= c0;
    d1156 = 32.0 * a2 * b1;
    d1157 = d582 * b1;
    d1158 = d1157 * c0;
    d1084 *= c0;
    d1159 = d404 * b2;
    d1160 = d404 * b3;
    d1161 = d1160 * c0;
    d1162 = d964 * c1;
    d1163 = d1157 * c2;
    d1164 = d1163 * c4;
    d582 *= b5;
    d1165 = d1123 * c0;
    d1166 = d1165 * c2;
    d1167 = d585 * c0;
    d1168 = d634 * b2 * c0 * c3;
    d1169 = 16.0 * b0 * b2;
    d1170 = d1051 * b3;
    d1171 = d631 * c3 * c4;
    d1172 = d1159 * c3;
    d1173 = d512 * c1;
    d1174 = d1160 * c2;
    d1160 *= c3;
    d1175 = d512 * c4;
    d431 *= c3;
    d524 *= c3;
    d342 *= c3;
    d1176 = d509 * b3;
    d1177 = d1176 * c1;
    d632 *= b3;
    d1178 = d632 * c0;
    d1179 = d652 * c0;
    d1180 = d1124 * c0;
    d433 *= c3;
    d1181 = d585 * c1;
    bb_mm_tmp = d243 * b0;
    cb_mm_tmp = o_mm_tmp * b5;
    db_mm_tmp = m_mm_tmp * b3;
    eb_mm_tmp = d147 * c0 * c3;
    fb_mm_tmp = c_mm_tmp * c0;
    mm_tmp_tmp = 16.0 * a0 * d45;
    gb_mm_tmp = mm_tmp_tmp * c1;
    hb_mm_tmp = 256.0 * a1 * a4;
    ib_mm_tmp = 256.0 * a2 * a4;
    jb_mm_tmp = 64.0 * a2 * a5;
    kb_mm_tmp = 64.0 * a3 * a5;
    lb_mm_tmp = d829 * c3;
    b_mm_tmp_tmp = j_mm_tmp * a5;
    c_mm_tmp_tmp = j_mm_tmp * b5;
    mb_mm_tmp = c_mm_tmp_tmp * c1;
    d_mm_tmp_tmp = k_mm_tmp * b3;
    nb_mm_tmp = d_mm_tmp_tmp * c0;
    e_mm_tmp_tmp = 64.0 * a1 * a3;
    ob_mm_tmp = d1054 * b2 * c2 * c3;
    pb_mm_tmp = d1058 * c1;
    qb_mm_tmp = d490 * c0;
    rb_mm_tmp = x_mm_tmp * c3;
    mm_tmp_tmp_tmp = d_mm_tmp_tmp * c3;
    sb_mm_tmp = mm_tmp_tmp_tmp * c5;
    tb_mm_tmp = ab_mm_tmp * c3 * c4;
    ub_mm_tmp = 12.0 * a0 * b3 * b5 * c0 * c3;
    vb_mm_tmp = d521 * c5;
    wb_mm_tmp = l_mm_tmp * b5 * c0 * c3;
    xb_mm_tmp = s_mm_tmp * b4 * c0 * c3;
    yb_mm_tmp = d588 * b3 * c0 * c3;
    ac_mm_tmp = 16.0 * a0 * d74 * d39;
    bc_mm_tmp = f_mm_tmp * b2 * c2;
    cc_mm_tmp = d126 * c0;
    dc_mm_tmp = d126 * c3;
    ec_mm_tmp = d206 * d40;
    fc_mm_tmp = d276 * d40;
    gc_mm_tmp = g_mm_tmp * d19;
    hc_mm_tmp = d195 * d25;
    ic_mm_tmp = d276 * d39;
    jc_mm_tmp = 4.0 * b3 * d15;
    kc_mm_tmp = d230 * d40;
    lc_mm_tmp = b_mm_tmp * b1;
    mc_mm_tmp = f_mm_tmp * b4 * c4;
    nc_mm_tmp = d7 * c3;
    oc_mm_tmp = d_mm_tmp * b2;
    pc_mm_tmp = 4.0 * b0 * d74 * d22;
    qc_mm_tmp = d281 * d25;
    rc_mm_tmp = i_mm_tmp * b5;
    sc_mm_tmp = h_mm_tmp * b5;
    tc_mm_tmp = d331 * c0;
    uc_mm_tmp = d395 * c0;
    vc_mm_tmp = d837 * b2 * c1;
    wc_mm_tmp = mm_tmp * b5 * c1;
    xc_mm_tmp = d403 * b1 * c4;
    yc_mm_tmp = d361 * c0;
    ad_mm_tmp = d361 * c3;
    bd_mm_tmp = d504 * b5;
    cd_mm_tmp = d407 * b3 * c4;
    dd_mm_tmp = 6.0 * a3 * a5 * b3 * c3;
    ed_mm_tmp = d408 * d39;
    fd_mm_tmp = d543 * b5;
    gd_mm_tmp = 8.0 * a5 * b2 * b3;
    hd_mm_tmp = 8.0 * a0 * b4 * b5;
    id_mm_tmp = 8.0 * a4 * b4 * b5;
    jd_mm_tmp = mm_tmp * b3;
    d_mm_tmp_tmp = n_mm_tmp * b3;
    kd_mm_tmp = d_mm_tmp_tmp * c3;
    ld_mm_tmp = d504 * b3 * d40;
    md_mm_tmp = q_mm_tmp * d19;
    nd_mm_tmp = 8.0 * a2 * b0;
    od_mm_tmp = d173 * c5;
    pd_mm_tmp = d169 * b5;
    qd_mm_tmp = d299 * b1;
    rd_mm_tmp = 6.0 * d10 * b3;
    sd_mm_tmp = e_mm_tmp * c3 * c5;
    td_mm_tmp = d109 * c1;
    ud_mm_tmp = 8.0 * a0 * d15 * c0 * c3;
    vd_mm_tmp = 16.0 * d10 * b3;
    wd_mm_tmp = d138 * c0;
    xd_mm_tmp = d707 * a5 * c1;
    yd_mm_tmp = d707 * b0;
    ae_mm_tmp = 32.0 * d38 * b1 * c0;
    be_mm_tmp = d674 * b0;
    ce_mm_tmp = t_mm_tmp * c2 * c3;
    de_mm_tmp = rd_mm_tmp * c0 * c3;
    ee_mm_tmp = d738 * b1 * c1 * c3;
    fe_mm_tmp = 8.0 * a1 * d6;
    ge_mm_tmp = d302 * c2;
    he_mm_tmp = d802 * c1;
    ie_mm_tmp = b_mm_tmp_tmp * c1;
    je_mm_tmp = d833 * c4;
    ke_mm_tmp = u_mm_tmp * c0;
    le_mm_tmp = u_mm_tmp * c1 * c4;
    me_mm_tmp = w_mm_tmp * c2;
    ne_mm_tmp = d461 * c1;
    oe_mm_tmp = v_mm_tmp * c0 * c1;
    pe_mm_tmp = d390 * c5;
    qe_mm_tmp = 16.0 * a0 * a4 * a5 * c1;
    re_mm_tmp = d946 * c2;
    se_mm_tmp = d338 * c3 * c4;
    te_mm_tmp = d856 * c0;
    ue_mm_tmp = d598 * c0 * c2;
    ve_mm_tmp = r_mm_tmp * b5;
    we_mm_tmp = d1053 * c2;
    xe_mm_tmp = y_mm_tmp * c0 * c2;
    ye_mm_tmp = d1090 * c0;
    af_mm_tmp = d849 * c0;
    bf_mm_tmp = af_mm_tmp * c4;
    cf_mm_tmp = 16.0 * a0 * b4 * b5;
    df_mm_tmp = d1114 * c4;
    ef_mm_tmp = v_mm_tmp * c1 * c3;
    ff_mm_tmp = d430 * c1;
    gf_mm_tmp = 16.0 * a2 * a3 * b1 * c3;
    hf_mm_tmp = y_mm_tmp * c2 * c3;
    if_mm_tmp = b_mm_tmp_tmp * c2;
    jf_mm_tmp = p_mm_tmp * b5;
    kf_mm_tmp = d517 * c2;
    r_mm_tmp = d502 * b2 * c2 * c3;
    v_mm_tmp = d1144 * c1;
    y_mm_tmp = 64.0 * a0 * b0;
    p_mm_tmp = d1054 * b4 * c0 * c4;
    t_mm_tmp = d1159 * c0;
    u_mm_tmp = ye_mm_tmp * c1;
    w_mm_tmp = d1093 * c1;
    n_mm_tmp = d986 * c3;
    q_mm_tmp = e_mm_tmp_tmp * b1 * c2;
    e_mm_tmp = 64.0 * a2 * b1 * b2 * c1 * c3;
    ab_mm_tmp = d447 * a3;
    l_mm_tmp = d1136 * c4;
    s_mm_tmp = 32.0 * a0 * b1;
    g_mm_tmp = d473 * c0;
    b_mm_tmp = d473 * c3;
    f_mm_tmp = d1078 * c4;
    d_mm_tmp = d1156 * b4 * c0 * c3;
    i_mm_tmp = d556 * b3 * c0 * c3;
    h_mm_tmp = d1088 * c2;
    mm_tmp = d652 * c1 * c4;
    k_mm_tmp = d1124 * c1 * c3;
    x_mm_tmp = d1109 * c1;
    m_mm_tmp = d1101 * c1 * c3;
    c_mm_tmp = d958 * c1 * c3;
    j_mm_tmp = d599 * b3;
    o_mm_tmp = d635 * b3;
    return (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((3.0 * d * b0 * b_d2 - d41 * b_d4) + d57 * b_d2) + d51 * b_d5) - d46 * d9) + d50 * d8) + d49 * b_d4) - d59 * b_d2) - d53 * b_d5) + d54 * b_d2) - d52 * d8) - d58 * b_d2) + d47 * d9) - d12 * d8) - d14 * b_d2) + d12 * d9) - 3.0 * (a0 * a0) * b0 * b_d4) - d63 * d9) + d14 * b_d5) + jc_mm_tmp * d8) + d56 * d9) - d60 * d8) - d20 * d0) + 4.0 * d23 * c0 * d40) - d26 * d0) - 4.0 * d21 * c3 * d39) - d27 * c3 * d17) + d29 * c0 * d17) + d20 * d3) - d18 * d0) + d34 * c5) - d31 * c5) + d35 * c5 * d36) + d26 * d3) + d27 * d30 * d5) - d32 * c5 * d33) + d18 * d3) - d29 * d30 * d5) + d31 * d0) + d32 * d0 * d33) - d34 * d3) - d35 * d3 * d36) + d27 * d44 * d5) - d29 * d42 * d5) + d62 * b_d2) - d65 * b_d2) - d66 * b_d2) + d67 * b_d2) + d68 * b5 * d9) - id_mm_tmp * d8) - d572 * b5 * d9) + 6.0 * a5 * b3 * b5 * d8) - 8.0 * d16 * c0 * c1 * d1) + d69 * d0) + 8.0 * std::pow(a5, 3.0) * c1 * c3 * d1) - d69 * d3) - 8.0 * d28 * c2 * d2 * d5) + 8.0 * d24 * c4 * d4 * d5) - 6.0 * d24 * c5 * d3 * d5) + 6.0 * d28 * c5 * d0 * d5) - d92 * c0 * d17) + d71 * c0 * d36) - d72 * c0 * d33) + d70 * c0 * d73) - d91 * d30) + d75 * c0 * d39) - d76 * c0 * d40) + 4.0 * a0 * b_d3 * c0 * d25) + d80 * d0) - d82 * d0) - d83 * d42) + d100 * d30) - d84 * d19 * c1) + d77 * a1 * c1 * d17) + d101 * d30) - d79 * d40) - d99 * c0 * d17) + d96 * d44) - d81 * c3 * d42) - d103 * d30) - d98 * d30) + 6.0 * a0 * b_d3 * c0 * d22) - d46 * d19 * c3) + 64.0 * a1 * d37 * c1 * d36) - 64.0 * a1 * d38 * c1 * d33) + 64.0 * a1 * d13 * c1 * d39) - 64.0 * a1 * d15 * c1 * d40) + d88 * d42) - 16.0 * a2 * d43 * c2 * d39) + d89 * d19 * c2) + 9.0 * a3 * d10 * c0 * d42) + d104 * d30) - d85 * a2 * c2 * d36) + d94 * c0 * d17) - d105 * c3 * d17) - d106 * d36) + d72 * c3 * d33) + d108 * d42) - d107 * d30 * d0) - d109 * c3 * d73) + d70 * d39 * d0) + d110 * d43 * d39 * c5) - d139 * d30) - d75 * c3 * d39) + d146 * c5) + d76 * d40 * c3) - 8.0 * a0 * b_d3 * d25 * c3) + d129 * d30 * d1) - d115 * d40 * d1) + 64.0 * a2 * d38 * c2 * d73) + d122 * d19 * d2) - 64.0 * a2 * d74 * c2 * d39) + 64.0 * a2 * d15 * d25 * c2) + d140 * d33) + d137 * d73) + d142 * d30) - d116 * c0 * d39) + d124 * c0 * d40) + 8.0 * a3 * b_d3 * c0 * d25) - d112 * c0 * d39) - d130 * d30 * d2) - d113 * c0 * d36) - d131 * d30) - d117 * a2 * c2 * d36) + d145 * c0 * d17) - d118 * c0 * d36) + d132 * d30) - d133 * a5 * c0 * d42) - cc_mm_tmp * d30) + d79 * d39) - d120 * d40) + d127 * d19 * c2) + d143 * d36) + d148 * d44) - d80 * d3) + d144 * c5 * d33) - d72 * c5 * d73) + d81 * d19 * d5) + d82 * d3) + ac_mm_tmp * c5) + d147 * d22 * c5) + d138 * d40 * c5) - d76 * d25 * c5) - 4.0 * a1 * d6 * c1 * d17) + d83 * d44) - d149 * d30) + d84 * c1 * d22) + 16.0 * a2 * d10 * d25 * d2) + d150 * d40 * d0) - fc_mm_tmp * c5) + gc_mm_tmp * c5) + 16.0 * a4 * (b0 * b0) * d40 * c4) - d158 * d19 * c4) - d112 * d40 * c3) + d153 * c0 * d39) - 8.0 * a5 * d13 * c0 * d22) + d47 * d19 * c3) - d176 * d40) - 16.0 * a5 * d15 * c0 * d25) - d166 * c5 * d33) + d177 * c4 * d33) - d113 * c3 * d33) - d159 * d0) - d184 * d30) - d185 * d30 * d2) + d154 * c0 * d36) - d186 * d30) + d160 * d42) - d161 * d0) - d162 * d42) - d173 * d44) + d86 * c3 * d42) - d87 * c3 * d30) - d167 * d30) - d175 * c0 * d33) - d178 * d73) + d168 * c5) + d78 * d40 * c3) + d114 * b2 * d25 * c2) + d156 * d40) + 12.0 * a0 * b_d1 * d30 * d5) - d183 * c3 * d17) - 9.0 * a0 * d10 * c3 * d44) + d70 * d25 * d5) - d181 * d30) - d182 * d30 * d1) + d115 * d39 * d1) - d179 * c2 * d36) + d88 * d44) - d172 * c2 * d39) + d89 * c2 * d22) + d157 * c0 * d44) - d174 * d42) + d188 * d30) - d189 * c5) + d190 * c5) + d192 * d30) + d50 * c0 * d22) - 6.0 * a3 * b_d3 * d19 * c3) + d193 * d74 * d40 * c4) - d193 * d13 * d25 * c4) - d212 * c5) + d213 * c5) - d153 * d40 * c3) + 16.0 * a5 * d13 * d25 * c3) + d220 * c3 * d17) - d113 * c5 * d73) - d222 * d33) + d117 * a4 * c4 * d33) - d154 * c3 * d33) + d199 * d42) - d200 * d0) - d215 * d30) + d118 * c5 * d73) - d211 * a4 * c4 * d73) + d221 * d73) - d224 * d30) + d225 * c5) + d120 * d39) - d203 * c0 * d25) + d207 * c5 * d36) - d108 * d44) + 4.0 * a0 * (a4 * a4) * (c5 * c5) * d3) - 4.0 * a0 * (a5 * a5) * (c4 * c4) * d3) + d226 * c5) - d121 * c5) - d208 * d30 * d2) + d122 * d22 * d2) - d123 * c3 * d33) - d223 * d42) + d204 * d0) - d150 * c3 * d73) - d205 * d0) - d218 * d39 * c5) + d210 * d30) + d116 * c3 * d39) - d216 * d19 * c5) - d124 * d40 * c3) - 4.0 * a3 * b_d3 * d25 * c3) + d219 * c3 * d39) + d195 * c0 * d39) - d52 * c0 * d22) + 8.0 * a5 * d15 * d19 * c3) - d228 * c5 * d36) + d229 * c3 * d36) + d113 * d40 * d5) + kc_mm_tmp * c5) + d231 * c3 * d17) + d118 * c3 * d36) - d86 * d19 * d5) - 4.0 * d37 * b5 * d19 * c5) + d232 * c0 * d36) - bc_mm_tmp * d30) - d233 * c0 * d44) + d253 * d42) + dc_mm_tmp * d30) + d235 * c0 * d30) - d78 * c3 * d39) + d127 * c2 * d22) - d156 * d39) + 9.0 * a0 * d6 * d30 * d5) + d81 * d22 * d5) - d157 * d19 * d5) - 4.0 * a3 * (a5 * a5) * (c2 * c2) * d3) - d257 * c5) - d258 * c5) - d236 * d19 * d4) - d158 * d22 * c4) + 16.0 * a4 * d45 * d40 * c4) - d249 * d22 * c5) + d252 * d19 * c5) + d195 * d40 * c3) - d243 * a3 * d30 * d5) + d241 * d30 * d4) - d255 * d44) + d159 * d3) + d242 * d30) + d48 * c3 * d30) + d154 * d40 * d5) + d244 * c5) - d160 * d44) + d161 * d3) - d162 * d44) + d248 * a5 * c3 * d44) - d197 * d25 * d5) + d239 * d30) - d246 * c5) + d238 * a4 * c4 * d33) + d232 * c3 * d33) + d256 * d42) - d237 * d0) - d7 * c0 * d30) + d164 * d22 * c5) - d11 * d19 * c5) - d155 * d40 * c3) - d259 * d19 * c4) - d261 * c0 * d22) + d261 * d19 * c3) - d150 * d25 * d5) - 16.0 * a4 * d10 * d25 * d4) - d198 * c5) + hc_mm_tmp * c5) - d113 * d39 * d5) - d263 * c5) - 12.0 * b_d1 * a3 * d30 * d5) + d264 * d30 * d4) - d199 * d44) + d200 * d3) + d265 * d30) + d266 * d30) + d232 * c5 * d73) + d233 * d19 * d5) + d125 * d19 * c5) - d273 * c5) - d114 * b4 * d25 * c4) + d203 * d25 * c3) - d204 * d3) + d205 * d3) - d154 * d39 * d5) - d234 * c5) - d86 * d22 * d5) - 4.0 * (a2 * a2) * b5 * d22 * c5) + d232 * d40 * d5) + d274 * c5) + d165 * d25 * d5) - d267 * d30) + d269 * c5) + d155 * c3 * d39) - d157 * d22 * d5) - d236 * d22 * d4) + d270 * d30 * d4) + d237 * d3) + mc_mm_tmp * d30) + nc_mm_tmp * d30) - d11 * d22 * c5) - d259 * d22 * c4) - d232 * d39 * d5) - d271 * c5) + d233 * d22 * d5) + d272 * c5) - d91 * d44) + d206 * c0 * d73) - d128 * d0 * d36) + d41 * d0 * d44) - d275 * d33) + d72 * d0 * d73) - ac_mm_tmp * d0) + 4.0 * a0 * d13 * d22 * d0) - ec_mm_tmp * d0) + 16.0 * a0 * (b4 * b4) * d25 * d0) + d100 * d44) - d149 * d42) - 16.0 * b0 * d74 * c0 * d39) + d63 * c0 * d22) - d283 * d40) + 16.0 * b0 * d15 * c0 * d25) - d151 * c0 * d36) + d101 * d44) - d285 * d33) + d303 * c0 * d73) - d103 * d44) - d181 * d42) - d182 * d42 * d1) + 16.0 * a1 * d43 * d39 * d1) - 16.0 * a1 * d15 * d19 * d1) + d104 * d44) + d192 * d42) - 16.0 * b1 * d15 * d19 * c1) + d85 * a1 * d1 * d36) + d85 * b1 * c1 * d36) - d57 * d30 * d0) + d315 * d0) - d316 * d0) - d224 * d42) + d225 * d0) + d309 * b1 * c1 * d39) - d275 * d36) + d107 * d0 * d44) - d107 * d42 * d3) - 12.0 * a0 * (b0 * b0) * (c4 * c4) * d3) - d226 * d0) - d146 * d3) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d121 * d0 + d129 * d1 * d44) - 16.0 * a1 * d6 * d1 * d33) + 16.0 * a1 * d13 * d22 * d1) - 16.0 * a1 * d45 * d40 * d1) + d208 * d42 * d2) - 4.0 * a2 * d43 * d22 * d2) + 4.0 * a2 * d45 * d19 * d2) - d276 * c3 * d73) + ic_mm_tmp * d0) + d210 * d42) + 12.0 * a3 * d15 * d19 * d0) - d283 * d39) + d277 * c0 * d22) - d277 * d19 * c3) + 16.0 * b1 * d13 * c1 * d22) - 16.0 * b1 * d45 * c1 * d40) + 4.0 * b2 * d45 * d19 * c2) - d130 * d2 * d44) + d166 * d0 * d36) - d279 * c3 * d36) + d282 * d30 * d1) - d131 * d44) + d280 * c0 * d36) + d132 * d44) - d285 * d36) - d238 * b1 * c1 * d33) + bc_mm_tmp * d42) + cc_mm_tmp * d44) - dc_mm_tmp * d42) + d133 * b3 * c0 * d42) - lc_mm_tmp * d19 * d1) - 4.0 * d43 * b2 * c2 * d22) + 4.0 * d43 * b3 * c0 * d39) + d183 * d42 * d5) - d207 * d33 * d3) + d102 * d22 * d5) - 12.0 * a0 * d13 * d22 * d3) + d180 * d19 * d5) - ec_mm_tmp * d3) + d179 * d73 * d2) - 16.0 * a2 * d74 * d22 * d2) + d172 * d25 * d2) + fc_mm_tmp * d3) - gc_mm_tmp * d3) + d257 * d0) + d258 * d0) - 3.0 * a5 * d43 * d22 * d0) - 9.0 * a5 * d45 * d19 * d0) + d328 * c5) - d281 * d40 * c3) + d732 * d25 * c2) + d166 * d33 * d3) - d49 * d0 * d44) + bb_mm_tmp * c5 * d44) - bb_mm_tmp * d30 * d3) - d85 * b2 * d39 * d2) + d280 * c3 * d33) + d59 * d30 * d0) - d184 * d44) - d185 * d2 * d44) - d186 * d44) + d152 * d0 * d44) - d152 * d42 * d3) - d248 * b0 * c3 * d44)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d211 * b1 * d39 * d1 + d167 * d44) - d239 * d42) - d284 * c3 * d33) + d54 * c5 * d42) - d297 * d30 * d0) + d291 * c2 * d73) + d294 * c0 * d33) - d292 * b5 * c0 * d42) - d287 * b1 * d40 * d1) + oc_mm_tmp * d19 * d2) - d168 * d3) + d296 * d22 * d0) + d260 * b3 * d19 * d0) + d289 * d40 * c3) - d56 * c0 * d22) - d290 * b2 * c2 * d22) + d286 * c0 * d22) - d286 * d19 * c3) + d92 * d44 * d5) - d207 * d73 * d5) + d90 * d22 * d5) - d206 * d25 * d5) + d276 * d25 * d5) - d209 * d19 * d5) + d189 * d3) - d190 * d3) - d295 * d25 * d4) + 16.0 * a4 * d74 * d19 * d4) + d212 * d3) - d213 * d3) + d198 * d0) - hc_mm_tmp * d0) + pc_mm_tmp * c5) - qc_mm_tmp * c5) + d166 * d73 * d5) - 16.0 * d * a4 * d73 * d4) + 4.0 * d * a5 * d73 * d3) + d279 * d39 * d5) + d280 * c5 * d73) - d302 * c4 * d73) + d230 * c3 * d73) - d263 * d0) - d231 * d42 * d5) + d214 * d33 * d3) + d264 * d42 * d4) + d194 * d0 * d44) - d194 * d42 * d3) + d57 * c5 * d44) - d311 * d30 * d3) - d117 * b2 * d39 * d2) + d304 * c3 * d33) - d58 * c5 * d42) + d314 * d30 * d0) + d265 * d42) + d215 * d44) - d266 * d42) - d118 * d73 * d3) - d315 * d3) - d298 * c3 * d73) - d305 * d0) - d232 * d0 * d73) - d284 * c5 * d73) - d262 * c0 * d73) + d126 * d19 * d5) + d316 * d3) + d287 * b2 * d25 * d2) + d307 * d0) - d133 * b5 * d19 * d0) - d299 * b0 * d25 * d3) + d313 * d25 * d0) + d308 * c5) - d310 * d25 * c4) + d288 * b5 * d25 * c3) - d300 * c5) + d290 * b3 * d40 * c3) + d290 * b4 * d19 * c4) + d301 * c0 * d22) - d301 * d19 * c3) - 16.0 * d13 * b3 * d25 * c3) - d317 * b5 * c0 * d25) - d51 * d42 * d3) + ic_mm_tmp * d3) - 4.0 * a3 * d15 * d19 * d3) - jc_mm_tmp * d19 * c3) + 4.0 * d * a3 * d3 * d36) + 4.0 * d * b3 * c3 * d36) - 4.0 * (a0 * a0) * b3 * d40 * d5) + d302 * d40 * d4) - kc_mm_tmp * d3) + d151 * d39 * d5) + d234 * d0) + d319 * d22 * d5) + d163 * d19 * d5) - d111 * d19 * d4) + 4.0 * (a2 * a2) * b5 * (c0 * c0) * d3) - pd_mm_tmp * d22 * d0) + d322 * d40 * d5) - d318 * d30 * d1) - d321 * d40 * d0) - d303 * d25 * d5) - d267 * d42) - d269 * d0) + lc_mm_tmp * d22 * d1) + d289 * c3 * d39) - d93 * d22 * d5) - d191 * d19 * d5) - 4.0 * a4 * d43 * d22 * d4) + 4.0 * a4 * d45 * d19 * d4) + 9.0 * a5 * d43 * d22 * d3) + 3.0 * a5 * d45 * d19 * d3) - d94 * d44 * d5) - d241 * d44 * d4) - d59 * c5 * d44) + d320 * d30 * d3) - d242 * d44) + d243 * b5 * c3 * d44) - d230 * d25 * d5) - d304 * d40 * d5) + d117 * b4 * d40 * d4) + d201 * d19 * d5) - d244 * d3) + d298 * d25 * d5) - d211 * b4 * d25 * d4) + d246 * d3) + d270 * d42 * d4) + d53 * d42 * d3) - d54 * d30 * d3) - d291 * d39 * d2) - d323 * c5 * d42) + d323 * d30 * d0) + mc_mm_tmp * d42) + nc_mm_tmp * d42) + oc_mm_tmp * d22 * d2) - d260 * b0 * d22 * d3) - rd_mm_tmp * d19 * d3) + 3.0 * d10 * b3 * d22 * d0) - d55 * c5) - d288 * b4 * d22 * c4) + d317 * b4 * d19 * c4) + d60 * d19 * c3) - d325 * d39 * d5) + d326 * d39 * d3) + d58 * d30 * d3) + d305 * d3) + d284 * d39 * d5) + d271 * d0) - d126 * d22 * d5) - d327 * d19 * d5) - d307 * d3) + d324 * d19 * d3) - d272 * d0) - d273 * d3) - d196 * d22 * d5) - d163 * d22 * d5) - d111 * d22 * d4) + d248 * b5 * d22 * d3) - d294 * d40 * d5) + d238 * b4 * d40 * d4) + d240 * d19 * d5) + d274 * d3) - d201 * d22 * d5) + d262 * d25 * d5) - pc_mm_tmp * d0) + qc_mm_tmp * d0) - d57 * d0 * d44) + d284 * d0 * d73) - 4.0 * b1 * d45 * d19 * d1) + d282 * d1 * d44) - d318 * d42 * d1) + d288 * b1 * d22 * d1) - d328 * d3) + d59 * d0 * d44) - d54 * d42 * d3) + d55 * d0) - d280 * d73 * d3) + d58 * d42 * d3) - d308 * d3) + d300 * d3) - d330 * d30) + tc_mm_tmp * d30) + d333 * c0 * d33) - uc_mm_tmp * d30) - d334 * a5 * c1 * d36) + d476 * a3 * c2 * d36) - d837 * b1 * c2 * d30) + vc_mm_tmp * d30) - d366 * d30 * d1) - d367 * d30) + d368 * d30 * d2) - d388 * d30 * d1) - d331 * c3 * d30) + d329 * d30) - d390 * d30) + d369 * d30) - d392 * d30) + d371 * c5) - d372 * d30) - d347 * d40) - d348 * d42) + d349 * d0) + d387 * d42) + d373 * d30) + d374 * a5 * c1 * d33) + d352 * c0 * d30) - d375 * d30) - d376 * d30) - d354 * d42) + d377 * d30) - d378 * d30) - d394 * d30) + d379 * d30) - d380 * a4 * c4 * d33) - d357 * d42) + d358 * d0) + d381 * d30) + d359 * d42) + d382 * d30) - d383 * d30) + d395 * c3 * d30) + yc_mm_tmp * d30) - d384 * a5 * c2 * d73) + d385 * d30) + d364 * a5 * c4 * d73) - d365 * c5) + d347 * d39) + d398 * c5) - d400 * d40) - d402 * c5) + rc_mm_tmp * d19 * c2) - d333 * c3 * d36) - d333 * d40 * d5) - d437 * d40 * c5) - d439 * d40 * c5) + sc_mm_tmp * d19 * c5) + 8.0 * a0 * a5 * b5 * d40 * c3) + d348 * d44) - d349 * d3) - d409 * d30) + d410 * d30 * d1) + wc_mm_tmp * d30) - d429 * d44) + xc_mm_tmp * d30) - d352 * c3 * d30) - d403 * b4 * c1 * d30) + d411 * d30) + d412 * d30) + d430 * d30 * d1) - d354 * d44) + d413 * d30) - d414 * d30) + d432 * d30) - d415 * d30) + d435 * d30) - d426 * c5) + d405 * b5 * d25 * c2) + d434 * d30) - d416 * c5) + d417 * d30) + d427 * c0 * d40) - d418 * d30 * d4) + d357 * d44) - d358 * d3) - d419 * d30) - d420 * d30) + d359 * d44) - d421 * d30) + d422 * d30) - ad_mm_tmp * d30) + d346 * d25 * c5) - d397 * c5) + d400 * d39) - d423 * d30) + d436 * c0 * d30) - d424 * d30) - d362 * b3 * c0 * d30) + d333 * d39 * d5) + d438 * c5) + d440 * c5) - d346 * c3 * d39) - d401 * d22 * c5) + rc_mm_tmp * c2 * d22) + ed_mm_tmp * c5) - 8.0 * a3 * a5 * b5 * c0 * d39) + sc_mm_tmp * d22 * c5) + 8.0 * a3 * a5 * b3 * d40 * c5) - d619 * d19 * c5) - d427 * d40 * c3) + d620 * d19 * c5) - cb_mm_tmp * d19 * c4) + cd_mm_tmp * d30) - d436 * c3 * d30) + dd_mm_tmp * d30) - d621 * c5) + d603 * c5) - d589 * b5 * d25 * c4) - d604 * c5) + d427 * c3 * d39) - d622 * c5) + d623 * c5) - cb_mm_tmp * d22 * c4) + d334 * b0 * c1 * d36) - d496 * c0 * d36) + d61 * d30 * d1) - d62 * d30 * d0) - d330 * d44) + tc_mm_tmp * d44) + d446 * c0 * d36) + d624 * d30) - d627 * d30) - d476 * b0 * d39 * d2) + d497 * d0) + d468 * d33) + d65 * d30 * d0) - d469 * d33) - uc_mm_tmp * d44) - d456 * b2 * c2 * d39)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d443 * d30 + d445 * c0 * d39) - d333 * d0 * d73) + d446 * c5 * d73) - d437 * c0 * d73) - d461 * c4 * d73) + 32.0 * a0 * a4 * b4 * c0 * d73) + 8.0 * a0 * a5 * b0 * c3 * d73) - d365 * d0) - d439 * c0 * d73) - d449 * c0 * d39) - 32.0 * a1 * a2 * b1 * c2 * d44) + vc_mm_tmp * d44) - d408 * c0 * d73) + d457 * d2 * d44) - d366 * d1 * d44) + d62 * c5 * d44) - d458 * d30 * d3) + d460 * d44) - d367 * d44) + d368 * d2 * d44) - 24.0 * a0 * a2 * b2 * c3 * d44) + d329 * d44) + d468 * d36) - d446 * d40 * d5) + d369 * d44) - d469 * d36) + 8.0 * a0 * a3 * b5 * (c2 * c2) * d0) + d461 * d40 * d4) + d463 * d44) - d453 * d0) - d371 * d3) - d372 * d44) + 8.0 * a0 * a5 * b3 * (c2 * c2) * d0) - d471 * c5) + d464 * d40 * c4) - d449 * d40 * c3) + d455 * c0 * d40) - d465 * d42 * d4) - d339 * d0 * d44) + d339 * d42 * d3) - d450 * b1 * d39 * d2) + d450 * b2 * d39 * d1) - d467 * d42) - d373 * d44) + d409 * d42) + d410 * d42 * d1) + d451 * c3 * d33) - d66 * c5 * d42) + d473 * d30 * d0) - d475 * d42) - d374 * b3 * c1 * d33) + wc_mm_tmp * d42) + d351 * b0 * c2 * d44) + xc_mm_tmp * d42) - 16.0 * a1 * a4 * b2 * c0 * d44) + 16.0 * a1 * a4 * b2 * c3 * d42) - 32.0 * a1 * a4 * b4 * c1 * d42) - d375 * d44) + d376 * d44) - d411 * d42) + d412 * d42) - d492 * d30) - d479 * b2 * c2 * d39) + d495 * d30) + d377 * d44) - d489 * d42) + d378 * d44) - d413 * d42) + d414 * d42) - d379 * d44) + d415 * d42) + 128.0 * a2 * b1 * b2 * c1 * d39) + d416 * d0) + d417 * d42) + d483 * c0 * d40) - d481 * c0 * d40) + d484 * c0 * d40) + d496 * d39 * d5) - d334 * b5 * d39 * d1) - d497 * d3) + d476 * b3 * d39 * d2) - d418 * d42 * d4) - d343 * d0 * d44) + d343 * d42 * d3) - d65 * c5 * d44) + d486 * d30 * d3) + d380 * b2 * d39 * d2) - d332 * c3 * d33) + d67 * c5 * d42) - d490 * d30 * d0) - d419 * d42) - d381 * d44) + d420 * d42) - d382 * d44) - d421 * d42) + d383 * d44) - d422 * d42) + d498 * b0 * c3 * d44) - d345 * d25 * d5) - d499 * b1 * d39 * d1) - yc_mm_tmp * d44) + ad_mm_tmp * d42) + d337 * b5 * d25 * d0) + mm_tmp_tmp_tmp * d30) - 8.0 * a0 * b0 * b5 * d25 * c5) - s_mm_tmp * b5 * c1 * d39) + 32.0 * a0 * b2 * b3 * c2 * d39) - d396 * b0 * d39 * d1) + d397 * d0) + d514 * c5) - d500 * b5 * c1 * d39) + bd_mm_tmp * c0 * d39) + d384 * b0 * d39 * d2) - d501 * c3 * d73) - d511 * d0) + d512 * c2 * d73) - d445 * c3 * d39) + d444 * b3 * c2 * d39) - d507 * c0 * d39) - d423 * d42) + 24.0 * a3 * a4 * b4 * c0 * d42) - d385 * d44) + d424 * d42) - d508 * b3 * c0 * d42) + d509 * b2 * c2 * d39) - d521 * d30) - d513 * b1 * c1 * d39) + d478 * b5 * c0 * d25) + d515 * d22 * d5) + d333 * d73 * d3) - d517 * d39 * d5) - d332 * c5 * d73) + d437 * c3 * d73) + d516 * d39 * d3) + d439 * c3 * d73) - d518 * d39 * c5) + d519 * c3 * d39) - d350 * d19 * d5) + d338 * d19 * d4) - d451 * d40 * d5) + d374 * b5 * d40 * d1) + d503 * b1 * d40 * d4) - d352 * d19 * d5) - d503 * b4 * d40 * d1) + d353 * d19 * d5) - d398 * d3) + d523 * d19 * d4) + d396 * b3 * d40 * d1) - d340 * d19 * d1) - ld_mm_tmp * c5) + d479 * b4 * d40 * c4) + md_mm_tmp * c5) - bd_mm_tmp * d40 * c3) - 16.0 * a1 * b2 * b4 * d19 * c5) + ve_mm_tmp * d19 * c4) + 32.0 * a1 * b3 * b5 * c1 * d40) + d355 * d19 * d5) - d341 * d19 * d2) - d356 * d19 * d5) - d529 * d19 * d4) + d530 * d19 * d2) + d548 * d19 * d4) + d402 * d3) - d549 * d22 * d0) - d531 * d19 * d2) + d551 * d22 * c5) - d544 * c5) + d553 * d19 * c4) + d545 * c5) - d534 * d19 * c4) - d556 * b5 * c0 * d22) + 8.0 * a2 * b2 * b5 * d19 * c3) - d535 * d19 * c2) + d408 * c3 * d73) + d528 * b1 * d40 * d1) - d536 * d19 * d2) - d406 * c0 * d73) + d546 * b5 * c1 * d40) - d538 * d19 * c2) - d547 * c5) - 128.0 * a4 * b1 * b4 * c1 * d40) + d541 * d19 * c2) + d554 * d19 * c4) + 32.0 * a5 * b1 * b3 * c1 * d40) - fd_mm_tmp * d19 * c1) - gd_mm_tmp * d19 * c2) + d555 * d40 * d5) - d380 * b4 * d40 * d4) - d64 * d19 * d5) - d364 * b3 * d40 * d4) + d360 * d19 * d5) + d453 * d3) + d344 * d19 * d4) - d552 * d22 * d5) - d361 * d19 * d5) + d557 * d19 * d4) - 6.0 * a0 * a5 * b5 * (c0 * c0) * d3) + d558 * d22 * d0) - d559 * d22 * c5) - 32.0 * a0 * b3 * b4 * d40 * c4) - d561 * d19 * c5) + hd_mm_tmp * d19 * c4) + d66 * d30 * d3) - jd_mm_tmp * d30 * d1) + 8.0 * a1 * b1 * b3 * c3 * d30) + d501 * d25 * d5) - d384 * b5 * d25 * d2) - d562 * b2 * d25 * d4) + d562 * b4 * d25 * d2) + d426 * d3) - d405 * b3 * d25 * d2) + d576 * c5) - 128.0 * a2 * b2 * b4 * d25 * c4) + d505 * b5 * d25 * c3) - 32.0 * a2 * b3 * b5 * d25 * c2) - d563 * b0 * d40 * d4) + d566 * d0) - d363 * d19 * d5) - d528 * b2 * d25 * d2) - d583 * d40 * d0) + d508 * b5 * d19 * d0) + d585 * d40 * c5) - d509 * b4 * d40 * c4) - d577 * c5) - d587 * d30) - d578 * b5 * d25 * c2) - d586 * d40) + d568 * d19 * d4) - 24.0 * a4 * a5 * b4 * d19 * d0) - d480 * b3 * d40 * c4) + d579 * c5) + d481 * d40 * c3) + d570 * d19 * c4) + 128.0 * a4 * b2 * b4 * d25 * c2) + d571 * c0 * d40) - d580 * c5) + d574 * d19 * c4) + d588 * b5 * c0 * d22) - 6.0 * a5 * b0 * b5 * d19 * c3) - 32.0 * a5 * b2 * b3 * d25 * c2) - d67 * d30 * d3) - d452 * d25 * d5) + d364 * b5 * d25 * d4) + d499 * b4 * d25 * d4) - d581 * d25 * d3) + 32.0 * a0 * b4 * b5 * d25 * c4) + d511 * d3) - d512 * d39 * d2) + d507 * c3 * d39) + cd_mm_tmp * d42) - d407 * b4 * c3 * d42) + dd_mm_tmp * d42) + jf_mm_tmp * d25 * d0) - kd_mm_tmp * d30) - 32.0 * a3 * b2 * b3 * c2 * d39) + d589 * b0 * d25 * d4) - d603 * d0) - d605 * c5) + d480 * b5 * d25 * c4) - 32.0 * a4 * b4 * b5 * c0 * d25) + d513 * b4 * d25 * c4) - d599 * b5 * d25 * c3) + d602 * b5 * c0 * d25) + d332 * d39 * d5) - d438 * d3) - d440 * d3) - d455 * c3 * d39) + d350 * d22 * d5) + d352 * d22 * d5) - d597 * d22 * d2) - d353 * d22 * d5) - d598 * d22 * d2) + d340 * d22 * d1) - d592 * c5) + d594 * c5) - d600 * c2 * d22) - d355 * d22 * d5) - d341 * d22 * d2) + d356 * d22 * d5) - d529 * d22 * d4) + d530 * d22 * d2) + 24.0 * a2 * a5 * b2 * d22 * d3) - d531 * d22 * d2) + d532 * c5) - d533 * c5) - d534 * d22 * c4) - d535 * c2 * d22) - ed_mm_tmp * d3) - d536 * d22 * d2) + d604 * d0) + d596 * c5) - d483 * c3 * d39) - d538 * c2 * d22) + d591 * c0 * d39) - d607 * d22 * d2) + d540 * c5) - d539 * c2 * d22) + d541 * c2 * d22) - d484 * c3 * d39) - d608 * c2 * d22) + fd_mm_tmp * c1 * d22) - gd_mm_tmp * c2 * d22) + 6.0 * a0 * a3 * b5 * d22 * d5) - 8.0 * a0 * a4 * b4 * d22 * d5) + d344 * d22 * d4) + d361 * d22 * d5) + d557 * d22 * d4) - d498 * b5 * d22 * d3) + d561 * d22 * c5) + hd_mm_tmp * d22 * c4) + d563 * b3 * d40 * d4) - d615 * d19 * d5) - d566 * d3) + d363 * d22 * d5) + d616 * d19 * d5) + d406 * d40 * d3) - d611 * d19 * d3) + d622 * d0) + d567 * c5) + d613 * b4 * d40 * c4) + d617 * d19 * c5) + d591 * d40 * c3) + d568 * d22 * d4) + d612 * d19 * d3) - d623 * d0) - d569 * c5) + d570 * d22 * c4) - d618 * d19 * c5) - d571 * d40 * c3) - id_mm_tmp * c0 * d22) + 16.0 * a4 * b4 * b5 * d19 * c3) + d573 * c5) + d574 * d22 * c4) + 6.0 * a5 * b3 * b5 * c0 * d22) - 12.0 * a5 * b3 * b5 * d19 * c3) + d406 * d25 * d5) - d621 * d3) + d610 * c5) - 8.0 * a5 * b3 * b5 * d25 * c3) + d61 * d1 * d44) - d62 * d0 * d44) + d624 * d44) - d627 * d44) + d65 * d0 * d44) + d456 * b1 * d39 * d1) + d443 * d44) - d514 * d0) - d446 * d73 * d3) + d332 * d0 * d73) - d448 * b2 * d22 * d2) - d470 * c3 * d73) + 8.0 * a0 * b0 * b3 * d39 * d0) + nd_mm_tmp * b2 * d22 * d0) + 8.0 * a3 * b0 * b3 * c0 * d73) + d471 * d3) - d441 * b5 * d22 * d0) + d66 * d42 * d3) - jd_mm_tmp * d42 * d1) + db_mm_tmp * c3 * d42) - d653 * d0) - d587 * d42) - d67 * d42 * d3) + d470 * d25 * d5) - d464 * d25 * d4) + d449 * d25 * d3) - d654 * d0) - d687 * c2 * d2) - d504 * b2 * d22 * d2) + d1156 * b2 * d22 * d1) + d655 * d0) - kd_mm_tmp * d42) - d656 * d0) + d605 * d0) - d660 * d0) - d661 * c0 * d25) + d470 * d39 * d3) + d919 * d22 * d2) - 8.0 * a0 * b1 * b5 * d22 * d1) + 8.0 * a0 * b2 * b3 * d22 * d2) + d688 * d0) - eb_mm_tmp * c5) + d626 * d22 * d5) + d941 * d22 * d2) - d625 * b5 * d22 * d1) - db_mm_tmp * d19 * d5) + ld_mm_tmp * d3)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d504 * b4 * d19 * d4 - md_mm_tmp * d3) + d592 * d0) - d631 * d19 * d4) + d593 * d19 * d3) - d594 * d0) + 8.0 * a1 * b3 * b5 * d19 * d1) - 24.0 * a2 * b0 * b2 * d22 * d3) + nd_mm_tmp * b3 * d22 * d2) - d526 * d19 * d4) + d544 * d3) - d532 * d0) - d545 * d3) + d533 * d0) + d482 * b2 * d22 * d2) - d596 * d0) - d633 * d19 * d4) - d546 * b3 * d40 * d1) + d575 * b5 * d19 * d1) + d537 * b3 * d19 * d2) + d630 * d22 * d2) + d547 * d3) - d540 * d0) - d634 * b4 * d19 * d1) - d478 * b1 * d22 * d1) + d543 * b3 * d19 * d1) + d636 * c2 * d22) - 8.0 * b0 * b1 * b5 * c1 * d22) + 8.0 * b0 * b2 * b3 * c2 * d22) - d628 * b3 * d19 * c4) - d629 * c0 * d22) + d629 * d19 * c3) + 8.0 * b1 * b3 * b5 * d19 * c1) - d442 * d22 * d5) - d448 * b4 * d22 * d4) + 18.0 * a0 * b0 * b5 * d22 * d3) - d454 * b4 * d19 * d4) + d560 * b5 * d19 * d3) - d560 * b5 * d22 * d0) - d335 * d10 * c1 * c2 * d2) + d335 * d15 * c0 * c1 * c5) - d576 * d3) + 32.0 * a2 * d10 * c1 * c2 * d1) - 32.0 * a2 * d15 * c0 * c2 * c3) + d_mm_tmp_tmp * d19 * d5) - d653 * d3) - d482 * b4 * d19 * d4) + d577 * d3) - d567 * d0) + d652 * d25 * d2) - 18.0 * a3 * b3 * b5 * d19 * d0) - d564 * b3 * d19 * d4) - d579 * d3) + d569 * d0) + 24.0 * a4 * b3 * b4 * d19 * d0) + d580 * d3) - d573 * d0) - d645 * b4 * d19 * c4) - d637 * c0 * d22) + d637 * d19 * c3) + d654 * d3) + d657 * c5 * d5) - d639 * c2 * d4) - d639 * c4 * d2) + td_mm_tmp * c5 * d1) + d109 * c2 * c3 * d2) - d638 * c2 * c4 * d1) + d642 * c1 * d5) + d640 * c2 * d4) + d640 * c4 * d2) + d642 * c5 * d1) + d647 * d0) + d649 * d0) - d650 * c5) - d655 * d3) - d644 * c3 * d2) - d643 * d0) + d651 * c5) - d595 * d25 * d5) + d656 * d3) - d610 * d0) + d137 * c2 * d2) - d659 * c5) + d660 * d3) + 16.0 * a5 * d43 * c1 * c2 * c4) + d661 * d25 * c3) - od_mm_tmp * d0) - d114 * b0 * c1 * c2 * c4) + qd_mm_tmp * c0 * c1 * c5) + d119 * c0 * c2 * c4) - 8.0 * d10 * b2 * c0 * c2 * c3) - d96 * c3 * d5) + d687 * c4 * d4) - d688 * d3) - d95 * d0) + d675 * c5) - d664 * d0) - d667 * d0) - d678 * c5) + 32.0 * a4 * d13 * c0 * c3 * c4) + d679 * c5) - d689 * c5) - d690 * c5 * d5) + d681 * c5 * d5) + d590 * b4 * d19 * d4) + 6.0 * a3 * b3 * b5 * d19 * d3) - 8.0 * a4 * b3 * b4 * d19 * d3) - d691 * c5) - d683 * c5 * d5) + d684 * c5 * d2) - d685 * c5 * d1) + d669 * d0) - d135 * c5 * d5) - d646 * c3 * d5) + 32.0 * a1 * d10 * c1 * c4 * d4) - d647 * d3) - d648 * c3 * d4) - d649 * d3) - d115 * c3 * c4 * d2) - d641 * c5 * d1) + d643 * d3) + d671 * c5) + d672 * c5) + d663 * c2 * d4) + d663 * c4 * d2) - d686 * c5 * d1) - d136 * c2 * c3 * d2) + d662 * c2 * c4 * d1) + d673 * c5) - 32.0 * a4 * d10 * c1 * c4 * d1) - 16.0 * a5 * d45 * c1 * c2 * c4) - d692 * c5 * d5) - d695 * c5 * d5) + d696 * c2 * c5 * d2) - d698 * c5 * d5) + d173 * c3 * d5) + od_mm_tmp * d3) + sd_mm_tmp * d0) + pd_mm_tmp * c0 * c3 * c5) - qd_mm_tmp * c1 * c3 * c5) - 16.0 * d10 * b1 * c2 * c3 * c4) + vd_mm_tmp * c1 * c2 * c4) - 8.0 * a0 * (a5 * a5) * c3 * c4 * d4) + d95 * d3) - d703 * c5 * d5) + d171 * c3 * d5) - d137 * c4 * d4) + d664 * d3) + d699 * d0) + d666 * c3 * d4) + d667 * d3) + d665 * d0) - d704 * c5) - d705 * c5) - d706 * c5 * d5) + xd_mm_tmp * c5 * d1) + de_mm_tmp * c5) + d299 * b4 * c0 * c3 * c4) + d668 * c3 * c5 * d5) - d715 * c5 * d5) + d716 * c5 * d5) + d717 * c5 * d2) - d250 * c3 * d5) - d669 * d3) - d701 * d0) - d718 * c5) + d709 * c5 * d5) + d251 * c5 * d5) - d710 * c5 * d4) + d697 * c3 * c5 * d5) - sd_mm_tmp * d3) - d719 * c5 * d5) + d136 * c3 * c4 * d4) - d699 * d3) - d665 * d3) + d712 * c5 * d5) + d700 * c5 * d5) - d713 * c5 * d4) - d217 * c5 * d5) + d701 * d3) + d721 * c5 * d5) + d254 * c5 * d5) - d722 * c5 * d4) + 32.0 * a0 * d15 * c0 * c1 * d1) - 32.0 * a1 * d15 * c0 * c1 * d0) + td_mm_tmp * d0 * d1) - wd_mm_tmp * c2 * d2) - ud_mm_tmp * d0) - 8.0 * a1 * d10 * c0 * d0 * d1) + 8.0 * a2 * (b3 * b3) * c0 * c2 * d0) + 8.0 * d10 * b0 * c0 * c1 * d1) - 8.0 * (a5 * a5) * b1 * c0 * c1 * d0) - d742 * d0 * d2) - d96 * d0 * d3) + eb_mm_tmp * d3) + d743 * d0) + d744 * d0 * d2) - d745 * d0) - 32.0 * (a4 * a4) * b0 * c0 * c2 * d2) + d754 * d0) - d689 * d0) + d690 * d0 * d5) + fb_mm_tmp * c3 * d5) - 32.0 * a0 * d74 * c0 * c4 * d4) + fb_mm_tmp * c5 * d3) + d755 * d0) - 32.0 * a1 * d45 * c1 * c2 * d2) + 32.0 * a2 * d45 * c1 * c2 * d1) - d756 * d0) + d691 * d0) - d757 * d0) + d823 * c5) + d247 * c5 * d0) - d657 * d3 * d5) - d135 * d0 * d5) + d783 * d0 * d4) - d148 * d0 * d3) - d639 * d1 * d3) + gb_mm_tmp * c2 * d4) + gb_mm_tmp * c4 * d2) - d824 * c5 * d1) - d138 * c2 * c3 * d2) + mm_tmp_tmp * c2 * c4 * d1)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((ud_mm_tmp * d3 - 128.0 * a1 * d38 * c2 * d1 * d2) - d724 * c3 * d5) + 32.0 * a1 * d43 * c1 * c4 * d4) - d724 * c5 * d3) - d723 * c5 * d1) + d650 * d3) + d726 * c1 * d5) + d726 * c5 * d1) + d725 * c1 * c5 * d0) + 128.0 * a2 * d38 * c1 * d1 * d2) - d651 * d3) - d727 * c1 * d4) - d670 * c2 * d3) - d670 * c3 * d2) - d727 * c4 * d1) - d671 * d0) - d672 * d0) + d663 * d0 * d1) - d729 * c2 * d4) - d729 * c4 * d2) + d730 * c5 * d1) + d218 * c2 * c3 * d2) - d728 * c2 * c4 * d1) - 32.0 * a3 * d13 * c1 * c3 * d1) + 24.0 * a3 * d45 * c0 * c2 * d2) - d673 * d0) + d659 * d3) + d658 * c3 * d2) - 32.0 * a4 * d43 * c1 * c4 * d1) + d295 * c2 * c3 * d1) + d219 * c1 * c3 * d1) - d176 * c1 * d1) + 16.0 * b0 * d45 * c1 * c2 * c4) + d731 * c5) - d732 * c0 * c1 * c4) - 8.0 * b2 * d45 * c0 * c2 * c3) + d698 * d0 * d5) - d734 * d0 * d4) + d173 * d0 * d3) - d319 * c0 * c3 * d5) + be_mm_tmp * c0 * c4 * d4) - d169 * b0 * c0 * c5 * d3) - 8.0 * d37 * b0 * c3 * c5 * d0) + 8.0 * d37 * b3 * c0 * c5 * d0) - 32.0 * (a2 * a2) * b4 * c0 * c4 * d0) + 8.0 * (a2 * a2) * b5 * c0 * c3 * d0) - d735 * b1 * c1 * c2 * d2) + d735 * b2 * c1 * c2 * d1) - 16.0 * (a5 * a5) * b0 * c1 * c3 * d1) + vd_mm_tmp * c0 * c1 * d1) - ee_mm_tmp * c5) - d309 * b3 * c1 * c2 * c4) + d310 * c1 * c2 * c3) - d105 * c5 * d0 * d5) - d736 * c1 * d1 * d5) + d742 * d2 * d3) + 12.0 * a0 * d10 * c3 * d0 * d3) - 24.0 * a0 * d43 * c3 * c4 * d4) + 18.0 * a0 * d43 * c3 * c5 * d3) + d98 * c3 * d5) - wd_mm_tmp * c4 * d4) + d743 * d3) + d97 * c3 * c5 * d0) + d702 * c0 * d1 * d5) + d703 * d0 * d5) + d702 * c5 * d0 * d1) - d744 * d2 * d3) - d737 * c2 * d0 * d3) - d739 * d0 * d2) - d675 * d3) + d740 * d0 * d2) - 12.0 * a3 * d10 * c0 * d0 * d3) - d187 * c3 * d5) + d218 * c0 * c4 * d4) - d187 * c5 * d3) - d741 * d0) + 32.0 * a3 * d74 * c2 * c3 * d2) + d745 * d3) - 18.0 * a3 * d45 * c0 * c5 * d0) + d677 * c3 * d4) + d678 * d3) + d676 * d0) + d704 * d0) - d679 * d3) + d705 * d0) + d746 * c5) + d706 * d0 * d5) - d311 * c0 * c5 * d5) + d134 * c0 * c5 * d0) - xd_mm_tmp * d0 * d1) - yd_mm_tmp * c1 * c5 * d1) + yd_mm_tmp * c2 * c3 * d2) + ae_mm_tmp * c1 * d5) + ae_mm_tmp * c5 * d1) + 32.0 * (a4 * a4) * b1 * c1 * c5 * d0) - d754 * d3) - d747 * c3 * d2) - ce_mm_tmp * d0) + d752 * c0 * c2 * d2) - d707 * b5 * c0 * c1 * d1) + d202 * b0 * c0 * c3 * d3) - d202 * b3 * c0 * c3 * d0) - d758 * c5) + d738 * b4 * c0 * c3 * c4) + d759 * c2 * d2 * d5) + d755 * d3) - d681 * d3 * d5) - d680 * c3 * d1 * d5) + 128.0 * a1 * d37 * c4 * d1 * d4) - d680 * c5 * d1 * d3) - d140 * d0 * d5) - d142 * c3 * d5) - d756 * d3) - d141 * c3 * c5 * d0) + d757 * d3) + d760 * c5 * d1 * d5) + d683 * d3 * d5) + d682 * c3 * d2 * d5) - d748 * a2 * c4 * d2 * d4) + d682 * c5 * d2 * d3) - d228 * c2 * d2 * d5) - d177 * c1 * d2 * d5) - d177 * c2 * d1 * d5) + d748 * a4 * c2 * d2 * d4) - d177 * c5 * d1 * d2) - d229 * c1 * d1 * d5) + d749 * c1 * d2 * d4) + d749 * c2 * d1 * d4) - d684 * d2 * d3) + d753 * d1 * d2) + d762 * c5 * d5) + d751 * c3 * d5) - d748 * b2 * c2 * c4 * d4) + d751 * c5 * d3) + d750 * c5 * d2) - d763 * c5 * d2) - d764 * c2 * d5) - d764 * c5 * d2) + d765 * c2 * c4 * d2) - ge_mm_tmp * c5 * d1) + d775 * c1 * c2 * d4) + 16.0 * d * b5 * c1 * c4 * d2) - 8.0 * d * b5 * c1 * c5 * d1) - 8.0 * (a0 * a0) * b5 * c2 * c3 * d2) + d775 * c2 * c4 * d1) + d770 * c1 * d1 * d5) - d766 * a4 * c1 * d1 * d4) + d685 * d1 * d3) - d768 * c3 * d5) + d766 * b1 * c1 * c4 * d4) - d768 * c5 * d3) - d767 * c5 * d1) + d784 * c5 * d1) - d766 * b4 * c1 * c4 * d1) + d674 * b5 * c1 * c3 * d1) - d773 * d0 * d2) + d778 * c5 * d2) - d774 * c0 * c2 * d2) + d178 * d0 * d3) - d306 * c0 * c5 * d0) + d268 * c0 * c3 * d0) - d776 * c5) + d106 * d3 * d5) - d783 * d3 * d4) - 12.0 * a0 * d6 * c5 * d0 * d5) + d641 * d1 * d3) - d686 * d1 * d3) + d220 * c5 * d0 * d5) - d708 * c0 * d4 * d5) - d709 * d0 * d5) - d708 * c5 * d0 * d4) + d692 * d3 * d5) + d251 * d0 * d5) - d710 * d0 * d4) + d255 * d0 * d3) - d779 * c5 * d5) + d780 * c5 * d4) + d781 * c5 * d5) - d769 * c4 * d5) - d769 * c5 * d4) - d782 * c5 * d0) + d785 * c3 * d5) - d326 * c0 * c4 * d4) + d785 * c5 * d3) + d786 * c5 * d0) + d695 * d3 * d5) + d694 * c3 * d2 * d5) - d787 * a2 * c4 * d2 * d4) + d694 * c5 * d2 * d3) - d693 * a3 * c2 * d2 * d5) + d787 * a4 * c2 * d2 * d4) - 32.0 * b_d1 * a5 * c2 * d2 * d3) + 32.0 * b_d1 * b2 * c2 * c3 * d5) - d787 * b2 * c2 * c4 * d4) + d788 * c2 * c5 * d3) + d792 * c5 * d2) - d793 * c5 * d2) + d787 * b4 * c2 * c4 * d2) - d791 * c2 * c3 * d2) - d770 * c4 * d0 * d4) + d734 * d3 * d4) + d733 * c3 * d0 * d4) + d733 * c4 * d0 * d3) - d221 * d0 * d3) - be_mm_tmp * c3 * c4 * d4) + d312 * c3 * c5 * d3) - d771 * c0 * c4 * d4) + d790 * c3 * d4) + d790 * c4 * d3) + d789 * d0) - d245 * c0 * c3 * d3) + d293 * a5 * c0 * d0 * d5) - d293 * b0 * c0 * c5 * d5) + d293 * b5 * c0 * c5 * d0) + 8.0 * (a5 * a5) * b1 * c1 * c3 * d3) - d313 * c1 * c3 * d1) + 32.0 * a0 * b_d1 * c4 * d4 * d5) - d143 * d3 * d5) + d739 * d2 * d3) - d740 * d2 * d3) + d174 * d0 * d3) + d218 * c3 * c4 * d4) - d741 * d3) - d676 * d3) + d222 * d0 * d5) - d711 * c0 * d4 * d5) - d712 * d0 * d5) - d711 * c5 * d0 * d4) + d713 * d0 * d4) - d151 * c3 * c5 * d5) + d693 * b0 * c4 * c5 * d4) + d304 * c0 * c5 * d5) - d795 * c4 * d5) - d795 * c5 * d4) - d794 * c4 * c5 * d0) + d791 * c0 * c4 * d4) + ce_mm_tmp * d3) - d752 * c2 * c3 * d2) + de_mm_tmp * d3) - 8.0 * a0 * d38 * c3 * d3 * d5) - fe_mm_tmp * c5 * d1 * d5) + d179 * c1 * d4 * d5) + d715 * d3 * d5) + d714 * c3 * d2 * d5) + d179 * c4 * d1 * d5) - 32.0 * a2 * d6 * c4 * d2 * d4) + d179 * c5 * d1 * d4) + d714 * c5 * d2 * d3) + d716 * d3 * d5) + d217 * d0 * d5) + d223 * d0 * d3) + d797 * a4 * c2 * d2 * d4) + d175 * c1 * d1 * d5) - d772 * c1 * d2 * d4) - d773 * d1 * d4) + d717 * d2 * d3) - d772 * c4 * d1 * d2) - he_mm_tmp * c5 * d5) + d796 * c4 * d5) + d796 * c5 * d4) + d799 * c3 * d5) - d808 * c2 * c4 * d4) + d799 * c5 * d3) + d803 * c5 * d2) + d804 * c5 * d1) - d805 * c5 * d2) + d797 * b4 * c2 * c4 * d2) - d800 * c2 * d4) - d800 * c4 * d2) + d806 * c5 * d1) + d321 * c2 * c3 * d2) - d774 * c2 * c4 * d1) - d253 * d0 * d3) - d807 * c5 * d3) + d801 * c3 * d5) + d801 * c5 * d3) + d327 * c3 * c5 * d0) - d718 * d3) + d144 * c4 * d4 * d5) - d99 * c5 * d3 * d5) - d809 * c4 * d4 * d5) + d278 * a3 * c5 * d3 * d5) - d278 * a5 * c3 * d3 * d5) + d753 * d3 * d4) + d278 * b3 * c3 * c5 * d5) - d811 * c5 * d4) + d775 * c3 * c4 * d4) - d278 * b5 * c3 * c5 * d3) - d169 * a3 * c3 * d3 * d5) + d674 * a3 * c4 * d3 * d4) - 32.0 * d37 * a4 * c3 * d3 * d4) + 32.0 * d37 * b3 * c3 * c4 * d4) - d817 * c5 * d3) - d789 * d3) - d720 * c0 * d4 * d5) - d721 * d0 * d5) - d720 * c5 * d0 * d4) - d719 * d3 * d5) - d254 * d0 * d5) + d722 * d0 * d4) - d256 * d0 * d3) - d818 * c5 * d5) + d819 * c5 * d4) + d820 * c5 * d5) - d813 * c4 * d5) - d813 * c5 * d4) - d812 * c4 * c5 * d0) - d814 * c3 * d5) + d321 * c0 * c4 * d4) - d814 * c5 * d3) - d240 * c3 * c5 * d0) + d145 * c5 * d3 * d5) - d700 * d3 * d5) + d821 * c5 * d5) - d822 * c5 * d3) + d824 * d0 * d1) - d726 * d0 * d1) + 8.0 * b0 * d45 * c0 * c1 * d1) - d731 * d0) - d98 * d0 * d3) - d746 * d0) + 32.0 * (a4 * a4) * b0 * c1 * d0 * d1) - 32.0 * (a4 * a4) * b1 * c0 * d0 * d1) - d139 * d0 * d3) + d142 * d0 * d3) - d823 * d3) - d816 * d0 * d2) + d798 * c0 * d0 * d2) - d247 * d0 * d3) + d776 * d0) + d723 * d1 * d3) - d730 * d1 * d3) + d319 * c3 * d0 * d3) - d815 * c0 * d0 * d3) + d825 * d0 * d5) + ee_mm_tmp * d3) - d738 * b3 * c1 * c3 * d1) + d105 * d0 * d3 * d5) + 6.0 * a3 * d43 * c3 * d0 * d3) + 8.0 * b_d1 * b0 * c0 * d3 * d5) + 8.0 * b_d1 * b0 * c3 * d0 * d5) - 32.0 * (a1 * a1) * b0 * c4 * d0 * d4) + d311 * c5 * d0 * d3) - d828 * d0 * d5) + d795 * d0 * d4) - 8.0 * (a1 * a1) * b5 * c0 * d0 * d3) - d797 * b1 * c2 * d1 * d2) + d808 * c1 * d1 * d2) + d758 * d3) + d759 * d1 * d2 * d4) + fe_mm_tmp * d0 * d1 * d5) - d179 * d0 * d1 * d4) - d714 * d0 * d2 * d3) - d760 * d1 * d3 * d5) - d809 * d1 * d2 * d4) + d177 * d1 * d2 * d3) - d762 * d3 * d5) - d761 * c3 * d1 * d5) + d748 * b1 * c4 * d1 * d4) - d761 * c5 * d1 * d3) - d750 * d2 * d3) + d325 * c1 * d1 * d5) - d810 * c1 * d2 * d4) - d810 * c2 * d1 * d4) + d763 * d2 * d3) - d811 * d1 * d2) - d765 * c1 * d1 * d4) + d764 * d2 * d3) + ge_mm_tmp * d1 * d3) + d302 * c3 * d1 * d2) + d326 * c1 * d1 * d3) + d767 * d1 * d3) - d784 * d1 * d3) - d322 * c1 * d1 * d5)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d777 * c1 * d2 * d4 + d778 * d1 * d4) - d816 * d2 * d3) + d777 * c4 * d1 * d2) + d802 * c0 * d1 * d5) + he_mm_tmp * d0 * d5) + d802 * c5 * d0 * d1) - d291 * c0 * d1 * d4) - d170 * b2 * c0 * d2 * d3) - 16.0 * d6 * b2 * c1 * d0 * d4) - 8.0 * d6 * b2 * c2 * d0 * d3) - d803 * d0 * d2) - d804 * d0 * d1) + d805 * d0 * d2) - d806 * d0 * d1) + d807 * d0 * d3) - d801 * d0 * d3) + d99 * d0 * d3 * d5) - d220 * d0 * d3 * d5) + d708 * d0 * d3 * d4) + d779 * d3 * d5) - d780 * d3 * d4) - d781 * d3 * d5) - d826 * d0 * d5) + d827 * d0 * d4) - d320 * c5 * d0 * d3) + d769 * d3 * d4) + d227 * d0 * d4) + d782 * d0 * d3) - d786 * d0 * d3) - d792 * d2 * d3) + d793 * d2 * d3) + d817 * d0 * d3) + d825 * d3 * d5) + d818 * d0 * d5) - d819 * d0 * d4) + d297 * c5 * d0 * d3) - d820 * d0 * d5) + d813 * d0 * d4) + d814 * d0 * d3) - d145 * d0 * d3 * d5) + d311 * c3 * d3 * d5) - d828 * d3 * d5) - d821 * d0 * d5) - d314 * c5 * d0 * d3) + d822 * d0 * d3) - d826 * d3 * d5) + d827 * d3 * d4) - d227 * d3 * d4) - d830 * c5 * d5) + d832 * c5 * d5) - d476 * a4 * c1 * c5 * d5) + d834 * c4 * d5) + d834 * c5 * d4) + je_mm_tmp * c5 * d1) + le_mm_tmp * c5) - me_mm_tmp * c5 * d2) + d946 * c1 * c2 * d5) + qe_mm_tmp * c5 * d2) + re_mm_tmp * c5 * d1) + 16.0 * a0 * a4 * b5 * c1 * c2 * c5) + d843 * c5) + d853 * c5) - d854 * c2 * c4) + d844 * c5 * d5) - d835 * c4 * d5) - d835 * c5 * d4) - d839 * d0) - d855 * c4 * c5) - d836 * c2 * d5) - d836 * c5 * d2) - d840 * d0) - d858 * c5) - d861 * c5) - ue_mm_tmp * c5) + oe_mm_tmp * c5) + d399 * c0 * c2 * c4) + d846 * c5) - d548 * c0 * c4 * c5) + d847 * c5) - d525 * b5 * c0 * c2 * c3) + d851 * c1 * c2 * c5) - d864 * c5) + d848 * c5 * d5) - d850 * c5) - d838 * c5 * d5) + d386 * c4 * d5) + d386 * c5 * d4) + d839 * d3) + se_mm_tmp * c5) + d856 * c1 * c5 * d5) + d429 * c3 * d5) + d840 * d3) + d428 * c5 * d2) + d859 * c5) + d862 * c5) + d598 * c2 * c3 * c5) - ef_mm_tmp * c5) - d399 * c2 * c3 * c4) + d384 * a4 * c1 * c5 * d5) - d866 * c4 * d5) - d866 * c5 * d4) - d867 * c5 * d1) - d868 * c1 * c4 * c5) + d548 * c3 * c4 * c5) - d869 * c1 * c4 * c5) - ie_mm_tmp * c2 * d5) - ie_mm_tmp * c5 * d2) - if_mm_tmp * c5 * d1) - 16.0 * a3 * a4 * b5 * c1 * c2 * c5) - d884 * c5) - d890 * c5) + d885 * c1 * c2 * c4) + d886 * c5) - d606 * b3 * c1 * c2 * c5) - d887 * c5 * d5) - d841 * c5 * d5) + d891 * c5 * d4) + d892 * c5) - d893 * c5) + d606 * b5 * c0 * c3 * c4) + d457 * c0 * d2 * d5) + d897 * d0 * d5) + d898 * d0 * d2) - d829 * c0 * d2 * d4) - d899 * d0 * d4) - d900 * d0 * d2) + d895 * c5 * d5) - d896 * c5 * d5) + d870 * c2 * d5) + d870 * c5 * d2) + d901 * d0) - d872 * c2 * d4) - d872 * c4 * d2) - d879 * d0) + d388 * c0 * d1 * d5) + d880 * d0 * d5) + d881 * d0 * d1) - d833 * c0 * d1 * d4) - d834 * d0 * d4) - je_mm_tmp * d0 * d1) + d874 * c3 * d5) - d875 * b0 * c2 * c4 * d4) + d874 * c5 * d3) + d873 * c5 * d2) - d876 * c3 * d5) + d882 * c0 * c4 * d4) - d876 * c5 * d3) - d902 * c5 * d0) + d903 * c1 * d5) + d903 * c5 * d1) + pe_mm_tmp * d0) - ke_mm_tmp * c1 * d4) - ke_mm_tmp * c4 * d1) - le_mm_tmp * d0) + me_mm_tmp * d0 * d2) - kf_mm_tmp * c5 * d2) + 16.0 * a0 * a3 * b5 * c0 * c2 * d2) - ne_mm_tmp * c2 * d5) - ne_mm_tmp * c5 * d2) + d926 * c2 * c4 * d2) - d927 * c5 * d1) + d904 * c2 * d5) + d904 * c5 * d2) + d463 * c5 * d0) + d905 * c1 * d5) + d905 * c5 * d1) + d915 * d0) - d916 * c0 * c2 * d2) + d908 * c2 * d4) + d908 * c4 * d2) - d928 * c5 * d1) - d516 * c2 * c3 * d2) + d907 * c2 * c4 * d1) - d910 * c2 * d4) - d910 * c4 * d2) - d918 * d0) - d842 * c1 * d4) - d842 * c4 * d1) - d843 * d0) + d510 * c0 * c2 * d2) + d581 * c0 * c1 * d1) + r_mm_tmp * c5) - d464 * c1 * c2 * c5) + d456 * b5 * c1 * c2 * c4) + d930 * c5) - d920 * c0 * c2 * c4) + d932 * c5) - d912 * b5 * c0 * c1 * c4) - d844 * d0 * d5) + d837 * a5 * c0 * d0 * d4) - d933 * c5 * d0) + d837 * b5 * c0 * c4 * d0) + d914 * c2 * d5) + d914 * c5 * d2) + d923 * d0) - d934 * c5 * d0) - d936 * c2 * d4) - d936 * c4 * d2) - d938 * d0) + d940 * c5 * d0) + d396 * b2 * c0 * c4 * d0) - oe_mm_tmp * d0) + d941 * c0 * c2 * c5) - d942 * c0 * c2 * c4) - d1046 * d0 * d2) + t_mm_tmp * c5 * d0) - we_mm_tmp * d0) + 16.0 * a2 * a4 * b0 * c0 * c1 * d5) + d965 * c5 * d1) + d948 * d0) - d966 * c5 * d0) - d951 * d0) + xe_mm_tmp * d0) - d845 * c1 * d4) - d845 * c4 * d1) - d846 * d0) + d405 * b1 * c0 * c4 * d0) + d847 * d0) - d953 * d0) - d967 * c5) + d969 * c5) - d550 * b5 * c0 * c1 * c4) + d964 * c0 * c2 * d2) - d956 * d0) + d971 * c5) + d973 * c5) - d958 * c0 * c2 * c4) - d599 * b2 * c0 * c1 * c4) - d848 * d0 * d5) + d486 * c0 * c5 * d5) - d974 * c5 * d0) + d959 * d0 * d4) - d944 * c4 * d5) - d944 * c5 * d4) - d975 * c5 * d0) + d976 * c5 * d0) + d961 * d0) + d945 * c3 * d5) - d516 * c0 * c4 * d4) + d945 * c5 * d3) + d977 * c5 * d0) - d978 * c5 * d0) + bf_mm_tmp * d0) - d850 * d0) - d980 * c5) + d981 * c5) - d982 * c5 * d0) + d984 * d0) + d987 * c3 * d5) - d988 * b1 * c2 * c4 * d4) + d987 * c5 * d3) + n_mm_tmp * c5 * d2) - d989 * c1 * c3 * d5) + d988 * b2 * c1 * c4 * d4) - d985 * b2 * c1 * c5 * d3) - 64.0 * a1 * a2 * b2 * c3 * c5 * d1) + e_mm_tmp_tmp * a5 * c2 * d1 * d2) - q_mm_tmp * c5 * d2) + e_mm_tmp_tmp * b5 * c1 * c2 * d2) + hb_mm_tmp * b1 * c2 * c4 * d2) - hb_mm_tmp * b4 * c1 * c2 * d2) - d1040 * c2 * c3 * d2) + d1035 * b3 * c1 * c2 * d2) + ob_mm_tmp * c5) - d1051 * a5 * c1 * d1 * d2) + pb_mm_tmp * c5 * d1) - d1051 * b5 * c1 * c2 * d1) - ib_mm_tmp * b2 * c1 * c4 * d1) + ib_mm_tmp * b4 * c1 * c2 * d1) + jb_mm_tmp * b2 * c1 * c3 * d1) - jb_mm_tmp * b3 * c1 * c2 * d1) - e_mm_tmp * c5) + kb_mm_tmp * b1 * c1 * c2 * d2) - kb_mm_tmp * b2 * c1 * c2 * d1) - d897 * d3 * d5) - d457 * c3 * d2 * d5) - d898 * d2 * d3) + d830 * d3 * d5) + d899 * d3 * d4) + lb_mm_tmp * d1 * d5) + lb_mm_tmp * d2 * d4) - d1134 * a5 * c4 * d1 * d4) + d900 * d2 * d3) + d829 * c5 * d1 * d3) - d496 * c3 * c5 * d5) + d1135 * c5 * d4) - d460 * c3 * d5) - d901 * d3) - d459 * c5 * d2) + d871 * c3 * d5) - d1134 * b5 * c1 * c4 * d4)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d871 * c5 * d3 + d878 * c3 * d4) + d879 * d3) + d990 * c4 * d2) + d990 * c5 * d1) - d831 * c1 * d4 * d5) - d832 * d3 * d5) - d831 * c3 * d2 * d5) - d831 * c4 * d1 * d5) + d875 * a3 * c4 * d2 * d4) - d991 * d1 * d4) - d991 * d2 * d3) + d880 * d3 * d5) + d388 * c3 * d1 * d5) + d881 * d1 * d3) - d882 * c3 * c4 * d4) + d487 * c3 * c5 * d3) - d992 * c4 * d5) - d992 * c5 * d4) - d993 * c3 * d5) + d875 * b3 * c2 * c4 * d4) - d993 * c5 * d3) - d1001 * c5 * d2) - d999 * c5 * d1) + d390 * c3 * d5) + pe_mm_tmp * d3) + d389 * c5 * d1) + d883 * c1 * d2 * d5) + d883 * c2 * d1 * d5) - d996 * a4 * c2 * d2 * d4) + d998 * d1 * d2) - d995 * c4 * d5) - d995 * c5 * d4) - d997 * c3 * d5) + d996 * b2 * c2 * c4 * d4) - d997 * c5 * d3) - d1002 * c5 * d2) - d1000 * c5 * d1) + d1004 * c5 * d2) + d1006 * c2 * d5) + d1006 * c5 * d2) - d996 * b4 * c2 * c4 * d2) + d1007 * c5 * d1) + d906 * a5 * c1 * d1 * d4) - qe_mm_tmp * d2 * d3) - re_mm_tmp * d1 * d3) - d370 * a5 * c3 * d1 * d2) - 16.0 * a0 * a4 * b1 * c2 * c3 * d5) - 16.0 * a0 * a4 * b1 * c2 * c5 * d3) - 16.0 * a0 * a4 * b1 * c3 * c5 * d2) + d392 * c3 * d5) + d915 * d3) + d391 * c5 * d1) + d1009 * c2 * d5) + d1009 * c5 * d2) - d906 * b3 * c2 * c4 * d2) + d1020 * c5 * d1) - d1016 * c5 * d1) + d916 * c2 * c3 * d2) - d1010 * c2 * d3) - d1010 * c3 * d2) + d906 * b5 * c1 * c4 * d1) - d947 * c2 * c3 * d1) + d1011 * c3 * d5) - d1012 * b1 * c1 * c4 * d4) + d1011 * c5 * d3) + d917 * c3 * d4) + d918 * d3) + d909 * c4 * d2) + d909 * c5 * d1) - d853 * d3) - d852 * c3 * d2) + d1012 * b4 * c1 * c4 * d1) - d849 * c2 * c3 * d1) - d854 * c3 * d1) - d1017 * c5) + d1021 * c5) + d920 * c2 * c3 * c4) - d1018 * c5) - d1022 * c5) + d921 * c5) + d1025 * c5) - cf_mm_tmp * c1 * c2 * c3) + d465 * c0 * d4 * d5) + d1014 * d0 * d5) + d1015 * d0 * d4) - d835 * d3 * d4) - d386 * d0 * d4) - d387 * d0 * d3) + d1026 * c4 * d5) + d1026 * c5 * d4) + d467 * c5 * d0) - d855 * c3 * d4) - d338 * c0 * c4 * d3) - se_mm_tmp * d0) - te_mm_tmp * d1 * d5) - te_mm_tmp * d2 * d4) - 16.0 * a1 * a3 * a5 * c1 * d0 * d5) - 16.0 * a1 * a3 * a5 * c2 * d0 * d4) - d1036 * d0 * d2) - d856 * c5 * d0 * d1) + d451 * c0 * c5 * d5) + d1027 * c4 * d5) + d1027 * c5 * d4) + d1037 * d0) - d1029 * c1 * d5) - d1029 * c2 * d4) - d1029 * c4 * d2) - d1029 * c5 * d1) - d1028 * c1 * c5 * d0) - d1039 * d0) + d836 * d2 * d3) + d429 * d0 * d3) + d428 * d0 * d2) - d922 * c3 * d5) - d923 * d3) - d913 * c5 * d2) - d1032 * c4 * d5) - d1032 * c5 * d4) - d1031 * c4 * c5 * d0) + d1033 * c1 * d5) + d1033 * c5 * d1) + d1030 * c1 * c5 * d0) + d858 * d3) + d857 * c3 * d2) + d859 * d0) + d1034 * c3 * d5) - d1035 * b0 * c1 * c4 * d4) + d1034 * c5 * d3) + d937 * c3 * d4) + d938 * d3) + d935 * c4 * d2) + d935 * c5 * d1) + d1040 * c0 * c4 * d4) - d860 * c3 * d4) - d861 * d3) - d862 * d0) - d1042 * c1 * d5) - d1042 * c2 * d4) - d1042 * c4 * d2) - d1042 * c5 * d1) - d1041 * c1 * c5 * d0) - df_mm_tmp * d0) + ue_mm_tmp * d3) + d522 * b4 * c0 * c3 * d2) + d522 * b4 * c2 * c3 * d0) - 16.0 * a1 * b0 * b4 * c2 * c3 * c5) + 16.0 * a1 * b0 * b5 * c1 * c3 * c5) + 16.0 * a1 * b0 * b5 * c2 * c3 * c4) - p_mm_tmp * c5) + d1057 * c5) - ve_mm_tmp * c0 * c3 * c4) - d1045 * c1 * c5) - d1045 * c2 * c4) + d600 * c0 * c2 * c3) - d430 * c0 * d1 * d5) - ff_mm_tmp * d0 * d5) - d430 * c5 * d0 * d1) + d1046 * d1 * d4) + d1046 * d2 * d3) + d866 * d0 * d4) + d865 * c2 * d0 * d3) + d865 * c3 * d0 * d2) + d867 * d0 * d1) - d1048 * c4 * d5) - d1048 * c5 * d4) - d1049 * c3 * d5) + d1051 * b0 * c2 * c4 * d4) - d1049 * c5 * d3) - d1047 * c5 * d2) - d1055 * c5 * d1) + d1050 * c4 * d5) + d1050 * c5 * d4) + d1059 * d0) - d1058 * c0 * c4 * d4) - d1052 * c1 * d5) - d1052 * c5 * d1) - d1060 * d0) + d1053 * c1 * d4) + we_mm_tmp * d3) + d1053 * c3 * d2) + d1053 * c4 * d1) + 16.0 * a2 * a3 * b5 * c1 * c4 * d0) + d1061 * d0) + d394 * c3 * d5) + d948 * d3) + d393 * c5 * d1) + d950 * c3 * d4) + d951 * d3) + d949 * d0) - d1062 * c1 * d5) - d1062 * c5 * d1) - d435 * c5 * d0) - xe_mm_tmp * d3) - d943 * b4 * c0 * c3 * d2) - hf_mm_tmp * d0) - 16.0 * a2 * a5 * b1 * c0 * c3 * d4) - 16.0 * a2 * a5 * b1 * c0 * c4 * d3) - 16.0 * a2 * a5 * b1 * c3 * c4 * d0) - d425 * c0 * c3 * d3) + d952 * c1 * d4) + d953 * d3) + d952 * c3 * d2) + d952 * c4 * d1) + 16.0 * a2 * a5 * b3 * c1 * c4 * d0) + d1080 * d0) - d1075 * c5) - d1077 * c5) + d954 * c5) + f_mm_tmp * c5) - d553 * c0 * c3 * c4) + d1076 * b4 * c0 * c3 * c4) - d1081 * c0 * c1 * c5) + d1065 * c1 * c4) + d1065 * c2 * c3) + d1067 * c2 * d5) + d1067 * c5 * d2) - d1069 * b0 * c2 * c4 * d2) + d1079 * c5 * d1) - d1068 * c1 * d5) - d1068 * c5 * d1) - d1082 * d0) + d1083 * c0 * c2 * d2) - d1071 * c1 * d5) - d1071 * c2 * d4) - d1071 * c4 * d2) - d1071 * c5 * d1) - d1070 * c1 * c5 * d0) - d1073 * d0) + d955 * c1 * d4) + d956 * d3) + d955 * c3 * d2) + d955 * c4 * d1) + d884 * d0) + d877 * d0) - d1074 * c0 * c2 * d2) + d885 * c0 * c1 * d1) - d1085 * c5) - d1086 * c5) + h_mm_tmp * c5) + d1089 * c4 * c5) - u_mm_tmp * c5) - ye_mm_tmp * c2 * c4) - d1091 * b4 * c0 * c1 * c5) + d1091 * b5 * c0 * c1 * c4) + 16.0 * a3 * b2 * b5 * c0 * c2 * c3) - 16.0 * a4 * a5 * b0 * c1 * c2 * d3) - 16.0 * a4 * a5 * b0 * c1 * c3 * d2) + d1092 * b0 * c1 * c4 * d1) - d851 * c2 * c3 * d1) + d864 * d3) + d863 * c3 * d2) + d886 * d0) - d1092 * b4 * c0 * c1 * d1) - d1105 * c5) + d957 * c5) + d1108 * c5) - d1099 * c1 * c2 * c3) + d1106 * c5) + d539 * c0 * c2 * c3) - x_mm_tmp * c5) - 64.0 * a4 * b2 * b4 * c0 * c2 * c3) + c_mm_tmp * c5) + d958 * c2 * c3 * c4) - d1100 * c1 * c2 * c3) - d554 * c0 * c3 * c4) - w_mm_tmp * c5) - d1093 * c2 * c4) + d608 * c0 * c2 * c3) + d1094 * c1 * c4) + d1094 * c2 * c3) + d883 * c0 * d4 * d5) + d887 * d0 * d5) + d998 * d0 * d4) + d1095 * b0 * c3 * c5 * d5) - d1104 * c5 * d4) - d1095 * b3 * c0 * c5 * d5) + d1096 * c4 * d5) + d1096 * c5 * d4) + d1005 * c4 * c5 * d0) - d959 * d3 * d4) - d1102 * d0 * d4) - d946 * c4 * d0 * d3) + d1097 * c4 * d5) + d1097 * c5 * d4) + d1008 * c4 * c5 * d0) - d960 * c3 * d4) - d961 * d3) - d1110 * d0) + d907 * c3 * c4 * d4) - d1111 * b0 * c3 * c5 * d3) - af_mm_tmp * c3 * d4) - bf_mm_tmp * d3) - d849 * c3 * c4 * d0) + d1111 * b5 * c0 * c3 * d3) + 16.0 * a0 * b3 * b4 * c0 * c4 * c5) - cf_mm_tmp * c0 * c3 * c4) + d1112 * c4 * d5) + d1112 * c5 * d4) + d1066 * c4 * c5 * d0) - d565 * c0 * c5 * d0) + d1113 * b3 * c0 * c5 * d0) - d1113 * b5 * c0 * c3 * d0) + d1118 * c5) - d983 * c3 * d4) - d984 * d3) - d1115 * d0) + d601 * c0 * c3 * d0) + d1119 * c5) - d1099 * c0 * c3 * c4) - d1100 * c0 * c3 * c4) - d465 * c3 * d4 * d5) - d1014 * d3 * d5) - d1015 * d3 * d4) + d838 * d3 * d5) - d466 * c4 * d5) - d466 * c5 * d4) - 16.0 * a1 * a2 * b3 * c4 * c5 * d3) + d924 * c5 * d3) + d856 * c2 * d3 * d4) + d856 * c3 * d2 * d4) + d1036 * d2 * d3) + b_mm_tmp * c5 * d5) - d474 * c4 * d5) - d474 * c5 * d4) - d1037 * d3) - d1117 * c5 * d5) + d1038 * c3 * d4) + d1039 * d3) + d1028 * c3 * c4 * d2) - d403 * a5 * c3 * d2 * d3) + d925 * c5 * d3) - d403 * b5 * c2 * c3 * d3) - d939 * c5 * d3) + d1114 * c3 * d4) + df_mm_tmp * d3) + d1041 * c3 * c4 * d2) - d396 * b4 * c2 * c3 * d3) + ef_mm_tmp * d3) - d1171 * c5) + d1044 * c2 * c3 * c4) - ff_mm_tmp * d3 * d5) - d430 * c3 * d1 * d5) - d404 * a4 * c5 * d1 * d3) - 16.0 * a2 * a3 * a5 * c3 * d2 * d3) - gf_mm_tmp * c4 * d5) - gf_mm_tmp * c5 * d4) - d1059 * d3) + d1058 * c3 * c4 * d4) - d1172 * c5 * d3) + d1173 * c4 * d5) + d1173 * c5 * d4) + d1174 * c3 * d5) - d1170 * c2 * c4 * d4) + d1174 * c5 * d3) + d1160 * c5 * d2) + d1175 * c5 * d1) - d432 * c3 * d5) - d1060 * d3) - d431 * c5 * d1) - d1061 * d3) + d524 * c5 * d3) - d949 * d3) - d435 * c3 * d5) - 16.0 * a2 * a4 * b3 * c1 * c5 * d3) - d342 * c5 * d1) + hf_mm_tmp * d3) - d1080 * d3) - 16.0 * a2 * b1 * b3 * c3 * c4 * c5) - d1081 * c1 * c3 * c5) + 16.0 * a3 * a4 * a5 * c1 * d2 * d3) + if_mm_tmp * d1 * d3) + b_mm_tmp_tmp * c3 * d1 * d2) - d434 * c3 * d5) - d1082 * d3) - d433 * c5 * d1) + d1069 * b3 * c2 * c4 * d2) - d1083 * c2 * c3 * d2) + mb_mm_tmp * c2 * d3) + mb_mm_tmp * c3 * d2) + c_mm_tmp_tmp * c2 * c3 * d1)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d1072 * c3 * d4 + d1073 * d3) + d1070 * c3 * c4 * d2) - d877 * d3) - d1120 * c2 * d4) - d1120 * c4 * d2) + d1121 * c5 * d1) + d583 * c2 * c3 * d2) - d1074 * c2 * c4 * d1) + d890 * d3) + d889 * c3 * d2) + d888 * c2 * c3 * d1) - jf_mm_tmp * c1 * c3 * d1) - d1122 * c5) + d1090 * c2 * c3 * c4) + mm_tmp * c5) + d1123 * c2 * c3 * c5) - k_mm_tmp * c5) - d613 * b5 * c1 * c2 * c4) + 16.0 * a3 * b4 * b5 * c1 * c2 * c3) - d589 * b1 * c2 * c3 * d3) + 16.0 * a4 * a5 * b3 * c1 * c2 * d3) + 16.0 * a4 * a5 * b3 * c1 * c3 * d2) + 16.0 * a4 * a5 * b3 * c2 * c3 * d1) - m_mm_tmp * c5) + d614 * b5 * c1 * c2 * c3) + d542 * c2 * c3 * c4) + d602 * b4 * c1 * c2 * c3) + d841 * d3 * d5) - d891 * d3 * d4) - d1130 * c5 * d5) + d1131 * c5 * d4) - d1129 * c3 * c4 * d4) + d962 * c5 * d3) + d1102 * d3 * d4) - d963 * c5 * d3) + d1110 * d3) - d510 * c3 * c4 * d4) + d527 * c5 * d3) + 16.0 * a0 * a5 * b4 * c3 * c4 * d3) - d1126 * c4 * d5) - d1126 * c5 * d4) - d1125 * c4 * c5 * d0) + d1127 * c3 * d5) + d1127 * c5 * d3) + d615 * c3 * c5 * d0) - d964 * c3 * c4 * d4) + d609 * c5 * d3) - d1128 * c3 * d5) + d583 * c0 * c4 * d4) - d1128 * c5 * d3) - d616 * c3 * c5 * d0) + d892 * d3) - d584 * c5) - d1132 * c5) + d1115 * d3) - d893 * d3) + d1133 * c5) + ab_mm_tmp * d0 * d2 * d4) - d457 * d0 * d2 * d3) - d895 * d3 * d5) - d894 * c3 * d1 * d5) + d1134 * b0 * c4 * d1 * d4) - d894 * c5 * d1 * d3) + d896 * d3 * d5) + d458 * c3 * d0 * d5) - d1135 * d0 * d4) + d458 * c5 * d0 * d3) + d1136 * c0 * d2 * d4) + d1136 * c2 * d0 * d4) + l_mm_tmp * d0 * d2) - 16.0 * a0 * a1 * b4 * c0 * d2 * d3) - 16.0 * a0 * a1 * b4 * c2 * d0 * d3) - d459 * d0 * d2) + d831 * d0 * d1 * d4) - d388 * d0 * d1 * d3) - d873 * d2 * d3) + d902 * d0 * d3) + d336 * c0 * d1 * d4) + d992 * d0 * d4) + d999 * d0 * d1) - d903 * d1 * d3) - d390 * d0 * d3) - d389 * d0 * d1) + d517 * c1 * d1 * d5) - d1103 * c1 * d2 * d4) - d1103 * c2 * d1 * d4) + kf_mm_tmp * d2 * d3) - d1104 * d1 * d2) + d506 * c0 * d2 * d4) + d1139 * d0 * d4) + d1140 * d0 * d2) + d994 * c0 * d1 * d4) + d995 * d0 * d4) + d1000 * d0 * d1) - d1141 * d0 * d2) - d1142 * d0 * d1) - d926 * c1 * d1 * d4) + ne_mm_tmp * d2 * d3) + d927 * d1 * d3) + d461 * c3 * d1 * d2) - d904 * d2 * d3) - d463 * d0 * d3) - d462 * c3 * d0 * d2) - d905 * d1 * d3) - d392 * d0 * d3) - d391 * d0 * d1) + d1016 * d0 * d1) + d928 * d1 * d3) - d1143 * d0 * d1) - d1138 * c3 * d5) + y_mm_tmp * b1 * c1 * c4 * d4) - d1138 * c5 * d3) - d1137 * c5 * d1) - r_mm_tmp * d3) - v_mm_tmp * c2 * d4) - v_mm_tmp * c4 * d2) + d518 * c1 * c5 * d1) + d518 * c2 * c3 * d2) - d1144 * c2 * c4 * d1) + 32.0 * a0 * b0 * b4 * c1 * c2 * d3) + 32.0 * a0 * b0 * b4 * c1 * c3 * d2) - y_mm_tmp * b4 * c1 * c4 * d1) + d464 * c2 * c3 * d1) + d519 * c1 * c3 * d1) + d1145 * c2 * d4) + d1145 * c4 * d2) + d1149 * d0) - d930 * d3) - d929 * c3 * d2) - d1017 * d0) + d1013 * c1 * d4) + d1013 * c4 * d1) + d1018 * d0) - d932 * d3) - d931 * c3 * d1) - d921 * d0) - d1019 * c0 * c1 * d1) - d837 * b3 * c0 * d0 * d4) + d933 * d0 * d3) + d1146 * c0 * d2 * d4) + d1150 * d0 * d4) + d1151 * d0 * d2) - g_mm_tmp * d0 * d5) - d374 * b2 * c0 * d0 * d4) + d1029 * d0 * d1) - d914 * d2 * d3) - d922 * d0 * d3) - d913 * d0 * d2) + d1032 * d0 * d4) + d934 * d0 * d3) - d1033 * d0 * d1) - d940 * d0 * d3) + d1042 * d0 * d1) + d491 * c3 * d5) - 64.0 * a1 * b0 * b1 * c0 * c4 * d4) + d491 * c5 * d3) + d1152 * d0) + d1147 * c2 * d4) + d1147 * c4 * d2) + d1154 * d0) - 16.0 * a1 * b0 * b4 * c0 * c2 * d3) - 16.0 * a1 * b0 * b4 * c0 * c3 * d2) - d941 * c2 * c3 * d0) - d495 * c5 * d0) + p_mm_tmp * d0) - d493 * b5 * c0 * c3 * d0) - d1155 * b3 * c0 * c4 * d0) + d1155 * b4 * c0 * c3 * d0) + d1043 * b5 * c0 * c1 * d0) + 16.0 * a2 * a3 * b0 * c0 * d1 * d4) + 16.0 * a2 * a3 * b0 * c1 * d0 * d4) + d1055 * d0 * d1) - d384 * b1 * c0 * d0 * d4) - t_mm_tmp * d0 * d3) + d1161 * d0 * d2) - d965 * d1 * d3) - d394 * d0 * d3) - d393 * d0 * d1) + d966 * d0 * d3) + d967 * d3) + d1063 * c1 * d4) + d1063 * c4 * d1) + d1075 * d0) - d969 * d3) - d968 * c3 * d1) - d954 * d0) - d1156 * b3 * c0 * c4 * d0) + d_mm_tmp * d0) - i_mm_tmp * d0) - d1162 * d0 * d1) + d1071 * d0 * d1) + d1158 * c2 * d4) + d1158 * c4 * d2) + d1164 * d0) + d1084 * c1 * d4) + d1084 * c4 * d1) + d1085 * d0) - d1167 * c2 * d2) - d582 * c0 * c1 * d1) - d546 * b2 * c0 * c4 * d0) + u_mm_tmp * d0) + d1166 * d0) - d971 * d3) - d970 * c3 * d2) - d1105 * d0) - d973 * d3) - d972 * c3 * d1) - d957 * d0) + 64.0 * a4 * b0 * b4 * c0 * c1 * d1) + d1168 * d0) - d1106 * d0) - j_mm_tmp * c0 * c1 * d1) + w_mm_tmp * d0) + o_mm_tmp * c0 * c2 * c4) - d636 * c0 * c2 * c3) + d1169 * b3 * c0 * c1 * c4) - d1169 * b4 * c0 * c1 * c3) - d477 * b0 * c0 * d3 * d5) - d110 * a3 * b0 * c3 * d0 * d5) + 16.0 * a0 * a3 * b0 * c4 * d0 * d4) - 12.0 * a0 * a3 * b0 * c5 * d0 * d3) + qb_mm_tmp * d0 * d5) - d1096 * d0 * d4) + d974 * d0 * d3) + d944 * d3 * d4) + rb_mm_tmp * d0 * d4) + d975 * d0 * d3) - d1097 * d0 * d4) - d976 * d0 * d3) - d977 * d0 * d3) + d978 * d0 * d3) - nb_mm_tmp * c3 * d5) + d518 * c0 * c4 * d4) - nb_mm_tmp * c5 * d3) - sb_mm_tmp * d0) + d979 * c3 * d4) + d980 * d3) + tb_mm_tmp * d0) - d981 * d3) - d1023 * c0 * c4 * d0) + ub_mm_tmp * d0) - d1112 * d0 * d4) + d982 * d0 * d3) + vb_mm_tmp * d0) - d1118 * d0) + wb_mm_tmp * d0) - d1119 * d0) - xb_mm_tmp * d0) + yb_mm_tmp * d0) - n_mm_tmp * d2 * d3) + d989 * c3 * d1 * d3) + q_mm_tmp * d2 * d3) - e_mm_tmp_tmp * b3 * c2 * d1 * d2) - ob_mm_tmp * d3) + d1054 * b3 * c2 * c3 * d2) - pb_mm_tmp * d1 * d3)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d1170 * c1 * d1 * d2 + e_mm_tmp * d3) - d1076 * b3 * c1 * c3 * d1) - 64.0 * a3 * b1 * b3 * c1 * c2 * d2) + 64.0 * a3 * b2 * b3 * c1 * c2 * d1) - ab_mm_tmp * d2 * d3 * d4) + 16.0 * a0 * a1 * b1 * c3 * d3 * d5) - 16.0 * a0 * a1 * b3 * c2 * d3 * d4) - d1136 * c3 * d2 * d4) - l_mm_tmp * d2 * d3) + d334 * b4 * c3 * d2 * d3) - d990 * d1 * d3) + d1001 * d2 * d3) - d883 * d1 * d2 * d3) - d1139 * d3 * d4) - d506 * c3 * d2 * d4) - d1140 * d2 * d3) + d1002 * d2 * d3) - d555 * c1 * d1 * d5) + d1003 * c1 * d2 * d4) + d1004 * d1 * d4) - d1141 * d2 * d3) + d1003 * c4 * d1 * d2) - d1006 * d2 * d3) - d1007 * d1 * d3) - d1005 * c3 * d1 * d2) + d1142 * d1 * d3) + d364 * b1 * c3 * d2 * d3) - d1009 * d2 * d3) - d1020 * d1 * d3) - d1008 * c3 * d1 * d2) - d909 * d1 * d3) + d1143 * d1 * d3) - d1148 * c3 * d4) - d1149 * d3) - d911 * c3 * c4 * d2) + s_mm_tmp * b4 * c2 * c3 * d3) - d1021 * d3) + d1022 * d3) - d1025 * d3) - d1024 * c3 * d2) - d1023 * c2 * c3 * d1) + d1019 * c1 * c3 * d1) + d465 * d0 * d3 * d4) + d1026 * d3 * d4) + d466 * d0 * d4) + d467 * d0 * d3) - d924 * d0 * d3) - d1150 * d3 * d4) - d1146 * c3 * d2 * d4) - d1151 * d2 * d3) - g_mm_tmp * d3 * d5) - b_mm_tmp * d0 * d5) - d473 * c5 * d0 * d3) + d472 * b2 * c0 * d3 * d4) + 16.0 * a1 * a3 * b2 * c3 * d0 * d4) + 16.0 * a1 * a3 * b2 * c4 * d0 * d3) + 16.0 * a1 * a3 * b3 * c0 * d1 * d5) + d1117 * d0 * d5) + d1116 * c5 * d0 * d1) + d403 * b0 * c3 * d2 * d3) - d925 * d0 * d3) - d935 * d1 * d3) + d939 * d0 * d3) + d1152 * d3) - d1153 * c3 * d4) - d1154 * d3) - d485 * c3 * c4 * d2) + d500 * b4 * c2 * c3 * d3) - d942 * c1 * c3 * d3) - d495 * c3 * d5) - 16.0 * a1 * b1 * b3 * c0 * c5 * d3) - d494 * c3 * c5 * d0) + 16.0 * a1 * b1 * b5 * c0 * c3 * d3) + d1056 * c3 * d4) + d1057 * d3) + d1171 * d0) - 32.0 * a1 * b2 * b4 * c0 * c3 * d3) + d430 * d0 * d1 * d3) + d1047 * d2 * d3) + d1050 * d3 * d4) + d488 * c3 * d0 * d4) + d489 * d0 * d3) + d1172 * d0 * d3) - d512 * c0 * d1 * d4) - d1161 * d2 * d3) - d1173 * d0 * d4) - d1174 * d0 * d3) - d1160 * d0 * d2) - d1175 * d0 * d1) + d1052 * d1 * d3) + d432 * d0 * d3) + d431 * d0 * d1) - d524 * d0 * d3) + d1062 * d1 * d3) + d435 * d0 * d3) + d342 * d0 * d1) + d1077 * d3) + d1078 * c3 * d4) + f_mm_tmp * d3) + d526 * c3 * c4 * d0) - d_mm_tmp * d3) + i_mm_tmp * d3) + d1064 * b4 * c0 * c1 * d3) + d1064 * b4 * c0 * c3 * d1) + 16.0 * a2 * b3 * b4 * c1 * c3 * d0) - 16.0 * a3 * a4 * b0 * c1 * d2 * d3) - d1079 * d1 * d3) - d1066 * c3 * d1 * d2) + d1068 * d1 * d3) + d434 * d0 * d3) + d433 * d0 * d1) + d1162 * d1 * d3) - d1121 * d0 * d1) - d1163 * c3 * d4) - d1164 * d3) - d1157 * c3 * c4 * d2) + d1086 * d3) + d1177 * c2 * d4) + d1177 * c4 * d2) - d1181 * c5 * d1) - d585 * c2 * c3 * d2) + d1176 * c2 * c4 * d1) - h_mm_tmp * d3) - d1088 * c3 * d2) - d1087 * c2 * c3 * d1) + d582 * c1 * c3 * d1) + d1089 * c3 * d4) + 16.0 * a3 * b1 * b2 * c0 * c4 * d3) + d1122 * d0) + d1178 * c1 * d5) + d1178 * c5 * d1) + d632 * c1 * c5 * d0) - d1179 * c1 * d4) - d1166 * d3) - d1165 * c3 * d2) - d1179 * c4 * d1) - mm_tmp * d0) - 16.0 * a3 * b2 * b3 * c2 * c3 * d0) + d1180 * c1 * d3) + d1180 * c3 * d1) + k_mm_tmp * d0) - d586 * c1 * d1) + d480 * b1 * c2 * c3 * d3) - d1108 * d3) - d1107 * c3 * d2) - d1098 * c2 * c3 * d1) - d1168 * d3) + x_mm_tmp * d3) + d1109 * c3 * d1) + m_mm_tmp * d0) - c_mm_tmp * d3) + j_mm_tmp * c1 * c3 * d1) - o_mm_tmp * c2 * c3 * c4) - 16.0 * b0 * b3 * b4 * c1 * c2 * c3) + 16.0 * b1 * b2 * b3 * c0 * c3 * c4) + 16.0 * b2 * b3 * b4 * c0 * c1 * c3) - d486 * c3 * d3 * d5) + d517 * c4 * d3 * d4) + qb_mm_tmp * d3 * d5) + d1130 * d0 * d5) - d1131 * d0 * d4) + d490 * c5 * d0 * d3) - d962 * d0 * d3) - rb_mm_tmp * d3 * d4) + d963 * d0 * d3) - d527 * d0 * d3) + d518 * c3 * c4 * d4) - sb_mm_tmp * d3) - tb_mm_tmp * d3) - ub_mm_tmp * d3) + d1126 * d0 * d4) - d1127 * d0 * d3) - d609 * d0 * d3) + d1128 * d0 * d3) + d521 * c3 * d5) - d1167 * c4 * d4) + vb_mm_tmp * d3) + d520 * c3 * c5 * d0) - wb_mm_tmp * d3) + d584 * d0) + d1132 * d0) + xb_mm_tmp * d3) - d1133 * d0) - yb_mm_tmp * d3) + d1137 * d1 * d3) - 16.0 * a0 * b0 * b3 * c1 * d1 * d3) - d492 * d0 * d3) + d495 * d0 * d3) + d1181 * d0 * d1) - d1178 * d0 * d1) + mm_tmp_tmp_tmp * d0 * d3) - d521 * d0 * d3);
}

//

double coeff6(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b2,
              double b3, double b4, double b5, double c0, double c1, double c2, double c3, double c4, double c5,
              double d0, double d1, double d2, double d3, double d4, double d5) {
    double ab_mm_tmp;
    double ac_mm_tmp;
    double ad_mm_tmp;
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double b_mm_tmp_tmp;
    double bb_mm_tmp;
    double bc_mm_tmp;
    double bd_mm_tmp;
    double c_mm_tmp;
    double c_mm_tmp_tmp;
    double cb_mm_tmp;
    double cc_mm_tmp;
    double cd_mm_tmp;
    double d;
    double d10;
    double d100;
    double d101;
    double d102;
    double d103;
    double d104;
    double d105;
    double d106;
    double d107;
    double d108;
    double d109;
    double d11;
    double d110;
    double d111;
    double d112;
    double d113;
    double d114;
    double d115;
    double d116;
    double d117;
    double d118;
    double d119;
    double d12;
    double d120;
    double d121;
    double d122;
    double d123;
    double d124;
    double d125;
    double d126;
    double d127;
    double d128;
    double d129;
    double d13;
    double d130;
    double d131;
    double d132;
    double d133;
    double d134;
    double d135;
    double d136;
    double d137;
    double d138;
    double d139;
    double d14;
    double d140;
    double d141;
    double d142;
    double d143;
    double d144;
    double d145;
    double d146;
    double d147;
    double d148;
    double d149;
    double d15;
    double d150;
    double d151;
    double d152;
    double d153;
    double d154;
    double d155;
    double d156;
    double d157;
    double d158;
    double d159;
    double d16;
    double d160;
    double d161;
    double d162;
    double d163;
    double d164;
    double d165;
    double d166;
    double d167;
    double d168;
    double d169;
    double d17;
    double d170;
    double d171;
    double d172;
    double d173;
    double d174;
    double d175;
    double d176;
    double d177;
    double d178;
    double d179;
    double d18;
    double d180;
    double d181;
    double d182;
    double d183;
    double d184;
    double d185;
    double d186;
    double d187;
    double d188;
    double d189;
    double d19;
    double d190;
    double d191;
    double d192;
    double d193;
    double d194;
    double d195;
    double d196;
    double d197;
    double d198;
    double d199;
    double d20;
    double d200;
    double d201;
    double d202;
    double d203;
    double d204;
    double d205;
    double d206;
    double d207;
    double d208;
    double d209;
    double d21;
    double d210;
    double d211;
    double d212;
    double d213;
    double d214;
    double d215;
    double d216;
    double d217;
    double d218;
    double d219;
    double d22;
    double d220;
    double d221;
    double d222;
    double d223;
    double d224;
    double d225;
    double d226;
    double d227;
    double d228;
    double d229;
    double d23;
    double d230;
    double d231;
    double d232;
    double d233;
    double d234;
    double d235;
    double d236;
    double d237;
    double d238;
    double d239;
    double d24;
    double d240;
    double d241;
    double d242;
    double d243;
    double d244;
    double d245;
    double d246;
    double d247;
    double d248;
    double d249;
    double d25;
    double d250;
    double d251;
    double d252;
    double d253;
    double d254;
    double d255;
    double d256;
    double d257;
    double d258;
    double d259;
    double d26;
    double d260;
    double d261;
    double d262;
    double d263;
    double d264;
    double d265;
    double d266;
    double d267;
    double d268;
    double d269;
    double d27;
    double d270;
    double d271;
    double d272;
    double d273;
    double d274;
    double d275;
    double d276;
    double d277;
    double d278;
    double d279;
    double d28;
    double d280;
    double d281;
    double d282;
    double d283;
    double d284;
    double d285;
    double d286;
    double d287;
    double d288;
    double d289;
    double d29;
    double d290;
    double d291;
    double d292;
    double d293;
    double d294;
    double d295;
    double d296;
    double d297;
    double d298;
    double d299;
    double d30;
    double d300;
    double d301;
    double d302;
    double d303;
    double d304;
    double d305;
    double d306;
    double d307;
    double d308;
    double d309;
    double d31;
    double d310;
    double d311;
    double d312;
    double d313;
    double d314;
    double d315;
    double d316;
    double d317;
    double d318;
    double d319;
    double d32;
    double d320;
    double d321;
    double d322;
    double d323;
    double d324;
    double d325;
    double d326;
    double d327;
    double d328;
    double d329;
    double d33;
    double d330;
    double d331;
    double d332;
    double d333;
    double d334;
    double d335;
    double d336;
    double d337;
    double d338;
    double d339;
    double d34;
    double d340;
    double d341;
    double d342;
    double d343;
    double d344;
    double d345;
    double d346;
    double d347;
    double d348;
    double d349;
    double d35;
    double d350;
    double d351;
    double d352;
    double d353;
    double d354;
    double d355;
    double d356;
    double d357;
    double d358;
    double d359;
    double d36;
    double d360;
    double d361;
    double d362;
    double d363;
    double d364;
    double d365;
    double d366;
    double d367;
    double d368;
    double d369;
    double d37;
    double d370;
    double d371;
    double d372;
    double d373;
    double d374;
    double d375;
    double d376;
    double d377;
    double d378;
    double d379;
    double d38;
    double d380;
    double d381;
    double d382;
    double d383;
    double d384;
    double d385;
    double d386;
    double d387;
    double d388;
    double d389;
    double d39;
    double d390;
    double d391;
    double d392;
    double d393;
    double d394;
    double d395;
    double d396;
    double d397;
    double d398;
    double d399;
    double d40;
    double d400;
    double d401;
    double d402;
    double d403;
    double d404;
    double d405;
    double d406;
    double d407;
    double d408;
    double d409;
    double d41;
    double d410;
    double d411;
    double d412;
    double d413;
    double d414;
    double d415;
    double d416;
    double d417;
    double d418;
    double d419;
    double d42;
    double d420;
    double d421;
    double d422;
    double d423;
    double d424;
    double d425;
    double d426;
    double d427;
    double d428;
    double d429;
    double d43;
    double d430;
    double d431;
    double d432;
    double d433;
    double d434;
    double d435;
    double d436;
    double d437;
    double d438;
    double d439;
    double d44;
    double d440;
    double d441;
    double d442;
    double d443;
    double d444;
    double d445;
    double d446;
    double d447;
    double d448;
    double d449;
    double d45;
    double d450;
    double d451;
    double d452;
    double d453;
    double d454;
    double d455;
    double d456;
    double d457;
    double d458;
    double d459;
    double d46;
    double d460;
    double d461;
    double d462;
    double d463;
    double d464;
    double d465;
    double d466;
    double d467;
    double d468;
    double d469;
    double d47;
    double d470;
    double d471;
    double d472;
    double d473;
    double d474;
    double d475;
    double d476;
    double d477;
    double d478;
    double d479;
    double d48;
    double d480;
    double d481;
    double d482;
    double d483;
    double d484;
    double d485;
    double d486;
    double d487;
    double d488;
    double d489;
    double d49;
    double d490;
    double d491;
    double d492;
    double d493;
    double d494;
    double d495;
    double d496;
    double d497;
    double d498;
    double d499;
    double d50;
    double d500;
    double d501;
    double d502;
    double d503;
    double d504;
    double d505;
    double d506;
    double d507;
    double d508;
    double d509;
    double d51;
    double d510;
    double d511;
    double d512;
    double d513;
    double d514;
    double d515;
    double d516;
    double d517;
    double d518;
    double d519;
    double d52;
    double d520;
    double d521;
    double d522;
    double d523;
    double d524;
    double d525;
    double d526;
    double d527;
    double d528;
    double d529;
    double d53;
    double d530;
    double d531;
    double d532;
    double d533;
    double d534;
    double d535;
    double d536;
    double d537;
    double d538;
    double d539;
    double d54;
    double d540;
    double d541;
    double d542;
    double d543;
    double d544;
    double d545;
    double d546;
    double d547;
    double d548;
    double d549;
    double d55;
    double d550;
    double d551;
    double d552;
    double d553;
    double d554;
    double d555;
    double d556;
    double d557;
    double d558;
    double d559;
    double d56;
    double d560;
    double d561;
    double d562;
    double d563;
    double d564;
    double d565;
    double d566;
    double d567;
    double d568;
    double d569;
    double d57;
    double d570;
    double d571;
    double d572;
    double d573;
    double d574;
    double d575;
    double d576;
    double d577;
    double d578;
    double d579;
    double d58;
    double d580;
    double d581;
    double d582;
    double d583;
    double d584;
    double d585;
    double d586;
    double d587;
    double d588;
    double d589;
    double d59;
    double d590;
    double d591;
    double d592;
    double d593;
    double d594;
    double d595;
    double d596;
    double d597;
    double d598;
    double d599;
    double d6;
    double d60;
    double d600;
    double d601;
    double d602;
    double d603;
    double d604;
    double d605;
    double d606;
    double d607;
    double d608;
    double d609;
    double d61;
    double d610;
    double d611;
    double d612;
    double d613;
    double d614;
    double d615;
    double d616;
    double d617;
    double d618;
    double d619;
    double d62;
    double d620;
    double d621;
    double d622;
    double d623;
    double d624;
    double d625;
    double d626;
    double d627;
    double d628;
    double d629;
    double d63;
    double d630;
    double d631;
    double d632;
    double d633;
    double d634;
    double d635;
    double d636;
    double d637;
    double d638;
    double d639;
    double d64;
    double d640;
    double d641;
    double d642;
    double d643;
    double d644;
    double d645;
    double d646;
    double d647;
    double d648;
    double d649;
    double d65;
    double d650;
    double d651;
    double d652;
    double d653;
    double d654;
    double d655;
    double d656;
    double d657;
    double d658;
    double d659;
    double d66;
    double d660;
    double d661;
    double d662;
    double d663;
    double d664;
    double d665;
    double d67;
    double d68;
    double d69;
    double d7;
    double d70;
    double d71;
    double d72;
    double d73;
    double d74;
    double d75;
    double d76;
    double d77;
    double d78;
    double d79;
    double d8;
    double d80;
    double d81;
    double d82;
    double d83;
    double d84;
    double d85;
    double d86;
    double d87;
    double d88;
    double d89;
    double d9;
    double d90;
    double d91;
    double d92;
    double d93;
    double d94;
    double d95;
    double d96;
    double d97;
    double d98;
    double d99;
    double d_mm_tmp;
    double d_mm_tmp_tmp;
    double db_mm_tmp;
    double dc_mm_tmp;
    double dd_mm_tmp;
    double e_mm_tmp;
    double eb_mm_tmp;
    double ec_mm_tmp;
    double ed_mm_tmp;
    double f_mm_tmp;
    double fb_mm_tmp;
    double fc_mm_tmp;
    double fd_mm_tmp;
    double g_mm_tmp;
    double gb_mm_tmp;
    double gc_mm_tmp;
    double gd_mm_tmp;
    double h_mm_tmp;
    double hb_mm_tmp;
    double hc_mm_tmp;
    double hd_mm_tmp;
    double i_mm_tmp;
    double ib_mm_tmp;
    double ic_mm_tmp;
    double id_mm_tmp;
    double j_mm_tmp;
    double jb_mm_tmp;
    double jc_mm_tmp;
    double jd_mm_tmp;
    double k_mm_tmp;
    double kb_mm_tmp;
    double kc_mm_tmp;
    double kd_mm_tmp;
    double l_mm_tmp;
    double lb_mm_tmp;
    double lc_mm_tmp;
    double ld_mm_tmp;
    double m_mm_tmp;
    double mb_mm_tmp;
    double mc_mm_tmp;
    double md_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    double n_mm_tmp;
    double nb_mm_tmp;
    double nc_mm_tmp;
    double nd_mm_tmp;
    double o_mm_tmp;
    double ob_mm_tmp;
    double oc_mm_tmp;
    double od_mm_tmp;
    double p_mm_tmp;
    double pb_mm_tmp;
    double pc_mm_tmp;
    double pd_mm_tmp;
    double q_mm_tmp;
    double qb_mm_tmp;
    double qc_mm_tmp;
    double qd_mm_tmp;
    double r_mm_tmp;
    double rb_mm_tmp;
    double rc_mm_tmp;
    double rd_mm_tmp;
    double s_mm_tmp;
    double sb_mm_tmp;
    double sc_mm_tmp;
    double sd_mm_tmp;
    double t_mm_tmp;
    double tb_mm_tmp;
    double tc_mm_tmp;
    double u_mm_tmp;
    double ub_mm_tmp;
    double uc_mm_tmp;
    double v_mm_tmp;
    double vb_mm_tmp;
    double vc_mm_tmp;
    double w_mm_tmp;
    double wb_mm_tmp;
    double wc_mm_tmp;
    double x_mm_tmp;
    double xb_mm_tmp;
    double xc_mm_tmp;
    double y_mm_tmp;
    double yb_mm_tmp;
    double yc_mm_tmp;
    d = std::pow(c5, 3.0);
    b_d1 = std::pow(a5, 3.0);
    b_d2 = std::pow(a0, 3.0);
    b_d3 = std::pow(a3, 3.0);
    b_d4 = std::pow(c3, 3.0);
    b_d5 = std::pow(c0, 3.0);
    d6 = a1 * a1;
    d7 = a5 * a5;
    d8 = 3.0 * d7;
    d9 = 3.0 * b_d1;
    d10 = 4.0 * b_d1;
    d11 = c1 * c1;
    d12 = 3.0 * b_d2;
    d13 = 3.0 * b_d3;
    d14 = c5 * c5;
    d15 = 4.0 * b_d2;
    d16 = 4.0 * b_d3;
    d17 = a2 * a2;
    d18 = c2 * c2;
    d19 = a4 * a4;
    d20 = c4 * c4;
    d21 = c0 * c0;
    d22 = a0 * a0;
    d23 = 3.0 * d22;
    d24 = 4.0 * d17;
    d25 = 4.0 * d6;
    d26 = a3 * a3;
    d27 = c3 * c3;
    d28 = 4.0 * d19;
    d29 = d4 * d4;
    d30 = d3 * d3;
    d31 = d2 * d2;
    d32 = b2 * b2;
    d33 = 4.0 * a0 * d32;
    d34 = b3 * b3;
    d35 = b4 * b4;
    d36 = 4.0 * a0 * d6;
    d37 = d0 * d0;
    d38 = b0 * b0;
    d39 = 3.0 * a0 * d26;
    d40 = 3.0 * a5 * d38;
    d41 = d23 * a3;
    d42 = d8 * b0;
    d43 = 4.0 * a3 * d35;
    d44 = d24 * b5;
    d45 = 3.0 * a5 * d34;
    d8 *= b3;
    d46 = d25 * a3;
    d47 = d28 * b5;
    d48 = 8.0 * a2 * a5;
    d49 = d48 * b2;
    d50 = 6.0 * a0 * a5;
    d51 = d50 * b5;
    d52 = 6.0 * a3 * a5;
    d53 = 8.0 * a4 * a5;
    d54 = d52 * b5;
    d55 = d53 * b4;
    d56 = 8.0 * a2 * b0;
    d57 = 6.0 * a0 * b0;
    d58 = d56 * b2;
    d59 = d57 * b5;
    d60 = 6.0 * a3 * b3 * b5;
    d61 = 8.0 * a4 * b3 * b4;
    d62 = 6.0 * b_d2 * c3;
    d63 = 8.0 * b_d2 * c4;
    d64 = 4.0 * a0 * d7;
    d65 = d64 * c0;
    d66 = 4.0 * a0 * d17;
    d67 = 16.0 * a1 * d7;
    d68 = d67 * c1;
    d69 = 4.0 * a0 * d19;
    d70 = 4.0 * a2 * d7;
    d71 = 4.0 * a3 * d7;
    d72 = d71 * c0;
    d73 = 4.0 * d22;
    d74 = 3.0 * a0 * d7;
    d75 = d23 * a5;
    d76 = 16.0 * d6;
    d77 = d24 * a3;
    d78 = d73 * a5;
    d79 = d25 * a5;
    d80 = 4.0 * a3 * d19;
    d81 = 3.0 * a3 * d7;
    d82 = 4.0 * a4 * d7;
    d83 = 3.0 * d26;
    d84 = d83 * a5;
    d85 = d66 * c0;
    d86 = d64 * d11;
    d87 = 16.0 * a1 * d19 * c1;
    d88 = 16.0 * d17;
    d89 = d69 * c0;
    d90 = d69 * c3;
    d91 = 16.0 * a1 * d17 * c1;
    d92 = 4.0 * a2 * d26 * c2;
    d93 = d74 * d21;
    d94 = d75 * c0;
    d95 = d76 * a2 * c2;
    d96 = d77 * c0;
    d97 = d77 * c3;
    d98 = d78 * d18;
    mm_tmp = d76 * a5;
    d99 = d73 * a4 * c4;
    d100 = mm_tmp * d18;
    d101 = d88 * a5 * d11;
    d102 = d71 * d11;
    d103 = d79 * c0;
    d104 = d78 * d20;
    d105 = d76 * a4 * c4;
    d106 = d79 * c3;
    d107 = d28 * a5;
    d108 = 16.0 * a0 * d19;
    d109 = 4.0 * a0 * d26;
    d110 = d109 * c0;
    d111 = 4.0 * a0 * d34;
    d112 = d111 * c0;
    d113 = 4.0 * a0 * d35;
    d114 = d1 * d1;
    d115 = b1 * b1;
    d116 = 16.0 * d22;
    d117 = 16.0 * d19;
    d118 = 16.0 * a0 * d17;
    d119 = d118 * d20;
    d120 = d108 * d18;
    d121 = d117 * b0;
    d122 = 16.0 * a0 * d6;
    d123 = 4.0 * a1 * d7;
    d124 = 4.0 * d7;
    d125 = d81 * d27;
    d126 = 4.0 * d26;
    d127 = d126 * a5;
    d128 = d127 * d20;
    d129 = d107 * d27;
    d130 = d25 * b0;
    d131 = d130 * c0;
    d132 = d88 * b0;
    d133 = 4.0 * a3 * d38;
    d134 = d73 * a1;
    d135 = 4.0 * a3 * d32;
    d136 = 64.0 * d19;
    d137 = 4.0 * (a0 * a0) * a3;
    d138 = d137 * c3;
    d139 = 16.0 * a2 * d26;
    d140 = 16.0 * a2 * d19;
    d141 = 9.0 * d22;
    d142 = 64.0 * d17;
    d143 = 9.0 * d26;
    d144 = d117 * b2;
    d145 = 6.0 * d7;
    d146 = 6.0 * d26;
    d147 = 9.0 * a0 * d38 * d27;
    d148 = 3.0 * a0 * d34 * d21;
    d149 = d141 * b0 * c3;
    d150 = d23 * b3;
    d151 = d150 * c0;
    d152 = 6.0 * a0 * d7;
    d153 = 16.0 * a2 * d34;
    d154 = 8.0 * a0 * d6;
    d155 = 6.0 * a0 * d26;
    d156 = d146 * b0;
    d157 = d156 * c0;
    d158 = 8.0 * a0 * d7;
    d159 = 8.0 * d7;
    d160 = d117 * b3;
    d161 = 4.0 * a1 * d26;
    d162 = 8.0 * a0 * d17;
    d163 = d116 * a4;
    d164 = 8.0 * a0 * d26;
    d165 = d73 * b3;
    d166 = d165 * d18;
    d167 = d116 * b4;
    d168 = d73 * b5;
    d169 = 8.0 * d17;
    d170 = 8.0 * d26;
    d171 = 6.0 * d22;
    d172 = 64.0 * d6;
    d173 = d24 * b3;
    d174 = d88 * b4;
    b_mm_tmp = d25 * b5;
    d175 = d126 * b1 * c1;
    d176 = d121 * d11;
    d177 = 3.0 * a3 * d38 * d27;
    d178 = 9.0 * a3 * d34 * d21;
    d179 = d169 * a5;
    d180 = 6.0 * a3 * d7;
    d181 = d169 * b0;
    d182 = d117 * a5;
    d183 = d171 * a3;
    d184 = d76 * a3;
    d185 = d170 * a5;
    d186 = d170 * b0;
    d187 = d170 * b5 * c0;
    d188 = d171 * b3;
    d189 = d188 * c3;
    d190 = d173 * d21;
    d191 = d168 * d11;
    d192 = d76 * b3 * d18;
    d193 = b_mm_tmp * d21;
    d194 = d88 * a3;
    d195 = d88 * b3;
    d196 = 8.0 * d22;
    d197 = 8.0 * d19;
    d198 = 16.0 * d26;
    d199 = d126 * b5;
    d200 = d126 * b0;
    d201 = d143 * b3;
    d202 = d201 * c0;
    d25 *= b3;
    d203 = d25 * c3;
    d204 = d200 * d20;
    d205 = d28 * b0;
    d206 = d197 * a5;
    d207 = 16.0 * a3 * d19;
    d208 = d196 * a3;
    d209 = d196 * a5;
    d210 = d171 * a5;
    d171 *= b5;
    d211 = 12.0 * d26;
    d212 = 8.0 * a3 * d19;
    d213 = d197 * b3;
    d214 = d196 * b5;
    d215 = d196 * b3;
    d216 = d146 * a5;
    d217 = d194 * d20;
    d218 = 12.0 * d17;
    d173 *= d27;
    d219 = d211 * b3 * d18;
    d146 *= b5;
    d220 = 12.0 * d22;
    d221 = d133 * d11;
    d222 = 4.0 * a3 * d115 * d21;
    d223 = d220 * b0 * d20;
    d224 = d83 * b0;
    d225 = d200 * d18;
    d226 = d165 * d20;
    d227 = 12.0 * d19;
    d228 = 16.0 * a1 * a2;
    d229 = d228 * a4;
    d230 = 8.0 * a0 * a3;
    d231 = 6.0 * a0 * a3;
    d232 = d231 * a5;
    d233 = d230 * a5;
    d234 = 8.0 * a0 * a1;
    d235 = 32.0 * a0 * a2;
    d236 = 8.0 * a0 * a2;
    d237 = d229 * c0;
    d238 = d229 * c3;
    d239 = 8.0 * a1 * a3;
    d240 = d239 * a5 * c1;
    d241 = d235 * b2;
    d242 = d230 * a4 * c4;
    d243 = d232 * c0;
    d244 = d232 * c3;
    d245 = 16.0 * a0 * a2;
    d246 = d233 * d20;
    d247 = d234 * b1;
    d248 = 16.0 * a2 * a3;
    d249 = d231 * b0;
    c_mm_tmp = d245 * a4;
    d250 = c_mm_tmp * c1;
    d251 = d248 * a4;
    d252 = d251 * c1;
    d253 = d249 * c0;
    d254 = 8.0 * a0 * a5;
    d255 = d254 * b0;
    d_mm_tmp = 16.0 * a0 * a1;
    d256 = d_mm_tmp * a4;
    d257 = d256 * c2;
    d258 = d234 * a5 * c1;
    d259 = d_mm_tmp * b1;
    d260 = 128.0 * a1 * a2;
    d261 = 32.0 * a0 * a1;
    d262 = 12.0 * a0 * a3;
    d263 = 32.0 * a1 * a5;
    d264 = 32.0 * a2 * a3;
    d265 = 32.0 * a1 * a3;
    d266 = 8.0 * a3 * a5;
    d267 = 32.0 * a0 * a3;
    d268 = 16.0 * a0 * a3;
    d269 = 32.0 * a0 * a4;
    d270 = d269 * b4;
    d271 = d264 * b2;
    d272 = 32.0 * a0 * a5;
    d273 = 16.0 * a0 * a5;
    d274 = d254 * b3;
    d275 = d228 * b4;
    d276 = d266 * b0;
    d277 = d275 * d21;
    d278 = d265 * b1 * d18;
    d279 = 16.0 * a1 * a3;
    d280 = d228 * a5;
    d281 = d228 * a3;
    d282 = d281 * c4;
    d283 = d268 * b0;
    d284 = d273 * b0;
    d285 = d279 * b1 * c0;
    d286 = d262 * b0;
    d287 = d286 * c3;
    d288 = d262 * b3;
    d289 = d288 * c0;
    d290 = d255 * d11;
    d291 = d245 * b2;
    d292 = 128.0 * a1 * a4;
    d293 = 16.0 * a1 * a4;
    d294 = d293 * b2;
    d295 = d294 * d21;
    d296 = 8.0 * a1 * a5;
    e_mm_tmp = d296 * b1;
    d297 = 16.0 * a1 * a5;
    d298 = 8.0 * a2 * a3;
    d299 = 32.0 * a2 * a4;
    d300 = 16.0 * a2 * a5;
    d301 = 8.0 * a0 * a4;
    d302 = 12.0 * a0 * a5;
    d303 = 128.0 * a2 * a4;
    d304 = 32.0 * a2 * a5;
    d305 = 32.0 * a3 * a4;
    d306 = 32.0 * a3 * a5;
    d307 = d298 * b2;
    d308 = d298 * b5;
    d309 = 16.0 * a2 * a4;
    d310 = d309 * b1;
    d311 = d299 * b2;
    d312 = d299 * b4;
    d48 *= b3;
    d313 = d266 * b2;
    d314 = d231 * b5;
    d315 = d301 * a5;
    d316 = d301 * b4;
    d317 = d301 * b5;
    d318 = d50 * b3;
    d319 = d254 * b4;
    d320 = d305 * b4;
    d321 = d52 * b0;
    d322 = d239 * b1;
    d323 = d307 * d21;
    d324 = d310 * d21;
    d325 = d314 * d21;
    d326 = d316 * d21;
    d327 = d318 * d21;
    d328 = d300 * b1;
    d329 = d268 * b3;
    d330 = d302 * b0;
    d331 = d322 * c3;
    d332 = d239 * b3 * c1;
    d333 = d321 * d21;
    d334 = 16.0 * a3 * a5;
    d53 *= b0;
    d231 *= b3;
    d335 = d231 * c3;
    d336 = 32.0 * a4 * a5;
    d337 = d266 * b3;
    d338 = 12.0 * a3 * a5;
    d339 = 16.0 * a4 * a5;
    d340 = d230 * b3;
    d341 = d340 * d20;
    d275 *= d27;
    d294 *= d27;
    d342 = e_mm_tmp * d27;
    d307 *= d27;
    d310 *= d27;
    d314 *= d27;
    d316 *= d27;
    d318 *= d27;
    d343 = d293 * a5;
    d344 = 16.0 * a3 * a4;
    d345 = d293 * b5;
    d346 = d297 * b4;
    d347 = d230 * b5;
    d321 *= d27;
    d348 = d344 * b4;
    d349 = d338 * b3;
    d350 = 32.0 * a1 * a4;
    d351 = 8.0 * a3 * b0;
    d352 = 8.0 * a5 * b0;
    d353 = 8.0 * a0 * b0;
    d354 = d353 * b3;
    d355 = 16.0 * a0 * a4;
    d356 = d_mm_tmp * b4;
    d357 = d355 * b1;
    d358 = d279 * b2;
    d293 *= b0;
    d359 = d228 * b3;
    d360 = 16.0 * a0 * b1;
    d361 = d360 * b4;
    d362 = d230 * b0;
    d363 = d362 * d20;
    d364 = d276 * d11;
    d365 = d351 * b5;
    d366 = d352 * b3;
    d367 = 8.0 * a1 * b0;
    d368 = d367 * b1 * d27;
    d369 = 16.0 * a1 * b0;
    d370 = d369 * b4;
    d371 = 8.0 * a1 * b1;
    d372 = 32.0 * a1 * b1;
    d373 = 16.0 * a1 * b2;
    d374 = d373 * b4;
    d375 = 16.0 * a2 * b1;
    d376 = d375 * b4;
    d377 = 8.0 * a2 * b2 * b3;
    d378 = 16.0 * a4 * b1 * b2;
    d379 = d351 * b3;
    d380 = d248 * b1;
    d381 = 16.0 * a4 * b0;
    d382 = d381 * b1;
    d375 *= b3;
    d383 = d340 * d18;
    d384 = d379 * c0;
    d385 = 16.0 * a3 * b1;
    d57 = d57 * b3 * d27;
    d386 = 8.0 * a0 * b3;
    d387 = 8.0 * a1 * d7;
    d388 = 16.0 * a3 * d7;
    d389 = d179 * c0 * c3;
    d390 = d387 * c1 * c3;
    d391 = d180 * c0 * c3;
    d392 = d206 * c0 * c3;
    d393 = 8.0 * a3 * b3;
    d394 = d354 * d11;
    d387 = d387 * c0 * c1;
    d395 = 32.0 * a0 * d19;
    d396 = d162 * c0;
    d397 = 32.0 * a1 * d19;
    d398 = d397 * c0;
    d399 = 32.0 * a2 * d19;
    d400 = d399 * c0;
    d401 = 32.0 * d19;
    d402 = 32.0 * d17;
    d403 = 32.0 * a0 * d17;
    f_mm_tmp = d402 * a4;
    d399 = d399 * c2 * c3;
    d404 = 32.0 * a3 * d19;
    d405 = 8.0 * a0 * d19;
    d406 = d169 * a3;
    d407 = 8.0 * d6;
    d408 = d407 * a5;
    d409 = 16.0 * a4 * d38;
    mm_tmp_tmp = 6.0 * a3 * b0;
    d410 = mm_tmp_tmp * b3 * d21;
    d411 = 16.0 * a0 * d7 * c1;
    d412 = 8.0 * a1 * d34 * c0 * c1;
    d413 = d395 * c1;
    d414 = 6.0 * a0 * d34 * c0 * c3;
    d415 = d401 * b1 * c0 * c1;
    d416 = d405 * c0;
    d417 = 8.0 * a0 * d115 * c0 * c3;
    d418 = d162 * c3;
    d419 = 8.0 * a1 * d38 * c1 * c3;
    d420 = d406 * c0;
    d421 = d181 * c0 * c3;
    d422 = d154 * c0;
    d423 = 16.0 * a0 * d26;
    d424 = d423 * c2;
    g_mm_tmp = 32.0 * a1 * d17;
    d425 = g_mm_tmp * c1;
    d426 = d163 * c1;
    d427 = d116 * a5;
    d428 = d427 * c1;
    d429 = d196 * a4;
    d430 = d429 * c0;
    d431 = d210 * c0;
    d432 = 32.0 * d6;
    d433 = d432 * a2;
    d434 = d433 * c2;
    d435 = 128.0 * d6;
    d436 = d402 * a3;
    d437 = d198 * a5;
    d438 = 32.0 * d22;
    d439 = 8.0 * (a0 * a0) * a2;
    d440 = d439 * c3;
    d441 = d208 * c2;
    d442 = d438 * a4;
    d443 = d163 * c2;
    d444 = d209 * c1;
    d445 = d167 * c1;
    d446 = d436 * c1;
    d447 = d402 * b1 * c1 * c3;
    d448 = d183 * c0;
    d449 = d429 * c4;
    d450 = d210 * c3;
    h_mm_tmp = d196 * b4;
    d451 = 8.0 * a3 * d7;
    d452 = d432 * a3 * c2;
    d453 = d432 * a5;
    d454 = d432 * a4;
    d455 = d454 * c0;
    d456 = d139 * c1;
    d457 = 8.0 * a2 * d26;
    d458 = d457 * c2;
    d459 = d212 * c0;
    d460 = d437 * c1;
    d461 = 32.0 * a2 * d26;
    d462 = d432 * b4 * c0 * c4;
    d463 = 32.0 * d26;
    d405 *= c3;
    d464 = 8.0 * a1 * d26;
    d465 = d464 * c1;
    d466 = d457 * c3;
    d467 = d139 * c4;
    d468 = d185 * c1;
    d469 = d198 * b2;
    d470 = d170 * b2;
    d471 = d469 * c1 * c4;
    d472 = d470 * c2 * c3;
    d473 = d213 * c0 * c3;
    d474 = d155 * c3;
    d475 = d164 * c4;
    d476 = 32.0 * a0 * d6 * c4;
    d477 = d116 * a3;
    d478 = d477 * c4;
    d406 *= c3;
    d479 = d407 * a3;
    d480 = d407 * b0;
    d481 = 8.0 * (a0 * a0) * a1;
    d482 = d480 * c3;
    d483 = d482 * c5;
    d484 = d407 * b3;
    d485 = d484 * c0;
    d486 = d485 * c5;
    d487 = d407 * b5 * c0 * c3;
    d488 = d164 * c2;
    d457 *= c0;
    d489 = d196 * b1;
    d490 = d489 * c1;
    d489 *= c3;
    d491 = d198 * b0;
    d492 = d491 * c1;
    d493 = d170 * b1;
    d494 = d493 * c0;
    d470 *= c0;
    d495 = d469 * c0;
    d496 = d183 * c3;
    d497 = d208 * c4;
    d429 *= c3;
    d498 = d186 * c1;
    d499 = d470 * c2;
    d500 = d197 * b0 * c0 * c3;
    d501 = d155 * c0;
    d188 *= c0;
    d502 = d170 * a4;
    d503 = d502 * c0;
    d170 = d170 * b4 * c0 * c4;
    d504 = d146 * c0 * c3;
    d505 = d479 * c3;
    d506 = d408 * c3;
    d507 = d186 * c0;
    d508 = d169 * b3 * c0 * c3;
    d509 = d157 * c5;
    d510 = d154 * c3;
    i_mm_tmp = d245 * a5;
    d511 = i_mm_tmp * c1 * c4;
    d512 = d355 * a5;
    d513 = d512 * c1;
    d514 = d513 * c2;
    d515 = d280 * c0;
    d516 = d343 * c0;
    d517 = d248 * a5;
    d518 = 64.0 * a1 * a3;
    d519 = 64.0 * a2 * a3;
    d520 = d_mm_tmp * a5;
    d521 = d520 * c2;
    d522 = d520 * c3;
    d523 = d_mm_tmp * b5;
    d524 = d245 * a3;
    d525 = d524 * c1;
    d526 = d524 * c2;
    j_mm_tmp = d245 * b3;
    d527 = d268 * a4;
    d528 = d527 * c1;
    d529 = d268 * b2;
    d530 = d273 * b1;
    d531 = d268 * b4;
    d532 = d355 * b3;
    d533 = d355 * b5;
    d534 = d529 * c1 * c4;
    d535 = 64.0 * a0 * a4;
    d536 = d357 * c2 * c3;
    d537 = d355 * b2;
    d538 = d537 * c1 * c3;
    d539 = d523 * c1 * c3;
    d540 = d524 * c3;
    d541 = j_mm_tmp * c2 * c3;
    d542 = d527 * c2;
    d543 = d529 * c2 * c3;
    d544 = d531 * c1;
    d545 = d544 * c2;
    d546 = d532 * c1;
    d547 = d546 * c2;
    d548 = d530 * c1 * c3;
    d549 = d521 * c4;
    d550 = d250 * c5;
    k_mm_tmp = d245 * b4;
    d551 = d356 * c2 * c3;
    d552 = d524 * c4;
    d553 = c_mm_tmp * c3;
    d554 = j_mm_tmp * c1 * c4;
    d555 = k_mm_tmp * c1 * c3;
    d556 = d273 * b4;
    d557 = d281 * c0;
    d558 = d279 * a5;
    d559 = d279 * b5;
    d560 = d559 * c0;
    l_mm_tmp = 64.0 * a1 * a4;
    d561 = d297 * b0;
    d562 = d297 * b3;
    d563 = d562 * c0;
    d564 = d251 * c0;
    d565 = d517 * c0;
    d566 = d248 * b0;
    d567 = d248 * b5 * c0;
    d568 = 64.0 * a2 * a4;
    d569 = d558 * c2;
    d570 = d569 * c4;
    d571 = d252 * c5;
    d572 = d517 * c2 * c3;
    d573 = d248 * b4;
    d574 = d309 * b3;
    d575 = d558 * c0;
    d576 = d560 * c1;
    d577 = d566 * c1 * c4;
    d309 *= b0;
    d578 = d309 * c1 * c3;
    d579 = d358 * c0;
    d580 = d579 * c4;
    d581 = d561 * c1 * c3;
    d582 = d566 * c2 * c3;
    d583 = d380 * c0;
    d584 = d583 * c4;
    d585 = d573 * c0;
    d586 = d585 * c1;
    d587 = d574 * c0;
    d588 = d587 * c1;
    d517 = d517 * c1 * c4;
    d589 = d565 * c2;
    d590 = d300 * b3 * c0;
    d591 = d344 * b0;
    d592 = d591 * c1;
    d593 = d344 * b2;
    d594 = d593 * c0;
    d595 = d334 * b1;
    d596 = d527 * c0;
    d597 = d512 * c0;
    d281 *= c3;
    d598 = d344 * a5;
    d599 = d598 * c1;
    d600 = 32.0 * a1 * a2;
    d601 = d600 * a4;
    d602 = d248 * b3;
    d603 = d531 * c0 * c4;
    d604 = d532 * c0 * c4;
    d605 = d591 * c0 * c4;
    d606 = d601 * c3;
    d607 = d358 * c3 * c4;
    d251 *= c3;
    d608 = d380 * c3 * c4;
    d609 = d264 * b3;
    d610 = d609 * c1 * c4;
    d611 = d602 * c2 * c3;
    d573 = d573 * c1 * c3;
    d574 = d574 * c1 * c3;
    d612 = d597 * c4;
    d613 = d268 * a5;
    d614 = d262 * a5;
    d615 = d268 * b1;
    d616 = d615 * c0;
    d529 *= c0;
    d617 = d269 * b0;
    d618 = d617 * c1;
    d619 = d357 * c0;
    d537 *= c0;
    d620 = 32.0 * a0 * b0;
    d621 = 16.0 * a0 * b2;
    d622 = d279 * b0;
    d623 = d622 * c0;
    d624 = 16.0 * a0 * b0;
    d625 = d615 * c2;
    d626 = d625 * c4;
    d268 *= b5;
    d627 = d273 * b3;
    d360 *= b3;
    d628 = d620 * b4;
    d629 = d618 * c2;
    d630 = d619 * c2;
    d631 = d537 * c1;
    d601 *= c0;
    d632 = d267 * b0;
    d633 = d329 * c0;
    d634 = d283 * c1;
    d635 = d624 * b1 * c1 * c3;
    d636 = d293 * c0;
    d566 *= c0;
    d309 *= c0;
    d637 = 16.0 * a2 * b0;
    d638 = 16.0 * a3 * b0;
    d286 *= c0;
    d639 = d355 * b0;
    d640 = d639 * c0;
    d641 = d369 * b3;
    d248 = d248 * b2 * c0 * c3;
    d602 *= c0;
    d642 = d602 * c2;
    d299 = d299 * b1 * c0 * c3;
    d643 = d334 * b0;
    d644 = d638 * b1;
    d645 = d309 * c1;
    d646 = d614 * c0;
    d647 = d640 * c4;
    d648 = d330 * c0 * c3;
    d649 = d287 * c5;
    d650 = d289 * c5;
    d262 = d262 * b5 * c0 * c3;
    d639 = d639 * c3 * c4;
    d355 = d355 * b4 * c0 * c3;
    d651 = d302 * b3 * c0 * c3;
    d369 = d369 * b1 * c0 * c3;
    d652 = 12.0 * a0 * b0 * b3 * c0 * c3;
    d653 = d338 * b0 * c0 * c3;
    m_mm_tmp = 64.0 * a1 * a2;
    d654 = d_mm_tmp * b3;
    d655 = d654 * c2;
    d656 = d267 * b3;
    d657 = d656 * c1;
    d658 = 16.0 * a0 * a1 * b1 * c3;
    d659 = d658 * c5;
    d660 = d655 * c4;
    d661 = d613 * c1;
    d662 = d329 * c1;
    d663 = d359 * c0;
    d279 *= b3;
    d664 = d279 * c0;
    d609 *= c0;
    d665 = 16.0 * a1 * b1 * b3 * c0 * c3;
    n_mm_tmp = 4.0 * a5 * d115;
    o_mm_tmp = mm_tmp_tmp * b5;
    p_mm_tmp = 8.0 * a4 * b0;
    q_mm_tmp = p_mm_tmp * b4;
    r_mm_tmp = 6.0 * a5 * b0 * b3;
    s_mm_tmp = d347 * d11;
    t_mm_tmp = d274 * d11;
    u_mm_tmp = d386 * b5;
    v_mm_tmp = 8.0 * a3 * a4;
    w_mm_tmp = c_mm_tmp * c0;
    x_mm_tmp = i_mm_tmp * c0;
    mm_tmp_tmp = d_mm_tmp * b0;
    y_mm_tmp = mm_tmp_tmp * c1;
    b_mm_tmp_tmp = 64.0 * a0 * a1;
    ab_mm_tmp = d259 * c0;
    bb_mm_tmp = d654 * c0;
    c_mm_tmp_tmp = d356 * c0;
    cb_mm_tmp = c_mm_tmp_tmp * c2;
    db_mm_tmp = d245 * b0 * c2 * c3;
    eb_mm_tmp = d291 * c0 * c3;
    fb_mm_tmp = j_mm_tmp * c0;
    d_mm_tmp_tmp = k_mm_tmp * c0;
    gb_mm_tmp = d_mm_tmp_tmp * c1;
    hb_mm_tmp = d632 * c1;
    ib_mm_tmp = 16.0 * a3 * b2;
    jb_mm_tmp = mm_tmp_tmp * c3;
    kb_mm_tmp = 12.0 * a3 * b0 * b3 * c0 * c3;
    lb_mm_tmp = 8.0 * b_d3 * c2;
    mb_mm_tmp = 6.0 * b_d3 * c0;
    nb_mm_tmp = d73 * a2 * c2;
    ob_mm_tmp = mm_tmp * d20;
    pb_mm_tmp = 4.0 * d7 * b1;
    qb_mm_tmp = d76 * b5;
    rb_mm_tmp = d126 * a4 * c4;
    sb_mm_tmp = 16.0 * d17 * a4;
    tb_mm_tmp = 4.0 * a0 * d115 * d27;
    ub_mm_tmp = d111 * d11;
    vb_mm_tmp = d73 * b1 * c1;
    wb_mm_tmp = d76 * b0 * d20;
    xb_mm_tmp = d205 * d21;
    yb_mm_tmp = b_mm_tmp * d27;
    ac_mm_tmp = d195 * d11;
    bc_mm_tmp = d199 * d11;
    cc_mm_tmp = d236 * a3 * c2;
    dc_mm_tmp = d263 * b1;
    ec_mm_tmp = d296 * b5;
    fc_mm_tmp = d298 * a5;
    gc_mm_tmp = d234 * b0 * c1;
    hc_mm_tmp = d362 * d18;
    ic_mm_tmp = d270 * d11;
    jc_mm_tmp = e_mm_tmp * d21;
    kc_mm_tmp = 6.0 * a0 * b3 * b5;
    lc_mm_tmp = d337 * d11;
    mc_mm_tmp = d379 * d11;
    nc_mm_tmp = d371 * b3 * d21;
    oc_mm_tmp = 8.0 * a3 * b1;
    pc_mm_tmp = f_mm_tmp * c0;
    qc_mm_tmp = f_mm_tmp * c3 * c4;
    rc_mm_tmp = 8.0 * a3 * d115 * c0 * c3;
    sc_mm_tmp = 6.0 * a3 * d38 * c0 * c3;
    tc_mm_tmp = g_mm_tmp * c3;
    uc_mm_tmp = d196 * b2 * c2 * c3;
    vc_mm_tmp = d116 * b3 * c1;
    wc_mm_tmp = h_mm_tmp * c0;
    xc_mm_tmp = h_mm_tmp * c3 * c4;
    yc_mm_tmp = d215 * c1;
    ad_mm_tmp = 16.0 * a0 * a1 * a4 * c2 * c5;
    bd_mm_tmp = d280 * c3 * c4;
    cd_mm_tmp = d228 * b5;
    dd_mm_tmp = 16.0 * a1 * a3 * a5 * c0;
    ed_mm_tmp = d516 * c2;
    fd_mm_tmp = d343 * c2 * c3;
    gd_mm_tmp = d595 * c0;
    hd_mm_tmp = d334 * b2 * c0;
    id_mm_tmp = d339 * b0;
    jd_mm_tmp = d282 * c5;
    kd_mm_tmp = d512 * c3 * c4;
    ld_mm_tmp = d_mm_tmp * a3;
    md_mm_tmp = 16.0 * a0 * a1 * a4 * c0;
    nd_mm_tmp = d256 * c3;
    od_mm_tmp = d293 * c2 * c3;
    pd_mm_tmp = l_mm_tmp * b1 * c0 * c4;
    qd_mm_tmp = l_mm_tmp * b4 * c0 * c1;
    rd_mm_tmp = m_mm_tmp * b1 * c2 * c3;
    f_mm_tmp = m_mm_tmp * b2 * c1 * c3;
    g_mm_tmp = ld_mm_tmp * c2;
    h_mm_tmp = d359 * c3 * c4;
    d_mm_tmp = d600 * b4 * c0 * c3;
    l_mm_tmp = d622 * c2;
    m_mm_tmp = l_mm_tmp * c4;
    sd_mm_tmp = d297 * b1 * c0 * c3;
    e_mm_tmp = d373 * b3;
    mm_tmp_tmp = d593 * c1 * c3;
    mm_tmp = d334 * b3 * c0;
    b_mm_tmp = 32.0 * a3 * b2 * b3;
    c_mm_tmp = d614 * c3;
    i_mm_tmp = d344 * b3 * c0 * c4;
    j_mm_tmp = d348 * c0 * c3;
    k_mm_tmp = d385 * b3 * c0 * c1;
    return ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((b_d2 * d - b_d1 * b_d5) - b_d3 * d) + b_d1 * b_d4) - b_d2 * std::pow(d3, 3.0)) + b_d3 * std::pow(d0, 3.0)) - std::pow(b0, 3.0) * b_d4) + std::pow(b3, 3.0) * b_d5) + d36 * d) + d39 * d) - d41 * d) - d46 * d) - d33 * b_d4) + d43 * b_d5) + d40 * b_d4) - d45 * b_d5) - d42 * b_d4) + d8 * b_d5) - d47 * b_d5) + d44 * b_d4) - d10 * c0 * d11) - d9 * c0 * d27) + d9 * d21 * c3) + d10 * d11 * c3) + d16 * c0 * d31) - d15 * c3 * d29) + d12 * c5 * d30) - d12 * d14 * d3) - d13 * c5 * d37) + d13 * d14 * d0) + d15 * d20 * d5) - d16 * d18 * d5) + d49 * b_d4) - d51 * b_d4) + d54 * b_d5) - d55 * b_d5) - d58 * b_d4) + d59 * b_d4) - d60 * b_d5) + d61 * b_d5) - lb_mm_tmp * c5 * d2) - d62 * c5 * d5) + d63 * c5 * d4) + mb_mm_tmp * c5 * d5) + lb_mm_tmp * d0 * d2) - mb_mm_tmp * d0 * d5) + d62 * d3 * d5) - d63 * d3 * d4) + d85 * d14) - d65 * d18) - d89 * d14) + d65 * d20) + d91 * d14) - d68 * d18) + d70 * d21 * c2) - nb_mm_tmp * d14) - d66 * c3 * d14) + d93 * c5) + d64 * d18 * c3) + 16.0 * a2 * d7 * d11 * c2) + d72 * d18) - d94 * d14) - d95 * d14) - d96 * d14) + d86 * c5) - d87 * d14) + d68 * d20) - d103 * d14) + d90 * d14) - d64 * c3 * d20) - d92 * d14) + d70 * c2 * d27) + d80 * c0 * d14) - d72 * d20) + d98 * c5) - d24 * a5 * d21 * c5) + d74 * d27 * c5) - d81 * d21 * c5) - d71 * d18 * c3) - d82 * d21 * c4) + d99 * d14) + d75 * c3 * d14) + d100 * c5) + d97 * d14) - d101 * c5) - d84 * c0 * d14) - d102 * c5) - 16.0 * a4 * d7 * d11 * c4) - d104 * c5) + d105 * d14) + d106 * d14) + d107 * d21 * c5) - d80 * c3 * d14) + d71 * c3 * d20) - ob_mm_tmp * c5) - 4.0 * d17 * a5 * d27 * c5) + d127 * d18 * c5) + 16.0 * (a4 * a4) * a5 * d11 * c5) - d125 * c5) - d82 * d27 * c4) + rb_mm_tmp * d14) + d84 * c3 * d14) - d128 * c5) + d129 * c5) - d122 * c0 * d29) + d85 * d30) - d110 * d31) + d108 * c0 * d114) - 16.0 * a0 * d115 * c0 * d20) + d33 * c0 * d27) - d112 * d18) + 16.0 * a0 * d35 * c0 * d11) - d36 * d14 * d0) + d119 * d0) - d120 * d0) + d86 * d0) - d87 * d37) + 16.0 * a1 * d38 * c1 * d20) - 16.0 * a1 * d35 * d21 * c1) + d116 * a1 * c1 * d29) - d131 * d14) + d132 * c0 * d20) - d121 * c0 * d18) + d124 * b0 * c0 * d11) - d110 * d29) + d89 * d30) - d90 * d37) - 12.0 * a0 * d38 * c3 * d20) - d112 * d20) + d113 * c0 * d27) - d113 * d21 * c3) + d91 * d30) - 16.0 * a1 * d26 * c1 * d31) - d123 * d21 * d1) + 16.0 * a1 * d32 * c1 * d27) - 16.0 * a1 * d34 * c1 * d18) + d92 * d37) - 4.0 * a2 * d38 * c2 * d27) + 4.0 * a2 * d34 * d21 * c2) + 12.0 * a3 * d19 * c0 * d37) + d133 * c0 * d20) + d134 * d14 * d1) - nb_mm_tmp * d30) + d73 * a3 * c0 * d29) + vb_mm_tmp * d14) - pb_mm_tmp * d21 * c1) - 12.0 * a0 * d17 * c3 * d30) - d109 * c3 * d31) + d39 * c5 * d37) - d155 * d14 * d0) - d93 * d3) + d152 * d27 * d0) + d147 * c5) + d148 * c5) - d111 * d18 * c3) + 64.0 * a1 * d17 * d20 * d1) - 64.0 * a1 * d19 * d18 * d1) + d139 * c2 * d114) + d140 * d21 * d2) - 16.0 * a2 * d115 * c2 * d27) + d153 * d11 * c2) + 9.0 * a3 * d7 * d21 * d0) + d133 * d18 * c3) + d135 * c0 * d27) - d135 * d21 * c3) + 12.0 * a3 * d34 * c0 * d18) - d40 * c0 * d27) - d116 * a2 * d20 * d2) + d138 * d31) + d41 * d14 * d0) - d94 * d30) - d149 * d14) - d116 * b2 * c2 * d20) + d151 * d14) - d95 * d30) + d96 * d30) - d97 * d37) + d142 * b1 * c1 * d20) - d143 * a5 * c0 * d37) - d157 * d14) - d136 * b1 * c1 * d18) + d144 * d21 * c2) + d145 * b0 * c0 * d27) - d42 * d21 * c3) + d36 * c5 * d30) - d154 * d14 * d3) - d119 * d3) - d109 * c5 * d114) + d69 * d21 * d5) + d120 * d3) - d158 * d11 * d3) + tb_mm_tmp * c5) - ub_mm_tmp * c5) + 64.0 * a2 * d19 * d11 * d2) + 16.0 * a3 * (a4 * a4) * d18 * d0) + d451 * d11 * d0) + d221 * c5) - d222 * c5) + 16.0 * a3 * d115 * d18 * c3) - 16.0 * a3 * d32 * d11 * c3) - d409 * d11 * c4) + 16.0 * a4 * d115 * d21 * c4) + 4.0 * a5 * d38 * d11 * c3) + n_mm_tmp * c0 * d27) - n_mm_tmp * d21 * c3) - 4.0 * a5 * d34 * c0 * d11) + d137 * c5 * d114) - d163 * c4 * d114) + d78 * c3 * d114) - d104 * d0) + d223 * c5) - d168 * c0 * d20) - d172 * a2 * d20 * d2) + d184 * c3 * d31) - d46 * c5 * d37) + d479 * d14 * d0) + d105 * d37) + d103 * d30) - d106 * d37) - d482 * d14) - d172 * b2 * c2 * d20) + d485 * d14) - d194 * c3 * d114) - d217 * d0) - d132 * c3 * d20) - d195 * c0 * d20) - d127 * c0 * d114) - d227 * a5 * d21 * d0) + xb_mm_tmp * c5) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d121 * d18 * c3 + d136 * b2 * d11 * c2) + d160 * c0 * d18) - d159 * b0 * d11 * c3) + d159 * b3 * c0 * d11) + d122 * d20 * d5) + d162 * d27 * d5) + d164 * d18 * d5) - d108 * d11 * d5) - d161 * d14 * d1) + d123 * d27 * d1) - 4.0 * a3 * (a4 * a4) * c3 * d37) + d133 * c3 * d20) - d43 * d21 * c3) + d138 * d29) - d137 * d18 * d5) + d163 * d18 * d4) - d98 * d3) - d166 * c5) + d167 * d18 * c4) - d168 * d18 * c3) + ob_mm_tmp * d0) + wb_mm_tmp * c5) + qb_mm_tmp * c0 * d20) + d77 * d21 * d5) - sb_mm_tmp * d21 * d4) + 4.0 * d17 * a5 * d21 * d3) - d179 * d27 * d0) + d181 * d27 * c5) + d190 * c5) - d174 * d21 * c4) - d169 * b5 * c0 * d27) + d44 * d21 * c3) - d185 * d18 * d0) + d186 * d18 * c5) - d175 * d14) - d187 * d18) - d182 * d11 * d0) - d176 * c5) - d117 * b5 * c0 * d11) + pb_mm_tmp * c1 * d27) - d39 * d14 * d3) - 9.0 * a0 * d7 * d27 * d3) - d139 * d20 * d2) + d140 * d27 * d2) - d180 * d21 * d3) + d125 * d0) - d177 * c5) - d178 * c5) - 4.0 * a4 * d38 * d27 * c4) + 4.0 * a4 * d34 * d21 * c4) + d45 * d21 * c3) - d41 * c5 * d30) + d183 * d14 * d3) - d99 * d30) + d141 * a5 * c3 * d30) - d78 * d11 * d5) + d189 * d14) - d191 * c5) - d184 * d18 * d5) + d172 * a4 * d18 * d4) + d79 * d21 * d5) - d100 * d3) - d192 * c5) + d172 * b4 * d18 * c4) + d193 * c5) - qb_mm_tmp * d18 * c3) + d194 * d11 * d5) - d142 * a4 * d11 * d4) + d101 * d3) + ac_mm_tmp * c5) - d142 * b4 * d11 * c4) + d88 * b5 * d11 * c3) + rb_mm_tmp * d37) + 3.0 * d26 * a5 * c3 * d37) - 3.0 * d26 * b0 * c3 * d14) - 16.0 * (a3 * a3) * b2 * c2 * d20) + d202 * d14) + d144 * c2 * d27) + d8 * c0 * d27) - d145 * b3 * d21 * c3) + d109 * d20 * d5) - d69 * d27 * d5) - d212 * d21 * d5) - d207 * d18 * d3) - d102 * d3) - d208 * d20 * d5) + d209 * d20 * d3) - d215 * d20 * c5) + d214 * c3 * d20) + d46 * d14 * d3) + d203 * d14) + d217 * d3) + d195 * c3 * d20) + d128 * d0) + d204 * c5) + d199 * c0 * d20) + d206 * d21 * d3) - d129 * d0) - d205 * d27 * c5) - d213 * d21 * c5) - d160 * d18 * c3) - d47 * c0 * d27) + d197 * b5 * d21 * c3) - d124 * b3 * d11 * c3) - d210 * d27 * d5) - d171 * d27 * c5) - d77 * d27 * d5) - sb_mm_tmp * d27 * d4) + d218 * a5 * d27 * d3) - d173 * c5) - d174 * d27 * c4) + d198 * a4 * d18 * d4) + d216 * d21 * d5) + 4.0 * (a3 * a3) * a5 * (c2 * c2) * d3) - d219 * c5) + d198 * b4 * d18 * c4) + d146 * d21 * c5) + d199 * d18 * c3) - d79 * d27 * d5) - yb_mm_tmp * c5) + d127 * d11 * d5) + bc_mm_tmp * c5) - d36 * d0 * d30) + d109 * d0 * d114) - tb_mm_tmp * d0) + ub_mm_tmp * d0) - 4.0 * b0 * d115 * c0 * d27) + 4.0 * b0 * d34 * c0 * d11) - d131 * d30) + d200 * c0 * d114) - d161 * d37 * d1) + 4.0 * a1 * d38 * d27 * d1) - 4.0 * a1 * d34 * d21 * d1) - 4.0 * b1 * d34 * d21 * c1) + d134 * d1 * d30) + vb_mm_tmp * d30) - wb_mm_tmp * d0) + d24 * b0 * d27 * d0) - d225 * d0) - d175 * d37) + d176 * d0) + 4.0 * d38 * b1 * c1 * d27) - d39 * d37 * d3) - d147 * d3) - d148 * d3) + d177 * d0) + d178 * d0) - 3.0 * b0 * d34 * d21 * c3) + d41 * d0 * d30) - d149 * d30) + d116 * b1 * d20 * d1) + d151 * d30) - d224 * c3 * d37) + d202 * d37) - d117 * b1 * d21 * d1) + 3.0 * d38 * b3 * c0 * d27) - d221 * d3) + d222 * d3) - d137 * d114 * d3) - d223 * d3) - d73 * b2 * d27 * d2) - d165 * c3 * d114) + d226 * d0) + d46 * d37 * d3) + d203 * d37) + d88 * b1 * d27 * d1) - d204 * d0) - d198 * b1 * d18 * d1) + d126 * b2 * d21 * d2) - xb_mm_tmp * d3) + d28 * b0 * (c3 * c3) * d0) + d227 * b3 * d21 * d0) - 4.0 * d38 * b3 * d11 * c3) + 4.0 * d115 * b3 * d21 * c3) + 9.0 * (a0 * a0) * b0 * d27 * d5) + d166 * d3) - d23 * b5 * d27 * d0) - d76 * b2 * d27 * d2) - d218 * b0 * d27 * d3) - d190 * d3) + d173 * d0) + d224 * d21 * d5) - d225 * d3) + d469 * d11 * d2) + d219 * d0) - d143 * b5 * d21 * d0) + d165 * d11 * d5) - d167 * d11 * d4) + d191 * d3) + d130 * d27 * d5) - d25 * d21 * d5) + d192 * d3) + d76 * b4 * d21 * d4) - d193 * d3) + yb_mm_tmp * d0) - ac_mm_tmp * d3) - d200 * d11 * d5) - bc_mm_tmp * d0) + d226 * d3) - d28 * b3 * d21 * d3) - d150 * d27 * d5) - d73 * b4 * d27 * d4) + d141 * b5 * d27 * d3) - d201 * d21 * d5) + d126 * b4 * d21 * d4) + d83 * b5 * d21 * d3) - d258 * d14)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((cc_mm_tmp * d14 - d250 * d14) + d237 * d14) + d243 * d14) - d233 * d18 * c5) - d238 * d14) + d240 * d14) + d252 * d14) - d242 * d14) - d244 * d14) + d246 * c5) + gc_mm_tmp * d14) - d247 * c0 * d14) - d235 * b0 * c2 * d20) + d241 * c0 * d20) + d253 * d14) - d233 * c0 * d114) - d255 * c0 * d20) + d257 * d30) - d258 * d30) - d259 * c3 * d14) + cc_mm_tmp * d30) + d230 * a5 * (c2 * c2) * d0) - hc_mm_tmp * c5) + d347 * c0 * d18) + d617 * d18 * c4) - d270 * c0 * d18) - d255 * d18 * c3) + d274 * c0 * d18) - d282 * d37) - d237 * d30) + d238 * d37) - d260 * b1 * c2 * d20) + d260 * b2 * c1 * d20) + d240 * d37) + d285 * d14) + d276 * c0 * d18) - d261 * a5 * d20 * d1) + d261 * b1 * d20 * c5) - d261 * b5 * c1 * d20) + d235 * a3 * d20 * d2) - d241 * c3 * d20) + d235 * b3 * c2 * d20) - d242 * d37) - d243 * d30) + d244 * d37) + d287 * d14) + d267 * b2 * c2 * d20) - d289 * d14) - d290 * c5) - d272 * b1 * c1 * d20) + d254 * b5 * c0 * d11) - d263 * b0 * c1 * d20) + dc_mm_tmp * c0 * d20) + d264 * b0 * c2 * d20) - d271 * c0 * d20) + d291 * d27 * c5) + d233 * c3 * d114) - d283 * d20 * c5) + d284 * c3 * d20) - d229 * d21 * d5) + d280 * d21 * d4) - d277 * c5) + cd_mm_tmp * d21 * c4) + d265 * a5 * d18 * d1) - d278 * c5) + d265 * b5 * c1 * d18) + d292 * b1 * d18 * c4) - d295 * c5) - d292 * b4 * c1 * d18) + jc_mm_tmp * c5) - dc_mm_tmp * d18 * c3) + d297 * b2 * d21 * c4) + d263 * b3 * c1 * d18) - ec_mm_tmp * d21 * c1) - fc_mm_tmp * d21 * d2) + d323 * c5) - d308 * d21 * c2) - d324 * c5) - d311 * d21 * c4) + d312 * d21 * c2) + d328 * d21 * c4) - d300 * b2 * c0 * d27) + d49 * d21 * c3) - d48 * d21 * c2) + d306 * b1 * c1 * d18) - d313 * d21 * c2) - d267 * a4 * d18 * d4) - d232 * d21 * d5) + d329 * d18 * c5) - d267 * b4 * d18 * c4) - d325 * c5) + d315 * d21 * d4) - d269 * b3 * d18 * c4) + d326 * c5) + d270 * d18 * c3) + d317 * d21 * c4) - d330 * d27 * c5) - d327 * c5) + d319 * d21 * c4) + d302 * b5 * c0 * d27) - d51 * d21 * c3) + d331 * d14) - d332 * d14) - d264 * a5 * d11 * d2) + d271 * d11 * c5) - d264 * b5 * d11 * c2) - d303 * b2 * d11 * c4) + d303 * b4 * d11 * c2) + d304 * b2 * d11 * c3) - d304 * b3 * d11 * c2) - d305 * b0 * d18 * c4) + d320 * c0 * d18) - d333 * c5) - d306 * b2 * d11 * c2) - mm_tmp * d18) + d53 * d21 * c4) - d335 * d14) + d269 * a5 * d11 * d4) - ic_mm_tmp * c5) + d269 * b5 * d11 * c4) + d272 * b4 * d11 * c4) - d273 * b5 * d11 * c3) + 32.0 * a2 * a3 * b2 * c3 * d20) - 32.0 * a2 * a3 * b3 * c2 * d20) + d334 * b5 * c0 * d11) + d336 * b0 * d11 * c4) - d336 * b4 * c0 * d11) - d246 * d3) + d341 * c5) - d347 * c3 * d20) - d274 * c3 * d20) + d229 * d27 * d5) + d275 * c5) - d343 * d27 * d2) + d294 * c5) - d345 * c2 * d27) - d342 * c5) - d346 * c2 * d27) + ec_mm_tmp * c1 * d27) - fc_mm_tmp * d27 * d2) - d307 * c5) - d308 * c2 * d27) + d310 * c5) - d311 * d27 * c4) + d312 * c2 * d27) - d48 * c2 * d27) - d276 * c3 * d20) - d313 * c2 * d27) + d337 * c0 * d20) - d339 * b1 * c2 * d27) + d232 * d27 * d5) + d314 * c5) + d315 * d27 * d4) - d316 * c5) + d317 * d27 * c4) + d318 * c5) + d319 * d27 * c4) + d305 * b3 * d18 * c4) - d348 * d21 * c5) - d320 * d18 * c3) + d321 * c5) + d349 * d21 * c5) + d337 * d18 * c3) + d54 * c0 * d27) - d338 * b5 * d21 * c3) + d53 * d27 * c4) - d55 * c0 * d27) + d339 * b4 * d21 * c3) + lc_mm_tmp * c5) - d266 * b5 * d11 * c3) + gc_mm_tmp * d30) - 8.0 * a0 * a1 * b1 * c0 * d30) + d261 * b0 * d20 * d1) - 32.0 * a0 * a1 * b1 * d20 * d0) + d253 * d30) + d620 * b1 * c1 * d20) - 32.0 * a1 * b0 * b1 * c0 * d20) - d236 * b0 * d27 * d2) + d236 * b2 * d27 * d0) - d362 * c3 * d114) + d363 * d0) + d340 * c0 * d114) - d353 * b2 * c2 * d27) + d354 * c0 * d20) + d58 * c0 * d27) + hc_mm_tmp * d3) - d383 * d0) - d50 * b0 * d27 * d0) + d354 * d18 * c3) - d59 * c0 * d27) + d331 * d37) - d332 * d37) - d384 * d18) + d362 * d11 * d5) - d335 * d37) - s_mm_tmp * d0) - d617 * d11 * d4) + ic_mm_tmp * d0) + d290 * d3) - t_mm_tmp * d0) + d394 * c5) - d628 * d11 * c4) + d353 * b5 * d11 * c3) - u_mm_tmp * c0 * d11) - d600 * b1 * d27 * d2) + d600 * b2 * d27 * d1) - d372 * b2 * c2 * d27)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((32.0 * a2 * b1 * b2 * c1 * d27 - d364 * d0) - d365 * c0 * d11) + 32.0 * a4 * b0 * b4 * c0 * d11) - d366 * c0 * d11) + d247 * d27 * d5) + d356 * d27 * d2) - d234 * b5 * d27 * d1) - 24.0 * a0 * a2 * b2 * d27 * d3) + d236 * b3 * d27 * d2) + d363 * d3) + d230 * b2 * d27 * d2) - d341 * d0) + d357 * d27 * d2) - d254 * b1 * d27 * d1) + d354 * c3 * d20) + d361 * c2 * d27) - 8.0 * a0 * b1 * b5 * c1 * d27) + 8.0 * a0 * b2 * b3 * c2 * d27) - d359 * d21 * d4) + d277 * d3) - d275 * d0) - d322 * d21 * d5) + d278 * d3) - d358 * d21 * d4) - d265 * b3 * d18 * d1) + d239 * b5 * d21 * d1) + d293 * d27 * d2) + d350 * b1 * d21 * d4) + d295 * d3) - d294 * d0) - d350 * b4 * d21 * d1) - d296 * b0 * d27 * d1) - jc_mm_tmp * d3) + d342 * d0) + d296 * b3 * d21 * d1) + d368 * c5) + d370 * c2 * d27) - d367 * b5 * c1 * d27) - nc_mm_tmp * c5) + d372 * b3 * d18 * c3) + d372 * b4 * d21 * c4) + d371 * b5 * c0 * d27) - 8.0 * a1 * b1 * b5 * d21 * c3) - e_mm_tmp * d21 * c4) - d374 * c0 * d27) + d374 * d21 * c3) + 8.0 * a1 * b3 * b5 * d21 * c1) + d298 * b0 * d27 * d2) - d380 * d21 * d4) - d323 * d3) + d307 * d0) + d298 * b3 * d21 * d2) + d324 * d3) - d310 * d0) + d56 * b3 * c2 * d27) - d375 * d21 * c4) - d376 * c0 * d27) + d376 * d21 * c3) + d377 * c0 * d27) - d377 * d21 * c3) + d266 * b1 * d21 * d1) + d351 * b2 * c2 * d27) - d384 * d20) - d385 * b2 * d21 * c4) - 32.0 * a3 * b1 * b3 * c1 * d18) + oc_mm_tmp * b5 * d21 * c1) + 8.0 * a3 * b2 * b3 * d21 * c2) + d382 * c2 * d27) - d378 * c0 * d27) + d378 * d21 * c3) - 32.0 * a4 * b1 * b4 * d21 * c1) - d352 * b1 * c1 * d27) + 8.0 * a5 * b1 * b3 * d21 * c1) - d249 * d27 * d5) + d231 * d21 * d5) - d383 * d3) - d230 * b4 * d21 * d4) + d325 * d3) - d314 * d0) - d301 * b0 * d27 * d4) - d301 * b3 * d21 * d4) - d326 * d3) + d316 * d0) + 18.0 * a0 * a5 * b0 * d27 * d3) + d327 * d3) - d318 * d0) - d57 * c5) - d353 * b4 * d27 * c4) - d386 * b4 * d21 * c4) - kc_mm_tmp * c0 * d27) + kc_mm_tmp * d21 * c3) - 32.0 * a2 * a3 * b2 * d11 * d3) + 32.0 * a2 * a3 * b3 * d11 * d2) - 32.0 * a2 * b2 * b3 * d11 * c3) - v_mm_tmp * b0 * d21 * d4) + 24.0 * a3 * a4 * b4 * d21 * d0) + d333 * d3) - d321 * d0) - 18.0 * a3 * a5 * b3 * d21 * d0) + d410 * c5) - d379 * d18 * c3) - d351 * b4 * d21 * c4) - o_mm_tmp * c0 * d27) + o_mm_tmp * d21 * c3) + b_mm_tmp * d11 * c2) - p_mm_tmp * b3 * d21 * c4) + q_mm_tmp * c0 * d27) - q_mm_tmp * d21 * c3) - r_mm_tmp * c0 * d27) + r_mm_tmp * d21 * c3) - d340 * d11 * d5) + s_mm_tmp * d3) + t_mm_tmp * d3) + u_mm_tmp * d11 * c3) - d411 * c2 * c4) + d387 * c5) + d67 * c0 * c2 * c4) - 8.0 * a2 * d7 * c0 * c2 * c3) + d364 * d3) - lc_mm_tmp * d0) - mc_mm_tmp * c5) + d365 * d11 * c3) - d393 * b5 * c0 * d11) + d366 * d11 * c3) - 6.0 * a0 * (a5 * a5) * c0 * c3 * c5) + v_mm_tmp * b3 * d21 * d4) - v_mm_tmp * b4 * d21 * d3) + d52 * b3 * d21 * d3)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d393 * b4 * d21 * c4 + d60 * d21 * c3) - d61 * d21 * c3) - d390 * c5) - d67 * c2 * c3 * c4) + d388 * c1 * c2 * c4) + d389 * c5) + d391 * c5) + 8.0 * a4 * d7 * c0 * c3 * c4) - d392 * c5) + d353 * b1 * d27 * d1) - d368 * d0) + d57 * d0) - d394 * d3) + d158 * c0 * c1 * d1) - d387 * d0) + mc_mm_tmp * d0) - d395 * c0 * c2 * d2) - d152 * c0 * c3 * d0) + nc_mm_tmp * d3) + 32.0 * a2 * d19 * c0 * c2 * d0) - oc_mm_tmp * b3 * d21 * d1) + d416 * c5 * d0) + d417 * c5) - d410 * d3) - d396 * c3 * d5) + d403 * c0 * c4 * d4) - d396 * c5 * d3) - d418 * c5 * d0) - d411 * c3 * d1) + 16.0 * a0 * d34 * c1 * c2 * c4) - 128.0 * a1 * d19 * c1 * c2 * d2) - d419 * c5) + d412 * c5) + 128.0 * a2 * d19 * c1 * c2 * d1) - d153 * c0 * c1 * c4) - 8.0 * a2 * d34 * c0 * c2 * c3) + d388 * c0 * c1 * d1) - 16.0 * a3 * d38 * c1 * c2 * c4) + d409 * c1 * c2 * c3) + d420 * c5 * d0) - pc_mm_tmp * c4 * d0) + d389 * d0) - d421 * c5) - d422 * c5 * d5) - d413 * c5 * d1) + d395 * c2 * c3 * d2) + 12.0 * a0 * d7 * c0 * c3 * d3) + d414 * c5) + d398 * c1 * d5) + d398 * c5 * d1) + d397 * c1 * c5 * d0) - d400 * c2 * d3) - d400 * c3 * d2) - d399 * d0) + d404 * c0 * c2 * d2) - 12.0 * a3 * d7 * c0 * c3 * d0) - sc_mm_tmp * c5) + 8.0 * a4 * d38 * c0 * c3 * c4) + d408 * c0 * c5 * d0) - d401 * a5 * c0 * c1 * d1) + d415 * c5) - d401 * b2 * c0 * c2 * c3) + d424 * c5 * d2) - d425 * c3 * d5) + 128.0 * a1 * d17 * c1 * c4 * d4) - d425 * c5 * d3) - tc_mm_tmp * c5 * d1) - d207 * c0 * c5 * d0) - rc_mm_tmp * c5) + d196 * a1 * c1 * c5 * d5) + d439 * c2 * c3 * d5) - 32.0 * d22 * a2 * c2 * c4 * d4) + 8.0 * (a0 * a0) * a2 * c2 * c5 * d3) + d440 * c5 * d2) - d441 * c5 * d2) - d426 * c2 * d5) - d426 * c5 * d2) + d442 * c2 * c4 * d2) - d443 * c5 * d1) + d428 * c2 * d4) + d428 * c4 * d2) - d444 * c5 * d1) - d209 * c2 * c3 * d2) + d427 * c2 * c4 * d1) + uc_mm_tmp * c5) - d445 * c2 * c5) + d116 * b5 * c1 * c2 * c4) + d446 * c5 * d1) - 128.0 * d17 * a4 * c1 * c4 * d1) + d402 * a5 * c1 * c3 * d1) - d447 * c5) - d437 * c0 * c2 * d2) + d182 * c0 * c3 * d0) - d403 * c3 * c4 * d4) + d118 * c3 * c5 * d3) - 12.0 * a0 * d26 * c0 * c5 * d5) + d390 * d3) - d451 * c1 * c3 * d1) + d448 * c5 * d5) - d430 * c4 * d5) - d430 * c5 * d4) - d449 * c5 * d0) + d431 * c3 * d5) - d209 * c0 * c4 * d4) + d431 * c5 * d3) + d450 * c5 * d0) - wc_mm_tmp * c4 * c5) + d171 * c0 * c3 * c5) + d434 * c3 * d5) - d435 * a2 * c2 * c4 * d4) + d434 * c5 * d3) + d433 * c3 * c5 * d2) - d452 * c5 * d2) + d435 * a4 * c2 * c4 * d2) - d453 * c2 * c3 * d2) + d432 * b2 * c2 * c3 * c5) - d436 * c0 * c4 * d4) + pc_mm_tmp * c3 * d4) + d402 * a4 * c0 * c4 * d3) + qc_mm_tmp * d0) - 16.0 * d17 * a5 * c0 * c3 * d3) + 32.0 * d17 * b4 * c0 * c3 * c4) + d211 * a5 * c0 * c5 * d0) - d122 * c3 * c5 * d5) + d476 * c5 * d4) + d399 * d3) - d404 * c2 * c3 * d2) + d391 * d3) + d184 * c0 * c5 * d5) - d455 * c4 * d5) - d455 * c5 * d4) - d454 * c4 * c5 * d0) + d453 * c0 * c4 * d4) - d462 * c5) - d405 * c5 * d3) - d465 * c5 * d5) + d456 * c4 * d5) + d456 * c5 * d4) + d458 * c3 * d5) - d461 * c2 * c4 * d4) + d458 * c5 * d3) + d466 * c5 * d2) + d467 * c5 * d1) + d459 * c3 * d5) + d459 * c5 * d3) + d212 * c3 * c5 * d0) + d463 * a4 * c2 * c4 * d2) - d460 * c2 * d4) - d460 * c4 * d2) + d468 * c5 * d1) + d185 * c2 * c3 * d2) - d437 * c2 * c4 * d1) + d471 * c5) + d472 * c5) - d198 * b5 * c1 * c2 * c4) - d392 * d3) + d473 * c5) - d474 * c5 * d5) + d475 * c5 * d4) + d220 * a3 * c3 * c5 * d5) - d478 * c5 * d4) + d427 * c3 * c4 * d4) - d220 * a5 * c3 * c5 * d3) + d436 * c3 * c4 * d4) - d406 * c5 * d3) - qc_mm_tmp * d3) - d503 * c4 * d5) - d503 * c5 * d4) - d502 * c4 * c5 * d0) - 6.0 * d26 * a5 * c0 * c3 * d5) + 8.0 * d26 * a5 * c0 * c4 * d4) - 6.0 * (a3 * a3) * a5 * c0 * c5 * d3) - d216 * c3 * c5 * d0) - d170 * c5) - d504 * c5) + d505 * c5 * d5) - d506 * c5 * d3) + 8.0 * a0 * d34 * c0 * c1 * d1) - d412 * d0) + d413 * d0 * d1) - d414 * d0) - d398 * d0 * d1) + d401 * b0 * c0 * c1 * d1) - d415 * d0) - d488 * d0 * d2) - d416 * d0 * d3) - d417 * d3) + d457 * d0 * d2) + rc_mm_tmp * d0) - d507 * c2 * d2) + d499 * d0) - d500 * d0) + d418 * d0 * d3) + d501 * d0 * d5) + d419 * d3) - 8.0 * a3 * d38 * c1 * c3 * d1) - d420 * d0 * d3) + d421 * d3) - d508 * d0) + d509 * d0) + d422 * d3 * d5) + d510 * d0 * d5) - d476 * d0 * d4) + d154 * c5 * d0 * d3) - 32.0 * a1 * d26 * c2 * d1 * d2)) + (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d461 * c1 * d1 * d2 + sc_mm_tmp * d3) - d479 * c0 * d0 * d5) + d432 * a4 * c0 * d0 * d4) - d407 * a5 * c0 * d0 * d3) + 8.0 * d6 * b0 * c0 * c3 * d5) - 32.0 * d6 * b0 * c0 * c4 * d4) + d480 * c0 * c5 * d3) + d483 * d0) - d486 * d0) + d462 * d0) - d487 * d0) - d463 * b1 * c1 * c2 * d2) + d463 * b2 * c1 * c2 * d1) - d164 * c1 * d1 * d5) + d423 * c1 * d2 * d4) + d424 * d1 * d4) - d488 * d2 * d3) + d423 * c4 * d1 * d2) + d405 * d0 * d3) + tc_mm_tmp * d1 * d3) + d464 * c0 * d1 * d5) + d465 * d0 * d5) + d464 * c5 * d0 * d1) - d139 * c0 * d1 * d4) - d457 * d2 * d3) - d456 * d0 * d4) - d458 * d0 * d3) - d466 * d0 * d2) - d467 * d0 * d1) - d459 * d0 * d3) - 8.0 * (a0 * a0) * a1 * c1 * d3 * d5) - d481 * c3 * d1 * d5) + d438 * a1 * c4 * d1 * d4) - d481 * c5 * d1 * d3) - d440 * d2 * d3) + d208 * c1 * d1 * d5) - d477 * c1 * d2 * d4) - d477 * c2 * d1 * d4) + d441 * d2 * d3) - d478 * d1 * d2) - d442 * c1 * d1 * d4) + d426 * d2 * d3) + d443 * d1 * d3) + d163 * c3 * d1 * d2) + d444 * d1 * d3) - d490 * c3 * d5) + d438 * b1 * c1 * c4 * d4) - d490 * c5 * d3) - d489 * c5 * d1) - uc_mm_tmp * d3) - vc_mm_tmp * c2 * d4) - vc_mm_tmp * c4 * d2) + yc_mm_tmp * c5 * d1) + 8.0 * d22 * b3 * c2 * c3 * d2) - 16.0 * d22 * b3 * c2 * c4 * d1) + 16.0 * (a0 * a0) * b4 * c1 * c2 * d3) + d445 * c3 * d2) - d438 * b4 * c1 * c4 * d1) + d167 * c2 * c3 * d1) + d214 * c1 * c3 * d1) - d446 * d1 * d3) + d447 * d3) - d402 * b3 * c1 * c3 * d1) - d468 * d0 * d1) + d492 * c2 * d4) + d492 * c4 * d2) - d498 * c5 * d1) - d186 * c2 * c3 * d2) + d491 * c2 * c4 * d1) + d494 * c1 * d5) + d494 * c5 * d1) + d493 * c1 * c5 * d0) - d495 * c1 * d4) - d499 * d3) - d470 * c3 * d2) - d495 * c4 * d1) - d471 * d0) - d472 * d0) + 24.0 * d26 * b3 * c0 * c2 * d2) - d187 * c1 * d1) + d500 * d3) - d473 * d0) + d501 * d3 * d5) + d474 * d0 * d5) - d475 * d0 * d4) + d155 * c5 * d0 * d3) - d448 * d3 * d5) - d496 * d0 * d5) + d497 * d0 * d4) - d183 * c5 * d0 * d3) + d430 * d3 * d4) + d429 * d0 * d4) + d449 * d0 * d3) - d450 * d0 * d3) - 24.0 * d22 * b0 * c3 * c4 * d4) + 18.0 * d22 * b0 * c3 * c5 * d3) - d188 * c3 * d5) + d215 * c0 * c4 * d4) - d188 * c5 * d3) - d189 * c5 * d0) + wc_mm_tmp * c3 * d4) + d196 * b4 * c0 * c4 * d3) + xc_mm_tmp * d0) - 6.0 * d22 * b5 * c0 * c3 * d3) - 32.0 * d6 * a2 * c3 * d2 * d3) + d452 * d2 * d3) - 32.0 * (a1 * a1) * b2 * c2 * c3 * d3) + d432 * b3 * c2 * c3 * d2) + d406 * d0 * d3) + d508 * d3) + d503 * d0 * d4) + d216 * c0 * d0 * d3) + d157 * c3 * d5) - d507 * c4 * d4) + d509 * d3) + d156 * c3 * c5 * d0) - 18.0 * d26 * b3 * c0 * c5 * d0) + d170 * d0) + d504 * d0) + d510 * d3 * d5) - 8.0 * (a1 * a1) * a3 * c0 * d3 * d5) - d505 * d0 * d5) - d479 * c5 * d0 * d3) + d506 * d0 * d3) + d483 * d3) - d485 * c3 * d5) - d486 * d3) - d484 * c3 * c5 * d0) + d487 * d3) - d496 * d3 * d5) + d497 * d3 * d4) - d429 * d3 * d4) + d215 * c3 * c4 * d4) - 6.0 * (a0 * a0) * b3 * c3 * c5 * d3) - xc_mm_tmp * d3) + d498 * d0 * d1) - d494 * d0 * d1) - d157 * d0 * d3) - d482 * d0 * d3) + d485 * d0 * d3) + d489 * d1 * d3) - yc_mm_tmp * d1 * d3) + d189 * d0 * d3) + d511 * c5) + d514 * c5) - d515 * c4 * c5) - ed_mm_tmp * c5) + bd_mm_tmp * c5) + fd_mm_tmp * c5) - d517 * c5) - d344 * a5 * c1 * c2 * c5) + d256 * c0 * c2 * d5) + md_mm_tmp * c5 * d2) + ad_mm_tmp * d0) - 16.0 * a0 * a1 * a5 * c0 * c2 * d4) - d520 * c0 * c4 * d2) - d549 * d0) + cb_mm_tmp * c5) - d523 * c0 * c2 * c4) + w_mm_tmp * c1 * d5) + w_mm_tmp * c5 * d1) + d550 * d0) - x_mm_tmp * c1 * d4) - x_mm_tmp * c4 * d1) - d511 * d0) + db_mm_tmp * c5) - eb_mm_tmp * c5) + gb_mm_tmp * c5) - d245 * b5 * c0 * c1 * c4) + d613 * c0 * c2 * d2) - d629 * c5) + d630 * c5) + d631 * c5) + d272 * b0 * c1 * c2 * c4) - d530 * c0 * c2 * c4) - d273 * b2 * c0 * c1 * c4) - d601 * c5 * d0) + d600 * a5 * c0 * c4 * d0) + 16.0 * a1 * a4 * b0 * c0 * c2 * c5) - d561 * c0 * c2 * c4) - d589 * d0) + d645 * c5) - d300 * b0 * c0 * c1 * c4) - d646 * c5 * d0) + d612 * d0) - d647 * c5) + d648 * c5) + rd_mm_tmp * c5) - f_mm_tmp * c5)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d518 * a5 * c1 * c2 * d2 - d519 * a5 * c1 * c2 * d1) - d257 * c3 * d5) - ad_mm_tmp * d3) - nd_mm_tmp * c5 * d2) + 16.0 * a0 * a1 * a5 * c1 * c3 * d5) - b_mm_tmp_tmp * a5 * c1 * c4 * d4) + d520 * c1 * c5 * d3) + d521 * c3 * d4) + d549 * d3) + d522 * c4 * d2) + d522 * c5 * d1) - d551 * c5) + d539 * c5) + d523 * c2 * c3 * c4) - d525 * c4 * d5) - d525 * c5 * d4) - d526 * c3 * d5) + 64.0 * a0 * a2 * a3 * c2 * c4 * d4) - d526 * c5 * d3) - d540 * c5 * d2) - d552 * c5 * d1) + d250 * c3 * d5) + d550 * d3) + d553 * c5 * d1) - d554 * c5) - d541 * c5) + d555 * c5) + d528 * c2 * d5) + d528 * c5 * d2) - 64.0 * a0 * a3 * a4 * c2 * c4 * d2) + d542 * c5 * d1) - d534 * c5) - d543 * c5) + d545 * c5) - d514 * d3) - d513 * c3 * d2) + d535 * a5 * c1 * c4 * d1) - d512 * c2 * c3 * d1) - d536 * c5) + d538 * c5) + d547 * c5) - d533 * c1 * c2 * c3) + d548 * c5) + d530 * c2 * c3 * c4) - d556 * c1 * c2 * c3) + d557 * c4 * d5) + d557 * c5 * d4) + jd_mm_tmp * d0) - d515 * c3 * d4) - d280 * c0 * c4 * d3) - bd_mm_tmp * d0) + d228 * b3 * c0 * c4 * c5) - cd_mm_tmp * c0 * c3 * c4) - dd_mm_tmp * c1 * d5) - dd_mm_tmp * c2 * d4) - dd_mm_tmp * c4 * d2) - d575 * c5 * d1) - d558 * c1 * c5 * d0) - d570 * d0) + d580 * c5) - d576 * c5) - d560 * c2 * c4) + ed_mm_tmp * d3) + d516 * c3 * d2) + fd_mm_tmp * d0) - od_mm_tmp * c5) - pd_mm_tmp * c5) + qd_mm_tmp * c5) + d345 * c0 * c2 * c3) + d581 * c5) + d561 * c2 * c3 * c4) - 16.0 * a1 * a5 * b2 * c0 * c3 * c4) - d563 * c1 * c5) - d563 * c2 * c4) + d346 * c0 * c2 * c3) - d564 * c1 * d5) - d564 * c5 * d1) - d571 * d0) + d565 * c1 * d4) + d589 * d3) + d565 * c3 * d2) + d565 * c4 * d1) + d517 * d0) + d572 * d0) - d577 * c5) - d582 * c5) + d584 * c5) - d586 * c5) + d567 * c1 * c4) + d567 * c2 * c3) + d578 * c5) + d568 * b2 * c0 * c3 * c4) - d588 * c5) - d568 * b4 * c0 * c2 * c3) - d328 * c0 * c3 * c4) + d590 * c1 * c4) + d590 * c2 * c3) + d592 * c2 * c5) - d594 * c1 * c5) - gd_mm_tmp * c1 * c5) - gd_mm_tmp * c2 * c4) + hd_mm_tmp * c1 * c4) + hd_mm_tmp * c2 * c3) - id_mm_tmp * c1 * c2 * c3) + 16.0 * a4 * a5 * b1 * c0 * c2 * c3) + d596 * c4 * d5) + d596 * c5 * d4) + d527 * c4 * c5 * d0) + d603 * c5) - d597 * c3 * d4) - d612 * d3) - kd_mm_tmp * d0) + d604 * c5) - d533 * c0 * c3 * c4) - d556 * c0 * c3 * c4) + d605 * c5) - id_mm_tmp * c0 * c3 * c4) - d281 * c4 * d5) - d281 * c5 * d4) - jd_mm_tmp * d3) + d606 * c5 * d3) - h_mm_tmp * c5) + d569 * c3 * d4) + d570 * d3) + d558 * c3 * c4 * d2) - d607 * c5) + d559 * c2 * c3 * c4) - d350 * a5 * c2 * c3 * d3) + d562 * c2 * c3 * c4) - d252 * c3 * d5) - d571 * d3) - d251 * c5 * d1) - d572 * d3) - d608 * c5) + d610 * c5) + d611 * c5) - d573 * c5) - d574 * c5) + d599 * c2 * d3) + d599 * c3 * d2) + d598 * c2 * c3 * d1) - mm_tmp_tmp * c5) + d344 * b5 * c1 * c2 * c3) + d595 * c2 * c3 * c4) - d306 * b3 * c1 * c2 * c4) + d334 * b4 * c1 * c2 * c3) + d339 * b3 * c1 * c2 * c3) - d613 * c3 * c4 * d4) + c_mm_tmp * c5 * d3) + kd_mm_tmp * d3) - i_mm_tmp * c5) + j_mm_tmp * c5) - 12.0 * a3 * a5 * b3 * c0 * c3 * c5) + ld_mm_tmp * c0 * d2 * d4) + g_mm_tmp * d0 * d4) + ld_mm_tmp * c4 * d0 * d2) - md_mm_tmp * d2 * d3) - d257 * d0 * d3) - nd_mm_tmp * d0 * d2) - y_mm_tmp * c3 * d5) + b_mm_tmp_tmp * b0 * c1 * c4 * d4) - y_mm_tmp * c5 * d3) - jb_mm_tmp * c5 * d1) + ab_mm_tmp * c3 * d5) - b_mm_tmp_tmp * b1 * c0 * c4 * d4) + ab_mm_tmp * c5 * d3) + d659 * d0) + bb_mm_tmp * c2 * d4) + bb_mm_tmp * c4 * d2) + d660 * d0) - cb_mm_tmp * d3) - c_mm_tmp_tmp * c3 * d2) - d551 * d0) + d524 * c0 * d1 * d4) + d525 * d0 * d4) + d552 * d0 * d1) - w_mm_tmp * d1 * d3) - d250 * d0 * d3) - d553 * d0 * d1) - db_mm_tmp * d3) + eb_mm_tmp * d3) + fb_mm_tmp * c1 * d4) + fb_mm_tmp * c4 * d1) + d554 * d0) - gb_mm_tmp * d3) - d_mm_tmp_tmp * c3 * d1) - d555 * d0) - d661 * d0 * d1) - hb_mm_tmp * c2 * d4) - hb_mm_tmp * c4 * d2)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d634 * c5 * d1 + d283 * c2 * c3 * d2) - d632 * c2 * c4 * d1) + d616 * c2 * d4) + d616 * c4 * d2) + d626 * d0) + d529 * c1 * d4) + d529 * c4 * d1) + d534 * d0) - d633 * c2 * d2) - d268 * c0 * c1 * d1) + d629 * d3) + d618 * c3 * d2) - d535 * b0 * c1 * c4 * d1) + d617 * c2 * c3 * d1) - d630 * d3) - d619 * c3 * d2) - d536 * d0) - d631 * d3) - d537 * c3 * d1) - d538 * d0) + d535 * b4 * c0 * c1 * d1) + d284 * c1 * c3 * d1) - d627 * c0 * c1 * d1) - d635 * c5) - d620 * b3 * c1 * c2 * c4) + d628 * c1 * c2 * c3) + d360 * c0 * c2 * c4) - d361 * c0 * c2 * c3) + d621 * b3 * c0 * c1 * c4) - d621 * b4 * c0 * c1 * c3) - d600 * a3 * c0 * d0 * d4) + d601 * d0 * d3) - d600 * b3 * c0 * c4 * d0) + d_mm_tmp * d0) + d575 * d0 * d1) + d623 * c2 * d4) + d623 * c4 * d2) + m_mm_tmp * d0) - d285 * c5 * d0) - d265 * b2 * c0 * c4 * d0) + d576 * d0) - d636 * c2 * d3) - d636 * c3 * d2) - od_mm_tmp * d0) + pd_mm_tmp * d0) + d350 * b2 * c0 * c3 * d0) - qd_mm_tmp * d0) - sd_mm_tmp * d0) + 16.0 * a1 * a5 * b3 * c0 * c1 * d0) + d369 * c5) + d641 * c0 * c2 * c4) - d370 * c0 * c2 * c3) + d566 * c1 * d4) + d566 * c4 * d1) + d577 * d0) - d264 * b1 * c0 * c4 * d0) - d248 * d0) + d642 * d0) - d645 * d3) - d309 * c3 * d1) - d578 * d0) + d299 * d0) + d637 * b3 * c0 * c1 * c4) - d637 * b4 * c0 * c1 * c3) - d643 * c0 * c1 * d1) + 16.0 * a3 * a5 * b1 * c0 * c1 * d0) + d644 * c0 * c2 * c4) + d638 * b2 * c0 * c1 * c4) - d382 * c0 * c2 * c3) - d381 * b2 * c0 * c1 * c3) - d596 * d0 * d4) + d646 * d0 * d3) - d286 * c3 * d5) + d283 * c0 * c4 * d4) - d286 * c5 * d3) - d649 * d0) + d650 * d0) - d603 * d0) + d262 * d0) + d640 * c3 * d4) + d647 * d3) + d639 * d0) - d604 * d0) - d355 * d0) - d648 * d3) + d651 * d0) - d652 * c5) + d624 * b4 * c0 * c3 * c4) - d605 * d0) + d653 * d0) - rd_mm_tmp * d3) + f_mm_tmp * d3) + d518 * b1 * c2 * c3 * d2) - d518 * b3 * c1 * c2 * d2) - d519 * b2 * c1 * c3 * d1) + d519 * b3 * c1 * c2 * d1) - g_mm_tmp * d3 * d4) - ld_mm_tmp * c3 * d2 * d4) - 16.0 * a0 * a1 * a3 * c4 * d2 * d3) + d261 * a4 * c3 * d2 * d3) - d522 * d1 * d3) + d659 * d3) - d655 * c3 * d4) - d660 * d3) - d654 * c3 * c4 * d2) + d261 * b4 * c2 * c3 * d3) - d539 * d3) + d540 * d2 * d3) + d541 * d3) - d528 * d2 * d3) - d542 * d1 * d3) - d527 * c3 * d1 * d2) + d661 * d1 * d3) - d625 * c3 * d4) - d626 * d3) - d615 * c3 * c4 * d2) + d543 * d3) + d657 * c2 * d4) + d657 * c4 * d2) - d662 * c5 * d1) - d329 * c2 * c3 * d2) + d656 * c2 * c4 * d1) - d545 * d3) - d544 * c3 * d2) - d531 * c2 * c3 * d1) + d268 * c1 * c3 * d1) + d269 * b1 * c2 * c3 * d3) - d547 * d3) - d546 * c3 * d2) - d532 * c2 * c3 * d1) - d548 * d3) + d627 * c1 * c3 * d1) - d360 * c2 * c3 * c4) - 16.0 * a0 * b3 * b4 * c1 * c2 * c3) + d557 * d3 * d4) + d281 * d0 * d4) + d282 * d0 * d3) - d606 * d0 * d3) + d663 * c3 * d4) + d663 * c4 * d3) + h_mm_tmp * d0) - d_mm_tmp * d3) - l_mm_tmp * c3 * d4) - m_mm_tmp * d3) - d622 * c3 * c4 * d2) - d285 * c3 * d5) - 16.0 * a1 * a3 * b1 * c0 * c5 * d3) - 16.0 * a1 * a3 * b1 * c3 * c5 * d0) + d579 * c3 * d4) + d580 * d3) + d607 * d0) + d664 * c1 * d5) + d664 * c5 * d1) + d279 * c1 * c5 * d0) + d350 * b0 * c2 * c3 * d3) - 32.0 * a1 * a4 * b2 * c0 * c3 * d3) - d581 * d3) + sd_mm_tmp * d3) - d641 * c2 * c3 * c4) - d665 * c5) + e_mm_tmp * c0 * c3 * c4) + d564 * d1 * d3) + d252 * d0 * d3) + d251 * d0 * d1) + d582 * d3) + d583 * c3 * d4) + d584 * d3) + d608 * d0) + d248 * d3) - d609 * c1 * d4) - d642 * d3) - d602 * c3 * d2) - d609 * c4 * d1) - d610 * d0) - d611 * d0) + d586 * d3) + d585 * c3 * d1) + d573 * d0) - d299 * d3) + d588 * d3) + d587 * c3 * d1) + d574 * d0) + d375 * c0 * c3 * c4) + 16.0 * a2 * b3 * b4 * c0 * c1 * c3) - 16.0 * a3 * a4 * b0 * c1 * c2 * d3) - d592 * c3 * d2) - d591 * c2 * c3 * d1) + 16.0 * a3 * a4 * b2 * c0 * c1 * d3) + d594 * c3 * d1) + mm_tmp_tmp * d0) + d643 * c1 * c3 * d1) - mm_tmp * c1 * d1) - d644 * c2 * c3 * c4) + 32.0 * a3 * b0 * b3 * c1 * c2 * c4) - d638 * b4 * c1 * c2 * c3) + 16.0 * a3 * b1 * b2 * c0 * c3 * c4) + k_mm_tmp * c5) - b_mm_tmp * c0 * c1 * c4) - ib_mm_tmp * b3 * c0 * c2 * c3) + ib_mm_tmp * b4 * c0 * c1 * c3) - d381 * b3 * c1 * c2 * c3) + 16.0 * a4 * b2 * b3 * c0 * c1 * c3) - c_mm_tmp * d0 * d3) + d283 * c3 * c4 * d4) - d649 * d3) + d289 * c3 * d5) - d633 * c4 * d4) + d650 * d3) + d288 * c3 * c5 * d0) - d262 * d3) - d639 * d3) + d355 * d3) - d651 * d3) + i_mm_tmp * d0) - j_mm_tmp * d0) - d653 * d3) + d349 * c0 * c3 * d0) + kb_mm_tmp * c5) + jb_mm_tmp * d1 * d3) - d658 * d0 * d3) - d634 * d1 * d3) + d662 * d0 * d1) + d635 * d3) - d624 * b3 * c1 * c3 * d1) + d285 * d0 * d3) - d664 * d0 * d1) - d369 * d3) + d665 * d0) + d638 * b3 * c0 * c1 * d1) - k_mm_tmp * d0) + d287 * d0 * d3) - d289 * d0 * d3) + d652 * d3) - kb_mm_tmp * d0);
}

//
double coeff7(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b2,
              double b3, double b4, double b5, double c0, double c1, double c2, double c3, double c4, double c5,
              double d0, double d1, double d2, double d3, double d4, double d5) {
    double ab_mm_tmp;
    double b_d1;
    double b_d2;
    double b_d3;
    double b_d4;
    double b_d5;
    double b_mm_tmp;
    double b_mm_tmp_tmp;
    double bb_mm_tmp;
    double c_mm_tmp;
    double c_mm_tmp_tmp;
    double cb_mm_tmp;
    double d;
    double d10;
    double d100;
    double d101;
    double d102;
    double d103;
    double d104;
    double d105;
    double d106;
    double d107;
    double d108;
    double d109;
    double d11;
    double d110;
    double d111;
    double d112;
    double d113;
    double d114;
    double d115;
    double d116;
    double d117;
    double d118;
    double d119;
    double d12;
    double d120;
    double d121;
    double d122;
    double d123;
    double d124;
    double d125;
    double d126;
    double d127;
    double d128;
    double d129;
    double d13;
    double d130;
    double d131;
    double d132;
    double d133;
    double d134;
    double d135;
    double d136;
    double d137;
    double d138;
    double d139;
    double d14;
    double d140;
    double d141;
    double d142;
    double d143;
    double d144;
    double d145;
    double d146;
    double d147;
    double d148;
    double d149;
    double d15;
    double d150;
    double d151;
    double d152;
    double d153;
    double d154;
    double d155;
    double d156;
    double d157;
    double d158;
    double d159;
    double d16;
    double d160;
    double d161;
    double d162;
    double d163;
    double d164;
    double d165;
    double d166;
    double d167;
    double d168;
    double d169;
    double d17;
    double d170;
    double d171;
    double d172;
    double d173;
    double d174;
    double d175;
    double d176;
    double d177;
    double d178;
    double d179;
    double d18;
    double d180;
    double d181;
    double d182;
    double d183;
    double d184;
    double d185;
    double d186;
    double d187;
    double d188;
    double d189;
    double d19;
    double d190;
    double d191;
    double d192;
    double d193;
    double d194;
    double d195;
    double d196;
    double d197;
    double d198;
    double d199;
    double d20;
    double d200;
    double d201;
    double d202;
    double d203;
    double d204;
    double d205;
    double d206;
    double d207;
    double d208;
    double d209;
    double d21;
    double d210;
    double d211;
    double d212;
    double d213;
    double d214;
    double d215;
    double d216;
    double d217;
    double d218;
    double d219;
    double d22;
    double d220;
    double d221;
    double d222;
    double d223;
    double d224;
    double d225;
    double d226;
    double d23;
    double d24;
    double d25;
    double d26;
    double d27;
    double d28;
    double d29;
    double d30;
    double d31;
    double d32;
    double d33;
    double d34;
    double d35;
    double d36;
    double d37;
    double d38;
    double d39;
    double d40;
    double d41;
    double d42;
    double d43;
    double d44;
    double d45;
    double d46;
    double d47;
    double d48;
    double d49;
    double d50;
    double d51;
    double d52;
    double d53;
    double d54;
    double d55;
    double d56;
    double d57;
    double d58;
    double d59;
    double d6;
    double d60;
    double d61;
    double d62;
    double d63;
    double d64;
    double d65;
    double d66;
    double d67;
    double d68;
    double d69;
    double d7;
    double d70;
    double d71;
    double d72;
    double d73;
    double d74;
    double d75;
    double d76;
    double d77;
    double d78;
    double d79;
    double d8;
    double d80;
    double d81;
    double d82;
    double d83;
    double d84;
    double d85;
    double d86;
    double d87;
    double d88;
    double d89;
    double d9;
    double d90;
    double d91;
    double d92;
    double d93;
    double d94;
    double d95;
    double d96;
    double d97;
    double d98;
    double d99;
    double d_mm_tmp;
    double db_mm_tmp;
    double e_mm_tmp;
    double eb_mm_tmp;
    double f_mm_tmp;
    double fb_mm_tmp;
    double g_mm_tmp;
    double gb_mm_tmp;
    double h_mm_tmp;
    double hb_mm_tmp;
    double i_mm_tmp;
    double ib_mm_tmp;
    double j_mm_tmp;
    double jb_mm_tmp;
    double k_mm_tmp;
    double kb_mm_tmp;
    double l_mm_tmp;
    double lb_mm_tmp;
    double m_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    double n_mm_tmp;
    double o_mm_tmp;
    double p_mm_tmp;
    double q_mm_tmp;
    double r_mm_tmp;
    double s_mm_tmp;
    double t_mm_tmp;
    double u_mm_tmp;
    double v_mm_tmp;
    double w_mm_tmp;
    double x_mm_tmp;
    double y_mm_tmp;
    d = a5 * a5;
    b_d1 = std::pow(c0, 3.0);
    b_d2 = std::pow(c3, 3.0);
    b_d3 = a2 * a2;
    b_d4 = 4.0 * b_d3;
    b_d5 = a4 * a4;
    mm_tmp = 4.0 * b_d5;
    d6 = 3.0 * a0 * d;
    d7 = b_d4 * a5;
    d8 = 3.0 * a3 * d;
    d9 = mm_tmp * a5;
    d10 = b3 * b3;
    d11 = b0 * b0;
    d12 = mm_tmp * b3;
    d13 = b_d4 * b0;
    d14 = a0 * a0;
    d15 = 3.0 * d14;
    d16 = d15 * b5;
    d17 = a3 * a3;
    d18 = 3.0 * d17;
    d19 = d18 * b5;
    d20 = std::pow(a0, 3.0);
    d21 = 3.0 * d20;
    d22 = d21 * c3;
    d23 = c5 * c5;
    d24 = std::pow(a3, 3.0);
    d25 = 3.0 * d24;
    d26 = c4 * c4;
    d27 = c2 * c2;
    d28 = c0 * c0;
    d29 = c3 * c3;
    d30 = a1 * a1;
    d31 = 16.0 * a0 * b_d3;
    d32 = 16.0 * a0 * b_d5;
    d33 = c1 * c1;
    d34 = 4.0 * d14;
    d35 = 4.0 * a1 * d;
    d36 = 16.0 * d14;
    d37 = d34 * a5;
    d38 = 16.0 * a2 * b_d5;
    d39 = 64.0 * d30;
    d40 = 16.0 * b_d3;
    d41 = d40 * a3;
    d42 = 4.0 * a0 * b_d5;
    d43 = 16.0 * a3 * b_d5;
    d44 = 4.0 * a0 * d30;
    d45 = d44 * c0;
    d46 = d3 * d3;
    d47 = 16.0 * a0 * d30 * d26;
    d48 = d15 * a3;
    d49 = 6.0 * a0 * a5;
    d50 = 8.0 * a3 * a4;
    b_mm_tmp = 6.0 * a3 * a5;
    d51 = 8.0 * a0 * b_d3;
    d52 = 8.0 * a0 * d17;
    d53 = 6.0 * a0 * d17;
    d54 = d53 * c0;
    d55 = 8.0 * a0 * d30;
    d56 = d55 * c3;
    c_mm_tmp = 8.0 * d30;
    d57 = c_mm_tmp * a3;
    d58 = d57 * c0;
    d59 = d0 * d0;
    d60 = d48 * c0;
    d61 = d42 * d28;
    d62 = 8.0 * a0 * a2;
    d63 = d62 * b2;
    d64 = d49 * b0;
    d65 = d34 * a3;
    d66 = d65 * d27;
    d67 = d36 * a4;
    d68 = 16.0 * d30;
    d69 = 8.0 * d14;
    d70 = 4.0 * d30;
    d71 = 6.0 * d14;
    d72 = 4.0 * d17;
    d73 = d72 * a5;
    d_mm_tmp = d70 * a5;
    d74 = 4.0 * a0 * d17;
    d75 = 16.0 * a2 * d17;
    d76 = 4.0 * (a2 * a2) * a3 * d29;
    d77 = 16.0 * d17;
    d78 = d37 * d33;
    d79 = d70 * a3;
    d80 = d68 * a3 * d27;
    d81 = d_mm_tmp * d28;
    d82 = d41 * d33;
    d83 = d73 * d33;
    d84 = d71 * a5;
    d85 = 8.0 * a3 * b_d5;
    d86 = 8.0 * d17;
    d87 = 6.0 * d17;
    d88 = d87 * a5;
    d89 = d71 * a3;
    d90 = d69 * a3;
    d91 = d89 * c3;
    d92 = 16.0 * b_d5;
    d93 = 3.0 * a0 * d17;
    d94 = d93 * c3;
    d95 = d74 * d26;
    d42 *= d29;
    d96 = b1 * b1;
    d97 = d1 * d1;
    d98 = d79 * c3;
    d99 = d69 * a5;
    d100 = d86 * a5 * c0;
    d101 = b_d4 * b3;
    d102 = d34 * b3;
    d103 = d72 * b0;
    d104 = 9.0 * d14;
    d105 = 9.0 * d17;
    d106 = d104 * b0 * d29;
    d107 = d18 * b0 * d28;
    d108 = d102 * d33;
    d109 = d77 * b2;
    d110 = d36 * b4;
    d111 = d103 * d33;
    d112 = d15 * b3 * d29;
    d113 = d105 * b3 * d28;
    e_mm_tmp = 16.0 * a1 * a2;
    d114 = 8.0 * a0 * a3;
    d115 = d114 * a5;
    f_mm_tmp = e_mm_tmp * a4;
    d116 = 8.0 * a2 * a3;
    d117 = 6.0 * a0 * a3;
    g_mm_tmp = d117 * a5;
    d118 = g_mm_tmp * d28;
    d119 = 8.0 * a0 * a4;
    d120 = e_mm_tmp * a5;
    d121 = 32.0 * a0 * a3;
    d122 = 32.0 * a0 * a1;
    d123 = d65 * d26;
    d124 = f_mm_tmp * d28;
    d125 = 32.0 * a2 * a3;
    d126 = 32.0 * a0 * a4;
    d127 = 16.0 * a1 * a4;
    d128 = d127 * b2;
    d129 = 32.0 * a1 * a4;
    d130 = 8.0 * a1 * a5;
    d131 = d130 * b1;
    d132 = d116 * b2;
    d133 = 16.0 * a2 * a4;
    d134 = d133 * b1;
    d135 = d117 * b5;
    d136 = d119 * b4;
    d49 *= b3;
    d137 = b_mm_tmp * b0;
    d138 = d114 * b3;
    d139 = 8.0 * a3 * a5;
    d140 = d117 * b0 * d29;
    d141 = 8.0 * a1 * a3;
    d117 = d117 * b3 * d28;
    d142 = 16.0 * a2 * a3;
    d143 = d127 * b0;
    d144 = d115 * d33;
    d145 = d142 * b1;
    d146 = d125 * b3;
    d147 = d138 * d33;
    d148 = d114 * b5;
    d149 = 8.0 * a0 * a5;
    d150 = d149 * b3;
    d151 = d139 * b0;
    d152 = 8.0 * a0 * b0;
    d153 = 32.0 * d30;
    d154 = 32.0 * a1 * b_d5 * c0 * c1;
    d155 = 8.0 * a2 * d17;
    d156 = d51 * c0 * c3;
    d157 = d52 * c0;
    d158 = d54 * c5;
    d159 = d69 * a4;
    d160 = d159 * c0;
    d161 = 8.0 * b_d3 * a3 * c0 * c3;
    d162 = d86 * a4 * c0 * c4;
    d163 = d88 * c0 * c3;
    d164 = d114 * b0;
    d165 = d164 * d33;
    d166 = d141 * b1 * d28;
    d167 = 8.0 * a0 * b_d5 * c0 * c3;
    d168 = 32.0 * a1 * b_d3 * c1 * c3;
    d169 = d155 * c0;
    d170 = d169 * c2;
    d171 = d75 * c1 * c4;
    d155 = d155 * c2 * c3;
    d172 = d85 * c0 * c3;
    d173 = d69 * a2 * c2 * c3;
    d174 = d67 * c1;
    d175 = d174 * c2;
    d176 = 32.0 * b_d3;
    d55 *= c0;
    d177 = d86 * b1 * c0 * c1;
    d89 *= c0;
    d87 = d87 * b0 * c0 * c3;
    d178 = c_mm_tmp * b3 * c0 * c3;
    d179 = 16.0 * a0 * a1;
    d180 = 16.0 * a0 * a2;
    d181 = d179 * a4;
    d182 = d179 * a5;
    d183 = d180 * a3;
    d184 = d180 * a4;
    d185 = d181 * c0;
    d186 = d185 * c2;
    d187 = d181 * c2 * c3;
    d188 = d183 * c1 * c4;
    d189 = d184 * c0;
    d190 = d189 * c1;
    d191 = d52 * c1;
    d192 = 8.0 * a1 * d17;
    d193 = d192 * c0;
    h_mm_tmp = d69 * a1;
    d194 = h_mm_tmp * c3;
    d195 = d90 * c1;
    d196 = d69 * b1 * c1 * c3;
    d184 = d184 * c1 * c3;
    d197 = 16.0 * a0 * a3;
    d198 = d197 * a4;
    d199 = d198 * c1;
    d200 = 16.0 * a0 * a4;
    d201 = d200 * a5;
    d202 = e_mm_tmp * a3;
    d203 = d202 * c0;
    d204 = 16.0 * a1 * a3;
    d205 = d204 * a5;
    d206 = d179 * a3;
    d207 = d206 * c0;
    d208 = d183 * c0;
    d209 = 32.0 * a1 * a2;
    d210 = d198 * c0 * c4;
    d211 = d206 * c2;
    d212 = d126 * b0;
    d213 = d179 * b4;
    d214 = d200 * b1;
    d215 = d197 * a5;
    d216 = d197 * b1;
    d217 = d202 * c3 * c4;
    d218 = d209 * a4 * c0 * c3;
    d219 = d204 * b0;
    d220 = d142 * a4;
    d221 = d220 * c1 * c3;
    d222 = 16.0 * a3 * a4;
    d223 = d179 * b0 * c1 * c3;
    d224 = d179 * b1 * c0 * c3;
    i_mm_tmp = 12.0 * a0 * a3;
    d225 = i_mm_tmp * a5 * c0 * c3;
    d226 = i_mm_tmp * b0 * c0 * c3;
    j_mm_tmp = d103 * c0;
    k_mm_tmp = mm_tmp * b0;
    mm_tmp_tmp = 8.0 * a0 * a1;
    l_mm_tmp = d138 * c0;
    m_mm_tmp = e_mm_tmp * b4;
    b_mm_tmp_tmp = 16.0 * a0 * d17;
    n_mm_tmp = b_mm_tmp_tmp * c1;
    o_mm_tmp = d75 * c0;
    p_mm_tmp = h_mm_tmp * c1;
    c_mm_tmp_tmp = d36 * a3;
    q_mm_tmp = c_mm_tmp_tmp * c1;
    r_mm_tmp = 32.0 * d14;
    s_mm_tmp = e_mm_tmp * b3;
    t_mm_tmp = d204 * b1 * c0 * c3;
    u_mm_tmp = d204 * b3 * c0 * c1;
    v_mm_tmp = i_mm_tmp * b3 * c0 * c3;
    w_mm_tmp = d32 * d33;
    x_mm_tmp = 4.0 * a1 * d17 * c1;
    y_mm_tmp = d74 * d27;
    ab_mm_tmp = d_mm_tmp * d29;
    bb_mm_tmp = 4.0 * d30 * b5;
    cb_mm_tmp = d70 * b0 * d29;
    db_mm_tmp = d116 * a5;
    eb_mm_tmp = f_mm_tmp * d29;
    fb_mm_tmp = 32.0 * a1 * a3;
    gb_mm_tmp = g_mm_tmp * d29;
    hb_mm_tmp = d50 * b4;
    ib_mm_tmp = b_mm_tmp * b3;
    jb_mm_tmp = d153 * a4 * c0 * c4;
    kb_mm_tmp = d56 * c5;
    lb_mm_tmp = d58 * c5;
    i_mm_tmp = c_mm_tmp * a5 * c0 * c3;
    d_mm_tmp = d91 * c5;
    f_mm_tmp = d159 * c3 * c4;
    g_mm_tmp = 8.0 * d30 * b0 * c0 * c3;
    b_mm_tmp = d71 * b3 * c0 * c3;
    c_mm_tmp = d205 * c0;
    h_mm_tmp = d127 * a5;
    e_mm_tmp = d142 * a5 * c0;
    mm_tmp = d204 * b2;
    return ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d8 * b_d1 - d6 * b_d2) - d9 * b_d1) + d7 * b_d2) - 3.0 * a0 * d11 * b_d2) - d13 * b_d2) + 3.0 * a3 * d10 * b_d1) + d12 * b_d1) + d16 * b_d2) - d19 * b_d1) - d22 * d23) + d25 * c0 * d23) + 4.0 * d20 * d26 * c5) - 4.0 * d24 * d27 * c5) + 3.0 * std::pow(a3, 3.0) * c0 * d59) + 4.0 * std::pow(a3, 3.0) * d27 * d0) - d22 * d46) - 4.0 * std::pow(a0, 3.0) * (c4 * c4) * d3) + d21 * d29 * d5) - d25 * d28 * d5) - d63 * b_d2) + d64 * b_d2) + hb_mm_tmp * b_d1) - ib_mm_tmp * b_d1) + 8.0 * d24 * c0 * c2 * d2) - 6.0 * d24 * c0 * c5 * d0) - 8.0 * d20 * c3 * c4 * d4) + 6.0 * d20 * c3 * c5 * d3) - d45 * d23) + d31 * c0 * d26) - d32 * c0 * d27) + 4.0 * a0 * d * c0 * d33) - d35 * d28 * c1) + d34 * a1 * c1 * d23) - d54 * d23) + 6.0 * a0 * d * c0 * d29) - d6 * d28 * c3) + 64.0 * a1 * b_d3 * c1 * d26) - 64.0 * a1 * b_d5 * c1 * d27) + d38 * d28 * c2) - d36 * a2 * c2 * d26) + d60 * d23) - d56 * d23) - d31 * c3 * d26) + d61 * c5) + d32 * d27 * c3) - 8.0 * a0 * d * d33 * c3) + 64.0 * a2 * b_d5 * d33 * c2) + d43 * c0 * d27) + 8.0 * a3 * d * c0 * d33) - d37 * c0 * d26) - d39 * a2 * c2 * d26) + d58 * d23) - d41 * c0 * d26) + d47 * c5) + d51 * d29 * c5) + d52 * d27 * c5) - w_mm_tmp * c5) - x_mm_tmp * d23) + d35 * c1 * d29) - d66 * c5) + d67 * d27 * c4) - d37 * d27 * c3) + d68 * a5 * c0 * d26) + b_d4 * a3 * d28 * c5) - 16.0 * b_d3 * a4 * d28 * c4) - 8.0 * b_d3 * a5 * c0 * d29) + d7 * d28 * c3) - d100 * d27) - d92 * a5 * c0 * d33) - d94 * d23) - d75 * c2 * d26) + d38 * c2 * d29) + d8 * c0 * d29) - 6.0 * a3 * d * d28 * c3) + d91 * d23) - d78 * c5) - d80 * c5) + d39 * a4 * d27 * c4) + d81 * c5) - 16.0 * (a1 * a1) * a5 * d27 * c3) + d82 * c5) - 64.0 * b_d3 * a4 * d33 * c4) + d40 * a5 * d33 * c3) + d95 * c5) - d42 * c5) - d85 * d28 * c5) - d43 * d27 * c3) - 4.0 * a3 * d * d33 * c3) - d90 * d26 * c5) + d99 * c3 * d26) + d98 * d23) + d41 * c3 * d26) + d73 * c0 * d26) - d9 * c0 * d29) + 8.0 * b_d5 * a5 * d28 * c3) - d84 * d29 * c5) - d76 * c5) - 16.0 * (a2 * a2) * a4 * d29 * c4) + d77 * a4 * d27 * c4) + d88 * d28 * c5) + d73 * d27 * c3) - ab_mm_tmp * c5) + d83 * c5) - d45 * d46) + d74 * c0 * d97) - 4.0 * a0 * d96 * c0 * d29) + 4.0 * a0 * d10 * c0 * d33) - d47 * d0) + 4.0 * a0 * b_d3 * d29 * d0) - y_mm_tmp * d0) + w_mm_tmp * d0) - x_mm_tmp * d59) + 4.0 * a1 * d11 * c1 * d29) - 4.0 * a1 * d10 * d28 * c1) + 4.0 * d14 * a1 * c1 * d46) - 16.0 * (a1 * a1) * b0 * c0 * d26) + d13 * c0 * d29) - j_mm_tmp * d27) + d92 * b0 * c0 * d33) - d94 * d59) - 3.0 * a0 * d10 * d28 * c3) - 16.0 * a1 * b_d5 * d28 * d1) + 3.0 * a3 * d11 * c0 * d29) + d36 * a1 * d26 * d1) + d60 * d46) + d36 * b1 * c1 * d26) - d92 * b1 * d28 * c1) - d95 * d0) - d61 * d3) + d42 * d0) + 16.0 * a1 * b_d3 * d29 * d1) - 16.0 * a1 * d17 * d27 * d1) + 4.0 * a2 * d17 * d28 * d2) + 12.0 * a3 * b_d5 * d28 * d0) - 4.0 * a3 * d11 * d33 * c3) + 4.0 * a3 * d96 * d28 * c3) - d34 * a2 * d29 * d2) - d65 * c3 * d97) + d123 * d0) - 12.0 * d14 * b0 * c3 * d26) - d34 * b2 * c2 * d29) + d102 * c0 * d26) + d98 * d59) + d40 * b1 * c1 * d29) - j_mm_tmp * d26) - d77 * b1 * c1 * d27) + d72 * b2 * d28 * c2) + k_mm_tmp * c0 * d29) - k_mm_tmp * d28 * c3) - 12.0 * a0 * b_d3 * d29 * d3) + d93 * d28 * d5) - y_mm_tmp * d3) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d75 * d33 * d2 + d66 * d3) - d15 * a5 * d29 * d0) + d106 * c5) + d102 * d27 * c3) - d16 * c0 * d29) - d68 * a2 * d29 * d2) - d68 * b2 * c2 * d29) - 4.0 * (a2 * a2) * a3 * (c0 * c0) * d3) + d76 * d0) + d101 * c0 * d29) - d101 * d28 * c3) - d105 * a5 * d28 * d0) + d107 * c5) - d103 * d27 * c3) + d109 * d33 * c2) + 12.0 * d17 * b3 * c0 * d27) + d44 * d29 * d5) - d74 * d33 * d5) + d65 * d33 * d5) - d67 * d33 * d4) + d78 * d3) + d108 * c5) - d110 * d33 * c4) + d34 * b5 * d33 * c3) - d79 * d28 * d5) + d80 * d3) + d68 * a4 * d28 * d4) - d81 * d3) + ab_mm_tmp * d0) + cb_mm_tmp * c5) - d70 * b3 * d28 * c5) + d68 * b3 * d27 * c3) + 16.0 * d30 * b4 * d28 * c4) + bb_mm_tmp * c0 * d29) - bb_mm_tmp * d28 * c3) - d82 * d3) - d40 * b3 * d33 * c3) - d83 * d0) - d111 * c5) - d72 * b5 * c0 * d33) - 4.0 * a3 * b_d5 * d28 * d3) + d123 * d3) + d102 * c3 * d26) - d12 * d28 * c3) - d48 * d29 * d5) - d34 * a4 * d29 * d4) + d104 * a5 * d29 * d3) - d112 * c5) - d34 * b4 * d29 * c4) + d72 * a4 * d28 * d4) + d18 * a5 * d28 * d3) - d113 * c5) + d72 * b4 * d28 * c4) + d19 * d28 * c3) - cb_mm_tmp * d0) + d111 * d0) + d34 * b1 * d29 * d1) - d72 * b1 * d28 * d1) - d106 * d3) + d112 * d0) - d107 * d3) + d113 * d0) - d108 * d3) + 4.0 * (a1 * a1) * b3 * (c0 * c0) * d3) + d115 * c0 * d27) - d122 * a5 * c1 * d26) + 32.0 * a0 * a2 * a3 * c2 * d26) - d124 * c5) + d120 * d28 * c4) + fb_mm_tmp * a5 * c1 * d27) - db_mm_tmp * d28 * c2) - d121 * a4 * d27 * c4) - d118 * c5) + d119 * a5 * d28 * c4) - d125 * a5 * d33 * c2) + d126 * a5 * d33 * c4) - d115 * c3 * d26) + eb_mm_tmp * c5) - h_mm_tmp * c2 * d29) - db_mm_tmp * c2 * d29) + gb_mm_tmp * c5) + 8.0 * a0 * a4 * a5 * d29 * c4) + d122 * b0 * c1 * d26) - d122 * b1 * c0 * d26) - d62 * b0 * c2 * d29) + d63 * c0 * d29) + d164 * c0 * d26) + d164 * d27 * c3) - l_mm_tmp * d27) - d64 * c0 * d29) - d144 * d0) + d165 * c5) - d148 * c0 * d33) - d212 * d33 * c4) + d126 * b4 * c0 * d33) + d149 * b0 * d33 * c3) - d150 * c0 * d33) - d209 * b1 * c2 * d29) + d209 * b2 * c1 * d29) - d151 * c0 * d33) + d181 * d29 * d2) - mm_tmp_tmp * a5 * d29 * d1) + mm_tmp_tmp * b1 * d29 * c5) + d213 * c2 * d29) - mm_tmp_tmp * b5 * c1 * d29) + d62 * a3 * d29 * d2) + d62 * b3 * c2 * d29) + d164 * c3 * d26) + d114 * b2 * c2 * d29) - l_mm_tmp * d26) + d214 * c2 * d29) - d149 * b1 * c1 * d29) - d202 * d28 * d4) + d124 * d3) - eb_mm_tmp * d0) - s_mm_tmp * d28 * c4) - m_mm_tmp * c0 * d29) + m_mm_tmp * d28 * c3) + d141 * a5 * d28 * d1) - d166 * c5)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((fb_mm_tmp * b1 * d27 * c3 - mm_tmp * d28 * c4) - fb_mm_tmp * b3 * c1 * d27) + d141 * b5 * d28 * c1) + d143 * c2 * d29) + d129 * b1 * d28 * c4) - d128 * c0 * d29) + d128 * d28 * c3) - d129 * b4 * d28 * c1) - d130 * b0 * c1 * d29) + d131 * c0 * d29) - d131 * d28 * c3) + d130 * b3 * d28 * c1) + d116 * b0 * c2 * d29) - d145 * d28 * c4) + d132 * c0 * d29) - d132 * d28 * c3) + d116 * b3 * d28 * c2) - d134 * c0 * d29) + d134 * d28 * c3) + d139 * b1 * d28 * c1) - d114 * a4 * d28 * d4) + d118 * d3) - gb_mm_tmp * d0) - d140 * c5) + d117 * c5) - d138 * d27 * c3) - d114 * b4 * d28 * c4) - d135 * c0 * d29) + d135 * d28 * c3) - d119 * b0 * d29 * c4) - d119 * b3 * d28 * c4) + d136 * c0 * d29) - d136 * d28 * c3) - d49 * c0 * d29) + d49 * d28 * c3) - d125 * b2 * d33 * c3) + d146 * d33 * c2) - d50 * b0 * d28 * c4) - d137 * c0 * d29) + d137 * d28 * c3) + d144 * d3) - d147 * c5) + d148 * d33 * c3) + d150 * d33 * c3) + d151 * d33 * c3) - d139 * b3 * c0 * d33) + d50 * b3 * d28 * c4) - hb_mm_tmp * d28 * c3) + ib_mm_tmp * d28 * c3) + mm_tmp_tmp * b0 * d29 * d1) - 8.0 * a0 * a1 * b1 * d29 * d0) + d152 * b1 * c1 * d29) - 8.0 * a1 * b0 * b1 * c0 * d29) + d140 * d0) + 6.0 * a0 * b0 * b3 * c0 * d29) - d165 * d3) + d147 * d0) - d152 * b3 * d33 * c3) + 8.0 * a3 * b0 * b3 * c0 * d33) + d166 * d3) - d141 * b3 * d28 * d1) + 8.0 * a1 * b1 * b3 * d28 * c3) - 8.0 * a3 * b1 * b3 * d28 * c1) - d117 * d3) - 6.0 * a3 * b0 * b3 * d28 * c3) - d156 * c5) + d154 * c5) - 32.0 * a2 * b_d5 * c0 * c2 * c3) - d168 * c5) + d173 * c5) - d175 * c5) + d36 * a5 * c1 * c2 * c4) - d160 * c4 * c5) + d84 * c0 * c3 * c5) + d153 * a2 * c2 * c3 * c5) + d176 * a4 * c0 * c3 * c4) - jb_mm_tmp * c5) + d171 * c5) + d155 * c5) + d172 * c5) - d77 * a5 * c1 * c2 * c4) - d162 * c5) - d163 * c5) + 32.0 * a0 * b_d5 * c0 * c1 * d1) - d154 * d0) - d157 * c2 * d2) - d167 * d0) + d170 * d0) + d156 * d3) + d158 * d0) - d161 * d0) + d55 * c3 * d5) - 32.0 * a0 * d30 * c0 * c4 * d4) + d55 * c5 * d3) + kb_mm_tmp * d0) - 32.0 * a1 * d17 * c1 * c2 * d2) + 32.0 * a2 * d17 * c1 * c2 * d1) - lb_mm_tmp * d0) + jb_mm_tmp * d0) - i_mm_tmp * d0) + g_mm_tmp * c5) + n_mm_tmp * c2 * d4) + n_mm_tmp * c4 * d2) - d191 * c5 * d1) - d52 * c2 * c3 * d2) + b_mm_tmp_tmp * c2 * c4 * d1) + d167 * d3) + d168 * d3) + d193 * c1 * d5) + d193 * c5 * d1) + d192 * c1 * c5 * d0) - o_mm_tmp * c1 * d4) - d170 * d3) - d169 * c3 * d2) - o_mm_tmp * c4 * d1) - d171 * d0) - d155 * d0) - d172 * d0) - p_mm_tmp * c3 * d5) + r_mm_tmp * a1 * c1 * c4 * d4) - p_mm_tmp * c5 * d3) - d194 * c5 * d1) - d173 * d3) - q_mm_tmp * c2 * d4) - q_mm_tmp * c4 * d2) + d195 * c5 * d1) + d90 * c2 * c3 * d2) - c_mm_tmp_tmp * c2 * c4 * d1) + d175 * d3) + d174 * c3 * d2) - r_mm_tmp * a4 * c1 * c4 * d1) + d67 * c2 * c3 * d1) + d99 * c1 * c3 * d1) - d196 * c5) - d36 * b3 * c1 * c2 * c4) + d110 * c1 * c2 * c3) - d176 * a3 * c1 * c3 * d1) - d100 * c1 * d1)) + ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d77 * b0 * c1 * c2 * c4 + d177 * c5) - d109 * c0 * c1 * c4) - d86 * b2 * c0 * c2 * c3) + d54 * c3 * d5) - d157 * c4 * d4) + d158 * d3) + d53 * c3 * c5 * d0) - d89 * c3 * d5) + d90 * c0 * c4 * d4) - d89 * c5 * d3) - d_mm_tmp * d0) + d160 * c3 * d4) + d159 * c0 * c4 * d3) + f_mm_tmp * d0) - d71 * a5 * c0 * c3 * d3) - b_mm_tmp * c5) + 8.0 * d14 * b4 * c0 * c3 * c4) - 32.0 * d30 * a2 * c2 * c3 * d3) + 32.0 * (a1 * a1) * a3 * c2 * c3 * d2) + d161 * d3) + d162 * d0) + d163 * d0) + d87 * c5) + kb_mm_tmp * d3) - d58 * c3 * d5) - lb_mm_tmp * d3) - d57 * c3 * c5 * d0) + i_mm_tmp * d3) - d178 * c5) + d90 * c3 * c4 * d4) - d_mm_tmp * d3) - f_mm_tmp * d3) + d191 * d0 * d1) - d193 * d0 * d1) + d86 * b0 * c0 * c1 * d1) - d177 * d0) - d54 * d0 * d3) - d87 * d0) - d56 * d0 * d3) + d58 * d0 * d3) - g_mm_tmp * d3) + d178 * d0) + d194 * d1 * d3) - d195 * d1 * d3) + d196 * d3) - d69 * b3 * c1 * c3 * d1) + d91 * d0 * d3) + b_mm_tmp * d3) + d186 * c5) - d182 * c0 * c2 * c4) + d190 * c5) - d180 * a5 * c0 * c1 * c4) - d187 * c5) + d182 * c1 * c3 * c5) + d182 * c2 * c3 * c4) - d188 * c5) - d183 * c2 * c3 * c5) + d184 * c5) + d199 * c2 * c5) - d201 * c1 * c2 * c3) + d203 * c4 * c5) - d120 * c0 * c3 * c4) - c_mm_tmp * c1 * c5) - c_mm_tmp * c2 * c4) + h_mm_tmp * c0 * c2 * c3) - d220 * c0 * c1 * c5) + e_mm_tmp * c1 * c4) + e_mm_tmp * c2 * c3) + d210 * c5) - d201 * c0 * c3 * c4) - d217 * c5) + d205 * c2 * c3 * c4) - d221 * c5) + d222 * a5 * c1 * c2 * c3) + d207 * c2 * d4) + d207 * c4 * d2) + d211 * c4 * d0) - d186 * d3) - d185 * c3 * d2) - d187 * d0) - d223 * c5) + d224 * c5) + d179 * b3 * c0 * c2 * c4) - d213 * c0 * c2 * c3) + d208 * c1 * d4) + d208 * c4 * d1) + d188 * d0) - d190 * d3) - d189 * c3 * d1) - d184 * d0) + d180 * b3 * c0 * c1 * c4) - d180 * b4 * c0 * c1 * c3) - d215 * c0 * c1 * d1) - d121 * b0 * c1 * c2 * c4) + d216 * c0 * c2 * c4) + d197 * b2 * c0 * c1 * c4) + d212 * c1 * c2 * c3) - d214 * c0 * c2 * c3) - d200 * b2 * c0 * c1 * c3) - d209 * a3 * c0 * c4 * d0) + d218 * d0) + 16.0 * a1 * a3 * a5 * c0 * c1 * d0) + d219 * c0 * c2 * c4) - d143 * c0 * c2 * c3) + d142 * b0 * c0 * c1 * c4) - d133 * b0 * c0 * c1 * c3) - d210 * d0) + d225 * d0) - d226 * c5) + d200 * b0 * c0 * c3 * c4) - d211 * c3 * d4) - d206 * c2 * c4 * d3) - d206 * c3 * c4 * d2) + d122 * a4 * c2 * c3 * d3) - d179 * a5 * c1 * c3 * d3) - 16.0 * a0 * a1 * b3 * c2 * c3 * c4) + 16.0 * a0 * a2 * a3 * c2 * c3 * d3) - 16.0 * a0 * a3 * a4 * c1 * c2 * d3) - d199 * c3 * d2) - d198 * c2 * c3 * d1) + d215 * c1 * c3 * d1) - d216 * c2 * c3 * c4) + d121 * b3 * c1 * c2 * c4) - d197 * b4 * c1 * c2 * c3) - d200 * b3 * c1 * c2 * c3) + d203 * c3 * d4) + 16.0 * a1 * a2 * a3 * c0 * c4 * d3) + d217 * d0) - d218 * d3) + s_mm_tmp * c0 * c3 * c4) - d219 * c2 * c3 * c4) - t_mm_tmp * c5) + mm_tmp * c0 * c3 * c4) + u_mm_tmp * c5) + 16.0 * a2 * a3 * a4 * c0 * c1 * d3) + 16.0 * a2 * a3 * a4 * c0 * c3 * d1) + d221 * d0) + d145 * c0 * c3 * c4) - d146 * c0 * c1 * c4) - d142 * b3 * c0 * c2 * c3) + d142 * b4 * c0 * c1 * c3) + d133 * b3 * c0 * c1 * c3) - d222 * b0 * c1 * c2 * c3) + d222 * b2 * c0 * c1 * c3) - d225 * d3) + v_mm_tmp * c5) + d223 * d3) - d224 * d3) - d197 * b0 * c1 * c3 * d1) + d197 * b3 * c0 * c1 * d1) + t_mm_tmp * d0) - u_mm_tmp * d0) + d226 * d3) - v_mm_tmp * d0);
}

//

double coeff8(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1, double b3,
              double c0, double c1, double c2, double c3, double c4, double c5, double d0, double d1, double d3) {
    double b_d1;
    double b_d3;
    double b_mm_tmp;
    double b_mm_tmp_tmp;
    double c_mm_tmp;
    double d;
    double d10;
    double d11;
    double d12;
    double d13;
    double d14;
    double d15;
    double d16;
    double d17;
    double d18;
    double d19;
    double d2;
    double d20;
    double d21;
    double d22;
    double d23;
    double d24;
    double d25;
    double d26;
    double d27;
    double d28;
    double d29;
    double d30;
    double d31;
    double d32;
    double d33;
    double d34;
    double d35;
    double d36;
    double d37;
    double d38;
    double d39;
    double d4;
    double d40;
    double d41;
    double d42;
    double d43;
    double d44;
    double d45;
    double d5;
    double d6;
    double d7;
    double d8;
    double d9;
    double d_mm_tmp;
    double e_mm_tmp;
    double f_mm_tmp;
    double g_mm_tmp;
    double h_mm_tmp;
    double i_mm_tmp;
    double j_mm_tmp;
    double mm_tmp;
    double mm_tmp_tmp;
    d = std::pow(c3, 3.0);
    b_d1 = std::pow(c0, 3.0);
    mm_tmp = a0 * a0;
    d2 = 3.0 * mm_tmp;
    b_d3 = a3 * a3;
    d4 = 3.0 * b_d3;
    d5 = std::pow(a0, 3.0);
    d6 = std::pow(a3, 3.0);
    d7 = c0 * c0;
    d8 = 3.0 * d6 * d7;
    d9 = c3 * c3;
    d10 = 3.0 * d5 * d9;
    d11 = c4 * c4;
    d12 = a2 * a2;
    d13 = 4.0 * a0 * d12;
    d14 = c2 * c2;
    d15 = a4 * a4;
    d16 = 4.0 * a0 * b_d3;
    d17 = d16 * c0;
    d18 = c1 * c1;
    d19 = d2 * a5;
    d20 = a1 * a1;
    d21 = 4.0 * a3 * d15;
    d22 = d4 * a5;
    d23 = 16.0 * mm_tmp;
    d24 = 4.0 * a0 * d15;
    d25 = 4.0 * mm_tmp;
    d26 = 4.0 * d12 * a3;
    d27 = 4.0 * (a0 * a0) * a3;
    d28 = 16.0 * d20;
    d29 = 4.0 * d20;
    d30 = d29 * a5;
    d31 = 4.0 * b_d3;
    d32 = 4.0 * a0 * d20 * d9;
    d33 = d16 * d18;
    d34 = 3.0 * a0 * b_d3 * d7;
    d35 = d2 * a3 * d9;
    d36 = d27 * d18;
    d37 = d29 * a3 * d7;
    d38 = 16.0 * a2 * b_d3;
    d39 = d23 * a4;
    d40 = 8.0 * a0 * a3;
    d41 = d40 * a5;
    d42 = 16.0 * a0 * a1;
    d43 = d42 * a4;
    d44 = 8.0 * a0 * a1;
    d45 = 16.0 * a1 * a2;
    mm_tmp_tmp = 6.0 * a0 * a3;
    b_mm_tmp = mm_tmp_tmp * a5;
    b_mm_tmp_tmp = 8.0 * a1 * a3;
    c_mm_tmp = 8.0 * mm_tmp;
    d_mm_tmp = 8.0 * a1 * b_d3 * c0 * c1;
    e_mm_tmp = 6.0 * a0 * b_d3 * c0 * c3;
    f_mm_tmp = 8.0 * a0 * d20 * c0 * c3;
    g_mm_tmp = 8.0 * d20 * a3 * c0 * c3;
    h_mm_tmp = c_mm_tmp * a1 * c1 * c3;
    i_mm_tmp = 6.0 * mm_tmp * a3 * c0 * c3;
    j_mm_tmp = 16.0 * a0 * a2;
    mm_tmp = d42 * a3;
    return ((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((d21 * b_d1 - d13 * d) + d19 * d) - d22 * b_d1) - d2 * b0 * d) + d4 * b3 * b_d1) + 4.0 * d6 * c0 * d14) - 4.0 * d5 * c3 * d11) + d10 * c5) - d8 * c5) + d8 * d0) - d10 * d3) - 16.0 * a0 * d20 * c0 * d11) + d13 * c0 * d9) - d17 * d14) + 16.0 * a0 * d15 * c0 * d18) - 16.0 * a1 * d15 * d7 * c1) + d23 * a1 * c1 * d11) - d17 * d11) + d24 * c0 * d9) - d24 * d7 * c3) + 16.0 * a1 * d12 * c1 * d9) - 16.0 * a1 * b_d3 * c1 * d14) + 4.0 * a2 * b_d3 * d7 * c2) - d25 * a2 * c2 * d9) + d27 * c0 * d11) + d34 * c5) - d16 * d14 * c3) + d38 * d18 * c2) + d27 * d14 * c3) - d19 * c0 * d9) - d28 * a2 * c2 * d9) + d26 * c0 * d9) - d26 * d7 * c3) + d32 * c5) - d33 * c5) + d36 * c5) - d39 * d18 * c4) + d25 * a5 * d18 * c3) - d37 * c5) + d28 * a3 * d14 * c3) + d28 * a4 * d7 * c4) + d30 * c0 * d9) - d30 * d7 * c3) - 16.0 * d12 * a3 * d18 * c3) - d31 * a5 * c0 * d18) - d21 * d7 * c3) + d27 * c3 * d11) - d35 * c5) - d25 * a4 * d9 * c4) + d31 * a4 * d7 * c4) + d22 * d7 * c3) - d32 * d0) + d33 * d0) - d29 * b0 * c0 * d9) + d31 * b0 * c0 * d18) - 4.0 * a1 * b_d3 * d7 * d1) + d25 * a1 * d9 * d1) + d25 * b1 * c1 * d9) - d31 * b1 * d7 * c1) - d34 * d3) + d35 * d0) + d2 * b3 * c0 * d9) - d4 * b0 * d7 * c3) - d36 * d3) - d25 * b3 * d18 * c3) + d37 * d3) + d29 * b3 * d7 * c3) - d41 * c0 * d18) + d43 * c2 * d9) - d44 * a5 * c1 * d9) + 8.0 * a0 * a2 * a3 * c2 * d9) - d45 * a3 * d7 * c4) - d45 * a4 * c0 * d9) + 16.0 * a1 * a2 * a4 * d7 * c3) + b_mm_tmp_tmp * a5 * d7 * c1) - d40 * a4 * d7 * c4) - b_mm_tmp * c0 * d9) + b_mm_tmp * d7 * c3) + d41 * d18 * c3) + d44 * b0 * c1 * d9) - d44 * b1 * c0 * d9) + mm_tmp_tmp * b0 * c0 * d9) - d40 * b0 * d18 * c3) + d40 * b3 * c0 * d18) + b_mm_tmp_tmp * b1 * d7 * c3) - b_mm_tmp_tmp * b3 * d7 * c1) - mm_tmp_tmp * b3 * d7 * c3) + f_mm_tmp * c5) + 16.0 * a0 * b_d3 * c1 * c2 * c4) + d_mm_tmp * c5) - d38 * c0 * c1 * c4) - 8.0 * a2 * b_d3 * c0 * c2 * c3) - h_mm_tmp * c5) - d23 * a3 * c1 * c2 * c4) + d39 * c1 * c2 * c3) + e_mm_tmp * c5) - i_mm_tmp * c5) + c_mm_tmp * a4 * c0 * c3 * c4) - g_mm_tmp * c5) + 8.0 * a0 * b_d3 * c0 * c1 * d1) - d_mm_tmp * d0) - e_mm_tmp * d0) - f_mm_tmp * d3) + g_mm_tmp * d0) + h_mm_tmp * d3) - c_mm_tmp * a3 * c1 * c3 * d1) + i_mm_tmp * d3) + mm_tmp * c0 * c2 * c4) - d43 * c0 * c2 * c3) + j_mm_tmp * a3 * c0 * c1 * c4) - j_mm_tmp * a4 * c0 * c1 * c3) - mm_tmp * c2 * c3 * c4) - 16.0 * a0 * a3 * a4 * c1 * c2 * c3) + 16.0 * a1 * a2 * a3 * c0 * c3 * c4) + 16.0 * a2 * a3 * a4 * c0 * c1 * c3;
}

//

double coeff9(double a0, double a1, double a3, double c0, double c1, double c3) {
    double b_mm_tmp;
    double c_mm_tmp;
    double d_mm_tmp;
    double e_mm_tmp;
    double f_mm_tmp;
    double g_mm_tmp;
    double mm_tmp;
    mm_tmp = a3 * a3;
    b_mm_tmp = c3 * c3;
    c_mm_tmp = c0 * c0;
    d_mm_tmp = a0 * a0;
    e_mm_tmp = 4.0 * d_mm_tmp;
    f_mm_tmp = c1 * c1;
    g_mm_tmp = a1 * a1;
    return ((((((((std::pow(a3, 3.0) * std::pow(c0, 3.0) - std::pow(a0, 3.0) * std::pow(c3, 3.0)) -
                  4.0 * a0 * g_mm_tmp * c0 * b_mm_tmp) +
                 4.0 * a0 * mm_tmp * c0 * f_mm_tmp) -
                4.0 * a1 * mm_tmp * c_mm_tmp * c1) +
               e_mm_tmp * a1 * c1 * b_mm_tmp) -
              3.0 * a0 * mm_tmp * c_mm_tmp * c3) +
             3.0 * d_mm_tmp * a3 * c0 * b_mm_tmp) -
            e_mm_tmp * a3 * f_mm_tmp * c3) +
           4.0 * g_mm_tmp * a3 * c_mm_tmp * c3;
}

Eigen::VectorXd equal_coeff(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1,
                            double b2, double b3, double b4, double b5, double c0, double c1, double c2, double c3,
                            double c4, double c5, double d0, double d1, double d2, double d3, double d4, double d5) {

    Eigen::VectorXd coeffs(10);
    coeffs << coeff9(a0, a1, a3, c0, c1, c3),
        coeff8(a0, a1, a2, a3, a4, a5, b0, b1, b3, c0, c1, c2, c3, c4, c5, d0, d1, d3),
        coeff7(a0, a1, a2, a3, a4, a5, b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, d0, d1, d2, d3, d4, d5),
        coeff6(a0, a1, a2, a3, a4, a5, b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, d0, d1, d2, d3, d4, d5),
        coeff5(a0, a1, a2, a3, a4, a5, b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, d0, d1, d2, d3, d4, d5),
        coeff4(a0, a1, a2, a3, a4, a5, b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, d0, d1, d2, d3, d4, d5),
        coeff3(a0, a1, a2, a3, a4, a5, b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, d0, d1, d2, d3, d4, d5),
        coeff2(a0, a1, a2, a3, a4, a5, b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, d0, d1, d2, d3, d4, d5),
        coeff1(a0, a1, a2, a3, a4, a5, b0, b1, b2, b3, b4, b5, c0, c1, c2, c3, c4, c5, d0, d1, d2, d3, d4, d5),
        coeff0(b0, b1, b2, b3, b4, b5, d0, d1, d2, d3, d4, d5);
    return coeffs;
}

Eigen::VectorXd coeff_sequal(double a0, double a1, double a2, double a3, double a4, double a5, double b0, double b1,
                             double b2, double b3, double b4, double b5, double c0, double c1, double c2, double c3,
                             double c4, double c5, double d0, double d1, double d2, double d3, double d4, double d5) {

    Eigen::VectorXd coeffs(7);
    coeffs
        << pow(a3, 3) * pow(c0, 3) - pow(a0, 3) * pow(c3, 3) + pow(a0, 3) * pow(c5, 3) - pow(a5, 3) * pow(c0, 3) -
               pow(a3, 3) * pow(c5, 3) + pow(a5, 3) * pow(c3, 3) - 4 * a0 * pow(a2, 2) * pow(c3, 3) +
               4 * a0 * pow(a1, 2) * pow(c5, 3) + 4 * a3 * pow(a4, 2) * pow(c0, 3) + 3 * a0 * pow(a3, 2) * pow(c5, 3) -
               3 * a0 * pow(a5, 2) * pow(c3, 3) + 3 * a3 * pow(a5, 2) * pow(c0, 3) - 3 * pow(a0, 2) * a3 * pow(c5, 3) +
               3 * pow(a0, 2) * a5 * pow(c3, 3) - 3 * pow(a3, 2) * a5 * pow(c0, 3) - 4 * pow(a1, 2) * a3 * pow(c5, 3) -
               4 * pow(a4, 2) * a5 * pow(c0, 3) + 4 * pow(a2, 2) * a5 * pow(c3, 3) + 4 * pow(a3, 3) * c0 * pow(c2, 2) -
               4 * pow(a5, 3) * c0 * pow(c1, 2) - 4 * pow(a0, 3) * c3 * pow(c4, 2) - 3 * pow(a0, 3) * c3 * pow(c5, 2) +
               3 * pow(a0, 3) * pow(c3, 2) * c5 + 3 * pow(a3, 3) * c0 * pow(c5, 2) - 3 * pow(a3, 3) * pow(c0, 2) * c5 -
               3 * pow(a5, 3) * c0 * pow(c3, 2) + 3 * pow(a5, 3) * pow(c0, 2) * c3 + 4 * pow(a0, 3) * pow(c4, 2) * c5 +
               4 * pow(a5, 3) * pow(c1, 2) * c3 - 4 * pow(a3, 3) * pow(c2, 2) * c5 -
               4 * a0 * pow(a1, 2) * c0 * pow(c3, 2) + 4 * a0 * pow(a3, 2) * c0 * pow(c1, 2) -
               16 * a0 * pow(a1, 2) * c0 * pow(c4, 2) + 4 * a0 * pow(a2, 2) * c0 * pow(c3, 2) -
               4 * a0 * pow(a3, 2) * c0 * pow(c2, 2) + 16 * a0 * pow(a4, 2) * c0 * pow(c1, 2) -
               4 * a1 * pow(a3, 2) * pow(c0, 2) * c1 + 4 * pow(a0, 2) * a1 * c1 * pow(c3, 2) -
               4 * a0 * pow(a1, 2) * c0 * pow(c5, 2) + 16 * a0 * pow(a2, 2) * c0 * pow(c4, 2) -
               3 * a0 * pow(a3, 2) * pow(c0, 2) * c3 - 16 * a0 * pow(a4, 2) * c0 * pow(c2, 2) +
               4 * a0 * pow(a5, 2) * c0 * pow(c1, 2) - 16 * a1 * pow(a4, 2) * pow(c0, 2) * c1 +
               16 * pow(a0, 2) * a1 * c1 * pow(c4, 2) + 3 * pow(a0, 2) * a3 * c0 * pow(c3, 2) +
               4 * a0 * pow(a2, 2) * c0 * pow(c5, 2) - 4 * a0 * pow(a3, 2) * c0 * pow(c4, 2) +
               4 * a0 * pow(a4, 2) * c0 * pow(c3, 2) - 4 * a0 * pow(a4, 2) * pow(c0, 2) * c3 -
               4 * a0 * pow(a5, 2) * c0 * pow(c2, 2) + 16 * a1 * pow(a2, 2) * c1 * pow(c3, 2) -
               16 * a1 * pow(a3, 2) * c1 * pow(c2, 2) - 4 * a1 * pow(a5, 2) * pow(c0, 2) * c1 +
               4 * a2 * pow(a3, 2) * pow(c0, 2) * c2 + 4 * pow(a0, 2) * a1 * c1 * pow(c5, 2) -
               4 * pow(a0, 2) * a2 * c2 * pow(c3, 2) + 4 * pow(a0, 2) * a3 * c0 * pow(c4, 2) -
               4 * pow(a0, 2) * a3 * pow(c1, 2) * c3 + 4 * pow(a1, 2) * a3 * pow(c0, 2) * c3 -
               6 * a0 * pow(a3, 2) * c0 * pow(c5, 2) + 3 * a0 * pow(a3, 2) * pow(c0, 2) * c5 -
               4 * a0 * pow(a3, 2) * pow(c2, 2) * c3 + 6 * a0 * pow(a5, 2) * c0 * pow(c3, 2) -
               3 * a0 * pow(a5, 2) * pow(c0, 2) * c3 + 64 * a1 * pow(a2, 2) * c1 * pow(c4, 2) -
               64 * a1 * pow(a4, 2) * c1 * pow(c2, 2) + 16 * a2 * pow(a3, 2) * pow(c1, 2) * c2 +
               16 * a2 * pow(a4, 2) * pow(c0, 2) * c2 - 16 * pow(a0, 2) * a2 * c2 * pow(c4, 2) +
               3 * pow(a0, 2) * a3 * c0 * pow(c5, 2) + 4 * pow(a0, 2) * a3 * pow(c2, 2) * c3 -
               3 * pow(a0, 2) * a5 * c0 * pow(c3, 2) - 16 * pow(a1, 2) * a2 * c2 * pow(c3, 2) +
               4 * pow(a2, 2) * a3 * c0 * pow(c3, 2) - 4 * pow(a2, 2) * a3 * pow(c0, 2) * c3 -
               8 * a0 * pow(a1, 2) * c3 * pow(c5, 2) + 4 * a0 * pow(a1, 2) * pow(c3, 2) * c5 -
               16 * a0 * pow(a2, 2) * c3 * pow(c4, 2) - 4 * a0 * pow(a3, 2) * pow(c1, 2) * c5 -
               4 * a0 * pow(a4, 2) * c0 * pow(c5, 2) + 4 * a0 * pow(a4, 2) * pow(c0, 2) * c5 +
               16 * a0 * pow(a4, 2) * pow(c2, 2) * c3 + 4 * a0 * pow(a5, 2) * c0 * pow(c4, 2) -
               8 * a0 * pow(a5, 2) * pow(c1, 2) * c3 + 16 * a1 * pow(a2, 2) * c1 * pow(c5, 2) -
               16 * a1 * pow(a5, 2) * c1 * pow(c2, 2) + 64 * a2 * pow(a4, 2) * pow(c1, 2) * c2 +
               4 * a2 * pow(a5, 2) * pow(c0, 2) * c2 + 16 * a3 * pow(a4, 2) * c0 * pow(c2, 2) +
               8 * a3 * pow(a5, 2) * c0 * pow(c1, 2) - 4 * pow(a0, 2) * a2 * c2 * pow(c5, 2) +
               4 * pow(a0, 2) * a3 * pow(c1, 2) * c5 - 16 * pow(a0, 2) * a4 * pow(c1, 2) * c4 -
               4 * pow(a0, 2) * a5 * c0 * pow(c4, 2) + 4 * pow(a0, 2) * a5 * pow(c1, 2) * c3 -
               64 * pow(a1, 2) * a2 * c2 * pow(c4, 2) + 8 * pow(a1, 2) * a3 * c0 * pow(c5, 2) -
               4 * pow(a1, 2) * a3 * pow(c0, 2) * c5 + 16 * pow(a1, 2) * a3 * pow(c2, 2) * c3 +
               16 * pow(a1, 2) * a4 * pow(c0, 2) * c4 + 4 * pow(a1, 2) * a5 * c0 * pow(c3, 2) -
               4 * pow(a1, 2) * a5 * pow(c0, 2) * c3 - 16 * pow(a2, 2) * a3 * c0 * pow(c4, 2) -
               16 * pow(a2, 2) * a3 * pow(c1, 2) * c3 - 4 * pow(a3, 2) * a5 * c0 * pow(c1, 2) +
               16 * a0 * pow(a1, 2) * pow(c4, 2) * c5 - 4 * a0 * pow(a2, 2) * c3 * pow(c5, 2) +
               8 * a0 * pow(a2, 2) * pow(c3, 2) * c5 + 8 * a0 * pow(a3, 2) * pow(c2, 2) * c5 -
               16 * a0 * pow(a4, 2) * pow(c1, 2) * c5 + 3 * a0 * pow(a5, 2) * pow(c0, 2) * c5 +
               4 * a0 * pow(a5, 2) * pow(c2, 2) * c3 - 4 * a1 * pow(a3, 2) * c1 * pow(c5, 2) +
               4 * a1 * pow(a5, 2) * c1 * pow(c3, 2) + 16 * a2 * pow(a5, 2) * pow(c1, 2) * c2 -
               4 * a3 * pow(a4, 2) * pow(c0, 2) * c3 + 4 * a3 * pow(a5, 2) * c0 * pow(c2, 2) +
               4 * pow(a0, 2) * a3 * c3 * pow(c4, 2) - 4 * pow(a0, 2) * a3 * pow(c2, 2) * c5 +
               16 * pow(a0, 2) * a4 * pow(c2, 2) * c4 - 3 * pow(a0, 2) * a5 * c0 * pow(c5, 2) -
               4 * pow(a0, 2) * a5 * pow(c2, 2) * c3 - 16 * pow(a1, 2) * a2 * c2 * pow(c5, 2) +
               16 * pow(a1, 2) * a5 * c0 * pow(c4, 2) - 4 * pow(a2, 2) * a3 * c0 * pow(c5, 2) +
               4 * pow(a2, 2) * a3 * pow(c0, 2) * c5 - 16 * pow(a2, 2) * a4 * pow(c0, 2) * c4 -
               8 * pow(a2, 2) * a5 * c0 * pow(c3, 2) + 4 * pow(a2, 2) * a5 * pow(c0, 2) * c3 -
               8 * pow(a3, 2) * a5 * c0 * pow(c2, 2) - 16 * pow(a4, 2) * a5 * c0 * pow(c1, 2) -
               3 * a0 * pow(a3, 2) * c3 * pow(c5, 2) + 4 * a0 * pow(a5, 2) * pow(c1, 2) * c5 -
               16 * a1 * pow(a4, 2) * c1 * pow(c5, 2) + 16 * a1 * pow(a5, 2) * c1 * pow(c4, 2) -
               16 * a2 * pow(a3, 2) * c2 * pow(c4, 2) + 16 * a2 * pow(a4, 2) * c2 * pow(c3, 2) +
               3 * a3 * pow(a5, 2) * c0 * pow(c3, 2) - 6 * a3 * pow(a5, 2) * pow(c0, 2) * c3 +
               6 * pow(a0, 2) * a3 * c3 * pow(c5, 2) - 3 * pow(a0, 2) * a3 * pow(c3, 2) * c5 -
               4 * pow(a0, 2) * a4 * pow(c3, 2) * c4 - 4 * pow(a0, 2) * a5 * pow(c1, 2) * c5 -
               16 * pow(a1, 2) * a3 * pow(c2, 2) * c5 + 64 * pow(a1, 2) * a4 * pow(c2, 2) * c4 -
               4 * pow(a1, 2) * a5 * c0 * pow(c5, 2) + 4 * pow(a1, 2) * a5 * pow(c0, 2) * c5 -
               16 * pow(a1, 2) * a5 * pow(c2, 2) * c3 + 16 * pow(a2, 2) * a3 * pow(c1, 2) * c5 -
               64 * pow(a2, 2) * a4 * pow(c1, 2) * c4 + 16 * pow(a2, 2) * a5 * pow(c1, 2) * c3 +
               4 * pow(a3, 2) * a4 * pow(c0, 2) * c4 + 3 * pow(a3, 2) * a5 * pow(c0, 2) * c3 +
               4 * a0 * pow(a3, 2) * pow(c4, 2) * c5 + 4 * a0 * pow(a4, 2) * c3 * pow(c5, 2) -
               4 * a0 * pow(a4, 2) * pow(c3, 2) * c5 - 4 * a0 * pow(a5, 2) * c3 * pow(c4, 2) -
               4 * a2 * pow(a3, 2) * c2 * pow(c5, 2) + 4 * a2 * pow(a5, 2) * c2 * pow(c3, 2) +
               4 * a3 * pow(a4, 2) * c0 * pow(c5, 2) - 8 * a3 * pow(a4, 2) * pow(c0, 2) * c5 -
               16 * a3 * pow(a4, 2) * pow(c2, 2) * c3 - 4 * a3 * pow(a5, 2) * c0 * pow(c4, 2) -
               4 * a3 * pow(a5, 2) * pow(c1, 2) * c3 - 8 * pow(a0, 2) * a3 * pow(c4, 2) * c5 +
               8 * pow(a0, 2) * a5 * c3 * pow(c4, 2) + 4 * pow(a0, 2) * a5 * pow(c2, 2) * c5 +
               4 * pow(a1, 2) * a3 * c3 * pow(c5, 2) + 16 * pow(a2, 2) * a3 * c3 * pow(c4, 2) -
               4 * pow(a2, 2) * a5 * pow(c0, 2) * c5 + 4 * pow(a3, 2) * a5 * c0 * pow(c4, 2) -
               4 * pow(a4, 2) * a5 * c0 * pow(c3, 2) + 8 * pow(a4, 2) * a5 * pow(c0, 2) * c3 +
               3 * a0 * pow(a5, 2) * pow(c3, 2) * c5 - 3 * a3 * pow(a5, 2) * pow(c0, 2) * c5 -
               4 * a3 * pow(a5, 2) * pow(c2, 2) * c3 - 4 * a4 * pow(a5, 2) * pow(c0, 2) * c4 +
               4 * pow(a0, 2) * a4 * c4 * pow(c5, 2) + 3 * pow(a0, 2) * a5 * c3 * pow(c5, 2) -
               6 * pow(a0, 2) * a5 * pow(c3, 2) * c5 + 16 * pow(a1, 2) * a5 * pow(c2, 2) * c5 +
               4 * pow(a2, 2) * a3 * c3 * pow(c5, 2) - 4 * pow(a2, 2) * a3 * pow(c3, 2) * c5 -
               16 * pow(a2, 2) * a4 * pow(c3, 2) * c4 - 16 * pow(a2, 2) * a5 * pow(c1, 2) * c5 +
               16 * pow(a3, 2) * a4 * pow(c2, 2) * c4 - 3 * pow(a3, 2) * a5 * c0 * pow(c5, 2) +
               6 * pow(a3, 2) * a5 * pow(c0, 2) * c5 + 4 * pow(a3, 2) * a5 * pow(c2, 2) * c3 -
               4 * a3 * pow(a5, 2) * pow(c1, 2) * c5 - 16 * a4 * pow(a5, 2) * pow(c1, 2) * c4 -
               4 * pow(a0, 2) * a5 * pow(c4, 2) * c5 + 16 * pow(a1, 2) * a4 * c4 * pow(c5, 2) +
               4 * pow(a1, 2) * a5 * c3 * pow(c5, 2) - 4 * pow(a1, 2) * a5 * pow(c3, 2) * c5 +
               4 * pow(a3, 2) * a5 * pow(c1, 2) * c5 + 4 * pow(a4, 2) * a5 * pow(c0, 2) * c5 -
               4 * a3 * pow(a4, 2) * c3 * pow(c5, 2) + 4 * a3 * pow(a5, 2) * c3 * pow(c4, 2) -
               16 * pow(a1, 2) * a5 * pow(c4, 2) * c5 - 4 * pow(a2, 2) * a5 * pow(c3, 2) * c5 +
               4 * pow(a3, 2) * a5 * pow(c2, 2) * c5 + 16 * pow(a4, 2) * a5 * pow(c1, 2) * c5 -
               3 * a3 * pow(a5, 2) * pow(c3, 2) * c5 - 4 * a4 * pow(a5, 2) * pow(c3, 2) * c4 +
               4 * pow(a3, 2) * a4 * c4 * pow(c5, 2) + 3 * pow(a3, 2) * a5 * c3 * pow(c5, 2) -
               4 * pow(a3, 2) * a5 * pow(c4, 2) * c5 + 4 * pow(a4, 2) * a5 * pow(c3, 2) * c5 -
               8 * a0 * a3 * a5 * c0 * pow(c1, 2) + 16 * a0 * a1 * a4 * c2 * pow(c3, 2) -
               8 * a0 * a1 * a5 * c1 * pow(c3, 2) + 8 * a0 * a2 * a3 * c2 * pow(c3, 2) +
               8 * a0 * a3 * a5 * c0 * pow(c2, 2) - 16 * a1 * a2 * a3 * pow(c0, 2) * c4 -
               16 * a1 * a2 * a4 * c0 * pow(c3, 2) + 16 * a1 * a2 * a4 * pow(c0, 2) * c3 +
               8 * a1 * a3 * a5 * pow(c0, 2) * c1 - 32 * a0 * a1 * a5 * c1 * pow(c4, 2) +
               32 * a0 * a2 * a3 * c2 * pow(c4, 2) - 8 * a0 * a3 * a4 * pow(c0, 2) * c4 -
               6 * a0 * a3 * a5 * c0 * pow(c3, 2) + 6 * a0 * a3 * a5 * pow(c0, 2) * c3 -
               8 * a0 * a1 * a5 * c1 * pow(c5, 2) + 8 * a0 * a2 * a3 * c2 * pow(c5, 2) -
               16 * a0 * a2 * a4 * c1 * pow(c5, 2) + 8 * a0 * a3 * a5 * pow(c1, 2) * c3 +
               16 * a1 * a2 * a4 * c0 * pow(c5, 2) - 16 * a1 * a2 * a4 * pow(c0, 2) * c5 +
               16 * a1 * a2 * a5 * pow(c0, 2) * c4 + 32 * a1 * a3 * a5 * c1 * pow(c2, 2) -
               8 * a2 * a3 * a5 * pow(c0, 2) * c2 - 32 * a0 * a3 * a4 * pow(c2, 2) * c4 +
               6 * a0 * a3 * a5 * c0 * pow(c5, 2) - 6 * a0 * a3 * a5 * pow(c0, 2) * c5 +
               8 * a0 * a4 * a5 * pow(c0, 2) * c4 - 32 * a2 * a3 * a5 * pow(c1, 2) * c2 +
               32 * a0 * a4 * a5 * pow(c1, 2) * c4 - 8 * a0 * a3 * a5 * c3 * pow(c4, 2) -
               8 * a0 * a3 * a5 * pow(c2, 2) * c5 - 16 * a1 * a2 * a4 * c3 * pow(c5, 2) +
               16 * a1 * a2 * a4 * pow(c3, 2) * c5 + 8 * a1 * a3 * a5 * c1 * pow(c5, 2) -
               16 * a1 * a4 * a5 * c2 * pow(c3, 2) + 16 * a2 * a3 * a4 * c1 * pow(c5, 2) -
               8 * a2 * a3 * a5 * c2 * pow(c3, 2) - 8 * a0 * a3 * a4 * c4 * pow(c5, 2) -
               6 * a0 * a3 * a5 * c3 * pow(c5, 2) + 6 * a0 * a3 * a5 * pow(c3, 2) * c5 +
               8 * a0 * a4 * a5 * pow(c3, 2) * c4 + 8 * a0 * a3 * a5 * pow(c4, 2) * c5 +
               8 * a0 * pow(a1, 2) * c0 * c3 * c5 - 8 * a0 * pow(a2, 2) * c0 * c3 * c5 +
               16 * a0 * pow(a3, 2) * c1 * c2 * c4 + 8 * a1 * pow(a3, 2) * c0 * c1 * c5 -
               16 * a2 * pow(a3, 2) * c0 * c1 * c4 - 8 * a2 * pow(a3, 2) * c0 * c2 * c3 -
               8 * pow(a0, 2) * a1 * c1 * c3 * c5 - 16 * pow(a0, 2) * a3 * c1 * c2 * c4 +
               16 * pow(a0, 2) * a4 * c1 * c2 * c3 + 6 * a0 * pow(a3, 2) * c0 * c3 * c5 +
               32 * a1 * pow(a4, 2) * c0 * c1 * c5 - 32 * a2 * pow(a4, 2) * c0 * c2 * c3 -
               6 * pow(a0, 2) * a3 * c0 * c3 * c5 + 8 * pow(a0, 2) * a4 * c0 * c3 * c4 -
               16 * a0 * pow(a5, 2) * c1 * c2 * c4 - 32 * a1 * pow(a2, 2) * c1 * c3 * c5 +
               8 * a1 * pow(a5, 2) * c0 * c1 * c5 + 16 * a1 * pow(a5, 2) * c0 * c2 * c4 -
               8 * a2 * pow(a5, 2) * c0 * c2 * c3 + 8 * pow(a0, 2) * a2 * c2 * c3 * c5 -
               16 * pow(a0, 2) * a4 * c1 * c2 * c5 + 16 * pow(a0, 2) * a5 * c1 * c2 * c4 -
               8 * pow(a1, 2) * a3 * c0 * c3 * c5 - 6 * a0 * pow(a5, 2) * c0 * c3 * c5 -
               8 * pow(a0, 2) * a4 * c0 * c4 * c5 + 6 * pow(a0, 2) * a5 * c0 * c3 * c5 +
               32 * pow(a1, 2) * a2 * c2 * c3 * c5 + 32 * pow(a2, 2) * a4 * c0 * c3 * c4 -
               32 * pow(a1, 2) * a4 * c0 * c4 * c5 - 8 * a1 * pow(a5, 2) * c1 * c3 * c5 -
               16 * a1 * pow(a5, 2) * c2 * c3 * c4 + 16 * a2 * pow(a3, 2) * c1 * c4 * c5 +
               8 * a2 * pow(a3, 2) * c2 * c3 * c5 + 8 * a3 * pow(a4, 2) * c0 * c3 * c5 +
               16 * a3 * pow(a5, 2) * c1 * c2 * c4 + 8 * pow(a2, 2) * a5 * c0 * c3 * c5 -
               16 * pow(a3, 2) * a5 * c1 * c2 * c4 + 6 * a3 * pow(a5, 2) * c0 * c3 * c5 +
               8 * a4 * pow(a5, 2) * c0 * c3 * c4 - 8 * pow(a3, 2) * a4 * c0 * c4 * c5 -
               6 * pow(a3, 2) * a5 * c0 * c3 * c5 - 8 * pow(a4, 2) * a5 * c0 * c3 * c5 +
               16 * a0 * a1 * a3 * c0 * c2 * c4 - 16 * a0 * a1 * a4 * c0 * c2 * c3 + 16 * a0 * a2 * a3 * c0 * c1 * c4 -
               16 * a0 * a2 * a4 * c0 * c1 * c3 + 16 * a0 * a1 * a4 * c0 * c2 * c5 - 16 * a0 * a1 * a5 * c0 * c2 * c4 +
               16 * a0 * a2 * a4 * c0 * c1 * c5 - 16 * a0 * a2 * a5 * c0 * c1 * c4 - 16 * a0 * a1 * a3 * c2 * c3 * c4 -
               16 * a0 * a3 * a4 * c1 * c2 * c3 + 16 * a1 * a2 * a3 * c0 * c3 * c4 + 16 * a2 * a3 * a4 * c0 * c1 * c3 -
               16 * a0 * a1 * a4 * c2 * c3 * c5 + 16 * a0 * a1 * a5 * c1 * c3 * c5 + 16 * a0 * a1 * a5 * c2 * c3 * c4 -
               16 * a0 * a2 * a3 * c1 * c4 * c5 - 16 * a0 * a2 * a3 * c2 * c3 * c5 + 16 * a0 * a2 * a4 * c1 * c3 * c5 +
               16 * a0 * a3 * a4 * c1 * c2 * c5 - 16 * a0 * a4 * a5 * c1 * c2 * c3 + 16 * a1 * a2 * a3 * c0 * c4 * c5 -
               16 * a1 * a2 * a5 * c0 * c3 * c4 - 16 * a1 * a3 * a5 * c0 * c1 * c5 - 16 * a1 * a3 * a5 * c0 * c2 * c4 +
               16 * a1 * a4 * a5 * c0 * c2 * c3 - 16 * a2 * a3 * a4 * c0 * c1 * c5 + 16 * a2 * a3 * a5 * c0 * c1 * c4 +
               16 * a2 * a3 * a5 * c0 * c2 * c3 + 16 * a0 * a3 * a4 * c0 * c4 * c5 - 16 * a0 * a4 * a5 * c0 * c3 * c4 +
               16 * a0 * a2 * a5 * c1 * c4 * c5 + 16 * a0 * a4 * a5 * c1 * c2 * c5 - 16 * a1 * a2 * a5 * c0 * c4 * c5 -
               16 * a1 * a4 * a5 * c0 * c2 * c5 - 16 * a1 * a2 * a3 * c3 * c4 * c5 + 16 * a1 * a3 * a5 * c2 * c3 * c4 -
               16 * a2 * a3 * a4 * c1 * c3 * c5 + 16 * a3 * a4 * a5 * c1 * c2 * c3 + 16 * a1 * a2 * a5 * c3 * c4 * c5 +
               16 * a1 * a4 * a5 * c2 * c3 * c5 - 16 * a2 * a3 * a5 * c1 * c4 * c5 - 16 * a3 * a4 * a5 * c1 * c2 * c5,
        3 * pow(a0, 2) * b0 * pow(c5, 3) - 3 * pow(a0, 2) * b0 * pow(c3, 3) - 4 * pow(a2, 2) * b0 * pow(c3, 3) +
            4 * pow(a1, 2) * b0 * pow(c5, 3) + 3 * pow(a3, 2) * b3 * pow(c0, 3) + 4 * pow(a4, 2) * b3 * pow(c0, 3) -
            3 * pow(a0, 2) * b3 * pow(c5, 3) + 3 * pow(a0, 2) * b5 * pow(c3, 3) + 3 * pow(a3, 2) * b0 * pow(c5, 3) -
            3 * pow(a3, 2) * b5 * pow(c0, 3) - 3 * pow(a5, 2) * b0 * pow(c3, 3) + 3 * pow(a5, 2) * b3 * pow(c0, 3) -
            4 * pow(a1, 2) * b3 * pow(c5, 3) - 4 * pow(a4, 2) * b5 * pow(c0, 3) + 4 * pow(a2, 2) * b5 * pow(c3, 3) -
            3 * pow(a5, 2) * b5 * pow(c0, 3) - 3 * pow(a3, 2) * b3 * pow(c5, 3) + 3 * pow(a5, 2) * b5 * pow(c3, 3) +
            3 * pow(a3, 3) * pow(c0, 2) * d0 + 4 * pow(a3, 3) * pow(c2, 2) * d0 - 3 * pow(a5, 3) * pow(c0, 2) * d0 -
            3 * pow(a0, 3) * pow(c3, 2) * d3 - 4 * pow(a5, 3) * pow(c1, 2) * d0 - 4 * pow(a0, 3) * pow(c4, 2) * d3 +
            3 * pow(a0, 3) * pow(c3, 2) * d5 - 3 * pow(a0, 3) * pow(c5, 2) * d3 - 3 * pow(a3, 3) * pow(c0, 2) * d5 +
            3 * pow(a3, 3) * pow(c5, 2) * d0 + 3 * pow(a5, 3) * pow(c0, 2) * d3 - 3 * pow(a5, 3) * pow(c3, 2) * d0 +
            4 * pow(a0, 3) * pow(c4, 2) * d5 + 4 * pow(a5, 3) * pow(c1, 2) * d3 + 3 * pow(a0, 3) * pow(c5, 2) * d5 -
            4 * pow(a3, 3) * pow(c2, 2) * d5 + 3 * pow(a5, 3) * pow(c3, 2) * d3 - 3 * pow(a3, 3) * pow(c5, 2) * d5 +
            8 * a0 * a1 * b1 * pow(c5, 3) - 8 * a0 * a2 * b2 * pow(c3, 3) - 6 * a0 * a3 * b0 * pow(c5, 3) +
            6 * a0 * a5 * b0 * pow(c3, 3) - 8 * a1 * a3 * b1 * pow(c5, 3) + 6 * a0 * a3 * b3 * pow(c5, 3) +
            8 * a3 * a4 * b4 * pow(c0, 3) - 6 * a3 * a5 * b3 * pow(c0, 3) + 8 * a2 * a5 * b2 * pow(c3, 3) -
            6 * a0 * a5 * b5 * pow(c3, 3) + 6 * a3 * a5 * b5 * pow(c0, 3) - 8 * a4 * a5 * b4 * pow(c0, 3) +
            8 * pow(a3, 3) * c0 * c2 * d2 - 8 * pow(a5, 3) * c0 * c1 * d1 - 6 * pow(a3, 3) * c0 * c5 * d0 +
            6 * pow(a5, 3) * c0 * c3 * d0 + 8 * pow(a5, 3) * c1 * c3 * d1 - 8 * pow(a0, 3) * c3 * c4 * d4 +
            6 * pow(a0, 3) * c3 * c5 * d3 - 6 * pow(a5, 3) * c0 * c3 * d3 - 8 * pow(a3, 3) * c2 * c5 * d2 -
            6 * pow(a0, 3) * c3 * c5 * d5 + 8 * pow(a0, 3) * c4 * c5 * d4 + 6 * pow(a3, 3) * c0 * c5 * d5 -
            4 * a0 * pow(a1, 2) * pow(c3, 2) * d0 + 4 * a0 * pow(a3, 2) * pow(c1, 2) * d0 -
            4 * pow(a1, 2) * b0 * c0 * pow(c3, 2) + 4 * pow(a3, 2) * b0 * c0 * pow(c1, 2) -
            16 * a0 * pow(a1, 2) * pow(c4, 2) * d0 + 4 * a0 * pow(a2, 2) * pow(c3, 2) * d0 -
            4 * a0 * pow(a3, 2) * pow(c2, 2) * d0 + 16 * a0 * pow(a4, 2) * pow(c1, 2) * d0 -
            4 * a1 * pow(a3, 2) * pow(c0, 2) * d1 + 4 * pow(a0, 2) * a1 * pow(c3, 2) * d1 +
            4 * pow(a0, 2) * b1 * c1 * pow(c3, 2) - 16 * pow(a1, 2) * b0 * c0 * pow(c4, 2) +
            4 * pow(a2, 2) * b0 * c0 * pow(c3, 2) - 4 * pow(a3, 2) * b0 * c0 * pow(c2, 2) -
            4 * pow(a3, 2) * b1 * pow(c0, 2) * c1 + 16 * pow(a4, 2) * b0 * c0 * pow(c1, 2) -
            4 * a0 * pow(a1, 2) * pow(c5, 2) * d0 + 16 * a0 * pow(a2, 2) * pow(c4, 2) * d0 -
            3 * a0 * pow(a3, 2) * pow(c0, 2) * d3 - 16 * a0 * pow(a4, 2) * pow(c2, 2) * d0 +
            4 * a0 * pow(a5, 2) * pow(c1, 2) * d0 - 16 * a1 * pow(a4, 2) * pow(c0, 2) * d1 +
            16 * pow(a0, 2) * a1 * pow(c4, 2) * d1 + 3 * pow(a0, 2) * a3 * pow(c3, 2) * d0 +
            16 * pow(a0, 2) * b1 * c1 * pow(c4, 2) + 3 * pow(a0, 2) * b3 * c0 * pow(c3, 2) -
            4 * pow(a1, 2) * b0 * c0 * pow(c5, 2) + 16 * pow(a2, 2) * b0 * c0 * pow(c4, 2) -
            3 * pow(a3, 2) * b0 * pow(c0, 2) * c3 - 16 * pow(a4, 2) * b0 * c0 * pow(c2, 2) -
            16 * pow(a4, 2) * b1 * pow(c0, 2) * c1 + 4 * pow(a5, 2) * b0 * c0 * pow(c1, 2) +
            4 * a0 * pow(a2, 2) * pow(c5, 2) * d0 - 4 * a0 * pow(a3, 2) * pow(c4, 2) * d0 -
            4 * a0 * pow(a4, 2) * pow(c0, 2) * d3 + 4 * a0 * pow(a4, 2) * pow(c3, 2) * d0 -
            4 * a0 * pow(a5, 2) * pow(c2, 2) * d0 + 16 * a1 * pow(a2, 2) * pow(c3, 2) * d1 -
            16 * a1 * pow(a3, 2) * pow(c2, 2) * d1 - 4 * a1 * pow(a5, 2) * pow(c0, 2) * d1 +
            4 * a2 * pow(a3, 2) * pow(c0, 2) * d2 + 12 * a3 * pow(a4, 2) * pow(c0, 2) * d0 +
            4 * pow(a0, 2) * a1 * pow(c5, 2) * d1 - 4 * pow(a0, 2) * a2 * pow(c3, 2) * d2 -
            4 * pow(a0, 2) * a3 * pow(c1, 2) * d3 + 4 * pow(a0, 2) * a3 * pow(c4, 2) * d0 -
            12 * pow(a0, 2) * b0 * c3 * pow(c4, 2) + 4 * pow(a0, 2) * b1 * c1 * pow(c5, 2) -
            4 * pow(a0, 2) * b2 * c2 * pow(c3, 2) + 4 * pow(a0, 2) * b3 * c0 * pow(c4, 2) -
            4 * pow(a0, 2) * b3 * pow(c1, 2) * c3 + 4 * pow(a1, 2) * a3 * pow(c0, 2) * d3 +
            4 * pow(a1, 2) * b3 * pow(c0, 2) * c3 + 4 * pow(a2, 2) * b0 * c0 * pow(c5, 2) +
            16 * pow(a2, 2) * b1 * c1 * pow(c3, 2) - 4 * pow(a3, 2) * b0 * c0 * pow(c4, 2) -
            16 * pow(a3, 2) * b1 * c1 * pow(c2, 2) + 4 * pow(a3, 2) * b2 * pow(c0, 2) * c2 +
            4 * pow(a4, 2) * b0 * c0 * pow(c3, 2) - 4 * pow(a4, 2) * b0 * pow(c0, 2) * c3 -
            4 * pow(a5, 2) * b0 * c0 * pow(c2, 2) - 4 * pow(a5, 2) * b1 * pow(c0, 2) * c1 -
            12 * a0 * pow(a2, 2) * pow(c3, 2) * d3 + 3 * a0 * pow(a3, 2) * pow(c0, 2) * d5 -
            4 * a0 * pow(a3, 2) * pow(c2, 2) * d3 - 6 * a0 * pow(a3, 2) * pow(c5, 2) * d0 -
            3 * a0 * pow(a5, 2) * pow(c0, 2) * d3 + 6 * a0 * pow(a5, 2) * pow(c3, 2) * d0 +
            64 * a1 * pow(a2, 2) * pow(c4, 2) * d1 - 64 * a1 * pow(a4, 2) * pow(c2, 2) * d1 +
            16 * a2 * pow(a3, 2) * pow(c1, 2) * d2 + 16 * a2 * pow(a4, 2) * pow(c0, 2) * d2 +
            9 * a3 * pow(a5, 2) * pow(c0, 2) * d0 - 16 * pow(a0, 2) * a2 * pow(c4, 2) * d2 +
            4 * pow(a0, 2) * a3 * pow(c2, 2) * d3 + 3 * pow(a0, 2) * a3 * pow(c5, 2) * d0 -
            3 * pow(a0, 2) * a5 * pow(c3, 2) * d0 - 9 * pow(a0, 2) * b0 * c3 * pow(c5, 2) +
            9 * pow(a0, 2) * b0 * pow(c3, 2) * c5 - 16 * pow(a0, 2) * b2 * c2 * pow(c4, 2) +
            3 * pow(a0, 2) * b3 * c0 * pow(c5, 2) + 4 * pow(a0, 2) * b3 * pow(c2, 2) * c3 -
            3 * pow(a0, 2) * b5 * c0 * pow(c3, 2) - 16 * pow(a1, 2) * a2 * pow(c3, 2) * d2 -
            16 * pow(a1, 2) * b2 * c2 * pow(c3, 2) - 4 * pow(a2, 2) * a3 * pow(c0, 2) * d3 +
            4 * pow(a2, 2) * a3 * pow(c3, 2) * d0 + 64 * pow(a2, 2) * b1 * c1 * pow(c4, 2) +
            4 * pow(a2, 2) * b3 * c0 * pow(c3, 2) - 4 * pow(a2, 2) * b3 * pow(c0, 2) * c3 -
            9 * pow(a3, 2) * a5 * pow(c0, 2) * d0 - 6 * pow(a3, 2) * b0 * c0 * pow(c5, 2) +
            3 * pow(a3, 2) * b0 * pow(c0, 2) * c5 - 4 * pow(a3, 2) * b0 * pow(c2, 2) * c3 +
            16 * pow(a3, 2) * b2 * pow(c1, 2) * c2 + 12 * pow(a3, 2) * b3 * c0 * pow(c2, 2) -
            64 * pow(a4, 2) * b1 * c1 * pow(c2, 2) + 16 * pow(a4, 2) * b2 * pow(c0, 2) * c2 +
            6 * pow(a5, 2) * b0 * c0 * pow(c3, 2) - 3 * pow(a5, 2) * b0 * pow(c0, 2) * c3 +
            4 * a0 * pow(a1, 2) * pow(c3, 2) * d5 - 8 * a0 * pow(a1, 2) * pow(c5, 2) * d3 -
            16 * a0 * pow(a2, 2) * pow(c4, 2) * d3 - 4 * a0 * pow(a3, 2) * pow(c1, 2) * d5 +
            4 * a0 * pow(a4, 2) * pow(c0, 2) * d5 + 16 * a0 * pow(a4, 2) * pow(c2, 2) * d3 -
            4 * a0 * pow(a4, 2) * pow(c5, 2) * d0 - 8 * a0 * pow(a5, 2) * pow(c1, 2) * d3 +
            4 * a0 * pow(a5, 2) * pow(c4, 2) * d0 + 16 * a1 * pow(a2, 2) * pow(c5, 2) * d1 -
            16 * a1 * pow(a5, 2) * pow(c2, 2) * d1 + 64 * a2 * pow(a4, 2) * pow(c1, 2) * d2 +
            4 * a2 * pow(a5, 2) * pow(c0, 2) * d2 + 16 * a3 * pow(a4, 2) * pow(c2, 2) * d0 +
            8 * a3 * pow(a5, 2) * pow(c1, 2) * d0 - 4 * pow(a0, 2) * a2 * pow(c5, 2) * d2 +
            4 * pow(a0, 2) * a3 * pow(c1, 2) * d5 - 16 * pow(a0, 2) * a4 * pow(c1, 2) * d4 +
            4 * pow(a0, 2) * a5 * pow(c1, 2) * d3 - 4 * pow(a0, 2) * a5 * pow(c4, 2) * d0 +
            12 * pow(a0, 2) * b0 * pow(c4, 2) * c5 - 4 * pow(a0, 2) * b2 * c2 * pow(c5, 2) +
            4 * pow(a0, 2) * b3 * pow(c1, 2) * c5 - 16 * pow(a0, 2) * b4 * pow(c1, 2) * c4 -
            4 * pow(a0, 2) * b5 * c0 * pow(c4, 2) + 4 * pow(a0, 2) * b5 * pow(c1, 2) * c3 -
            64 * pow(a1, 2) * a2 * pow(c4, 2) * d2 - 4 * pow(a1, 2) * a3 * pow(c0, 2) * d5 +
            16 * pow(a1, 2) * a3 * pow(c2, 2) * d3 + 8 * pow(a1, 2) * a3 * pow(c5, 2) * d0 +
            16 * pow(a1, 2) * a4 * pow(c0, 2) * d4 - 4 * pow(a1, 2) * a5 * pow(c0, 2) * d3 +
            4 * pow(a1, 2) * a5 * pow(c3, 2) * d0 - 8 * pow(a1, 2) * b0 * c3 * pow(c5, 2) +
            4 * pow(a1, 2) * b0 * pow(c3, 2) * c5 - 64 * pow(a1, 2) * b2 * c2 * pow(c4, 2) +
            8 * pow(a1, 2) * b3 * c0 * pow(c5, 2) - 4 * pow(a1, 2) * b3 * pow(c0, 2) * c5 +
            16 * pow(a1, 2) * b3 * pow(c2, 2) * c3 + 16 * pow(a1, 2) * b4 * pow(c0, 2) * c4 +
            4 * pow(a1, 2) * b5 * c0 * pow(c3, 2) - 4 * pow(a1, 2) * b5 * pow(c0, 2) * c3 -
            16 * pow(a2, 2) * a3 * pow(c1, 2) * d3 - 16 * pow(a2, 2) * a3 * pow(c4, 2) * d0 -
            16 * pow(a2, 2) * b0 * c3 * pow(c4, 2) + 16 * pow(a2, 2) * b1 * c1 * pow(c5, 2) -
            16 * pow(a2, 2) * b3 * c0 * pow(c4, 2) - 16 * pow(a2, 2) * b3 * pow(c1, 2) * c3 -
            4 * pow(a3, 2) * a5 * pow(c1, 2) * d0 - 4 * pow(a3, 2) * b0 * pow(c1, 2) * c5 -
            4 * pow(a3, 2) * b5 * c0 * pow(c1, 2) - 12 * pow(a4, 2) * a5 * pow(c0, 2) * d0 -
            4 * pow(a4, 2) * b0 * c0 * pow(c5, 2) + 4 * pow(a4, 2) * b0 * pow(c0, 2) * c5 +
            16 * pow(a4, 2) * b0 * pow(c2, 2) * c3 + 64 * pow(a4, 2) * b2 * pow(c1, 2) * c2 +
            16 * pow(a4, 2) * b3 * c0 * pow(c2, 2) + 4 * pow(a5, 2) * b0 * c0 * pow(c4, 2) -
            8 * pow(a5, 2) * b0 * pow(c1, 2) * c3 - 16 * pow(a5, 2) * b1 * c1 * pow(c2, 2) +
            4 * pow(a5, 2) * b2 * pow(c0, 2) * c2 + 8 * pow(a5, 2) * b3 * c0 * pow(c1, 2) +
            16 * a0 * pow(a1, 2) * pow(c4, 2) * d5 + 8 * a0 * pow(a2, 2) * pow(c3, 2) * d5 -
            4 * a0 * pow(a2, 2) * pow(c5, 2) * d3 + 8 * a0 * pow(a3, 2) * pow(c2, 2) * d5 -
            16 * a0 * pow(a4, 2) * pow(c1, 2) * d5 + 3 * a0 * pow(a5, 2) * pow(c0, 2) * d5 +
            4 * a0 * pow(a5, 2) * pow(c2, 2) * d3 - 4 * a1 * pow(a3, 2) * pow(c5, 2) * d1 +
            4 * a1 * pow(a5, 2) * pow(c3, 2) * d1 + 16 * a2 * pow(a5, 2) * pow(c1, 2) * d2 -
            4 * a3 * pow(a4, 2) * pow(c0, 2) * d3 + 4 * a3 * pow(a5, 2) * pow(c2, 2) * d0 -
            4 * pow(a0, 2) * a3 * pow(c2, 2) * d5 + 4 * pow(a0, 2) * a3 * pow(c4, 2) * d3 +
            16 * pow(a0, 2) * a4 * pow(c2, 2) * d4 - 4 * pow(a0, 2) * a5 * pow(c2, 2) * d3 -
            3 * pow(a0, 2) * a5 * pow(c5, 2) * d0 + 4 * pow(a0, 2) * b3 * c3 * pow(c4, 2) -
            4 * pow(a0, 2) * b3 * pow(c2, 2) * c5 + 16 * pow(a0, 2) * b4 * pow(c2, 2) * c4 -
            3 * pow(a0, 2) * b5 * c0 * pow(c5, 2) - 4 * pow(a0, 2) * b5 * pow(c2, 2) * c3 -
            16 * pow(a1, 2) * a2 * pow(c5, 2) * d2 + 16 * pow(a1, 2) * a5 * pow(c4, 2) * d0 +
            16 * pow(a1, 2) * b0 * pow(c4, 2) * c5 - 16 * pow(a1, 2) * b2 * c2 * pow(c5, 2) +
            16 * pow(a1, 2) * b5 * c0 * pow(c4, 2) + 4 * pow(a2, 2) * a3 * pow(c0, 2) * d5 -
            4 * pow(a2, 2) * a3 * pow(c5, 2) * d0 - 16 * pow(a2, 2) * a4 * pow(c0, 2) * d4 +
            4 * pow(a2, 2) * a5 * pow(c0, 2) * d3 - 8 * pow(a2, 2) * a5 * pow(c3, 2) * d0 -
            4 * pow(a2, 2) * b0 * c3 * pow(c5, 2) + 8 * pow(a2, 2) * b0 * pow(c3, 2) * c5 -
            4 * pow(a2, 2) * b3 * c0 * pow(c5, 2) + 4 * pow(a2, 2) * b3 * pow(c0, 2) * c5 -
            16 * pow(a2, 2) * b4 * pow(c0, 2) * c4 - 8 * pow(a2, 2) * b5 * c0 * pow(c3, 2) +
            4 * pow(a2, 2) * b5 * pow(c0, 2) * c3 - 8 * pow(a3, 2) * a5 * pow(c2, 2) * d0 +
            8 * pow(a3, 2) * b0 * pow(c2, 2) * c5 - 4 * pow(a3, 2) * b1 * c1 * pow(c5, 2) -
            8 * pow(a3, 2) * b5 * c0 * pow(c2, 2) - 16 * pow(a4, 2) * a5 * pow(c1, 2) * d0 -
            16 * pow(a4, 2) * b0 * pow(c1, 2) * c5 - 4 * pow(a4, 2) * b3 * pow(c0, 2) * c3 -
            16 * pow(a4, 2) * b5 * c0 * pow(c1, 2) + 3 * pow(a5, 2) * b0 * pow(c0, 2) * c5 +
            4 * pow(a5, 2) * b0 * pow(c2, 2) * c3 + 4 * pow(a5, 2) * b1 * c1 * pow(c3, 2) +
            16 * pow(a5, 2) * b2 * pow(c1, 2) * c2 + 4 * pow(a5, 2) * b3 * c0 * pow(c2, 2) +
            12 * a0 * pow(a1, 2) * pow(c5, 2) * d5 - 3 * a0 * pow(a3, 2) * pow(c5, 2) * d3 +
            4 * a0 * pow(a5, 2) * pow(c1, 2) * d5 - 9 * a0 * pow(a5, 2) * pow(c3, 2) * d3 -
            16 * a1 * pow(a4, 2) * pow(c5, 2) * d1 + 16 * a1 * pow(a5, 2) * pow(c4, 2) * d1 -
            16 * a2 * pow(a3, 2) * pow(c4, 2) * d2 + 16 * a2 * pow(a4, 2) * pow(c3, 2) * d2 -
            6 * a3 * pow(a5, 2) * pow(c0, 2) * d3 + 3 * a3 * pow(a5, 2) * pow(c3, 2) * d0 -
            3 * pow(a0, 2) * a3 * pow(c3, 2) * d5 + 6 * pow(a0, 2) * a3 * pow(c5, 2) * d3 -
            4 * pow(a0, 2) * a4 * pow(c3, 2) * d4 - 4 * pow(a0, 2) * a5 * pow(c1, 2) * d5 +
            9 * pow(a0, 2) * a5 * pow(c3, 2) * d3 + 6 * pow(a0, 2) * b3 * c3 * pow(c5, 2) -
            3 * pow(a0, 2) * b3 * pow(c3, 2) * c5 - 4 * pow(a0, 2) * b4 * pow(c3, 2) * c4 -
            4 * pow(a0, 2) * b5 * pow(c1, 2) * c5 - 16 * pow(a1, 2) * a3 * pow(c2, 2) * d5 +
            64 * pow(a1, 2) * a4 * pow(c2, 2) * d4 + 4 * pow(a1, 2) * a5 * pow(c0, 2) * d5 -
            16 * pow(a1, 2) * a5 * pow(c2, 2) * d3 - 4 * pow(a1, 2) * a5 * pow(c5, 2) * d0 -
            16 * pow(a1, 2) * b3 * pow(c2, 2) * c5 + 64 * pow(a1, 2) * b4 * pow(c2, 2) * c4 -
            4 * pow(a1, 2) * b5 * c0 * pow(c5, 2) + 4 * pow(a1, 2) * b5 * pow(c0, 2) * c5 -
            16 * pow(a1, 2) * b5 * pow(c2, 2) * c3 + 16 * pow(a2, 2) * a3 * pow(c1, 2) * d5 -
            64 * pow(a2, 2) * a4 * pow(c1, 2) * d4 + 16 * pow(a2, 2) * a5 * pow(c1, 2) * d3 +
            16 * pow(a2, 2) * b3 * pow(c1, 2) * c5 - 64 * pow(a2, 2) * b4 * pow(c1, 2) * c4 +
            16 * pow(a2, 2) * b5 * pow(c1, 2) * c3 + 4 * pow(a3, 2) * a4 * pow(c0, 2) * d4 +
            3 * pow(a3, 2) * a5 * pow(c0, 2) * d3 - 3 * pow(a3, 2) * b0 * c3 * pow(c5, 2) -
            16 * pow(a3, 2) * b2 * c2 * pow(c4, 2) + 9 * pow(a3, 2) * b3 * c0 * pow(c5, 2) -
            9 * pow(a3, 2) * b3 * pow(c0, 2) * c5 + 4 * pow(a3, 2) * b4 * pow(c0, 2) * c4 +
            3 * pow(a3, 2) * b5 * pow(c0, 2) * c3 - 16 * pow(a4, 2) * b1 * c1 * pow(c5, 2) +
            16 * pow(a4, 2) * b2 * c2 * pow(c3, 2) + 4 * pow(a5, 2) * b0 * pow(c1, 2) * c5 +
            16 * pow(a5, 2) * b1 * c1 * pow(c4, 2) + 3 * pow(a5, 2) * b3 * c0 * pow(c3, 2) -
            6 * pow(a5, 2) * b3 * pow(c0, 2) * c3 - 12 * pow(a5, 2) * b5 * c0 * pow(c1, 2) +
            4 * a0 * pow(a3, 2) * pow(c4, 2) * d5 - 4 * a0 * pow(a4, 2) * pow(c3, 2) * d5 +
            4 * a0 * pow(a4, 2) * pow(c5, 2) * d3 - 4 * a0 * pow(a5, 2) * pow(c4, 2) * d3 -
            4 * a2 * pow(a3, 2) * pow(c5, 2) * d2 + 4 * a2 * pow(a5, 2) * pow(c3, 2) * d2 -
            8 * a3 * pow(a4, 2) * pow(c0, 2) * d5 - 16 * a3 * pow(a4, 2) * pow(c2, 2) * d3 +
            4 * a3 * pow(a4, 2) * pow(c5, 2) * d0 - 4 * a3 * pow(a5, 2) * pow(c1, 2) * d3 -
            4 * a3 * pow(a5, 2) * pow(c4, 2) * d0 - 8 * pow(a0, 2) * a3 * pow(c4, 2) * d5 +
            4 * pow(a0, 2) * a5 * pow(c2, 2) * d5 + 8 * pow(a0, 2) * a5 * pow(c4, 2) * d3 -
            8 * pow(a0, 2) * b3 * pow(c4, 2) * c5 + 8 * pow(a0, 2) * b5 * c3 * pow(c4, 2) +
            4 * pow(a0, 2) * b5 * pow(c2, 2) * c5 + 4 * pow(a1, 2) * a3 * pow(c5, 2) * d3 +
            4 * pow(a1, 2) * b3 * c3 * pow(c5, 2) + 16 * pow(a2, 2) * a3 * pow(c4, 2) * d3 -
            4 * pow(a2, 2) * a5 * pow(c0, 2) * d5 + 16 * pow(a2, 2) * b3 * c3 * pow(c4, 2) -
            4 * pow(a2, 2) * b5 * pow(c0, 2) * c5 + 4 * pow(a3, 2) * a5 * pow(c4, 2) * d0 +
            4 * pow(a3, 2) * b0 * pow(c4, 2) * c5 - 4 * pow(a3, 2) * b2 * c2 * pow(c5, 2) +
            4 * pow(a3, 2) * b5 * c0 * pow(c4, 2) + 8 * pow(a4, 2) * a5 * pow(c0, 2) * d3 -
            4 * pow(a4, 2) * a5 * pow(c3, 2) * d0 + 4 * pow(a4, 2) * b0 * c3 * pow(c5, 2) -
            4 * pow(a4, 2) * b0 * pow(c3, 2) * c5 + 4 * pow(a4, 2) * b3 * c0 * pow(c5, 2) -
            8 * pow(a4, 2) * b3 * pow(c0, 2) * c5 - 16 * pow(a4, 2) * b3 * pow(c2, 2) * c3 -
            4 * pow(a4, 2) * b5 * c0 * pow(c3, 2) + 8 * pow(a4, 2) * b5 * pow(c0, 2) * c3 -
            4 * pow(a5, 2) * b0 * c3 * pow(c4, 2) + 4 * pow(a5, 2) * b2 * c2 * pow(c3, 2) -
            4 * pow(a5, 2) * b3 * c0 * pow(c4, 2) - 4 * pow(a5, 2) * b3 * pow(c1, 2) * c3 +
            9 * a0 * pow(a3, 2) * pow(c5, 2) * d5 + 3 * a0 * pow(a5, 2) * pow(c3, 2) * d5 -
            3 * a3 * pow(a5, 2) * pow(c0, 2) * d5 - 4 * a3 * pow(a5, 2) * pow(c2, 2) * d3 -
            4 * a4 * pow(a5, 2) * pow(c0, 2) * d4 - 9 * pow(a0, 2) * a3 * pow(c5, 2) * d5 +
            4 * pow(a0, 2) * a4 * pow(c5, 2) * d4 - 6 * pow(a0, 2) * a5 * pow(c3, 2) * d5 +
            3 * pow(a0, 2) * a5 * pow(c5, 2) * d3 + 4 * pow(a0, 2) * b4 * c4 * pow(c5, 2) +
            3 * pow(a0, 2) * b5 * c3 * pow(c5, 2) - 6 * pow(a0, 2) * b5 * pow(c3, 2) * c5 +
            16 * pow(a1, 2) * a5 * pow(c2, 2) * d5 + 16 * pow(a1, 2) * b5 * pow(c2, 2) * c5 -
            4 * pow(a2, 2) * a3 * pow(c3, 2) * d5 + 4 * pow(a2, 2) * a3 * pow(c5, 2) * d3 -
            16 * pow(a2, 2) * a4 * pow(c3, 2) * d4 - 16 * pow(a2, 2) * a5 * pow(c1, 2) * d5 +
            12 * pow(a2, 2) * a5 * pow(c3, 2) * d3 + 4 * pow(a2, 2) * b3 * c3 * pow(c5, 2) -
            4 * pow(a2, 2) * b3 * pow(c3, 2) * c5 - 16 * pow(a2, 2) * b4 * pow(c3, 2) * c4 -
            16 * pow(a2, 2) * b5 * pow(c1, 2) * c5 + 16 * pow(a3, 2) * a4 * pow(c2, 2) * d4 +
            6 * pow(a3, 2) * a5 * pow(c0, 2) * d5 + 4 * pow(a3, 2) * a5 * pow(c2, 2) * d3 -
            3 * pow(a3, 2) * a5 * pow(c5, 2) * d0 - 12 * pow(a3, 2) * b3 * pow(c2, 2) * c5 +
            16 * pow(a3, 2) * b4 * pow(c2, 2) * c4 - 3 * pow(a3, 2) * b5 * c0 * pow(c5, 2) +
            6 * pow(a3, 2) * b5 * pow(c0, 2) * c5 + 4 * pow(a3, 2) * b5 * pow(c2, 2) * c3 +
            3 * pow(a5, 2) * b0 * pow(c3, 2) * c5 - 3 * pow(a5, 2) * b3 * pow(c0, 2) * c5 -
            4 * pow(a5, 2) * b3 * pow(c2, 2) * c3 - 4 * pow(a5, 2) * b4 * pow(c0, 2) * c4 -
            9 * pow(a5, 2) * b5 * c0 * pow(c3, 2) + 9 * pow(a5, 2) * b5 * pow(c0, 2) * c3 -
            4 * a3 * pow(a5, 2) * pow(c1, 2) * d5 - 16 * a4 * pow(a5, 2) * pow(c1, 2) * d4 -
            4 * pow(a0, 2) * a5 * pow(c4, 2) * d5 - 4 * pow(a0, 2) * b5 * pow(c4, 2) * c5 -
            12 * pow(a1, 2) * a3 * pow(c5, 2) * d5 + 16 * pow(a1, 2) * a4 * pow(c5, 2) * d4 -
            4 * pow(a1, 2) * a5 * pow(c3, 2) * d5 + 4 * pow(a1, 2) * a5 * pow(c5, 2) * d3 +
            16 * pow(a1, 2) * b4 * c4 * pow(c5, 2) + 4 * pow(a1, 2) * b5 * c3 * pow(c5, 2) -
            4 * pow(a1, 2) * b5 * pow(c3, 2) * c5 + 4 * pow(a3, 2) * a5 * pow(c1, 2) * d5 +
            4 * pow(a3, 2) * b5 * pow(c1, 2) * c5 + 4 * pow(a4, 2) * a5 * pow(c0, 2) * d5 +
            4 * pow(a4, 2) * b5 * pow(c0, 2) * c5 - 4 * pow(a5, 2) * b3 * pow(c1, 2) * c5 -
            16 * pow(a5, 2) * b4 * pow(c1, 2) * c4 + 12 * pow(a5, 2) * b5 * pow(c1, 2) * c3 -
            4 * a3 * pow(a4, 2) * pow(c5, 2) * d3 + 4 * a3 * pow(a5, 2) * pow(c4, 2) * d3 -
            16 * pow(a1, 2) * a5 * pow(c4, 2) * d5 - 16 * pow(a1, 2) * b5 * pow(c4, 2) * c5 -
            4 * pow(a2, 2) * a5 * pow(c3, 2) * d5 - 4 * pow(a2, 2) * b5 * pow(c3, 2) * c5 +
            4 * pow(a3, 2) * a5 * pow(c2, 2) * d5 + 4 * pow(a3, 2) * b5 * pow(c2, 2) * c5 +
            16 * pow(a4, 2) * a5 * pow(c1, 2) * d5 - 4 * pow(a4, 2) * b3 * c3 * pow(c5, 2) +
            16 * pow(a4, 2) * b5 * pow(c1, 2) * c5 + 4 * pow(a5, 2) * b3 * c3 * pow(c4, 2) -
            3 * a3 * pow(a5, 2) * pow(c3, 2) * d5 - 4 * a4 * pow(a5, 2) * pow(c3, 2) * d4 +
            4 * pow(a3, 2) * a4 * pow(c5, 2) * d4 + 3 * pow(a3, 2) * a5 * pow(c5, 2) * d3 +
            4 * pow(a3, 2) * b4 * c4 * pow(c5, 2) + 3 * pow(a3, 2) * b5 * c3 * pow(c5, 2) -
            3 * pow(a5, 2) * b3 * pow(c3, 2) * c5 - 4 * pow(a5, 2) * b4 * pow(c3, 2) * c4 -
            4 * pow(a3, 2) * a5 * pow(c4, 2) * d5 - 4 * pow(a3, 2) * b5 * pow(c4, 2) * c5 +
            4 * pow(a4, 2) * a5 * pow(c3, 2) * d5 + 4 * pow(a4, 2) * b5 * pow(c3, 2) * c5 +
            8 * a0 * a1 * b0 * c1 * pow(c3, 2) - 8 * a0 * a1 * b1 * c0 * pow(c3, 2) +
            32 * a0 * a1 * b0 * c1 * pow(c4, 2) - 32 * a0 * a1 * b1 * c0 * pow(c4, 2) +
            6 * a0 * a3 * b0 * c0 * pow(c3, 2) + 8 * a0 * a1 * b0 * c1 * pow(c5, 2) -
            8 * a0 * a1 * b1 * c0 * pow(c5, 2) - 8 * a0 * a2 * b0 * c2 * pow(c3, 2) +
            8 * a0 * a2 * b2 * c0 * pow(c3, 2) + 8 * a0 * a3 * b0 * c0 * pow(c4, 2) -
            8 * a0 * a3 * b0 * pow(c1, 2) * c3 + 8 * a0 * a3 * b3 * c0 * pow(c1, 2) -
            32 * a0 * a2 * b0 * c2 * pow(c4, 2) + 32 * a0 * a2 * b2 * c0 * pow(c4, 2) +
            6 * a0 * a3 * b0 * c0 * pow(c5, 2) + 8 * a0 * a3 * b0 * pow(c2, 2) * c3 -
            8 * a0 * a3 * b3 * c0 * pow(c2, 2) - 6 * a0 * a5 * b0 * c0 * pow(c3, 2) +
            8 * a1 * a3 * b1 * pow(c0, 2) * c3 - 8 * a1 * a3 * b3 * pow(c0, 2) * c1 -
            8 * a0 * a2 * b0 * c2 * pow(c5, 2) + 8 * a0 * a2 * b2 * c0 * pow(c5, 2) -
            8 * a0 * a3 * a5 * pow(c1, 2) * d0 + 8 * a0 * a3 * b0 * pow(c1, 2) * c5 -
            6 * a0 * a3 * b3 * pow(c0, 2) * c3 - 8 * a0 * a3 * b5 * c0 * pow(c1, 2) -
            32 * a0 * a4 * b0 * pow(c1, 2) * c4 + 32 * a0 * a4 * b4 * c0 * pow(c1, 2) -
            8 * a0 * a5 * b0 * c0 * pow(c4, 2) + 8 * a0 * a5 * b0 * pow(c1, 2) * c3 -
            8 * a0 * a5 * b3 * c0 * pow(c1, 2) - 32 * a1 * a2 * b1 * c2 * pow(c3, 2) +
            32 * a1 * a2 * b2 * c1 * pow(c3, 2) - 8 * a3 * a5 * b0 * c0 * pow(c1, 2) +
            16 * a0 * a1 * a4 * pow(c3, 2) * d2 - 8 * a0 * a1 * a5 * pow(c3, 2) * d1 -
            16 * a0 * a1 * b1 * c3 * pow(c5, 2) + 8 * a0 * a1 * b1 * pow(c3, 2) * c5 +
            16 * a0 * a1 * b4 * c2 * pow(c3, 2) - 8 * a0 * a1 * b5 * c1 * pow(c3, 2) +
            8 * a0 * a2 * a3 * pow(c3, 2) * d2 + 8 * a0 * a2 * b3 * c2 * pow(c3, 2) +
            8 * a0 * a3 * a5 * pow(c2, 2) * d0 + 8 * a0 * a3 * b0 * c3 * pow(c4, 2) -
            8 * a0 * a3 * b0 * pow(c2, 2) * c5 + 8 * a0 * a3 * b2 * c2 * pow(c3, 2) -
            8 * a0 * a3 * b3 * c0 * pow(c4, 2) + 8 * a0 * a3 * b5 * c0 * pow(c2, 2) +
            32 * a0 * a4 * b0 * pow(c2, 2) * c4 + 16 * a0 * a4 * b1 * c2 * pow(c3, 2) -
            32 * a0 * a4 * b4 * c0 * pow(c2, 2) - 6 * a0 * a5 * b0 * c0 * pow(c5, 2) -
            8 * a0 * a5 * b0 * pow(c2, 2) * c3 - 8 * a0 * a5 * b1 * c1 * pow(c3, 2) +
            8 * a0 * a5 * b3 * c0 * pow(c2, 2) - 16 * a1 * a2 * a3 * pow(c0, 2) * d4 +
            16 * a1 * a2 * a4 * pow(c0, 2) * d3 - 16 * a1 * a2 * a4 * pow(c3, 2) * d0 -
            128 * a1 * a2 * b1 * c2 * pow(c4, 2) + 128 * a1 * a2 * b2 * c1 * pow(c4, 2) -
            16 * a1 * a2 * b3 * pow(c0, 2) * c4 - 16 * a1 * a2 * b4 * c0 * pow(c3, 2) +
            16 * a1 * a2 * b4 * pow(c0, 2) * c3 + 8 * a1 * a3 * a5 * pow(c0, 2) * d1 +
            16 * a1 * a3 * b1 * c0 * pow(c5, 2) - 8 * a1 * a3 * b1 * pow(c0, 2) * c5 +
            32 * a1 * a3 * b1 * pow(c2, 2) * c3 - 16 * a1 * a3 * b2 * pow(c0, 2) * c4 -
            32 * a1 * a3 * b3 * c1 * pow(c2, 2) + 8 * a1 * a3 * b5 * pow(c0, 2) * c1 +
            16 * a1 * a4 * b0 * c2 * pow(c3, 2) + 32 * a1 * a4 * b1 * pow(c0, 2) * c4 -
            16 * a1 * a4 * b2 * c0 * pow(c3, 2) + 16 * a1 * a4 * b2 * pow(c0, 2) * c3 -
            32 * a1 * a4 * b4 * pow(c0, 2) * c1 - 8 * a1 * a5 * b0 * c1 * pow(c3, 2) +
            8 * a1 * a5 * b1 * c0 * pow(c3, 2) - 8 * a1 * a5 * b1 * pow(c0, 2) * c3 +
            8 * a1 * a5 * b3 * pow(c0, 2) * c1 + 8 * a2 * a3 * b0 * c2 * pow(c3, 2) -
            16 * a2 * a3 * b1 * pow(c0, 2) * c4 + 8 * a2 * a3 * b2 * c0 * pow(c3, 2) -
            8 * a2 * a3 * b2 * pow(c0, 2) * c3 + 8 * a2 * a3 * b3 * pow(c0, 2) * c2 -
            16 * a2 * a4 * b1 * c0 * pow(c3, 2) + 16 * a2 * a4 * b1 * pow(c0, 2) * c3 +
            8 * a3 * a5 * b0 * c0 * pow(c2, 2) + 8 * a3 * a5 * b1 * pow(c0, 2) * c1 -
            32 * a0 * a1 * a5 * pow(c4, 2) * d1 + 32 * a0 * a1 * b1 * pow(c4, 2) * c5 -
            32 * a0 * a1 * b5 * c1 * pow(c4, 2) + 32 * a0 * a2 * a3 * pow(c4, 2) * d2 -
            32 * a0 * a2 * b2 * c3 * pow(c4, 2) + 32 * a0 * a2 * b3 * c2 * pow(c4, 2) -
            8 * a0 * a3 * a4 * pow(c0, 2) * d4 + 6 * a0 * a3 * a5 * pow(c0, 2) * d3 -
            6 * a0 * a3 * a5 * pow(c3, 2) * d0 + 12 * a0 * a3 * b0 * c3 * pow(c5, 2) -
            6 * a0 * a3 * b0 * pow(c3, 2) * c5 + 32 * a0 * a3 * b2 * c2 * pow(c4, 2) -
            12 * a0 * a3 * b3 * c0 * pow(c5, 2) + 6 * a0 * a3 * b3 * pow(c0, 2) * c5 -
            8 * a0 * a3 * b3 * pow(c2, 2) * c3 - 8 * a0 * a3 * b4 * pow(c0, 2) * c4 -
            6 * a0 * a3 * b5 * c0 * pow(c3, 2) + 6 * a0 * a3 * b5 * pow(c0, 2) * c3 -
            8 * a0 * a4 * b0 * pow(c3, 2) * c4 - 8 * a0 * a4 * b3 * pow(c0, 2) * c4 +
            8 * a0 * a4 * b4 * c0 * pow(c3, 2) - 8 * a0 * a4 * b4 * pow(c0, 2) * c3 -
            8 * a0 * a5 * b0 * pow(c1, 2) * c5 - 32 * a0 * a5 * b1 * c1 * pow(c4, 2) -
            6 * a0 * a5 * b3 * c0 * pow(c3, 2) + 6 * a0 * a5 * b3 * pow(c0, 2) * c3 +
            8 * a0 * a5 * b5 * c0 * pow(c1, 2) - 32 * a1 * a2 * b1 * c2 * pow(c5, 2) +
            32 * a1 * a2 * b2 * c1 * pow(c5, 2) - 32 * a1 * a5 * b0 * c1 * pow(c4, 2) +
            32 * a1 * a5 * b1 * c0 * pow(c4, 2) + 32 * a2 * a3 * b0 * c2 * pow(c4, 2) -
            32 * a2 * a3 * b2 * c0 * pow(c4, 2) - 32 * a2 * a3 * b2 * pow(c1, 2) * c3 +
            32 * a2 * a3 * b3 * pow(c1, 2) * c2 - 8 * a3 * a4 * b0 * pow(c0, 2) * c4 -
            6 * a3 * a5 * b0 * c0 * pow(c3, 2) + 6 * a3 * a5 * b0 * pow(c0, 2) * c3 -
            8 * a0 * a1 * a5 * pow(c5, 2) * d1 - 8 * a0 * a1 * b5 * c1 * pow(c5, 2) +
            8 * a0 * a2 * a3 * pow(c5, 2) * d2 - 16 * a0 * a2 * a4 * pow(c5, 2) * d1 -
            8 * a0 * a2 * b2 * c3 * pow(c5, 2) + 16 * a0 * a2 * b2 * pow(c3, 2) * c5 +
            8 * a0 * a2 * b3 * c2 * pow(c5, 2) - 16 * a0 * a2 * b4 * c1 * pow(c5, 2) +
            8 * a0 * a3 * a5 * pow(c1, 2) * d3 - 16 * a0 * a3 * b0 * pow(c4, 2) * c5 +
            8 * a0 * a3 * b2 * c2 * pow(c5, 2) - 8 * a0 * a3 * b3 * pow(c1, 2) * c5 +
            8 * a0 * a3 * b5 * pow(c1, 2) * c3 - 16 * a0 * a4 * b2 * c1 * pow(c5, 2) +
            16 * a0 * a5 * b0 * c3 * pow(c4, 2) + 8 * a0 * a5 * b0 * pow(c2, 2) * c5 -
            8 * a0 * a5 * b1 * c1 * pow(c5, 2) + 8 * a0 * a5 * b3 * pow(c1, 2) * c3 -
            8 * a0 * a5 * b5 * c0 * pow(c2, 2) - 16 * a1 * a2 * a4 * pow(c0, 2) * d5 +
            16 * a1 * a2 * a4 * pow(c5, 2) * d0 + 16 * a1 * a2 * a5 * pow(c0, 2) * d4 +
            16 * a1 * a2 * b4 * c0 * pow(c5, 2) - 16 * a1 * a2 * b4 * pow(c0, 2) * c5 +
            16 * a1 * a2 * b5 * pow(c0, 2) * c4 + 32 * a1 * a3 * a5 * pow(c2, 2) * d1 -
            32 * a1 * a3 * b1 * pow(c2, 2) * c5 + 32 * a1 * a3 * b5 * c1 * pow(c2, 2) +
            128 * a1 * a4 * b1 * pow(c2, 2) * c4 + 16 * a1 * a4 * b2 * c0 * pow(c5, 2) -
            16 * a1 * a4 * b2 * pow(c0, 2) * c5 - 128 * a1 * a4 * b4 * c1 * pow(c2, 2) -
            8 * a1 * a5 * b0 * c1 * pow(c5, 2) - 8 * a1 * a5 * b1 * c0 * pow(c5, 2) +
            8 * a1 * a5 * b1 * pow(c0, 2) * c5 - 32 * a1 * a5 * b1 * pow(c2, 2) * c3 +
            16 * a1 * a5 * b2 * pow(c0, 2) * c4 + 32 * a1 * a5 * b3 * c1 * pow(c2, 2) -
            8 * a1 * a5 * b5 * pow(c0, 2) * c1 - 8 * a2 * a3 * a5 * pow(c0, 2) * d2 +
            8 * a2 * a3 * b0 * c2 * pow(c5, 2) - 8 * a2 * a3 * b2 * c0 * pow(c5, 2) +
            8 * a2 * a3 * b2 * pow(c0, 2) * c5 - 8 * a2 * a3 * b5 * pow(c0, 2) * c2 -
            16 * a2 * a4 * b0 * c1 * pow(c5, 2) + 16 * a2 * a4 * b1 * c0 * pow(c5, 2) -
            16 * a2 * a4 * b1 * pow(c0, 2) * c5 - 32 * a2 * a4 * b2 * pow(c0, 2) * c4 +
            32 * a2 * a4 * b4 * pow(c0, 2) * c2 + 16 * a2 * a5 * b1 * pow(c0, 2) * c4 -
            16 * a2 * a5 * b2 * c0 * pow(c3, 2) + 8 * a2 * a5 * b2 * pow(c0, 2) * c3 -
            8 * a2 * a5 * b3 * pow(c0, 2) * c2 + 8 * a3 * a5 * b0 * pow(c1, 2) * c3 +
            32 * a3 * a5 * b1 * c1 * pow(c2, 2) - 8 * a3 * a5 * b2 * pow(c0, 2) * c2 -
            8 * a3 * a5 * b3 * c0 * pow(c1, 2) - 32 * a0 * a3 * a4 * pow(c2, 2) * d4 -
            6 * a0 * a3 * a5 * pow(c0, 2) * d5 + 6 * a0 * a3 * a5 * pow(c5, 2) * d0 +
            16 * a0 * a3 * b3 * pow(c2, 2) * c5 - 32 * a0 * a3 * b4 * pow(c2, 2) * c4 +
            6 * a0 * a3 * b5 * c0 * pow(c5, 2) - 6 * a0 * a3 * b5 * pow(c0, 2) * c5 +
            8 * a0 * a4 * a5 * pow(c0, 2) * d4 + 8 * a0 * a4 * b0 * c4 * pow(c5, 2) -
            32 * a0 * a4 * b3 * pow(c2, 2) * c4 - 8 * a0 * a4 * b4 * c0 * pow(c5, 2) +
            8 * a0 * a4 * b4 * pow(c0, 2) * c5 + 32 * a0 * a4 * b4 * pow(c2, 2) * c3 +
            8 * a0 * a4 * b5 * pow(c0, 2) * c4 + 6 * a0 * a5 * b0 * c3 * pow(c5, 2) -
            12 * a0 * a5 * b0 * pow(c3, 2) * c5 + 6 * a0 * a5 * b3 * c0 * pow(c5, 2) -
            6 * a0 * a5 * b3 * pow(c0, 2) * c5 + 8 * a0 * a5 * b4 * pow(c0, 2) * c4 +
            12 * a0 * a5 * b5 * c0 * pow(c3, 2) - 6 * a0 * a5 * b5 * pow(c0, 2) * c3 +
            8 * a1 * a3 * b1 * c3 * pow(c5, 2) - 8 * a1 * a3 * b3 * c1 * pow(c5, 2) -
            32 * a2 * a3 * a5 * pow(c1, 2) * d2 + 32 * a2 * a3 * b2 * pow(c1, 2) * c5 -
            32 * a2 * a3 * b5 * pow(c1, 2) * c2 - 128 * a2 * a4 * b2 * pow(c1, 2) * c4 +
            128 * a2 * a4 * b4 * pow(c1, 2) * c2 + 32 * a2 * a5 * b2 * pow(c1, 2) * c3 -
            32 * a2 * a5 * b3 * pow(c1, 2) * c2 - 32 * a3 * a4 * b0 * pow(c2, 2) * c4 +
            32 * a3 * a4 * b4 * c0 * pow(c2, 2) + 6 * a3 * a5 * b0 * c0 * pow(c5, 2) -
            6 * a3 * a5 * b0 * pow(c0, 2) * c5 - 32 * a3 * a5 * b2 * pow(c1, 2) * c2 -
            16 * a3 * a5 * b3 * c0 * pow(c2, 2) + 8 * a4 * a5 * b0 * pow(c0, 2) * c4 -
            6 * a0 * a3 * b3 * c3 * pow(c5, 2) + 32 * a0 * a4 * a5 * pow(c1, 2) * d4 -
            32 * a0 * a4 * b4 * pow(c1, 2) * c5 + 32 * a0 * a4 * b5 * pow(c1, 2) * c4 -
            8 * a0 * a5 * b0 * pow(c4, 2) * c5 + 32 * a0 * a5 * b4 * pow(c1, 2) * c4 +
            8 * a0 * a5 * b5 * c0 * pow(c4, 2) - 16 * a0 * a5 * b5 * pow(c1, 2) * c3 +
            32 * a1 * a5 * b1 * pow(c2, 2) * c5 - 32 * a1 * a5 * b5 * c1 * pow(c2, 2) +
            32 * a2 * a3 * b2 * c3 * pow(c4, 2) - 32 * a2 * a3 * b3 * c2 * pow(c4, 2) -
            8 * a2 * a5 * b2 * pow(c0, 2) * c5 + 8 * a2 * a5 * b5 * pow(c0, 2) * c2 +
            8 * a3 * a4 * b3 * pow(c0, 2) * c4 - 8 * a3 * a4 * b4 * pow(c0, 2) * c3 +
            6 * a3 * a5 * b3 * pow(c0, 2) * c3 + 16 * a3 * a5 * b5 * c0 * pow(c1, 2) +
            32 * a4 * a5 * b0 * pow(c1, 2) * c4 - 32 * a4 * a5 * b4 * c0 * pow(c1, 2) -
            8 * a0 * a3 * a5 * pow(c2, 2) * d5 - 8 * a0 * a3 * a5 * pow(c4, 2) * d3 +
            8 * a0 * a3 * b3 * pow(c4, 2) * c5 - 8 * a0 * a3 * b5 * c3 * pow(c4, 2) -
            8 * a0 * a3 * b5 * pow(c2, 2) * c5 - 8 * a0 * a5 * b3 * c3 * pow(c4, 2) -
            8 * a0 * a5 * b3 * pow(c2, 2) * c5 + 6 * a0 * a5 * b5 * pow(c0, 2) * c5 +
            8 * a0 * a5 * b5 * pow(c2, 2) * c3 + 16 * a1 * a2 * a4 * pow(c3, 2) * d5 -
            16 * a1 * a2 * a4 * pow(c5, 2) * d3 - 16 * a1 * a2 * b4 * c3 * pow(c5, 2) +
            16 * a1 * a2 * b4 * pow(c3, 2) * c5 + 8 * a1 * a3 * a5 * pow(c5, 2) * d1 +
            8 * a1 * a3 * b5 * c1 * pow(c5, 2) - 16 * a1 * a4 * a5 * pow(c3, 2) * d2 +
            32 * a1 * a4 * b1 * c4 * pow(c5, 2) - 16 * a1 * a4 * b2 * c3 * pow(c5, 2) +
            16 * a1 * a4 * b2 * pow(c3, 2) * c5 - 32 * a1 * a4 * b4 * c1 * pow(c5, 2) -
            16 * a1 * a4 * b5 * c2 * pow(c3, 2) + 8 * a1 * a5 * b1 * c3 * pow(c5, 2) -
            8 * a1 * a5 * b1 * pow(c3, 2) * c5 + 8 * a1 * a5 * b3 * c1 * pow(c5, 2) -
            16 * a1 * a5 * b4 * c2 * pow(c3, 2) + 8 * a1 * a5 * b5 * c1 * pow(c3, 2) +
            16 * a2 * a3 * a4 * pow(c5, 2) * d1 - 8 * a2 * a3 * a5 * pow(c3, 2) * d2 +
            8 * a2 * a3 * b2 * c3 * pow(c5, 2) - 8 * a2 * a3 * b2 * pow(c3, 2) * c5 -
            8 * a2 * a3 * b3 * c2 * pow(c5, 2) + 16 * a2 * a3 * b4 * c1 * pow(c5, 2) -
            8 * a2 * a3 * b5 * c2 * pow(c3, 2) - 16 * a2 * a4 * b1 * c3 * pow(c5, 2) +
            16 * a2 * a4 * b1 * pow(c3, 2) * c5 - 32 * a2 * a4 * b2 * pow(c3, 2) * c4 +
            16 * a2 * a4 * b3 * c1 * pow(c5, 2) + 32 * a2 * a4 * b4 * c2 * pow(c3, 2) -
            32 * a2 * a5 * b2 * pow(c1, 2) * c5 - 8 * a2 * a5 * b3 * c2 * pow(c3, 2) +
            32 * a2 * a5 * b5 * pow(c1, 2) * c2 + 16 * a3 * a4 * b2 * c1 * pow(c5, 2) -
            8 * a3 * a5 * b0 * c3 * pow(c4, 2) - 8 * a3 * a5 * b0 * pow(c2, 2) * c5 +
            8 * a3 * a5 * b1 * c1 * pow(c5, 2) - 8 * a3 * a5 * b2 * c2 * pow(c3, 2) +
            8 * a3 * a5 * b3 * c0 * pow(c4, 2) + 8 * a3 * a5 * b5 * c0 * pow(c2, 2) -
            16 * a4 * a5 * b1 * c2 * pow(c3, 2) - 8 * a0 * a3 * a4 * pow(c5, 2) * d4 +
            6 * a0 * a3 * a5 * pow(c3, 2) * d5 - 6 * a0 * a3 * a5 * pow(c5, 2) * d3 -
            8 * a0 * a3 * b4 * c4 * pow(c5, 2) - 6 * a0 * a3 * b5 * c3 * pow(c5, 2) +
            6 * a0 * a3 * b5 * pow(c3, 2) * c5 + 8 * a0 * a4 * a5 * pow(c3, 2) * d4 -
            8 * a0 * a4 * b3 * c4 * pow(c5, 2) + 8 * a0 * a4 * b4 * c3 * pow(c5, 2) -
            8 * a0 * a4 * b4 * pow(c3, 2) * c5 + 8 * a0 * a4 * b5 * pow(c3, 2) * c4 -
            6 * a0 * a5 * b3 * c3 * pow(c5, 2) + 6 * a0 * a5 * b3 * pow(c3, 2) * c5 +
            8 * a0 * a5 * b4 * pow(c3, 2) * c4 + 8 * a0 * a5 * b5 * pow(c1, 2) * c5 -
            32 * a1 * a5 * b1 * pow(c4, 2) * c5 + 32 * a1 * a5 * b5 * c1 * pow(c4, 2) -
            8 * a3 * a4 * b0 * c4 * pow(c5, 2) + 32 * a3 * a4 * b3 * pow(c2, 2) * c4 +
            8 * a3 * a4 * b4 * c0 * pow(c5, 2) - 16 * a3 * a4 * b4 * pow(c0, 2) * c5 -
            32 * a3 * a4 * b4 * pow(c2, 2) * c3 - 6 * a3 * a5 * b0 * c3 * pow(c5, 2) +
            6 * a3 * a5 * b0 * pow(c3, 2) * c5 - 6 * a3 * a5 * b3 * c0 * pow(c5, 2) +
            12 * a3 * a5 * b3 * pow(c0, 2) * c5 + 8 * a3 * a5 * b3 * pow(c2, 2) * c3 +
            6 * a3 * a5 * b5 * c0 * pow(c3, 2) - 12 * a3 * a5 * b5 * pow(c0, 2) * c3 +
            8 * a4 * a5 * b0 * pow(c3, 2) * c4 - 8 * a4 * a5 * b4 * c0 * pow(c3, 2) +
            16 * a4 * a5 * b4 * pow(c0, 2) * c3 + 8 * a0 * a3 * a5 * pow(c4, 2) * d5 +
            8 * a0 * a3 * b5 * pow(c4, 2) * c5 + 8 * a0 * a5 * b3 * pow(c4, 2) * c5 -
            8 * a0 * a5 * b5 * c3 * pow(c4, 2) - 8 * a2 * a5 * b2 * pow(c3, 2) * c5 +
            8 * a2 * a5 * b5 * c2 * pow(c3, 2) + 8 * a3 * a5 * b0 * pow(c4, 2) * c5 +
            8 * a3 * a5 * b3 * pow(c1, 2) * c5 - 8 * a3 * a5 * b5 * c0 * pow(c4, 2) -
            8 * a3 * a5 * b5 * pow(c1, 2) * c3 + 6 * a0 * a5 * b5 * pow(c3, 2) * c5 +
            8 * a3 * a5 * b3 * pow(c2, 2) * c5 - 6 * a3 * a5 * b5 * pow(c0, 2) * c5 -
            8 * a3 * a5 * b5 * pow(c2, 2) * c3 + 8 * a4 * a5 * b4 * pow(c0, 2) * c5 -
            8 * a4 * a5 * b5 * pow(c0, 2) * c4 + 8 * a3 * a4 * b3 * c4 * pow(c5, 2) -
            8 * a3 * a4 * b4 * c3 * pow(c5, 2) + 6 * a3 * a5 * b3 * c3 * pow(c5, 2) -
            8 * a3 * a5 * b5 * pow(c1, 2) * c5 + 32 * a4 * a5 * b4 * pow(c1, 2) * c5 -
            32 * a4 * a5 * b5 * pow(c1, 2) * c4 - 8 * a3 * a5 * b3 * pow(c4, 2) * c5 +
            8 * a3 * a5 * b5 * c3 * pow(c4, 2) - 6 * a3 * a5 * b5 * pow(c3, 2) * c5 +
            8 * a4 * a5 * b4 * pow(c3, 2) * c5 - 8 * a4 * a5 * b5 * pow(c3, 2) * c4 +
            8 * a0 * pow(a3, 2) * c0 * c1 * d1 - 8 * a1 * pow(a3, 2) * c0 * c1 * d0 -
            6 * a0 * pow(a3, 2) * c0 * c3 * d0 + 32 * a0 * pow(a4, 2) * c0 * c1 * d1 -
            32 * a1 * pow(a4, 2) * c0 * c1 * d0 - 8 * a0 * pow(a1, 2) * c0 * c3 * d3 -
            8 * a0 * pow(a3, 2) * c0 * c2 * d2 - 8 * a0 * pow(a4, 2) * c0 * c3 * d0 +
            8 * a0 * pow(a5, 2) * c0 * c1 * d1 - 8 * a1 * pow(a5, 2) * c0 * c1 * d0 +
            8 * a2 * pow(a3, 2) * c0 * c2 * d0 + 8 * pow(a1, 2) * a3 * c0 * c3 * d0 +
            8 * a0 * pow(a2, 2) * c0 * c3 * d3 + 6 * a0 * pow(a3, 2) * c0 * c5 * d0 -
            32 * a0 * pow(a4, 2) * c0 * c2 * d2 - 6 * a0 * pow(a5, 2) * c0 * c3 * d0 +
            32 * a2 * pow(a4, 2) * c0 * c2 * d0 + 8 * pow(a0, 2) * a1 * c1 * c3 * d3 -
            8 * pow(a0, 2) * a3 * c1 * c3 * d1 - 8 * pow(a2, 2) * a3 * c0 * c3 * d0 +
            8 * a0 * pow(a1, 2) * c0 * c3 * d5 - 32 * a0 * pow(a1, 2) * c0 * c4 * d4 +
            8 * a0 * pow(a1, 2) * c0 * c5 * d3 + 8 * a0 * pow(a1, 2) * c3 * c5 * d0 +
            8 * a0 * pow(a4, 2) * c0 * c5 * d0 - 8 * a0 * pow(a5, 2) * c0 * c2 * d2 -
            32 * a1 * pow(a3, 2) * c1 * c2 * d2 + 32 * a2 * pow(a3, 2) * c1 * c2 * d1 +
            8 * a2 * pow(a5, 2) * c0 * c2 * d0 + 6 * pow(a0, 2) * a3 * c0 * c3 * d3 -
            8 * pow(a1, 2) * a3 * c0 * c5 * d0 + 32 * pow(a1, 2) * a4 * c0 * c4 * d0 -
            8 * pow(a1, 2) * a5 * c0 * c3 * d0 + 8 * pow(a1, 2) * b0 * c0 * c3 * c5 -
            8 * a0 * pow(a2, 2) * c0 * c3 * d5 + 32 * a0 * pow(a2, 2) * c0 * c4 * d4 -
            8 * a0 * pow(a2, 2) * c0 * c5 * d3 - 8 * a0 * pow(a2, 2) * c3 * c5 * d0 +
            16 * a0 * pow(a3, 2) * c1 * c2 * d4 + 16 * a0 * pow(a3, 2) * c1 * c4 * d2 -
            8 * a0 * pow(a3, 2) * c1 * c5 * d1 - 8 * a0 * pow(a3, 2) * c2 * c3 * d2 +
            16 * a0 * pow(a3, 2) * c2 * c4 * d1 + 8 * a0 * pow(a4, 2) * c0 * c3 * d3 +
            6 * a0 * pow(a5, 2) * c0 * c5 * d0 - 16 * a0 * pow(a5, 2) * c1 * c3 * d1 +
            32 * a1 * pow(a2, 2) * c1 * c3 * d3 + 8 * a1 * pow(a3, 2) * c0 * c1 * d5 +
            8 * a1 * pow(a3, 2) * c0 * c5 * d1 + 8 * a1 * pow(a3, 2) * c1 * c5 * d0 -
            128 * a1 * pow(a4, 2) * c1 * c2 * d2 - 16 * a2 * pow(a3, 2) * c0 * c1 * d4 -
            8 * a2 * pow(a3, 2) * c0 * c2 * d3 - 8 * a2 * pow(a3, 2) * c0 * c3 * d2 -
            16 * a2 * pow(a3, 2) * c0 * c4 * d1 - 16 * a2 * pow(a3, 2) * c1 * c4 * d0 -
            8 * a2 * pow(a3, 2) * c2 * c3 * d0 + 128 * a2 * pow(a4, 2) * c1 * c2 * d1 -
            8 * a3 * pow(a4, 2) * c0 * c3 * d0 + 16 * a3 * pow(a5, 2) * c0 * c1 * d1 -
            8 * pow(a0, 2) * a1 * c1 * c3 * d5 + 32 * pow(a0, 2) * a1 * c1 * c4 * d4 -
            8 * pow(a0, 2) * a1 * c1 * c5 * d3 - 8 * pow(a0, 2) * a1 * c3 * c5 * d1 -
            8 * pow(a0, 2) * a2 * c2 * c3 * d3 - 16 * pow(a0, 2) * a3 * c1 * c2 * d4 -
            16 * pow(a0, 2) * a3 * c1 * c4 * d2 + 8 * pow(a0, 2) * a3 * c1 * c5 * d1 +
            8 * pow(a0, 2) * a3 * c2 * c3 * d2 - 16 * pow(a0, 2) * a3 * c2 * c4 * d1 +
            16 * pow(a0, 2) * a4 * c1 * c2 * d3 + 16 * pow(a0, 2) * a4 * c1 * c3 * d2 -
            32 * pow(a0, 2) * a4 * c1 * c4 * d1 + 16 * pow(a0, 2) * a4 * c2 * c3 * d1 +
            8 * pow(a0, 2) * a5 * c1 * c3 * d1 - 8 * pow(a0, 2) * b1 * c1 * c3 * c5 -
            16 * pow(a0, 2) * b3 * c1 * c2 * c4 + 16 * pow(a0, 2) * b4 * c1 * c2 * c3 +
            8 * pow(a2, 2) * a3 * c0 * c5 * d0 - 32 * pow(a2, 2) * a3 * c1 * c3 * d1 -
            32 * pow(a2, 2) * a4 * c0 * c4 * d0 + 8 * pow(a2, 2) * a5 * c0 * c3 * d0 -
            8 * pow(a2, 2) * b0 * c0 * c3 * c5 - 8 * pow(a3, 2) * a5 * c0 * c1 * d1 +
            16 * pow(a3, 2) * b0 * c1 * c2 * c4 + 8 * pow(a3, 2) * b1 * c0 * c1 * c5 -
            16 * pow(a3, 2) * b2 * c0 * c1 * c4 - 8 * pow(a3, 2) * b2 * c0 * c2 * c3 -
            8 * a0 * pow(a1, 2) * c0 * c5 * d5 + 6 * a0 * pow(a3, 2) * c0 * c3 * d5 -
            8 * a0 * pow(a3, 2) * c0 * c4 * d4 + 6 * a0 * pow(a3, 2) * c0 * c5 * d3 +
            6 * a0 * pow(a3, 2) * c3 * c5 * d0 - 32 * a0 * pow(a4, 2) * c1 * c5 * d1 +
            32 * a0 * pow(a4, 2) * c2 * c3 * d2 + 12 * a0 * pow(a5, 2) * c0 * c3 * d3 +
            32 * a1 * pow(a4, 2) * c0 * c1 * d5 + 32 * a1 * pow(a4, 2) * c0 * c5 * d1 +
            32 * a1 * pow(a4, 2) * c1 * c5 * d0 - 32 * a1 * pow(a5, 2) * c1 * c2 * d2 -
            32 * a2 * pow(a4, 2) * c0 * c2 * d3 - 32 * a2 * pow(a4, 2) * c0 * c3 * d2 -
            32 * a2 * pow(a4, 2) * c2 * c3 * d0 + 32 * a2 * pow(a5, 2) * c1 * c2 * d1 +
            32 * a3 * pow(a4, 2) * c0 * c2 * d2 - 12 * a3 * pow(a5, 2) * c0 * c3 * d0 -
            6 * pow(a0, 2) * a3 * c0 * c3 * d5 + 8 * pow(a0, 2) * a3 * c0 * c4 * d4 -
            6 * pow(a0, 2) * a3 * c0 * c5 * d3 - 6 * pow(a0, 2) * a3 * c3 * c5 * d0 +
            8 * pow(a0, 2) * a4 * c0 * c3 * d4 + 8 * pow(a0, 2) * a4 * c0 * c4 * d3 +
            8 * pow(a0, 2) * a4 * c3 * c4 * d0 - 6 * pow(a0, 2) * a5 * c0 * c3 * d3 -
            6 * pow(a0, 2) * b3 * c0 * c3 * c5 + 8 * pow(a0, 2) * b4 * c0 * c3 * c4 -
            32 * pow(a1, 2) * a2 * c2 * c3 * d3 + 32 * pow(a1, 2) * a3 * c2 * c3 * d2 +
            8 * pow(a1, 2) * a5 * c0 * c5 * d0 + 8 * pow(a2, 2) * a3 * c0 * c3 * d3 +
            8 * pow(a3, 2) * a4 * c0 * c4 * d0 + 6 * pow(a3, 2) * a5 * c0 * c3 * d0 +
            6 * pow(a3, 2) * b0 * c0 * c3 * c5 - 32 * pow(a4, 2) * a5 * c0 * c1 * d1 +
            32 * pow(a4, 2) * b1 * c0 * c1 * c5 - 32 * pow(a4, 2) * b2 * c0 * c2 * c3 +
            8 * a0 * pow(a1, 2) * c3 * c5 * d3 + 8 * a0 * pow(a2, 2) * c0 * c5 * d5 +
            16 * a0 * pow(a3, 2) * c2 * c5 * d2 - 16 * a0 * pow(a5, 2) * c1 * c2 * d4 -
            16 * a0 * pow(a5, 2) * c1 * c4 * d2 + 8 * a0 * pow(a5, 2) * c1 * c5 * d1 +
            8 * a0 * pow(a5, 2) * c2 * c3 * d2 - 16 * a0 * pow(a5, 2) * c2 * c4 * d1 -
            32 * a1 * pow(a2, 2) * c1 * c3 * d5 + 128 * a1 * pow(a2, 2) * c1 * c4 * d4 -
            32 * a1 * pow(a2, 2) * c1 * c5 * d3 - 32 * a1 * pow(a2, 2) * c3 * c5 * d1 +
            8 * a1 * pow(a5, 2) * c0 * c1 * d5 + 16 * a1 * pow(a5, 2) * c0 * c2 * d4 +
            16 * a1 * pow(a5, 2) * c0 * c4 * d2 + 8 * a1 * pow(a5, 2) * c0 * c5 * d1 +
            8 * a1 * pow(a5, 2) * c1 * c5 * d0 + 16 * a1 * pow(a5, 2) * c2 * c4 * d0 -
            8 * a2 * pow(a5, 2) * c0 * c2 * d3 - 8 * a2 * pow(a5, 2) * c0 * c3 * d2 -
            8 * a2 * pow(a5, 2) * c2 * c3 * d0 - 16 * a3 * pow(a4, 2) * c0 * c5 * d0 +
            8 * a3 * pow(a5, 2) * c0 * c2 * d2 + 8 * pow(a0, 2) * a1 * c1 * c5 * d5 +
            8 * pow(a0, 2) * a2 * c2 * c3 * d5 - 32 * pow(a0, 2) * a2 * c2 * c4 * d4 +
            8 * pow(a0, 2) * a2 * c2 * c5 * d3 + 8 * pow(a0, 2) * a2 * c3 * c5 * d2 -
            8 * pow(a0, 2) * a3 * c2 * c5 * d2 - 16 * pow(a0, 2) * a4 * c1 * c2 * d5 -
            16 * pow(a0, 2) * a4 * c1 * c5 * d2 + 32 * pow(a0, 2) * a4 * c2 * c4 * d2 -
            16 * pow(a0, 2) * a4 * c2 * c5 * d1 + 16 * pow(a0, 2) * a5 * c1 * c2 * d4 +
            16 * pow(a0, 2) * a5 * c1 * c4 * d2 - 8 * pow(a0, 2) * a5 * c1 * c5 * d1 -
            8 * pow(a0, 2) * a5 * c2 * c3 * d2 + 16 * pow(a0, 2) * a5 * c2 * c4 * d1 +
            8 * pow(a0, 2) * b2 * c2 * c3 * c5 - 16 * pow(a0, 2) * b4 * c1 * c2 * c5 +
            16 * pow(a0, 2) * b5 * c1 * c2 * c4 - 8 * pow(a1, 2) * a3 * c0 * c3 * d5 -
            8 * pow(a1, 2) * a3 * c0 * c5 * d3 - 8 * pow(a1, 2) * a3 * c3 * c5 * d0 +
            8 * pow(a1, 2) * a5 * c0 * c3 * d3 - 8 * pow(a1, 2) * b3 * c0 * c3 * c5 +
            32 * pow(a2, 2) * a3 * c1 * c5 * d1 - 128 * pow(a2, 2) * a4 * c1 * c4 * d1 -
            8 * pow(a2, 2) * a5 * c0 * c5 * d0 + 32 * pow(a2, 2) * a5 * c1 * c3 * d1 -
            32 * pow(a2, 2) * b1 * c1 * c3 * c5 - 16 * pow(a3, 2) * a5 * c0 * c2 * d2 +
            16 * pow(a4, 2) * a5 * c0 * c3 * d0 - 16 * pow(a5, 2) * b0 * c1 * c2 * c4 +
            8 * pow(a5, 2) * b1 * c0 * c1 * c5 + 16 * pow(a5, 2) * b1 * c0 * c2 * c4 -
            8 * pow(a5, 2) * b2 * c0 * c2 * c3 - 32 * a0 * pow(a2, 2) * c3 * c4 * d4 +
            16 * a0 * pow(a2, 2) * c3 * c5 * d3 - 12 * a0 * pow(a3, 2) * c0 * c5 * d5 -
            6 * a0 * pow(a5, 2) * c0 * c3 * d5 + 8 * a0 * pow(a5, 2) * c0 * c4 * d4 -
            6 * a0 * pow(a5, 2) * c0 * c5 * d3 - 6 * a0 * pow(a5, 2) * c3 * c5 * d0 +
            8 * a1 * pow(a5, 2) * c1 * c3 * d3 - 6 * a3 * pow(a5, 2) * c0 * c5 * d0 -
            8 * a3 * pow(a5, 2) * c1 * c3 * d1 - 8 * a4 * pow(a5, 2) * c0 * c4 * d0 +
            6 * pow(a0, 2) * a3 * c0 * c5 * d5 - 8 * pow(a0, 2) * a4 * c0 * c4 * d5 -
            8 * pow(a0, 2) * a4 * c0 * c5 * d4 - 8 * pow(a0, 2) * a4 * c4 * c5 * d0 +
            6 * pow(a0, 2) * a5 * c0 * c3 * d5 - 8 * pow(a0, 2) * a5 * c0 * c4 * d4 +
            6 * pow(a0, 2) * a5 * c0 * c5 * d3 + 6 * pow(a0, 2) * a5 * c3 * c5 * d0 -
            8 * pow(a0, 2) * b4 * c0 * c4 * c5 + 6 * pow(a0, 2) * b5 * c0 * c3 * c5 +
            32 * pow(a1, 2) * a2 * c2 * c3 * d5 - 128 * pow(a1, 2) * a2 * c2 * c4 * d4 +
            32 * pow(a1, 2) * a2 * c2 * c5 * d3 + 32 * pow(a1, 2) * a2 * c3 * c5 * d2 -
            32 * pow(a1, 2) * a3 * c2 * c5 * d2 + 128 * pow(a1, 2) * a4 * c2 * c4 * d2 -
            32 * pow(a1, 2) * a5 * c2 * c3 * d2 + 32 * pow(a1, 2) * b2 * c2 * c3 * c5 -
            32 * pow(a2, 2) * a3 * c0 * c4 * d4 + 32 * pow(a2, 2) * a4 * c0 * c3 * d4 +
            32 * pow(a2, 2) * a4 * c0 * c4 * d3 + 32 * pow(a2, 2) * a4 * c3 * c4 * d0 -
            16 * pow(a2, 2) * a5 * c0 * c3 * d3 + 32 * pow(a2, 2) * b4 * c0 * c3 * c4 +
            12 * pow(a3, 2) * a5 * c0 * c5 * d0 - 6 * pow(a5, 2) * b0 * c0 * c3 * c5 -
            16 * a0 * pow(a1, 2) * c3 * c5 * d5 + 32 * a0 * pow(a1, 2) * c4 * c5 * d4 -
            8 * a0 * pow(a4, 2) * c0 * c5 * d5 + 32 * a1 * pow(a2, 2) * c1 * c5 * d5 +
            32 * a2 * pow(a4, 2) * c2 * c3 * d3 - 32 * a3 * pow(a4, 2) * c2 * c3 * d2 +
            6 * a3 * pow(a5, 2) * c0 * c3 * d3 - 8 * pow(a0, 2) * a2 * c2 * c5 * d5 +
            8 * pow(a0, 2) * a3 * c3 * c4 * d4 - 6 * pow(a0, 2) * a3 * c3 * c5 * d3 -
            8 * pow(a0, 2) * a4 * c3 * c4 * d3 + 8 * pow(a0, 2) * a5 * c2 * c5 * d2 +
            16 * pow(a1, 2) * a3 * c0 * c5 * d5 - 32 * pow(a1, 2) * a4 * c0 * c4 * d5 -
            32 * pow(a1, 2) * a4 * c0 * c5 * d4 - 32 * pow(a1, 2) * a4 * c4 * c5 * d0 +
            32 * pow(a1, 2) * a5 * c0 * c4 * d4 - 32 * pow(a1, 2) * b4 * c0 * c4 * c5 -
            32 * pow(a2, 2) * a5 * c1 * c5 * d1 + 8 * pow(a4, 2) * a5 * c0 * c5 * d0 -
            8 * a0 * pow(a2, 2) * c3 * c5 * d5 - 8 * a0 * pow(a4, 2) * c3 * c5 * d3 -
            8 * a1 * pow(a3, 2) * c1 * c5 * d5 - 8 * a1 * pow(a5, 2) * c1 * c3 * d5 +
            32 * a1 * pow(a5, 2) * c1 * c4 * d4 - 8 * a1 * pow(a5, 2) * c1 * c5 * d3 -
            16 * a1 * pow(a5, 2) * c2 * c3 * d4 - 16 * a1 * pow(a5, 2) * c2 * c4 * d3 -
            16 * a1 * pow(a5, 2) * c3 * c4 * d2 - 8 * a1 * pow(a5, 2) * c3 * c5 * d1 +
            16 * a2 * pow(a3, 2) * c1 * c4 * d5 + 16 * a2 * pow(a3, 2) * c1 * c5 * d4 +
            8 * a2 * pow(a3, 2) * c2 * c3 * d5 - 32 * a2 * pow(a3, 2) * c2 * c4 * d4 +
            8 * a2 * pow(a3, 2) * c2 * c5 * d3 + 8 * a2 * pow(a3, 2) * c3 * c5 * d2 +
            16 * a2 * pow(a3, 2) * c4 * c5 * d1 + 8 * a2 * pow(a5, 2) * c2 * c3 * d3 +
            8 * a3 * pow(a4, 2) * c0 * c3 * d5 + 8 * a3 * pow(a4, 2) * c0 * c5 * d3 +
            8 * a3 * pow(a4, 2) * c3 * c5 * d0 + 16 * a3 * pow(a5, 2) * c1 * c2 * d4 +
            16 * a3 * pow(a5, 2) * c1 * c4 * d2 - 8 * a3 * pow(a5, 2) * c1 * c5 * d1 -
            8 * a3 * pow(a5, 2) * c2 * c3 * d2 + 16 * a3 * pow(a5, 2) * c2 * c4 * d1 -
            32 * a4 * pow(a5, 2) * c1 * c4 * d1 - 6 * pow(a0, 2) * a5 * c0 * c5 * d5 -
            32 * pow(a1, 2) * a2 * c2 * c5 * d5 + 32 * pow(a1, 2) * a5 * c2 * c5 * d2 -
            8 * pow(a2, 2) * a3 * c0 * c5 * d5 + 8 * pow(a2, 2) * a5 * c0 * c3 * d5 +
            8 * pow(a2, 2) * a5 * c0 * c5 * d3 + 8 * pow(a2, 2) * a5 * c3 * c5 * d0 +
            8 * pow(a2, 2) * b5 * c0 * c3 * c5 + 32 * pow(a3, 2) * a4 * c2 * c4 * d2 -
            16 * pow(a3, 2) * a5 * c1 * c2 * d4 - 16 * pow(a3, 2) * a5 * c1 * c4 * d2 +
            8 * pow(a3, 2) * a5 * c1 * c5 * d1 + 8 * pow(a3, 2) * a5 * c2 * c3 * d2 -
            16 * pow(a3, 2) * a5 * c2 * c4 * d1 + 16 * pow(a3, 2) * b2 * c1 * c4 * c5 +
            8 * pow(a3, 2) * b2 * c2 * c3 * c5 - 16 * pow(a3, 2) * b5 * c1 * c2 * c4 -
            8 * pow(a4, 2) * a5 * c0 * c3 * d3 + 8 * pow(a4, 2) * b3 * c0 * c3 * c5 -
            8 * pow(a5, 2) * b1 * c1 * c3 * c5 - 16 * pow(a5, 2) * b1 * c2 * c3 * c4 +
            16 * pow(a5, 2) * b3 * c1 * c2 * c4 - 6 * a0 * pow(a3, 2) * c3 * c5 * d5 +
            8 * a0 * pow(a3, 2) * c4 * c5 * d4 - 8 * a0 * pow(a5, 2) * c3 * c4 * d4 +
            6 * a0 * pow(a5, 2) * c3 * c5 * d3 - 32 * a1 * pow(a4, 2) * c1 * c5 * d5 +
            6 * a3 * pow(a5, 2) * c0 * c3 * d5 - 8 * a3 * pow(a5, 2) * c0 * c4 * d4 +
            6 * a3 * pow(a5, 2) * c0 * c5 * d3 + 6 * a3 * pow(a5, 2) * c3 * c5 * d0 +
            8 * a4 * pow(a5, 2) * c0 * c3 * d4 + 8 * a4 * pow(a5, 2) * c0 * c4 * d3 +
            8 * a4 * pow(a5, 2) * c3 * c4 * d0 + 12 * pow(a0, 2) * a3 * c3 * c5 * d5 -
            16 * pow(a0, 2) * a3 * c4 * c5 * d4 + 16 * pow(a0, 2) * a5 * c3 * c4 * d4 -
            12 * pow(a0, 2) * a5 * c3 * c5 * d3 - 8 * pow(a1, 2) * a5 * c0 * c5 * d5 +
            32 * pow(a2, 2) * a3 * c3 * c4 * d4 - 8 * pow(a2, 2) * a3 * c3 * c5 * d3 -
            32 * pow(a2, 2) * a4 * c3 * c4 * d3 - 8 * pow(a3, 2) * a4 * c0 * c4 * d5 -
            8 * pow(a3, 2) * a4 * c0 * c5 * d4 - 8 * pow(a3, 2) * a4 * c4 * c5 * d0 -
            6 * pow(a3, 2) * a5 * c0 * c3 * d5 + 8 * pow(a3, 2) * a5 * c0 * c4 * d4 -
            6 * pow(a3, 2) * a5 * c0 * c5 * d3 - 6 * pow(a3, 2) * a5 * c3 * c5 * d0 -
            8 * pow(a3, 2) * b4 * c0 * c4 * c5 - 6 * pow(a3, 2) * b5 * c0 * c3 * c5 +
            32 * pow(a4, 2) * a5 * c1 * c5 * d1 + 6 * pow(a5, 2) * b3 * c0 * c3 * c5 +
            8 * pow(a5, 2) * b4 * c0 * c3 * c4 + 8 * a0 * pow(a4, 2) * c3 * c5 * d5 -
            8 * a2 * pow(a3, 2) * c2 * c5 * d5 + 8 * a3 * pow(a4, 2) * c0 * c5 * d5 +
            8 * pow(a1, 2) * a3 * c3 * c5 * d5 - 8 * pow(a1, 2) * a5 * c3 * c5 * d3 +
            8 * pow(a3, 2) * a5 * c2 * c5 * d2 - 8 * pow(a4, 2) * a5 * c0 * c3 * d5 -
            8 * pow(a4, 2) * a5 * c0 * c5 * d3 - 8 * pow(a4, 2) * a5 * c3 * c5 * d0 -
            8 * pow(a4, 2) * b5 * c0 * c3 * c5 + 8 * pow(a0, 2) * a4 * c4 * c5 * d5 +
            6 * pow(a0, 2) * a5 * c3 * c5 * d5 - 8 * pow(a0, 2) * a5 * c4 * c5 * d4 +
            8 * pow(a2, 2) * a3 * c3 * c5 * d5 - 8 * pow(a2, 2) * a5 * c3 * c5 * d3 -
            6 * pow(a3, 2) * a5 * c0 * c5 * d5 + 8 * a3 * pow(a5, 2) * c3 * c4 * d4 -
            6 * a3 * pow(a5, 2) * c3 * c5 * d3 - 8 * a4 * pow(a5, 2) * c3 * c4 * d3 +
            32 * pow(a1, 2) * a4 * c4 * c5 * d5 + 8 * pow(a1, 2) * a5 * c3 * c5 * d5 -
            32 * pow(a1, 2) * a5 * c4 * c5 * d4 - 8 * a3 * pow(a4, 2) * c3 * c5 * d5 +
            8 * pow(a4, 2) * a5 * c3 * c5 * d3 + 8 * pow(a3, 2) * a4 * c4 * c5 * d5 +
            6 * pow(a3, 2) * a5 * c3 * c5 * d5 - 8 * pow(a3, 2) * a5 * c4 * c5 * d4 + 16 * a0 * a1 * a3 * c0 * c2 * d4 +
            16 * a0 * a1 * a3 * c0 * c4 * d2 + 16 * a0 * a1 * a3 * c2 * c4 * d0 - 16 * a0 * a1 * a4 * c0 * c2 * d3 -
            16 * a0 * a1 * a4 * c0 * c3 * d2 - 16 * a0 * a1 * a4 * c2 * c3 * d0 - 16 * a0 * a1 * b0 * c1 * c3 * c5 +
            16 * a0 * a1 * b1 * c0 * c3 * c5 + 16 * a0 * a1 * b3 * c0 * c2 * c4 - 16 * a0 * a1 * b4 * c0 * c2 * c3 +
            16 * a0 * a2 * a3 * c0 * c1 * d4 + 16 * a0 * a2 * a3 * c0 * c4 * d1 + 16 * a0 * a2 * a3 * c1 * c4 * d0 -
            16 * a0 * a2 * a4 * c0 * c1 * d3 - 16 * a0 * a2 * a4 * c0 * c3 * d1 - 16 * a0 * a2 * a4 * c1 * c3 * d0 +
            16 * a0 * a2 * b3 * c0 * c1 * c4 - 16 * a0 * a2 * b4 * c0 * c1 * c3 - 16 * a0 * a3 * a5 * c0 * c1 * d1 -
            32 * a0 * a3 * b0 * c1 * c2 * c4 + 16 * a0 * a3 * b1 * c0 * c2 * c4 + 16 * a0 * a3 * b2 * c0 * c1 * c4 +
            32 * a0 * a4 * b0 * c1 * c2 * c3 - 16 * a0 * a4 * b1 * c0 * c2 * c3 - 16 * a0 * a4 * b2 * c0 * c1 * c3 -
            32 * a1 * a2 * a3 * c0 * c4 * d0 + 32 * a1 * a2 * a4 * c0 * c3 * d0 + 16 * a1 * a3 * a5 * c0 * c1 * d0 +
            16 * a1 * a3 * b0 * c0 * c2 * c4 - 16 * a1 * a4 * b0 * c0 * c2 * c3 + 16 * a2 * a3 * b0 * c0 * c1 * c4 -
            16 * a2 * a4 * b0 * c0 * c1 * c3 - 16 * a0 * a3 * a4 * c0 * c4 * d0 + 12 * a0 * a3 * a5 * c0 * c3 * d0 -
            12 * a0 * a3 * b0 * c0 * c3 * c5 + 16 * a0 * a4 * b0 * c0 * c3 * c4 + 16 * a0 * a1 * a4 * c0 * c2 * d5 +
            16 * a0 * a1 * a4 * c0 * c5 * d2 + 16 * a0 * a1 * a4 * c2 * c5 * d0 - 16 * a0 * a1 * a5 * c0 * c2 * d4 -
            16 * a0 * a1 * a5 * c0 * c4 * d2 - 16 * a0 * a1 * a5 * c2 * c4 * d0 + 16 * a0 * a1 * b4 * c0 * c2 * c5 -
            16 * a0 * a1 * b5 * c0 * c2 * c4 + 16 * a0 * a2 * a4 * c0 * c1 * d5 + 16 * a0 * a2 * a4 * c0 * c5 * d1 +
            16 * a0 * a2 * a4 * c1 * c5 * d0 - 16 * a0 * a2 * a5 * c0 * c1 * d4 - 16 * a0 * a2 * a5 * c0 * c4 * d1 -
            16 * a0 * a2 * a5 * c1 * c4 * d0 + 16 * a0 * a2 * b0 * c2 * c3 * c5 - 16 * a0 * a2 * b2 * c0 * c3 * c5 +
            16 * a0 * a2 * b4 * c0 * c1 * c5 - 16 * a0 * a2 * b5 * c0 * c1 * c4 + 16 * a0 * a3 * a5 * c0 * c2 * d2 -
            32 * a0 * a4 * b0 * c1 * c2 * c5 + 16 * a0 * a4 * b1 * c0 * c2 * c5 + 16 * a0 * a4 * b2 * c0 * c1 * c5 +
            32 * a0 * a5 * b0 * c1 * c2 * c4 - 16 * a0 * a5 * b1 * c0 * c2 * c4 - 16 * a0 * a5 * b2 * c0 * c1 * c4 -
            32 * a1 * a2 * a4 * c0 * c5 * d0 + 32 * a1 * a2 * a5 * c0 * c4 * d0 + 16 * a1 * a4 * b0 * c0 * c2 * c5 -
            16 * a1 * a5 * b0 * c0 * c2 * c4 - 16 * a2 * a3 * a5 * c0 * c2 * d0 + 16 * a2 * a4 * b0 * c0 * c1 * c5 -
            16 * a2 * a5 * b0 * c0 * c1 * c4 - 16 * a0 * a1 * a3 * c2 * c3 * d4 - 16 * a0 * a1 * a3 * c2 * c4 * d3 -
            16 * a0 * a1 * a3 * c3 * c4 * d2 + 32 * a0 * a1 * a4 * c2 * c3 * d3 - 16 * a0 * a1 * a5 * c1 * c3 * d3 -
            16 * a0 * a1 * b3 * c2 * c3 * c4 + 16 * a0 * a2 * a3 * c2 * c3 * d3 - 16 * a0 * a3 * a4 * c1 * c2 * d3 -
            16 * a0 * a3 * a4 * c1 * c3 * d2 - 16 * a0 * a3 * a4 * c2 * c3 * d1 - 12 * a0 * a3 * a5 * c0 * c5 * d0 +
            16 * a0 * a3 * a5 * c1 * c3 * d1 - 16 * a0 * a3 * b1 * c2 * c3 * c4 + 32 * a0 * a3 * b3 * c1 * c2 * c4 -
            16 * a0 * a3 * b4 * c1 * c2 * c3 + 16 * a0 * a4 * a5 * c0 * c4 * d0 - 16 * a0 * a4 * b0 * c0 * c4 * c5 -
            16 * a0 * a4 * b3 * c1 * c2 * c3 + 12 * a0 * a5 * b0 * c0 * c3 * c5 + 16 * a1 * a2 * a3 * c0 * c3 * d4 +
            16 * a1 * a2 * a3 * c0 * c4 * d3 + 16 * a1 * a2 * a3 * c3 * c4 * d0 - 32 * a1 * a2 * a4 * c0 * c3 * d3 +
            16 * a1 * a2 * b3 * c0 * c3 * c4 - 16 * a1 * a3 * b0 * c2 * c3 * c4 - 16 * a1 * a3 * b1 * c0 * c3 * c5 +
            16 * a1 * a3 * b2 * c0 * c3 * c4 + 16 * a1 * a3 * b3 * c0 * c1 * c5 + 16 * a2 * a3 * a4 * c0 * c1 * d3 +
            16 * a2 * a3 * a4 * c0 * c3 * d1 + 16 * a2 * a3 * a4 * c1 * c3 * d0 + 16 * a2 * a3 * b1 * c0 * c3 * c4 -
            32 * a2 * a3 * b3 * c0 * c1 * c4 - 16 * a2 * a3 * b3 * c0 * c2 * c3 + 16 * a2 * a3 * b4 * c0 * c1 * c3 +
            16 * a2 * a4 * b3 * c0 * c1 * c3 - 16 * a3 * a4 * b0 * c1 * c2 * c3 + 16 * a3 * a4 * b2 * c0 * c1 * c3 -
            12 * a0 * a3 * a5 * c0 * c3 * d3 + 12 * a0 * a3 * b3 * c0 * c3 * c5 + 64 * a1 * a2 * b1 * c2 * c3 * c5 -
            64 * a1 * a2 * b2 * c1 * c3 * c5 + 64 * a1 * a3 * a5 * c1 * c2 * d2 - 64 * a2 * a3 * a5 * c1 * c2 * d1 -
            16 * a0 * a1 * a4 * c2 * c3 * d5 - 16 * a0 * a1 * a4 * c2 * c5 * d3 - 16 * a0 * a1 * a4 * c3 * c5 * d2 +
            16 * a0 * a1 * a5 * c1 * c3 * d5 - 64 * a0 * a1 * a5 * c1 * c4 * d4 + 16 * a0 * a1 * a5 * c1 * c5 * d3 +
            16 * a0 * a1 * a5 * c2 * c3 * d4 + 16 * a0 * a1 * a5 * c2 * c4 * d3 + 16 * a0 * a1 * a5 * c3 * c4 * d2 +
            16 * a0 * a1 * a5 * c3 * c5 * d1 - 16 * a0 * a1 * b4 * c2 * c3 * c5 + 16 * a0 * a1 * b5 * c1 * c3 * c5 +
            16 * a0 * a1 * b5 * c2 * c3 * c4 - 16 * a0 * a2 * a3 * c1 * c4 * d5 - 16 * a0 * a2 * a3 * c1 * c5 * d4 -
            16 * a0 * a2 * a3 * c2 * c3 * d5 + 64 * a0 * a2 * a3 * c2 * c4 * d4 - 16 * a0 * a2 * a3 * c2 * c5 * d3 -
            16 * a0 * a2 * a3 * c3 * c5 * d2 - 16 * a0 * a2 * a3 * c4 * c5 * d1 + 16 * a0 * a2 * a4 * c1 * c3 * d5 +
            16 * a0 * a2 * a4 * c1 * c5 * d3 + 16 * a0 * a2 * a4 * c3 * c5 * d1 - 16 * a0 * a2 * b3 * c1 * c4 * c5 -
            16 * a0 * a2 * b3 * c2 * c3 * c5 + 16 * a0 * a2 * b4 * c1 * c3 * c5 + 16 * a0 * a3 * a4 * c1 * c2 * d5 +
            16 * a0 * a3 * a4 * c1 * c5 * d2 - 64 * a0 * a3 * a4 * c2 * c4 * d2 + 16 * a0 * a3 * a4 * c2 * c5 * d1 -
            16 * a0 * a3 * b2 * c1 * c4 * c5 - 16 * a0 * a3 * b2 * c2 * c3 * c5 + 16 * a0 * a3 * b4 * c1 * c2 * c5 -
            16 * a0 * a4 * a5 * c1 * c2 * d3 - 16 * a0 * a4 * a5 * c1 * c3 * d2 + 64 * a0 * a4 * a5 * c1 * c4 * d1 -
            16 * a0 * a4 * a5 * c2 * c3 * d1 - 16 * a0 * a4 * b1 * c2 * c3 * c5 + 16 * a0 * a4 * b2 * c1 * c3 * c5 +
            16 * a0 * a4 * b3 * c1 * c2 * c5 - 16 * a0 * a4 * b5 * c1 * c2 * c3 + 16 * a0 * a5 * b1 * c1 * c3 * c5 +
            16 * a0 * a5 * b1 * c2 * c3 * c4 - 16 * a0 * a5 * b4 * c1 * c2 * c3 + 16 * a1 * a2 * a3 * c0 * c4 * d5 +
            16 * a1 * a2 * a3 * c0 * c5 * d4 + 16 * a1 * a2 * a3 * c4 * c5 * d0 - 16 * a1 * a2 * a5 * c0 * c3 * d4 -
            16 * a1 * a2 * a5 * c0 * c4 * d3 - 16 * a1 * a2 * a5 * c3 * c4 * d0 + 16 * a1 * a2 * b3 * c0 * c4 * c5 -
            16 * a1 * a2 * b5 * c0 * c3 * c4 - 16 * a1 * a3 * a5 * c0 * c1 * d5 - 16 * a1 * a3 * a5 * c0 * c2 * d4 -
            16 * a1 * a3 * a5 * c0 * c4 * d2 - 16 * a1 * a3 * a5 * c0 * c5 * d1 - 16 * a1 * a3 * a5 * c1 * c5 * d0 -
            16 * a1 * a3 * a5 * c2 * c4 * d0 + 16 * a1 * a3 * b2 * c0 * c4 * c5 - 16 * a1 * a3 * b5 * c0 * c1 * c5 -
            16 * a1 * a3 * b5 * c0 * c2 * c4 + 16 * a1 * a4 * a5 * c0 * c2 * d3 + 16 * a1 * a4 * a5 * c0 * c3 * d2 +
            16 * a1 * a4 * a5 * c2 * c3 * d0 - 16 * a1 * a4 * b0 * c2 * c3 * c5 - 64 * a1 * a4 * b1 * c0 * c4 * c5 +
            64 * a1 * a4 * b4 * c0 * c1 * c5 + 16 * a1 * a4 * b5 * c0 * c2 * c3 + 16 * a1 * a5 * b0 * c1 * c3 * c5 +
            16 * a1 * a5 * b0 * c2 * c3 * c4 - 16 * a1 * a5 * b2 * c0 * c3 * c4 - 16 * a1 * a5 * b3 * c0 * c1 * c5 -
            16 * a1 * a5 * b3 * c0 * c2 * c4 + 16 * a1 * a5 * b4 * c0 * c2 * c3 - 16 * a2 * a3 * a4 * c0 * c1 * d5 -
            16 * a2 * a3 * a4 * c0 * c5 * d1 - 16 * a2 * a3 * a4 * c1 * c5 * d0 + 16 * a2 * a3 * a5 * c0 * c1 * d4 +
            16 * a2 * a3 * a5 * c0 * c2 * d3 + 16 * a2 * a3 * a5 * c0 * c3 * d2 + 16 * a2 * a3 * a5 * c0 * c4 * d1 +
            16 * a2 * a3 * a5 * c1 * c4 * d0 + 16 * a2 * a3 * a5 * c2 * c3 * d0 - 16 * a2 * a3 * b0 * c1 * c4 * c5 -
            16 * a2 * a3 * b0 * c2 * c3 * c5 + 16 * a2 * a3 * b1 * c0 * c4 * c5 - 16 * a2 * a3 * b4 * c0 * c1 * c5 +
            16 * a2 * a3 * b5 * c0 * c1 * c4 + 16 * a2 * a3 * b5 * c0 * c2 * c3 + 16 * a2 * a4 * b0 * c1 * c3 * c5 +
            64 * a2 * a4 * b2 * c0 * c3 * c4 - 16 * a2 * a4 * b3 * c0 * c1 * c5 - 64 * a2 * a4 * b4 * c0 * c2 * c3 -
            16 * a2 * a5 * b1 * c0 * c3 * c4 + 16 * a2 * a5 * b3 * c0 * c1 * c4 + 16 * a2 * a5 * b3 * c0 * c2 * c3 +
            16 * a3 * a4 * b0 * c1 * c2 * c5 - 16 * a3 * a4 * b2 * c0 * c1 * c5 - 16 * a3 * a5 * b1 * c0 * c1 * c5 -
            16 * a3 * a5 * b1 * c0 * c2 * c4 + 16 * a3 * a5 * b2 * c0 * c1 * c4 + 16 * a3 * a5 * b2 * c0 * c2 * c3 -
            16 * a4 * a5 * b0 * c1 * c2 * c3 + 16 * a4 * a5 * b1 * c0 * c2 * c3 + 16 * a0 * a3 * a4 * c0 * c4 * d5 +
            16 * a0 * a3 * a4 * c0 * c5 * d4 + 16 * a0 * a3 * a4 * c4 * c5 * d0 + 16 * a0 * a3 * b4 * c0 * c4 * c5 -
            16 * a0 * a4 * a5 * c0 * c3 * d4 - 16 * a0 * a4 * a5 * c0 * c4 * d3 - 16 * a0 * a4 * a5 * c3 * c4 * d0 +
            16 * a0 * a4 * b3 * c0 * c4 * c5 - 16 * a0 * a4 * b5 * c0 * c3 * c4 - 16 * a0 * a5 * b4 * c0 * c3 * c4 +
            16 * a3 * a4 * b0 * c0 * c4 * c5 - 16 * a4 * a5 * b0 * c0 * c3 * c4 - 16 * a0 * a1 * a5 * c1 * c5 * d5 +
            16 * a0 * a2 * a3 * c2 * c5 * d5 - 32 * a0 * a2 * a4 * c1 * c5 * d5 + 16 * a0 * a2 * a5 * c1 * c4 * d5 +
            16 * a0 * a2 * a5 * c1 * c5 * d4 + 16 * a0 * a2 * a5 * c4 * c5 * d1 + 16 * a0 * a2 * b5 * c1 * c4 * c5 -
            16 * a0 * a3 * a5 * c2 * c5 * d2 + 16 * a0 * a4 * a5 * c1 * c2 * d5 + 16 * a0 * a4 * a5 * c1 * c5 * d2 +
            16 * a0 * a4 * a5 * c2 * c5 * d1 + 16 * a0 * a4 * b5 * c1 * c2 * c5 + 16 * a0 * a5 * b2 * c1 * c4 * c5 +
            16 * a0 * a5 * b4 * c1 * c2 * c5 - 32 * a0 * a5 * b5 * c1 * c2 * c4 + 32 * a1 * a2 * a4 * c0 * c5 * d5 -
            16 * a1 * a2 * a5 * c0 * c4 * d5 - 16 * a1 * a2 * a5 * c0 * c5 * d4 - 16 * a1 * a2 * a5 * c4 * c5 * d0 -
            16 * a1 * a2 * b5 * c0 * c4 * c5 - 16 * a1 * a4 * a5 * c0 * c2 * d5 - 16 * a1 * a4 * a5 * c0 * c5 * d2 -
            16 * a1 * a4 * a5 * c2 * c5 * d0 - 16 * a1 * a4 * b5 * c0 * c2 * c5 - 16 * a1 * a5 * b2 * c0 * c4 * c5 -
            16 * a1 * a5 * b4 * c0 * c2 * c5 + 16 * a1 * a5 * b5 * c0 * c1 * c5 + 32 * a1 * a5 * b5 * c0 * c2 * c4 +
            16 * a2 * a5 * b0 * c1 * c4 * c5 - 16 * a2 * a5 * b1 * c0 * c4 * c5 + 16 * a2 * a5 * b2 * c0 * c3 * c5 -
            16 * a2 * a5 * b5 * c0 * c2 * c3 + 16 * a4 * a5 * b0 * c1 * c2 * c5 - 16 * a4 * a5 * b1 * c0 * c2 * c5 +
            12 * a0 * a3 * a5 * c0 * c5 * d5 - 12 * a0 * a5 * b5 * c0 * c3 * c5 - 16 * a1 * a2 * a3 * c3 * c4 * d5 -
            16 * a1 * a2 * a3 * c3 * c5 * d4 - 16 * a1 * a2 * a3 * c4 * c5 * d3 + 32 * a1 * a2 * a4 * c3 * c5 * d3 -
            16 * a1 * a2 * b3 * c3 * c4 * c5 + 16 * a1 * a3 * a5 * c2 * c3 * d4 + 16 * a1 * a3 * a5 * c2 * c4 * d3 +
            16 * a1 * a3 * a5 * c3 * c4 * d2 - 16 * a1 * a3 * b2 * c3 * c4 * c5 + 16 * a1 * a3 * b5 * c2 * c3 * c4 -
            32 * a1 * a4 * a5 * c2 * c3 * d3 + 16 * a1 * a5 * b3 * c2 * c3 * c4 - 16 * a2 * a3 * a4 * c1 * c3 * d5 -
            16 * a2 * a3 * a4 * c1 * c5 * d3 - 16 * a2 * a3 * a4 * c3 * c5 * d1 - 16 * a2 * a3 * a5 * c2 * c3 * d3 -
            16 * a2 * a3 * b1 * c3 * c4 * c5 + 32 * a2 * a3 * b3 * c1 * c4 * c5 + 16 * a2 * a3 * b3 * c2 * c3 * c5 -
            16 * a2 * a3 * b4 * c1 * c3 * c5 - 16 * a2 * a4 * b3 * c1 * c3 * c5 + 16 * a3 * a4 * a5 * c1 * c2 * d3 +
            16 * a3 * a4 * a5 * c1 * c3 * d2 + 16 * a3 * a4 * a5 * c2 * c3 * d1 - 16 * a3 * a4 * b2 * c1 * c3 * c5 +
            16 * a3 * a4 * b5 * c1 * c2 * c3 + 16 * a3 * a5 * b1 * c2 * c3 * c4 - 32 * a3 * a5 * b3 * c1 * c2 * c4 +
            16 * a3 * a5 * b4 * c1 * c2 * c3 + 16 * a4 * a5 * b3 * c1 * c2 * c3 - 16 * a0 * a3 * a5 * c3 * c4 * d4 +
            12 * a0 * a3 * a5 * c3 * c5 * d3 + 16 * a0 * a4 * a5 * c3 * c4 * d3 - 16 * a3 * a4 * b3 * c0 * c4 * c5 +
            16 * a3 * a4 * b4 * c0 * c3 * c5 - 12 * a3 * a5 * b3 * c0 * c3 * c5 - 32 * a1 * a2 * a4 * c3 * c5 * d5 +
            16 * a1 * a2 * a5 * c3 * c4 * d5 + 16 * a1 * a2 * a5 * c3 * c5 * d4 + 16 * a1 * a2 * a5 * c4 * c5 * d3 +
            16 * a1 * a2 * b5 * c3 * c4 * c5 + 16 * a1 * a3 * a5 * c1 * c5 * d5 + 16 * a1 * a4 * a5 * c2 * c3 * d5 +
            16 * a1 * a4 * a5 * c2 * c5 * d3 + 16 * a1 * a4 * a5 * c3 * c5 * d2 + 16 * a1 * a4 * b5 * c2 * c3 * c5 +
            16 * a1 * a5 * b2 * c3 * c4 * c5 + 16 * a1 * a5 * b4 * c2 * c3 * c5 - 16 * a1 * a5 * b5 * c1 * c3 * c5 -
            32 * a1 * a5 * b5 * c2 * c3 * c4 + 32 * a2 * a3 * a4 * c1 * c5 * d5 - 16 * a2 * a3 * a5 * c1 * c4 * d5 -
            16 * a2 * a3 * a5 * c1 * c5 * d4 - 16 * a2 * a3 * a5 * c4 * c5 * d1 - 16 * a2 * a3 * b5 * c1 * c4 * c5 +
            16 * a2 * a5 * b1 * c3 * c4 * c5 - 16 * a2 * a5 * b3 * c1 * c4 * c5 - 16 * a3 * a4 * a5 * c1 * c2 * d5 -
            16 * a3 * a4 * a5 * c1 * c5 * d2 - 16 * a3 * a4 * a5 * c2 * c5 * d1 - 16 * a3 * a4 * b5 * c1 * c2 * c5 -
            16 * a3 * a5 * b2 * c1 * c4 * c5 - 16 * a3 * a5 * b4 * c1 * c2 * c5 + 32 * a3 * a5 * b5 * c1 * c2 * c4 +
            16 * a4 * a5 * b1 * c2 * c3 * c5 - 16 * a4 * a5 * b3 * c1 * c2 * c5 - 16 * a0 * a3 * a4 * c4 * c5 * d5 -
            12 * a0 * a3 * a5 * c3 * c5 * d5 + 16 * a0 * a3 * a5 * c4 * c5 * d4 + 12 * a3 * a5 * b5 * c0 * c3 * c5 -
            16 * a4 * a5 * b4 * c0 * c3 * c5 + 16 * a4 * a5 * b5 * c0 * c3 * c4,
        3 * a0 * pow(b0, 2) * pow(c5, 3) - 3 * a0 * pow(b0, 2) * pow(c3, 3) - 4 * a0 * pow(b2, 2) * pow(c3, 3) +
            4 * a0 * pow(b1, 2) * pow(c5, 3) + 3 * a3 * pow(b3, 2) * pow(c0, 3) + 4 * a3 * pow(b4, 2) * pow(c0, 3) +
            3 * a0 * pow(b3, 2) * pow(c5, 3) - 3 * a0 * pow(b5, 2) * pow(c3, 3) - 3 * a3 * pow(b0, 2) * pow(c5, 3) +
            3 * a3 * pow(b5, 2) * pow(c0, 3) + 3 * a5 * pow(b0, 2) * pow(c3, 3) - 3 * a5 * pow(b3, 2) * pow(c0, 3) -
            4 * a3 * pow(b1, 2) * pow(c5, 3) - 4 * a5 * pow(b4, 2) * pow(c0, 3) + 4 * a5 * pow(b2, 2) * pow(c3, 3) -
            3 * a5 * pow(b5, 2) * pow(c0, 3) - 3 * a3 * pow(b3, 2) * pow(c5, 3) + 3 * a5 * pow(b5, 2) * pow(c3, 3) +
            3 * pow(a3, 3) * c0 * pow(d0, 2) + 4 * pow(a3, 3) * c0 * pow(d2, 2) - 3 * pow(a5, 3) * c0 * pow(d0, 2) -
            3 * pow(a0, 3) * c3 * pow(d3, 2) - 4 * pow(a5, 3) * c0 * pow(d1, 2) - 4 * pow(a0, 3) * c3 * pow(d4, 2) -
            3 * pow(a0, 3) * c3 * pow(d5, 2) + 3 * pow(a0, 3) * c5 * pow(d3, 2) + 3 * pow(a3, 3) * c0 * pow(d5, 2) -
            3 * pow(a3, 3) * c5 * pow(d0, 2) - 3 * pow(a5, 3) * c0 * pow(d3, 2) + 3 * pow(a5, 3) * c3 * pow(d0, 2) +
            4 * pow(a0, 3) * c5 * pow(d4, 2) + 4 * pow(a5, 3) * c3 * pow(d1, 2) + 3 * pow(a0, 3) * c5 * pow(d5, 2) -
            4 * pow(a3, 3) * c5 * pow(d2, 2) + 3 * pow(a5, 3) * c3 * pow(d3, 2) - 3 * pow(a3, 3) * c5 * pow(d5, 2) +
            8 * a1 * b0 * b1 * pow(c5, 3) - 8 * a2 * b0 * b2 * pow(c3, 3) - 6 * a0 * b0 * b3 * pow(c5, 3) +
            6 * a0 * b0 * b5 * pow(c3, 3) - 8 * a1 * b1 * b3 * pow(c5, 3) + 6 * a3 * b0 * b3 * pow(c5, 3) -
            6 * a3 * b3 * b5 * pow(c0, 3) + 8 * a4 * b3 * b4 * pow(c0, 3) + 8 * a2 * b2 * b5 * pow(c3, 3) -
            8 * a4 * b4 * b5 * pow(c0, 3) - 6 * a5 * b0 * b5 * pow(c3, 3) + 6 * a5 * b3 * b5 * pow(c0, 3) +
            8 * pow(a3, 3) * c2 * d0 * d2 - 8 * pow(a5, 3) * c1 * d0 * d1 - 6 * pow(a3, 3) * c0 * d0 * d5 +
            6 * pow(a5, 3) * c0 * d0 * d3 + 8 * pow(a5, 3) * c1 * d1 * d3 + 6 * pow(a0, 3) * c3 * d3 * d5 -
            8 * pow(a0, 3) * c4 * d3 * d4 - 6 * pow(a5, 3) * c3 * d0 * d3 - 8 * pow(a3, 3) * c2 * d2 * d5 +
            8 * pow(a0, 3) * c4 * d4 * d5 - 6 * pow(a0, 3) * c5 * d3 * d5 + 6 * pow(a3, 3) * c5 * d0 * d5 -
            4 * a0 * pow(a1, 2) * c0 * pow(d3, 2) + 4 * a0 * pow(a3, 2) * c0 * pow(d1, 2) -
            4 * a0 * pow(b1, 2) * c0 * pow(c3, 2) + 4 * a0 * pow(b3, 2) * c0 * pow(c1, 2) -
            16 * a0 * pow(a1, 2) * c0 * pow(d4, 2) + 4 * a0 * pow(a2, 2) * c0 * pow(d3, 2) -
            4 * a0 * pow(a3, 2) * c0 * pow(d2, 2) + 16 * a0 * pow(a4, 2) * c0 * pow(d1, 2) -
            16 * a0 * pow(b1, 2) * c0 * pow(c4, 2) + 4 * a0 * pow(b2, 2) * c0 * pow(c3, 2) -
            4 * a0 * pow(b3, 2) * c0 * pow(c2, 2) + 16 * a0 * pow(b4, 2) * c0 * pow(c1, 2) -
            4 * a1 * pow(a3, 2) * c1 * pow(d0, 2) + 4 * a1 * pow(b0, 2) * c1 * pow(c3, 2) -
            4 * a1 * pow(b3, 2) * pow(c0, 2) * c1 + 4 * pow(a0, 2) * a1 * c1 * pow(d3, 2) -
            4 * a0 * pow(a1, 2) * c0 * pow(d5, 2) + 16 * a0 * pow(a2, 2) * c0 * pow(d4, 2) -
            3 * a0 * pow(a3, 2) * c3 * pow(d0, 2) - 16 * a0 * pow(a4, 2) * c0 * pow(d2, 2) +
            4 * a0 * pow(a5, 2) * c0 * pow(d1, 2) - 4 * a0 * pow(b1, 2) * c0 * pow(c5, 2) +
            16 * a0 * pow(b2, 2) * c0 * pow(c4, 2) - 3 * a0 * pow(b3, 2) * pow(c0, 2) * c3 -
            16 * a0 * pow(b4, 2) * c0 * pow(c2, 2) + 4 * a0 * pow(b5, 2) * c0 * pow(c1, 2) -
            16 * a1 * pow(a4, 2) * c1 * pow(d0, 2) + 16 * a1 * pow(b0, 2) * c1 * pow(c4, 2) -
            16 * a1 * pow(b4, 2) * pow(c0, 2) * c1 + 3 * a3 * pow(b0, 2) * c0 * pow(c3, 2) +
            16 * pow(a0, 2) * a1 * c1 * pow(d4, 2) + 3 * pow(a0, 2) * a3 * c0 * pow(d3, 2) +
            4 * a0 * pow(a2, 2) * c0 * pow(d5, 2) - 4 * a0 * pow(a3, 2) * c0 * pow(d4, 2) +
            4 * a0 * pow(a4, 2) * c0 * pow(d3, 2) - 4 * a0 * pow(a4, 2) * c3 * pow(d0, 2) -
            4 * a0 * pow(a5, 2) * c0 * pow(d2, 2) - 12 * a0 * pow(b0, 2) * c3 * pow(c4, 2) +
            4 * a0 * pow(b2, 2) * c0 * pow(c5, 2) - 4 * a0 * pow(b3, 2) * c0 * pow(c4, 2) +
            4 * a0 * pow(b4, 2) * c0 * pow(c3, 2) - 4 * a0 * pow(b4, 2) * pow(c0, 2) * c3 -
            4 * a0 * pow(b5, 2) * c0 * pow(c2, 2) + 16 * a1 * pow(a2, 2) * c1 * pow(d3, 2) -
            16 * a1 * pow(a3, 2) * c1 * pow(d2, 2) - 4 * a1 * pow(a5, 2) * c1 * pow(d0, 2) +
            4 * a1 * pow(b0, 2) * c1 * pow(c5, 2) + 16 * a1 * pow(b2, 2) * c1 * pow(c3, 2) -
            16 * a1 * pow(b3, 2) * c1 * pow(c2, 2) - 4 * a1 * pow(b5, 2) * pow(c0, 2) * c1 +
            4 * a2 * pow(a3, 2) * c2 * pow(d0, 2) - 4 * a2 * pow(b0, 2) * c2 * pow(c3, 2) +
            4 * a2 * pow(b3, 2) * pow(c0, 2) * c2 + 12 * a3 * pow(a4, 2) * c0 * pow(d0, 2) +
            4 * a3 * pow(b0, 2) * c0 * pow(c4, 2) - 4 * a3 * pow(b0, 2) * pow(c1, 2) * c3 +
            4 * a3 * pow(b1, 2) * pow(c0, 2) * c3 + 4 * pow(a0, 2) * a1 * c1 * pow(d5, 2) -
            4 * pow(a0, 2) * a2 * c2 * pow(d3, 2) + 4 * pow(a0, 2) * a3 * c0 * pow(d4, 2) -
            4 * pow(a0, 2) * a3 * c3 * pow(d1, 2) + 4 * pow(a1, 2) * a3 * c3 * pow(d0, 2) -
            12 * a0 * pow(a2, 2) * c3 * pow(d3, 2) - 6 * a0 * pow(a3, 2) * c0 * pow(d5, 2) -
            4 * a0 * pow(a3, 2) * c3 * pow(d2, 2) + 3 * a0 * pow(a3, 2) * c5 * pow(d0, 2) +
            6 * a0 * pow(a5, 2) * c0 * pow(d3, 2) - 3 * a0 * pow(a5, 2) * c3 * pow(d0, 2) -
            9 * a0 * pow(b0, 2) * c3 * pow(c5, 2) + 9 * a0 * pow(b0, 2) * pow(c3, 2) * c5 -
            6 * a0 * pow(b3, 2) * c0 * pow(c5, 2) + 3 * a0 * pow(b3, 2) * pow(c0, 2) * c5 -
            4 * a0 * pow(b3, 2) * pow(c2, 2) * c3 + 6 * a0 * pow(b5, 2) * c0 * pow(c3, 2) -
            3 * a0 * pow(b5, 2) * pow(c0, 2) * c3 + 64 * a1 * pow(a2, 2) * c1 * pow(d4, 2) -
            64 * a1 * pow(a4, 2) * c1 * pow(d2, 2) + 64 * a1 * pow(b2, 2) * c1 * pow(c4, 2) -
            64 * a1 * pow(b4, 2) * c1 * pow(c2, 2) + 16 * a2 * pow(a3, 2) * c2 * pow(d1, 2) +
            16 * a2 * pow(a4, 2) * c2 * pow(d0, 2) - 16 * a2 * pow(b0, 2) * c2 * pow(c4, 2) -
            16 * a2 * pow(b1, 2) * c2 * pow(c3, 2) + 16 * a2 * pow(b3, 2) * pow(c1, 2) * c2 +
            16 * a2 * pow(b4, 2) * pow(c0, 2) * c2 + 9 * a3 * pow(a5, 2) * c0 * pow(d0, 2) +
            3 * a3 * pow(b0, 2) * c0 * pow(c5, 2) + 4 * a3 * pow(b0, 2) * pow(c2, 2) * c3 +
            4 * a3 * pow(b2, 2) * c0 * pow(c3, 2) - 4 * a3 * pow(b2, 2) * pow(c0, 2) * c3 +
            12 * a3 * pow(b3, 2) * c0 * pow(c2, 2) - 3 * a5 * pow(b0, 2) * c0 * pow(c3, 2) -
            16 * pow(a0, 2) * a2 * c2 * pow(d4, 2) + 3 * pow(a0, 2) * a3 * c0 * pow(d5, 2) +
            4 * pow(a0, 2) * a3 * c3 * pow(d2, 2) - 3 * pow(a0, 2) * a5 * c0 * pow(d3, 2) -
            16 * pow(a1, 2) * a2 * c2 * pow(d3, 2) + 4 * pow(a2, 2) * a3 * c0 * pow(d3, 2) -
            4 * pow(a2, 2) * a3 * c3 * pow(d0, 2) - 9 * pow(a3, 2) * a5 * c0 * pow(d0, 2) -
            8 * a0 * pow(a1, 2) * c3 * pow(d5, 2) + 4 * a0 * pow(a1, 2) * c5 * pow(d3, 2) -
            16 * a0 * pow(a2, 2) * c3 * pow(d4, 2) - 4 * a0 * pow(a3, 2) * c5 * pow(d1, 2) -
            4 * a0 * pow(a4, 2) * c0 * pow(d5, 2) + 16 * a0 * pow(a4, 2) * c3 * pow(d2, 2) +
            4 * a0 * pow(a4, 2) * c5 * pow(d0, 2) + 4 * a0 * pow(a5, 2) * c0 * pow(d4, 2) -
            8 * a0 * pow(a5, 2) * c3 * pow(d1, 2) + 12 * a0 * pow(b0, 2) * pow(c4, 2) * c5 -
            8 * a0 * pow(b1, 2) * c3 * pow(c5, 2) + 4 * a0 * pow(b1, 2) * pow(c3, 2) * c5 -
            16 * a0 * pow(b2, 2) * c3 * pow(c4, 2) - 4 * a0 * pow(b3, 2) * pow(c1, 2) * c5 -
            4 * a0 * pow(b4, 2) * c0 * pow(c5, 2) + 4 * a0 * pow(b4, 2) * pow(c0, 2) * c5 +
            16 * a0 * pow(b4, 2) * pow(c2, 2) * c3 + 4 * a0 * pow(b5, 2) * c0 * pow(c4, 2) -
            8 * a0 * pow(b5, 2) * pow(c1, 2) * c3 + 16 * a1 * pow(a2, 2) * c1 * pow(d5, 2) -
            16 * a1 * pow(a5, 2) * c1 * pow(d2, 2) + 16 * a1 * pow(b2, 2) * c1 * pow(c5, 2) -
            16 * a1 * pow(b5, 2) * c1 * pow(c2, 2) + 64 * a2 * pow(a4, 2) * c2 * pow(d1, 2) +
            4 * a2 * pow(a5, 2) * c2 * pow(d0, 2) - 4 * a2 * pow(b0, 2) * c2 * pow(c5, 2) -
            64 * a2 * pow(b1, 2) * c2 * pow(c4, 2) + 64 * a2 * pow(b4, 2) * pow(c1, 2) * c2 +
            4 * a2 * pow(b5, 2) * pow(c0, 2) * c2 + 16 * a3 * pow(a4, 2) * c0 * pow(d2, 2) +
            8 * a3 * pow(a5, 2) * c0 * pow(d1, 2) + 4 * a3 * pow(b0, 2) * pow(c1, 2) * c5 +
            8 * a3 * pow(b1, 2) * c0 * pow(c5, 2) - 4 * a3 * pow(b1, 2) * pow(c0, 2) * c5 +
            16 * a3 * pow(b1, 2) * pow(c2, 2) * c3 - 16 * a3 * pow(b2, 2) * c0 * pow(c4, 2) -
            16 * a3 * pow(b2, 2) * pow(c1, 2) * c3 + 16 * a3 * pow(b4, 2) * c0 * pow(c2, 2) +
            8 * a3 * pow(b5, 2) * c0 * pow(c1, 2) - 16 * a4 * pow(b0, 2) * pow(c1, 2) * c4 +
            16 * a4 * pow(b1, 2) * pow(c0, 2) * c4 - 4 * a5 * pow(b0, 2) * c0 * pow(c4, 2) +
            4 * a5 * pow(b0, 2) * pow(c1, 2) * c3 + 4 * a5 * pow(b1, 2) * c0 * pow(c3, 2) -
            4 * a5 * pow(b1, 2) * pow(c0, 2) * c3 - 4 * a5 * pow(b3, 2) * c0 * pow(c1, 2) -
            4 * pow(a0, 2) * a2 * c2 * pow(d5, 2) + 4 * pow(a0, 2) * a3 * c5 * pow(d1, 2) -
            16 * pow(a0, 2) * a4 * c4 * pow(d1, 2) - 4 * pow(a0, 2) * a5 * c0 * pow(d4, 2) +
            4 * pow(a0, 2) * a5 * c3 * pow(d1, 2) - 64 * pow(a1, 2) * a2 * c2 * pow(d4, 2) +
            8 * pow(a1, 2) * a3 * c0 * pow(d5, 2) + 16 * pow(a1, 2) * a3 * c3 * pow(d2, 2) -
            4 * pow(a1, 2) * a3 * c5 * pow(d0, 2) + 16 * pow(a1, 2) * a4 * c4 * pow(d0, 2) +
            4 * pow(a1, 2) * a5 * c0 * pow(d3, 2) - 4 * pow(a1, 2) * a5 * c3 * pow(d0, 2) -
            16 * pow(a2, 2) * a3 * c0 * pow(d4, 2) - 16 * pow(a2, 2) * a3 * c3 * pow(d1, 2) -
            4 * pow(a3, 2) * a5 * c0 * pow(d1, 2) - 12 * pow(a4, 2) * a5 * c0 * pow(d0, 2) +
            16 * a0 * pow(a1, 2) * c5 * pow(d4, 2) - 4 * a0 * pow(a2, 2) * c3 * pow(d5, 2) +
            8 * a0 * pow(a2, 2) * c5 * pow(d3, 2) + 8 * a0 * pow(a3, 2) * c5 * pow(d2, 2) -
            16 * a0 * pow(a4, 2) * c5 * pow(d1, 2) + 4 * a0 * pow(a5, 2) * c3 * pow(d2, 2) +
            3 * a0 * pow(a5, 2) * c5 * pow(d0, 2) + 16 * a0 * pow(b1, 2) * pow(c4, 2) * c5 -
            4 * a0 * pow(b2, 2) * c3 * pow(c5, 2) + 8 * a0 * pow(b2, 2) * pow(c3, 2) * c5 +
            8 * a0 * pow(b3, 2) * pow(c2, 2) * c5 - 16 * a0 * pow(b4, 2) * pow(c1, 2) * c5 +
            3 * a0 * pow(b5, 2) * pow(c0, 2) * c5 + 4 * a0 * pow(b5, 2) * pow(c2, 2) * c3 -
            4 * a1 * pow(a3, 2) * c1 * pow(d5, 2) + 4 * a1 * pow(a5, 2) * c1 * pow(d3, 2) -
            4 * a1 * pow(b3, 2) * c1 * pow(c5, 2) + 4 * a1 * pow(b5, 2) * c1 * pow(c3, 2) +
            16 * a2 * pow(a5, 2) * c2 * pow(d1, 2) - 16 * a2 * pow(b1, 2) * c2 * pow(c5, 2) +
            16 * a2 * pow(b5, 2) * pow(c1, 2) * c2 - 4 * a3 * pow(a4, 2) * c3 * pow(d0, 2) +
            4 * a3 * pow(a5, 2) * c0 * pow(d2, 2) + 4 * a3 * pow(b0, 2) * c3 * pow(c4, 2) -
            4 * a3 * pow(b0, 2) * pow(c2, 2) * c5 - 4 * a3 * pow(b2, 2) * c0 * pow(c5, 2) +
            4 * a3 * pow(b2, 2) * pow(c0, 2) * c5 - 4 * a3 * pow(b4, 2) * pow(c0, 2) * c3 +
            4 * a3 * pow(b5, 2) * c0 * pow(c2, 2) + 16 * a4 * pow(b0, 2) * pow(c2, 2) * c4 -
            16 * a4 * pow(b2, 2) * pow(c0, 2) * c4 - 3 * a5 * pow(b0, 2) * c0 * pow(c5, 2) -
            4 * a5 * pow(b0, 2) * pow(c2, 2) * c3 + 16 * a5 * pow(b1, 2) * c0 * pow(c4, 2) -
            8 * a5 * pow(b2, 2) * c0 * pow(c3, 2) + 4 * a5 * pow(b2, 2) * pow(c0, 2) * c3 -
            8 * a5 * pow(b3, 2) * c0 * pow(c2, 2) - 16 * a5 * pow(b4, 2) * c0 * pow(c1, 2) +
            4 * pow(a0, 2) * a3 * c3 * pow(d4, 2) - 4 * pow(a0, 2) * a3 * c5 * pow(d2, 2) +
            16 * pow(a0, 2) * a4 * c4 * pow(d2, 2) - 3 * pow(a0, 2) * a5 * c0 * pow(d5, 2) -
            4 * pow(a0, 2) * a5 * c3 * pow(d2, 2) - 16 * pow(a1, 2) * a2 * c2 * pow(d5, 2) +
            16 * pow(a1, 2) * a5 * c0 * pow(d4, 2) - 4 * pow(a2, 2) * a3 * c0 * pow(d5, 2) +
            4 * pow(a2, 2) * a3 * c5 * pow(d0, 2) - 16 * pow(a2, 2) * a4 * c4 * pow(d0, 2) -
            8 * pow(a2, 2) * a5 * c0 * pow(d3, 2) + 4 * pow(a2, 2) * a5 * c3 * pow(d0, 2) -
            8 * pow(a3, 2) * a5 * c0 * pow(d2, 2) - 16 * pow(a4, 2) * a5 * c0 * pow(d1, 2) +
            12 * a0 * pow(a1, 2) * c5 * pow(d5, 2) - 3 * a0 * pow(a3, 2) * c3 * pow(d5, 2) -
            9 * a0 * pow(a5, 2) * c3 * pow(d3, 2) + 4 * a0 * pow(a5, 2) * c5 * pow(d1, 2) -
            3 * a0 * pow(b3, 2) * c3 * pow(c5, 2) + 4 * a0 * pow(b5, 2) * pow(c1, 2) * c5 -
            16 * a1 * pow(a4, 2) * c1 * pow(d5, 2) + 16 * a1 * pow(a5, 2) * c1 * pow(d4, 2) -
            16 * a1 * pow(b4, 2) * c1 * pow(c5, 2) + 16 * a1 * pow(b5, 2) * c1 * pow(c4, 2) -
            16 * a2 * pow(a3, 2) * c2 * pow(d4, 2) + 16 * a2 * pow(a4, 2) * c2 * pow(d3, 2) -
            16 * a2 * pow(b3, 2) * c2 * pow(c4, 2) + 16 * a2 * pow(b4, 2) * c2 * pow(c3, 2) +
            3 * a3 * pow(a5, 2) * c0 * pow(d3, 2) - 6 * a3 * pow(a5, 2) * c3 * pow(d0, 2) +
            6 * a3 * pow(b0, 2) * c3 * pow(c5, 2) - 3 * a3 * pow(b0, 2) * pow(c3, 2) * c5 -
            16 * a3 * pow(b1, 2) * pow(c2, 2) * c5 + 16 * a3 * pow(b2, 2) * pow(c1, 2) * c5 +
            9 * a3 * pow(b3, 2) * c0 * pow(c5, 2) - 9 * a3 * pow(b3, 2) * pow(c0, 2) * c5 +
            3 * a3 * pow(b5, 2) * c0 * pow(c3, 2) - 6 * a3 * pow(b5, 2) * pow(c0, 2) * c3 -
            4 * a4 * pow(b0, 2) * pow(c3, 2) * c4 + 64 * a4 * pow(b1, 2) * pow(c2, 2) * c4 -
            64 * a4 * pow(b2, 2) * pow(c1, 2) * c4 + 4 * a4 * pow(b3, 2) * pow(c0, 2) * c4 -
            4 * a5 * pow(b0, 2) * pow(c1, 2) * c5 - 4 * a5 * pow(b1, 2) * c0 * pow(c5, 2) +
            4 * a5 * pow(b1, 2) * pow(c0, 2) * c5 - 16 * a5 * pow(b1, 2) * pow(c2, 2) * c3 +
            16 * a5 * pow(b2, 2) * pow(c1, 2) * c3 + 3 * a5 * pow(b3, 2) * pow(c0, 2) * c3 -
            12 * a5 * pow(b5, 2) * c0 * pow(c1, 2) + 6 * pow(a0, 2) * a3 * c3 * pow(d5, 2) -
            3 * pow(a0, 2) * a3 * c5 * pow(d3, 2) - 4 * pow(a0, 2) * a4 * c4 * pow(d3, 2) +
            9 * pow(a0, 2) * a5 * c3 * pow(d3, 2) - 4 * pow(a0, 2) * a5 * c5 * pow(d1, 2) -
            16 * pow(a1, 2) * a3 * c5 * pow(d2, 2) + 64 * pow(a1, 2) * a4 * c4 * pow(d2, 2) -
            4 * pow(a1, 2) * a5 * c0 * pow(d5, 2) - 16 * pow(a1, 2) * a5 * c3 * pow(d2, 2) +
            4 * pow(a1, 2) * a5 * c5 * pow(d0, 2) + 16 * pow(a2, 2) * a3 * c5 * pow(d1, 2) -
            64 * pow(a2, 2) * a4 * c4 * pow(d1, 2) + 16 * pow(a2, 2) * a5 * c3 * pow(d1, 2) +
            4 * pow(a3, 2) * a4 * c4 * pow(d0, 2) + 3 * pow(a3, 2) * a5 * c3 * pow(d0, 2) +
            4 * a0 * pow(a3, 2) * c5 * pow(d4, 2) + 4 * a0 * pow(a4, 2) * c3 * pow(d5, 2) -
            4 * a0 * pow(a4, 2) * c5 * pow(d3, 2) - 4 * a0 * pow(a5, 2) * c3 * pow(d4, 2) +
            4 * a0 * pow(b3, 2) * pow(c4, 2) * c5 + 4 * a0 * pow(b4, 2) * c3 * pow(c5, 2) -
            4 * a0 * pow(b4, 2) * pow(c3, 2) * c5 - 4 * a0 * pow(b5, 2) * c3 * pow(c4, 2) -
            4 * a2 * pow(a3, 2) * c2 * pow(d5, 2) + 4 * a2 * pow(a5, 2) * c2 * pow(d3, 2) -
            4 * a2 * pow(b3, 2) * c2 * pow(c5, 2) + 4 * a2 * pow(b5, 2) * c2 * pow(c3, 2) +
            4 * a3 * pow(a4, 2) * c0 * pow(d5, 2) - 16 * a3 * pow(a4, 2) * c3 * pow(d2, 2) -
            8 * a3 * pow(a4, 2) * c5 * pow(d0, 2) - 4 * a3 * pow(a5, 2) * c0 * pow(d4, 2) -
            4 * a3 * pow(a5, 2) * c3 * pow(d1, 2) - 8 * a3 * pow(b0, 2) * pow(c4, 2) * c5 +
            4 * a3 * pow(b1, 2) * c3 * pow(c5, 2) + 16 * a3 * pow(b2, 2) * c3 * pow(c4, 2) +
            4 * a3 * pow(b4, 2) * c0 * pow(c5, 2) - 8 * a3 * pow(b4, 2) * pow(c0, 2) * c5 -
            16 * a3 * pow(b4, 2) * pow(c2, 2) * c3 - 4 * a3 * pow(b5, 2) * c0 * pow(c4, 2) -
            4 * a3 * pow(b5, 2) * pow(c1, 2) * c3 + 8 * a5 * pow(b0, 2) * c3 * pow(c4, 2) +
            4 * a5 * pow(b0, 2) * pow(c2, 2) * c5 - 4 * a5 * pow(b2, 2) * pow(c0, 2) * c5 +
            4 * a5 * pow(b3, 2) * c0 * pow(c4, 2) - 4 * a5 * pow(b4, 2) * c0 * pow(c3, 2) +
            8 * a5 * pow(b4, 2) * pow(c0, 2) * c3 - 8 * pow(a0, 2) * a3 * c5 * pow(d4, 2) +
            8 * pow(a0, 2) * a5 * c3 * pow(d4, 2) + 4 * pow(a0, 2) * a5 * c5 * pow(d2, 2) +
            4 * pow(a1, 2) * a3 * c3 * pow(d5, 2) + 16 * pow(a2, 2) * a3 * c3 * pow(d4, 2) -
            4 * pow(a2, 2) * a5 * c5 * pow(d0, 2) + 4 * pow(a3, 2) * a5 * c0 * pow(d4, 2) -
            4 * pow(a4, 2) * a5 * c0 * pow(d3, 2) + 8 * pow(a4, 2) * a5 * c3 * pow(d0, 2) +
            9 * a0 * pow(a3, 2) * c5 * pow(d5, 2) + 3 * a0 * pow(a5, 2) * c5 * pow(d3, 2) +
            3 * a0 * pow(b5, 2) * pow(c3, 2) * c5 - 4 * a3 * pow(a5, 2) * c3 * pow(d2, 2) -
            3 * a3 * pow(a5, 2) * c5 * pow(d0, 2) + 4 * a3 * pow(b2, 2) * c3 * pow(c5, 2) -
            4 * a3 * pow(b2, 2) * pow(c3, 2) * c5 - 12 * a3 * pow(b3, 2) * pow(c2, 2) * c5 -
            3 * a3 * pow(b5, 2) * pow(c0, 2) * c5 - 4 * a3 * pow(b5, 2) * pow(c2, 2) * c3 -
            4 * a4 * pow(a5, 2) * c4 * pow(d0, 2) + 4 * a4 * pow(b0, 2) * c4 * pow(c5, 2) -
            16 * a4 * pow(b2, 2) * pow(c3, 2) * c4 + 16 * a4 * pow(b3, 2) * pow(c2, 2) * c4 -
            4 * a4 * pow(b5, 2) * pow(c0, 2) * c4 + 3 * a5 * pow(b0, 2) * c3 * pow(c5, 2) -
            6 * a5 * pow(b0, 2) * pow(c3, 2) * c5 + 16 * a5 * pow(b1, 2) * pow(c2, 2) * c5 -
            16 * a5 * pow(b2, 2) * pow(c1, 2) * c5 - 3 * a5 * pow(b3, 2) * c0 * pow(c5, 2) +
            6 * a5 * pow(b3, 2) * pow(c0, 2) * c5 + 4 * a5 * pow(b3, 2) * pow(c2, 2) * c3 -
            9 * a5 * pow(b5, 2) * c0 * pow(c3, 2) + 9 * a5 * pow(b5, 2) * pow(c0, 2) * c3 -
            9 * pow(a0, 2) * a3 * c5 * pow(d5, 2) + 4 * pow(a0, 2) * a4 * c4 * pow(d5, 2) +
            3 * pow(a0, 2) * a5 * c3 * pow(d5, 2) - 6 * pow(a0, 2) * a5 * c5 * pow(d3, 2) +
            16 * pow(a1, 2) * a5 * c5 * pow(d2, 2) + 4 * pow(a2, 2) * a3 * c3 * pow(d5, 2) -
            4 * pow(a2, 2) * a3 * c5 * pow(d3, 2) - 16 * pow(a2, 2) * a4 * c4 * pow(d3, 2) +
            12 * pow(a2, 2) * a5 * c3 * pow(d3, 2) - 16 * pow(a2, 2) * a5 * c5 * pow(d1, 2) +
            16 * pow(a3, 2) * a4 * c4 * pow(d2, 2) - 3 * pow(a3, 2) * a5 * c0 * pow(d5, 2) +
            4 * pow(a3, 2) * a5 * c3 * pow(d2, 2) + 6 * pow(a3, 2) * a5 * c5 * pow(d0, 2) -
            4 * a3 * pow(a5, 2) * c5 * pow(d1, 2) - 4 * a3 * pow(b5, 2) * pow(c1, 2) * c5 -
            16 * a4 * pow(a5, 2) * c4 * pow(d1, 2) + 16 * a4 * pow(b1, 2) * c4 * pow(c5, 2) -
            16 * a4 * pow(b5, 2) * pow(c1, 2) * c4 - 4 * a5 * pow(b0, 2) * pow(c4, 2) * c5 +
            4 * a5 * pow(b1, 2) * c3 * pow(c5, 2) - 4 * a5 * pow(b1, 2) * pow(c3, 2) * c5 +
            4 * a5 * pow(b3, 2) * pow(c1, 2) * c5 + 4 * a5 * pow(b4, 2) * pow(c0, 2) * c5 +
            12 * a5 * pow(b5, 2) * pow(c1, 2) * c3 - 4 * pow(a0, 2) * a5 * c5 * pow(d4, 2) -
            12 * pow(a1, 2) * a3 * c5 * pow(d5, 2) + 16 * pow(a1, 2) * a4 * c4 * pow(d5, 2) +
            4 * pow(a1, 2) * a5 * c3 * pow(d5, 2) - 4 * pow(a1, 2) * a5 * c5 * pow(d3, 2) +
            4 * pow(a3, 2) * a5 * c5 * pow(d1, 2) + 4 * pow(a4, 2) * a5 * c5 * pow(d0, 2) -
            4 * a3 * pow(a4, 2) * c3 * pow(d5, 2) + 4 * a3 * pow(a5, 2) * c3 * pow(d4, 2) -
            4 * a3 * pow(b4, 2) * c3 * pow(c5, 2) + 4 * a3 * pow(b5, 2) * c3 * pow(c4, 2) -
            16 * a5 * pow(b1, 2) * pow(c4, 2) * c5 - 4 * a5 * pow(b2, 2) * pow(c3, 2) * c5 +
            4 * a5 * pow(b3, 2) * pow(c2, 2) * c5 + 16 * a5 * pow(b4, 2) * pow(c1, 2) * c5 -
            16 * pow(a1, 2) * a5 * c5 * pow(d4, 2) - 4 * pow(a2, 2) * a5 * c5 * pow(d3, 2) +
            4 * pow(a3, 2) * a5 * c5 * pow(d2, 2) + 16 * pow(a4, 2) * a5 * c5 * pow(d1, 2) -
            3 * a3 * pow(a5, 2) * c5 * pow(d3, 2) - 3 * a3 * pow(b5, 2) * pow(c3, 2) * c5 -
            4 * a4 * pow(a5, 2) * c4 * pow(d3, 2) + 4 * a4 * pow(b3, 2) * c4 * pow(c5, 2) -
            4 * a4 * pow(b5, 2) * pow(c3, 2) * c4 + 3 * a5 * pow(b3, 2) * c3 * pow(c5, 2) +
            4 * pow(a3, 2) * a4 * c4 * pow(d5, 2) + 3 * pow(a3, 2) * a5 * c3 * pow(d5, 2) -
            4 * a5 * pow(b3, 2) * pow(c4, 2) * c5 + 4 * a5 * pow(b4, 2) * pow(c3, 2) * c5 -
            4 * pow(a3, 2) * a5 * c5 * pow(d4, 2) + 4 * pow(a4, 2) * a5 * c5 * pow(d3, 2) -
            4 * pow(a1, 2) * b0 * pow(c3, 2) * d0 + 4 * pow(a3, 2) * b0 * pow(c1, 2) * d0 +
            4 * pow(a0, 2) * b1 * pow(c3, 2) * d1 - 16 * pow(a1, 2) * b0 * pow(c4, 2) * d0 +
            4 * pow(a2, 2) * b0 * pow(c3, 2) * d0 - 4 * pow(a3, 2) * b0 * pow(c2, 2) * d0 -
            4 * pow(a3, 2) * b1 * pow(c0, 2) * d1 + 16 * pow(a4, 2) * b0 * pow(c1, 2) * d0 -
            9 * pow(a0, 2) * b0 * pow(c3, 2) * d3 + 16 * pow(a0, 2) * b1 * pow(c4, 2) * d1 +
            3 * pow(a0, 2) * b3 * pow(c3, 2) * d0 - 4 * pow(a1, 2) * b0 * pow(c5, 2) * d0 +
            16 * pow(a2, 2) * b0 * pow(c4, 2) * d0 - 3 * pow(a3, 2) * b0 * pow(c0, 2) * d3 +
            9 * pow(a3, 2) * b3 * pow(c0, 2) * d0 - 16 * pow(a4, 2) * b0 * pow(c2, 2) * d0 -
            16 * pow(a4, 2) * b1 * pow(c0, 2) * d1 + 4 * pow(a5, 2) * b0 * pow(c1, 2) * d0 -
            12 * pow(a0, 2) * b0 * pow(c4, 2) * d3 + 4 * pow(a0, 2) * b1 * pow(c5, 2) * d1 -
            4 * pow(a0, 2) * b2 * pow(c3, 2) * d2 - 4 * pow(a0, 2) * b3 * pow(c1, 2) * d3 +
            4 * pow(a0, 2) * b3 * pow(c4, 2) * d0 + 4 * pow(a1, 2) * b3 * pow(c0, 2) * d3 +
            4 * pow(a2, 2) * b0 * pow(c5, 2) * d0 + 16 * pow(a2, 2) * b1 * pow(c3, 2) * d1 -
            4 * pow(a3, 2) * b0 * pow(c4, 2) * d0 - 16 * pow(a3, 2) * b1 * pow(c2, 2) * d1 +
            4 * pow(a3, 2) * b2 * pow(c0, 2) * d2 - 4 * pow(a4, 2) * b0 * pow(c0, 2) * d3 +
            4 * pow(a4, 2) * b0 * pow(c3, 2) * d0 + 12 * pow(a4, 2) * b3 * pow(c0, 2) * d0 -
            4 * pow(a5, 2) * b0 * pow(c2, 2) * d0 - 4 * pow(a5, 2) * b1 * pow(c0, 2) * d1 +
            9 * pow(a0, 2) * b0 * pow(c3, 2) * d5 - 9 * pow(a0, 2) * b0 * pow(c5, 2) * d3 -
            16 * pow(a0, 2) * b2 * pow(c4, 2) * d2 + 4 * pow(a0, 2) * b3 * pow(c2, 2) * d3 +
            3 * pow(a0, 2) * b3 * pow(c5, 2) * d0 - 3 * pow(a0, 2) * b5 * pow(c3, 2) * d0 -
            16 * pow(a1, 2) * b2 * pow(c3, 2) * d2 - 12 * pow(a2, 2) * b0 * pow(c3, 2) * d3 +
            64 * pow(a2, 2) * b1 * pow(c4, 2) * d1 - 4 * pow(a2, 2) * b3 * pow(c0, 2) * d3 +
            4 * pow(a2, 2) * b3 * pow(c3, 2) * d0 + 3 * pow(a3, 2) * b0 * pow(c0, 2) * d5 -
            4 * pow(a3, 2) * b0 * pow(c2, 2) * d3 - 6 * pow(a3, 2) * b0 * pow(c5, 2) * d0 +
            16 * pow(a3, 2) * b2 * pow(c1, 2) * d2 + 12 * pow(a3, 2) * b3 * pow(c2, 2) * d0 -
            9 * pow(a3, 2) * b5 * pow(c0, 2) * d0 - 64 * pow(a4, 2) * b1 * pow(c2, 2) * d1 +
            16 * pow(a4, 2) * b2 * pow(c0, 2) * d2 - 3 * pow(a5, 2) * b0 * pow(c0, 2) * d3 +
            6 * pow(a5, 2) * b0 * pow(c3, 2) * d0 + 9 * pow(a5, 2) * b3 * pow(c0, 2) * d0 +
            12 * pow(a0, 2) * b0 * pow(c4, 2) * d5 - 4 * pow(a0, 2) * b2 * pow(c5, 2) * d2 +
            4 * pow(a0, 2) * b3 * pow(c1, 2) * d5 - 16 * pow(a0, 2) * b4 * pow(c1, 2) * d4 +
            4 * pow(a0, 2) * b5 * pow(c1, 2) * d3 - 4 * pow(a0, 2) * b5 * pow(c4, 2) * d0 +
            4 * pow(a1, 2) * b0 * pow(c3, 2) * d5 - 8 * pow(a1, 2) * b0 * pow(c5, 2) * d3 -
            64 * pow(a1, 2) * b2 * pow(c4, 2) * d2 - 4 * pow(a1, 2) * b3 * pow(c0, 2) * d5 +
            16 * pow(a1, 2) * b3 * pow(c2, 2) * d3 + 8 * pow(a1, 2) * b3 * pow(c5, 2) * d0 +
            16 * pow(a1, 2) * b4 * pow(c0, 2) * d4 - 4 * pow(a1, 2) * b5 * pow(c0, 2) * d3 +
            4 * pow(a1, 2) * b5 * pow(c3, 2) * d0 - 16 * pow(a2, 2) * b0 * pow(c4, 2) * d3 +
            16 * pow(a2, 2) * b1 * pow(c5, 2) * d1 - 16 * pow(a2, 2) * b3 * pow(c1, 2) * d3 -
            16 * pow(a2, 2) * b3 * pow(c4, 2) * d0 - 4 * pow(a3, 2) * b0 * pow(c1, 2) * d5 -
            4 * pow(a3, 2) * b5 * pow(c1, 2) * d0 + 4 * pow(a4, 2) * b0 * pow(c0, 2) * d5 +
            16 * pow(a4, 2) * b0 * pow(c2, 2) * d3 - 4 * pow(a4, 2) * b0 * pow(c5, 2) * d0 +
            64 * pow(a4, 2) * b2 * pow(c1, 2) * d2 + 16 * pow(a4, 2) * b3 * pow(c2, 2) * d0 -
            12 * pow(a4, 2) * b5 * pow(c0, 2) * d0 - 8 * pow(a5, 2) * b0 * pow(c1, 2) * d3 +
            4 * pow(a5, 2) * b0 * pow(c4, 2) * d0 - 16 * pow(a5, 2) * b1 * pow(c2, 2) * d1 +
            4 * pow(a5, 2) * b2 * pow(c0, 2) * d2 + 8 * pow(a5, 2) * b3 * pow(c1, 2) * d0 +
            9 * pow(a0, 2) * b0 * pow(c5, 2) * d5 - 4 * pow(a0, 2) * b3 * pow(c2, 2) * d5 +
            4 * pow(a0, 2) * b3 * pow(c4, 2) * d3 + 16 * pow(a0, 2) * b4 * pow(c2, 2) * d4 -
            4 * pow(a0, 2) * b5 * pow(c2, 2) * d3 - 3 * pow(a0, 2) * b5 * pow(c5, 2) * d0 +
            16 * pow(a1, 2) * b0 * pow(c4, 2) * d5 - 16 * pow(a1, 2) * b2 * pow(c5, 2) * d2 +
            16 * pow(a1, 2) * b5 * pow(c4, 2) * d0 + 8 * pow(a2, 2) * b0 * pow(c3, 2) * d5 -
            4 * pow(a2, 2) * b0 * pow(c5, 2) * d3 + 4 * pow(a2, 2) * b3 * pow(c0, 2) * d5 -
            4 * pow(a2, 2) * b3 * pow(c5, 2) * d0 - 16 * pow(a2, 2) * b4 * pow(c0, 2) * d4 +
            4 * pow(a2, 2) * b5 * pow(c0, 2) * d3 - 8 * pow(a2, 2) * b5 * pow(c3, 2) * d0 +
            8 * pow(a3, 2) * b0 * pow(c2, 2) * d5 - 4 * pow(a3, 2) * b1 * pow(c5, 2) * d1 -
            8 * pow(a3, 2) * b5 * pow(c2, 2) * d0 - 16 * pow(a4, 2) * b0 * pow(c1, 2) * d5 -
            4 * pow(a4, 2) * b3 * pow(c0, 2) * d3 - 16 * pow(a4, 2) * b5 * pow(c1, 2) * d0 +
            3 * pow(a5, 2) * b0 * pow(c0, 2) * d5 + 4 * pow(a5, 2) * b0 * pow(c2, 2) * d3 +
            4 * pow(a5, 2) * b1 * pow(c3, 2) * d1 + 16 * pow(a5, 2) * b2 * pow(c1, 2) * d2 +
            4 * pow(a5, 2) * b3 * pow(c2, 2) * d0 - 9 * pow(a5, 2) * b5 * pow(c0, 2) * d0 -
            3 * pow(a0, 2) * b3 * pow(c3, 2) * d5 + 6 * pow(a0, 2) * b3 * pow(c5, 2) * d3 -
            4 * pow(a0, 2) * b4 * pow(c3, 2) * d4 - 4 * pow(a0, 2) * b5 * pow(c1, 2) * d5 +
            9 * pow(a0, 2) * b5 * pow(c3, 2) * d3 + 12 * pow(a1, 2) * b0 * pow(c5, 2) * d5 -
            16 * pow(a1, 2) * b3 * pow(c2, 2) * d5 + 64 * pow(a1, 2) * b4 * pow(c2, 2) * d4 +
            4 * pow(a1, 2) * b5 * pow(c0, 2) * d5 - 16 * pow(a1, 2) * b5 * pow(c2, 2) * d3 -
            4 * pow(a1, 2) * b5 * pow(c5, 2) * d0 + 16 * pow(a2, 2) * b3 * pow(c1, 2) * d5 -
            64 * pow(a2, 2) * b4 * pow(c1, 2) * d4 + 16 * pow(a2, 2) * b5 * pow(c1, 2) * d3 -
            3 * pow(a3, 2) * b0 * pow(c5, 2) * d3 - 16 * pow(a3, 2) * b2 * pow(c4, 2) * d2 -
            9 * pow(a3, 2) * b3 * pow(c0, 2) * d5 + 9 * pow(a3, 2) * b3 * pow(c5, 2) * d0 +
            4 * pow(a3, 2) * b4 * pow(c0, 2) * d4 + 3 * pow(a3, 2) * b5 * pow(c0, 2) * d3 -
            16 * pow(a4, 2) * b1 * pow(c5, 2) * d1 + 16 * pow(a4, 2) * b2 * pow(c3, 2) * d2 +
            4 * pow(a5, 2) * b0 * pow(c1, 2) * d5 - 9 * pow(a5, 2) * b0 * pow(c3, 2) * d3 +
            16 * pow(a5, 2) * b1 * pow(c4, 2) * d1 - 6 * pow(a5, 2) * b3 * pow(c0, 2) * d3 +
            3 * pow(a5, 2) * b3 * pow(c3, 2) * d0 - 12 * pow(a5, 2) * b5 * pow(c1, 2) * d0 -
            8 * pow(a0, 2) * b3 * pow(c4, 2) * d5 + 4 * pow(a0, 2) * b5 * pow(c2, 2) * d5 +
            8 * pow(a0, 2) * b5 * pow(c4, 2) * d3 + 4 * pow(a1, 2) * b3 * pow(c5, 2) * d3 +
            16 * pow(a2, 2) * b3 * pow(c4, 2) * d3 - 4 * pow(a2, 2) * b5 * pow(c0, 2) * d5 +
            4 * pow(a3, 2) * b0 * pow(c4, 2) * d5 - 4 * pow(a3, 2) * b2 * pow(c5, 2) * d2 +
            4 * pow(a3, 2) * b5 * pow(c4, 2) * d0 - 4 * pow(a4, 2) * b0 * pow(c3, 2) * d5 +
            4 * pow(a4, 2) * b0 * pow(c5, 2) * d3 - 8 * pow(a4, 2) * b3 * pow(c0, 2) * d5 -
            16 * pow(a4, 2) * b3 * pow(c2, 2) * d3 + 4 * pow(a4, 2) * b3 * pow(c5, 2) * d0 +
            8 * pow(a4, 2) * b5 * pow(c0, 2) * d3 - 4 * pow(a4, 2) * b5 * pow(c3, 2) * d0 -
            4 * pow(a5, 2) * b0 * pow(c4, 2) * d3 + 4 * pow(a5, 2) * b2 * pow(c3, 2) * d2 -
            4 * pow(a5, 2) * b3 * pow(c1, 2) * d3 - 4 * pow(a5, 2) * b3 * pow(c4, 2) * d0 -
            9 * pow(a0, 2) * b3 * pow(c5, 2) * d5 + 4 * pow(a0, 2) * b4 * pow(c5, 2) * d4 -
            6 * pow(a0, 2) * b5 * pow(c3, 2) * d5 + 3 * pow(a0, 2) * b5 * pow(c5, 2) * d3 +
            16 * pow(a1, 2) * b5 * pow(c2, 2) * d5 - 4 * pow(a2, 2) * b3 * pow(c3, 2) * d5 +
            4 * pow(a2, 2) * b3 * pow(c5, 2) * d3 - 16 * pow(a2, 2) * b4 * pow(c3, 2) * d4 -
            16 * pow(a2, 2) * b5 * pow(c1, 2) * d5 + 12 * pow(a2, 2) * b5 * pow(c3, 2) * d3 +
            9 * pow(a3, 2) * b0 * pow(c5, 2) * d5 - 12 * pow(a3, 2) * b3 * pow(c2, 2) * d5 +
            16 * pow(a3, 2) * b4 * pow(c2, 2) * d4 + 6 * pow(a3, 2) * b5 * pow(c0, 2) * d5 +
            4 * pow(a3, 2) * b5 * pow(c2, 2) * d3 - 3 * pow(a3, 2) * b5 * pow(c5, 2) * d0 +
            3 * pow(a5, 2) * b0 * pow(c3, 2) * d5 - 3 * pow(a5, 2) * b3 * pow(c0, 2) * d5 -
            4 * pow(a5, 2) * b3 * pow(c2, 2) * d3 - 4 * pow(a5, 2) * b4 * pow(c0, 2) * d4 +
            9 * pow(a5, 2) * b5 * pow(c0, 2) * d3 - 9 * pow(a5, 2) * b5 * pow(c3, 2) * d0 -
            4 * pow(a0, 2) * b5 * pow(c4, 2) * d5 - 12 * pow(a1, 2) * b3 * pow(c5, 2) * d5 +
            16 * pow(a1, 2) * b4 * pow(c5, 2) * d4 - 4 * pow(a1, 2) * b5 * pow(c3, 2) * d5 +
            4 * pow(a1, 2) * b5 * pow(c5, 2) * d3 + 4 * pow(a3, 2) * b5 * pow(c1, 2) * d5 +
            4 * pow(a4, 2) * b5 * pow(c0, 2) * d5 - 4 * pow(a5, 2) * b3 * pow(c1, 2) * d5 -
            16 * pow(a5, 2) * b4 * pow(c1, 2) * d4 + 12 * pow(a5, 2) * b5 * pow(c1, 2) * d3 -
            16 * pow(a1, 2) * b5 * pow(c4, 2) * d5 - 4 * pow(a2, 2) * b5 * pow(c3, 2) * d5 +
            4 * pow(a3, 2) * b5 * pow(c2, 2) * d5 - 4 * pow(a4, 2) * b3 * pow(c5, 2) * d3 +
            16 * pow(a4, 2) * b5 * pow(c1, 2) * d5 + 4 * pow(a5, 2) * b3 * pow(c4, 2) * d3 -
            9 * pow(a3, 2) * b3 * pow(c5, 2) * d5 + 4 * pow(a3, 2) * b4 * pow(c5, 2) * d4 +
            3 * pow(a3, 2) * b5 * pow(c5, 2) * d3 - 3 * pow(a5, 2) * b3 * pow(c3, 2) * d5 -
            4 * pow(a5, 2) * b4 * pow(c3, 2) * d4 + 9 * pow(a5, 2) * b5 * pow(c3, 2) * d3 -
            4 * pow(a3, 2) * b5 * pow(c4, 2) * d5 + 4 * pow(a4, 2) * b5 * pow(c3, 2) * d5 -
            8 * a0 * a3 * a5 * c0 * pow(d1, 2) + 16 * a0 * a1 * a4 * c2 * pow(d3, 2) -
            8 * a0 * a1 * a5 * c1 * pow(d3, 2) + 8 * a0 * a2 * a3 * c2 * pow(d3, 2) +
            8 * a0 * a3 * a5 * c0 * pow(d2, 2) - 16 * a1 * a2 * a3 * c4 * pow(d0, 2) -
            16 * a1 * a2 * a4 * c0 * pow(d3, 2) + 16 * a1 * a2 * a4 * c3 * pow(d0, 2) +
            8 * a1 * a3 * a5 * c1 * pow(d0, 2) - 32 * a0 * a1 * a5 * c1 * pow(d4, 2) +
            32 * a0 * a2 * a3 * c2 * pow(d4, 2) - 8 * a0 * a3 * a4 * c4 * pow(d0, 2) -
            6 * a0 * a3 * a5 * c0 * pow(d3, 2) + 6 * a0 * a3 * a5 * c3 * pow(d0, 2) -
            8 * a0 * a1 * a5 * c1 * pow(d5, 2) + 8 * a0 * a2 * a3 * c2 * pow(d5, 2) -
            16 * a0 * a2 * a4 * c1 * pow(d5, 2) + 8 * a0 * a3 * a5 * c3 * pow(d1, 2) +
            16 * a1 * a2 * a4 * c0 * pow(d5, 2) - 16 * a1 * a2 * a4 * c5 * pow(d0, 2) +
            16 * a1 * a2 * a5 * c4 * pow(d0, 2) + 32 * a1 * a3 * a5 * c1 * pow(d2, 2) -
            8 * a2 * a3 * a5 * c2 * pow(d0, 2) - 32 * a0 * a3 * a4 * c4 * pow(d2, 2) +
            6 * a0 * a3 * a5 * c0 * pow(d5, 2) - 6 * a0 * a3 * a5 * c5 * pow(d0, 2) +
            8 * a0 * a4 * a5 * c4 * pow(d0, 2) - 32 * a2 * a3 * a5 * c2 * pow(d1, 2) +
            32 * a0 * a4 * a5 * c4 * pow(d1, 2) - 8 * a0 * a3 * a5 * c3 * pow(d4, 2) -
            8 * a0 * a3 * a5 * c5 * pow(d2, 2) - 16 * a1 * a2 * a4 * c3 * pow(d5, 2) +
            16 * a1 * a2 * a4 * c5 * pow(d3, 2) + 8 * a1 * a3 * a5 * c1 * pow(d5, 2) -
            16 * a1 * a4 * a5 * c2 * pow(d3, 2) + 16 * a2 * a3 * a4 * c1 * pow(d5, 2) -
            8 * a2 * a3 * a5 * c2 * pow(d3, 2) - 8 * a0 * a3 * a4 * c4 * pow(d5, 2) -
            6 * a0 * a3 * a5 * c3 * pow(d5, 2) + 6 * a0 * a3 * a5 * c5 * pow(d3, 2) +
            8 * a0 * a4 * a5 * c4 * pow(d3, 2) + 8 * a0 * a3 * a5 * c5 * pow(d4, 2) +
            8 * a0 * a1 * b0 * pow(c3, 2) * d1 - 8 * a0 * a1 * b1 * pow(c3, 2) * d0 +
            8 * a0 * b0 * b1 * c1 * pow(c3, 2) - 8 * a1 * b0 * b1 * c0 * pow(c3, 2) +
            32 * a0 * a1 * b0 * pow(c4, 2) * d1 - 32 * a0 * a1 * b1 * pow(c4, 2) * d0 +
            6 * a0 * a3 * b0 * pow(c3, 2) * d0 + 32 * a0 * b0 * b1 * c1 * pow(c4, 2) +
            6 * a0 * b0 * b3 * c0 * pow(c3, 2) - 32 * a1 * b0 * b1 * c0 * pow(c4, 2) +
            8 * a0 * a1 * b0 * pow(c5, 2) * d1 - 8 * a0 * a1 * b1 * pow(c5, 2) * d0 -
            8 * a0 * a2 * b0 * pow(c3, 2) * d2 + 8 * a0 * a2 * b2 * pow(c3, 2) * d0 -
            8 * a0 * a3 * b0 * pow(c1, 2) * d3 + 8 * a0 * a3 * b0 * pow(c4, 2) * d0 +
            8 * a0 * a3 * b3 * pow(c1, 2) * d0 + 8 * a0 * b0 * b1 * c1 * pow(c5, 2) -
            8 * a0 * b0 * b2 * c2 * pow(c3, 2) + 8 * a0 * b0 * b3 * c0 * pow(c4, 2) -
            8 * a0 * b0 * b3 * pow(c1, 2) * c3 - 8 * a1 * b0 * b1 * c0 * pow(c5, 2) +
            8 * a2 * b0 * b2 * c0 * pow(c3, 2) + 8 * a3 * b0 * b3 * c0 * pow(c1, 2) -
            32 * a0 * a2 * b0 * pow(c4, 2) * d2 + 32 * a0 * a2 * b2 * pow(c4, 2) * d0 +
            8 * a0 * a3 * b0 * pow(c2, 2) * d3 + 6 * a0 * a3 * b0 * pow(c5, 2) * d0 -
            8 * a0 * a3 * b3 * pow(c2, 2) * d0 - 6 * a0 * a5 * b0 * pow(c3, 2) * d0 -
            32 * a0 * b0 * b2 * c2 * pow(c4, 2) + 6 * a0 * b0 * b3 * c0 * pow(c5, 2) +
            8 * a0 * b0 * b3 * pow(c2, 2) * c3 - 6 * a0 * b0 * b5 * c0 * pow(c3, 2) +
            8 * a1 * a3 * b1 * pow(c0, 2) * d3 - 8 * a1 * a3 * b3 * pow(c0, 2) * d1 +
            8 * a1 * b1 * b3 * pow(c0, 2) * c3 + 32 * a2 * b0 * b2 * c0 * pow(c4, 2) -
            8 * a3 * b0 * b3 * c0 * pow(c2, 2) - 8 * a3 * b1 * b3 * pow(c0, 2) * c1 -
            8 * a0 * a2 * b0 * pow(c5, 2) * d2 + 8 * a0 * a2 * b2 * pow(c5, 2) * d0 +
            8 * a0 * a3 * b0 * pow(c1, 2) * d5 - 6 * a0 * a3 * b3 * pow(c0, 2) * d3 -
            8 * a0 * a3 * b5 * pow(c1, 2) * d0 - 32 * a0 * a4 * b0 * pow(c1, 2) * d4 +
            32 * a0 * a4 * b4 * pow(c1, 2) * d0 + 8 * a0 * a5 * b0 * pow(c1, 2) * d3 -
            8 * a0 * a5 * b0 * pow(c4, 2) * d0 - 8 * a0 * a5 * b3 * pow(c1, 2) * d0 -
            8 * a0 * b0 * b2 * c2 * pow(c5, 2) + 8 * a0 * b0 * b3 * pow(c1, 2) * c5 -
            32 * a0 * b0 * b4 * pow(c1, 2) * c4 - 8 * a0 * b0 * b5 * c0 * pow(c4, 2) +
            8 * a0 * b0 * b5 * pow(c1, 2) * c3 - 8 * a0 * b3 * b5 * c0 * pow(c1, 2) -
            32 * a1 * a2 * b1 * pow(c3, 2) * d2 + 32 * a1 * a2 * b2 * pow(c3, 2) * d1 -
            32 * a1 * b1 * b2 * c2 * pow(c3, 2) + 8 * a2 * b0 * b2 * c0 * pow(c5, 2) +
            32 * a2 * b1 * b2 * c1 * pow(c3, 2) - 8 * a3 * a5 * b0 * pow(c1, 2) * d0 -
            6 * a3 * b0 * b3 * pow(c0, 2) * c3 - 8 * a3 * b0 * b5 * c0 * pow(c1, 2) +
            32 * a4 * b0 * b4 * c0 * pow(c1, 2) - 8 * a5 * b0 * b3 * c0 * pow(c1, 2) +
            8 * a0 * a1 * b1 * pow(c3, 2) * d5 - 16 * a0 * a1 * b1 * pow(c5, 2) * d3 +
            16 * a0 * a1 * b4 * pow(c3, 2) * d2 - 8 * a0 * a1 * b5 * pow(c3, 2) * d1 -
            24 * a0 * a2 * b2 * pow(c3, 2) * d3 + 8 * a0 * a2 * b3 * pow(c3, 2) * d2 -
            8 * a0 * a3 * b0 * pow(c2, 2) * d5 + 8 * a0 * a3 * b0 * pow(c4, 2) * d3 +
            8 * a0 * a3 * b2 * pow(c3, 2) * d2 - 8 * a0 * a3 * b3 * pow(c4, 2) * d0 +
            8 * a0 * a3 * b5 * pow(c2, 2) * d0 + 32 * a0 * a4 * b0 * pow(c2, 2) * d4 +
            16 * a0 * a4 * b1 * pow(c3, 2) * d2 - 32 * a0 * a4 * b4 * pow(c2, 2) * d0 -
            8 * a0 * a5 * b0 * pow(c2, 2) * d3 - 6 * a0 * a5 * b0 * pow(c5, 2) * d0 -
            8 * a0 * a5 * b1 * pow(c3, 2) * d1 + 8 * a0 * a5 * b3 * pow(c2, 2) * d0 +
            8 * a0 * b0 * b3 * c3 * pow(c4, 2) - 8 * a0 * b0 * b3 * pow(c2, 2) * c5 +
            32 * a0 * b0 * b4 * pow(c2, 2) * c4 - 6 * a0 * b0 * b5 * c0 * pow(c5, 2) -
            8 * a0 * b0 * b5 * pow(c2, 2) * c3 + 16 * a0 * b1 * b4 * c2 * pow(c3, 2) -
            8 * a0 * b1 * b5 * c1 * pow(c3, 2) + 8 * a0 * b2 * b3 * c2 * pow(c3, 2) +
            8 * a0 * b3 * b5 * c0 * pow(c2, 2) - 128 * a1 * a2 * b1 * pow(c4, 2) * d2 +
            128 * a1 * a2 * b2 * pow(c4, 2) * d1 - 16 * a1 * a2 * b3 * pow(c0, 2) * d4 +
            16 * a1 * a2 * b4 * pow(c0, 2) * d3 - 16 * a1 * a2 * b4 * pow(c3, 2) * d0 -
            8 * a1 * a3 * b1 * pow(c0, 2) * d5 + 32 * a1 * a3 * b1 * pow(c2, 2) * d3 +
            16 * a1 * a3 * b1 * pow(c5, 2) * d0 - 16 * a1 * a3 * b2 * pow(c0, 2) * d4 -
            32 * a1 * a3 * b3 * pow(c2, 2) * d1 + 8 * a1 * a3 * b5 * pow(c0, 2) * d1 +
            16 * a1 * a4 * b0 * pow(c3, 2) * d2 + 32 * a1 * a4 * b1 * pow(c0, 2) * d4 +
            16 * a1 * a4 * b2 * pow(c0, 2) * d3 - 16 * a1 * a4 * b2 * pow(c3, 2) * d0 -
            32 * a1 * a4 * b4 * pow(c0, 2) * d1 - 8 * a1 * a5 * b0 * pow(c3, 2) * d1 -
            8 * a1 * a5 * b1 * pow(c0, 2) * d3 + 8 * a1 * a5 * b1 * pow(c3, 2) * d0 +
            8 * a1 * a5 * b3 * pow(c0, 2) * d1 - 16 * a1 * b0 * b1 * c3 * pow(c5, 2) +
            8 * a1 * b0 * b1 * pow(c3, 2) * c5 + 16 * a1 * b0 * b4 * c2 * pow(c3, 2) -
            8 * a1 * b0 * b5 * c1 * pow(c3, 2) - 128 * a1 * b1 * b2 * c2 * pow(c4, 2) +
            16 * a1 * b1 * b3 * c0 * pow(c5, 2) - 8 * a1 * b1 * b3 * pow(c0, 2) * c5 +
            32 * a1 * b1 * b3 * pow(c2, 2) * c3 + 32 * a1 * b1 * b4 * pow(c0, 2) * c4 +
            8 * a1 * b1 * b5 * c0 * pow(c3, 2) - 8 * a1 * b1 * b5 * pow(c0, 2) * c3 -
            16 * a1 * b2 * b3 * pow(c0, 2) * c4 - 16 * a1 * b2 * b4 * c0 * pow(c3, 2) +
            16 * a1 * b2 * b4 * pow(c0, 2) * c3 + 8 * a1 * b3 * b5 * pow(c0, 2) * c1 +
            8 * a2 * a3 * b0 * pow(c3, 2) * d2 - 16 * a2 * a3 * b1 * pow(c0, 2) * d4 -
            8 * a2 * a3 * b2 * pow(c0, 2) * d3 + 8 * a2 * a3 * b2 * pow(c3, 2) * d0 +
            8 * a2 * a3 * b3 * pow(c0, 2) * d2 + 16 * a2 * a4 * b1 * pow(c0, 2) * d3 -
            16 * a2 * a4 * b1 * pow(c3, 2) * d0 + 8 * a2 * b0 * b3 * c2 * pow(c3, 2) +
            128 * a2 * b1 * b2 * c1 * pow(c4, 2) - 16 * a2 * b1 * b3 * pow(c0, 2) * c4 -
            16 * a2 * b1 * b4 * c0 * pow(c3, 2) + 16 * a2 * b1 * b4 * pow(c0, 2) * c3 +
            8 * a2 * b2 * b3 * c0 * pow(c3, 2) - 8 * a2 * b2 * b3 * pow(c0, 2) * c3 +
            8 * a3 * a5 * b0 * pow(c2, 2) * d0 + 8 * a3 * a5 * b1 * pow(c0, 2) * d1 +
            8 * a3 * b0 * b2 * c2 * pow(c3, 2) - 8 * a3 * b0 * b3 * c0 * pow(c4, 2) +
            8 * a3 * b0 * b5 * c0 * pow(c2, 2) - 16 * a3 * b1 * b2 * pow(c0, 2) * c4 -
            32 * a3 * b1 * b3 * c1 * pow(c2, 2) + 8 * a3 * b1 * b5 * pow(c0, 2) * c1 +
            8 * a3 * b2 * b3 * pow(c0, 2) * c2 + 16 * a4 * b0 * b1 * c2 * pow(c3, 2) -
            32 * a4 * b0 * b4 * c0 * pow(c2, 2) - 16 * a4 * b1 * b2 * c0 * pow(c3, 2) +
            16 * a4 * b1 * b2 * pow(c0, 2) * c3 - 32 * a4 * b1 * b4 * pow(c0, 2) * c1 -
            8 * a5 * b0 * b1 * c1 * pow(c3, 2) + 8 * a5 * b0 * b3 * c0 * pow(c2, 2) +
            8 * a5 * b1 * b3 * pow(c0, 2) * c1 + 32 * a0 * a1 * b1 * pow(c4, 2) * d5 -
            32 * a0 * a1 * b5 * pow(c4, 2) * d1 - 32 * a0 * a2 * b2 * pow(c4, 2) * d3 +
            32 * a0 * a2 * b3 * pow(c4, 2) * d2 - 6 * a0 * a3 * b0 * pow(c3, 2) * d5 +
            12 * a0 * a3 * b0 * pow(c5, 2) * d3 + 32 * a0 * a3 * b2 * pow(c4, 2) * d2 +
            6 * a0 * a3 * b3 * pow(c0, 2) * d5 - 8 * a0 * a3 * b3 * pow(c2, 2) * d3 -
            12 * a0 * a3 * b3 * pow(c5, 2) * d0 - 8 * a0 * a3 * b4 * pow(c0, 2) * d4 +
            6 * a0 * a3 * b5 * pow(c0, 2) * d3 - 6 * a0 * a3 * b5 * pow(c3, 2) * d0 -
            8 * a0 * a4 * b0 * pow(c3, 2) * d4 - 8 * a0 * a4 * b3 * pow(c0, 2) * d4 -
            8 * a0 * a4 * b4 * pow(c0, 2) * d3 + 8 * a0 * a4 * b4 * pow(c3, 2) * d0 -
            8 * a0 * a5 * b0 * pow(c1, 2) * d5 + 18 * a0 * a5 * b0 * pow(c3, 2) * d3 -
            32 * a0 * a5 * b1 * pow(c4, 2) * d1 + 6 * a0 * a5 * b3 * pow(c0, 2) * d3 -
            6 * a0 * a5 * b3 * pow(c3, 2) * d0 + 8 * a0 * a5 * b5 * pow(c1, 2) * d0 +
            12 * a0 * b0 * b3 * c3 * pow(c5, 2) - 6 * a0 * b0 * b3 * pow(c3, 2) * c5 -
            8 * a0 * b0 * b4 * pow(c3, 2) * c4 - 8 * a0 * b0 * b5 * pow(c1, 2) * c5 -
            32 * a0 * b1 * b5 * c1 * pow(c4, 2) + 32 * a0 * b2 * b3 * c2 * pow(c4, 2) -
            8 * a0 * b3 * b4 * pow(c0, 2) * c4 - 6 * a0 * b3 * b5 * c0 * pow(c3, 2) +
            6 * a0 * b3 * b5 * pow(c0, 2) * c3 - 32 * a1 * a2 * b1 * pow(c5, 2) * d2 +
            32 * a1 * a2 * b2 * pow(c5, 2) * d1 - 32 * a1 * a5 * b0 * pow(c4, 2) * d1 +
            32 * a1 * a5 * b1 * pow(c4, 2) * d0 + 32 * a1 * b0 * b1 * pow(c4, 2) * c5 -
            32 * a1 * b0 * b5 * c1 * pow(c4, 2) - 32 * a1 * b1 * b2 * c2 * pow(c5, 2) +
            32 * a1 * b1 * b5 * c0 * pow(c4, 2) + 32 * a2 * a3 * b0 * pow(c4, 2) * d2 -
            32 * a2 * a3 * b2 * pow(c1, 2) * d3 - 32 * a2 * a3 * b2 * pow(c4, 2) * d0 +
            32 * a2 * a3 * b3 * pow(c1, 2) * d2 - 32 * a2 * b0 * b2 * c3 * pow(c4, 2) +
            32 * a2 * b0 * b3 * c2 * pow(c4, 2) + 32 * a2 * b1 * b2 * c1 * pow(c5, 2) -
            32 * a2 * b2 * b3 * c0 * pow(c4, 2) - 32 * a2 * b2 * b3 * pow(c1, 2) * c3 -
            8 * a3 * a4 * b0 * pow(c0, 2) * d4 + 24 * a3 * a4 * b4 * pow(c0, 2) * d0 +
            6 * a3 * a5 * b0 * pow(c0, 2) * d3 - 6 * a3 * a5 * b0 * pow(c3, 2) * d0 -
            18 * a3 * a5 * b3 * pow(c0, 2) * d0 + 32 * a3 * b0 * b2 * c2 * pow(c4, 2) -
            12 * a3 * b0 * b3 * c0 * pow(c5, 2) + 6 * a3 * b0 * b3 * pow(c0, 2) * c5 -
            8 * a3 * b0 * b3 * pow(c2, 2) * c3 - 8 * a3 * b0 * b4 * pow(c0, 2) * c4 -
            6 * a3 * b0 * b5 * c0 * pow(c3, 2) + 6 * a3 * b0 * b5 * pow(c0, 2) * c3 +
            32 * a3 * b2 * b3 * pow(c1, 2) * c2 - 8 * a4 * b0 * b3 * pow(c0, 2) * c4 +
            8 * a4 * b0 * b4 * c0 * pow(c3, 2) - 8 * a4 * b0 * b4 * pow(c0, 2) * c3 -
            32 * a5 * b0 * b1 * c1 * pow(c4, 2) - 6 * a5 * b0 * b3 * c0 * pow(c3, 2) +
            6 * a5 * b0 * b3 * pow(c0, 2) * c3 + 8 * a5 * b0 * b5 * c0 * pow(c1, 2) +
            24 * a0 * a1 * b1 * pow(c5, 2) * d5 - 8 * a0 * a1 * b5 * pow(c5, 2) * d1 +
            16 * a0 * a2 * b2 * pow(c3, 2) * d5 - 8 * a0 * a2 * b2 * pow(c5, 2) * d3 +
            8 * a0 * a2 * b3 * pow(c5, 2) * d2 - 16 * a0 * a2 * b4 * pow(c5, 2) * d1 -
            16 * a0 * a3 * b0 * pow(c4, 2) * d5 + 8 * a0 * a3 * b2 * pow(c5, 2) * d2 -
            8 * a0 * a3 * b3 * pow(c1, 2) * d5 + 8 * a0 * a3 * b5 * pow(c1, 2) * d3 -
            16 * a0 * a4 * b2 * pow(c5, 2) * d1 + 8 * a0 * a5 * b0 * pow(c2, 2) * d5 +
            16 * a0 * a5 * b0 * pow(c4, 2) * d3 - 8 * a0 * a5 * b1 * pow(c5, 2) * d1 +
            8 * a0 * a5 * b3 * pow(c1, 2) * d3 - 8 * a0 * a5 * b5 * pow(c2, 2) * d0 -
            16 * a0 * b0 * b3 * pow(c4, 2) * c5 + 16 * a0 * b0 * b5 * c3 * pow(c4, 2) +
            8 * a0 * b0 * b5 * pow(c2, 2) * c5 - 8 * a0 * b1 * b5 * c1 * pow(c5, 2) +
            8 * a0 * b2 * b3 * c2 * pow(c5, 2) - 16 * a0 * b2 * b4 * c1 * pow(c5, 2) +
            8 * a0 * b3 * b5 * pow(c1, 2) * c3 - 16 * a1 * a2 * b4 * pow(c0, 2) * d5 +
            16 * a1 * a2 * b4 * pow(c5, 2) * d0 + 16 * a1 * a2 * b5 * pow(c0, 2) * d4 -
            32 * a1 * a3 * b1 * pow(c2, 2) * d5 + 32 * a1 * a3 * b5 * pow(c2, 2) * d1 +
            128 * a1 * a4 * b1 * pow(c2, 2) * d4 - 16 * a1 * a4 * b2 * pow(c0, 2) * d5 +
            16 * a1 * a4 * b2 * pow(c5, 2) * d0 - 128 * a1 * a4 * b4 * pow(c2, 2) * d1 -
            8 * a1 * a5 * b0 * pow(c5, 2) * d1 + 8 * a1 * a5 * b1 * pow(c0, 2) * d5 -
            32 * a1 * a5 * b1 * pow(c2, 2) * d3 - 8 * a1 * a5 * b1 * pow(c5, 2) * d0 +
            16 * a1 * a5 * b2 * pow(c0, 2) * d4 + 32 * a1 * a5 * b3 * pow(c2, 2) * d1 -
            8 * a1 * a5 * b5 * pow(c0, 2) * d1 - 8 * a1 * b0 * b5 * c1 * pow(c5, 2) -
            32 * a1 * b1 * b3 * pow(c2, 2) * c5 + 128 * a1 * b1 * b4 * pow(c2, 2) * c4 -
            8 * a1 * b1 * b5 * c0 * pow(c5, 2) + 8 * a1 * b1 * b5 * pow(c0, 2) * c5 -
            32 * a1 * b1 * b5 * pow(c2, 2) * c3 + 16 * a1 * b2 * b4 * c0 * pow(c5, 2) -
            16 * a1 * b2 * b4 * pow(c0, 2) * c5 + 16 * a1 * b2 * b5 * pow(c0, 2) * c4 +
            32 * a1 * b3 * b5 * c1 * pow(c2, 2) + 8 * a2 * a3 * b0 * pow(c5, 2) * d2 +
            8 * a2 * a3 * b2 * pow(c0, 2) * d5 - 8 * a2 * a3 * b2 * pow(c5, 2) * d0 -
            8 * a2 * a3 * b5 * pow(c0, 2) * d2 - 16 * a2 * a4 * b0 * pow(c5, 2) * d1 -
            16 * a2 * a4 * b1 * pow(c0, 2) * d5 + 16 * a2 * a4 * b1 * pow(c5, 2) * d0 -
            32 * a2 * a4 * b2 * pow(c0, 2) * d4 + 32 * a2 * a4 * b4 * pow(c0, 2) * d2 +
            16 * a2 * a5 * b1 * pow(c0, 2) * d4 + 8 * a2 * a5 * b2 * pow(c0, 2) * d3 -
            16 * a2 * a5 * b2 * pow(c3, 2) * d0 - 8 * a2 * a5 * b3 * pow(c0, 2) * d2 -
            8 * a2 * b0 * b2 * c3 * pow(c5, 2) + 16 * a2 * b0 * b2 * pow(c3, 2) * c5 +
            8 * a2 * b0 * b3 * c2 * pow(c5, 2) - 16 * a2 * b0 * b4 * c1 * pow(c5, 2) +
            16 * a2 * b1 * b4 * c0 * pow(c5, 2) - 16 * a2 * b1 * b4 * pow(c0, 2) * c5 +
            16 * a2 * b1 * b5 * pow(c0, 2) * c4 - 8 * a2 * b2 * b3 * c0 * pow(c5, 2) +
            8 * a2 * b2 * b3 * pow(c0, 2) * c5 - 32 * a2 * b2 * b4 * pow(c0, 2) * c4 -
            16 * a2 * b2 * b5 * c0 * pow(c3, 2) + 8 * a2 * b2 * b5 * pow(c0, 2) * c3 -
            8 * a2 * b3 * b5 * pow(c0, 2) * c2 + 8 * a3 * a5 * b0 * pow(c1, 2) * d3 +
            32 * a3 * a5 * b1 * pow(c2, 2) * d1 - 8 * a3 * a5 * b2 * pow(c0, 2) * d2 -
            8 * a3 * a5 * b3 * pow(c1, 2) * d0 + 8 * a3 * b0 * b2 * c2 * pow(c5, 2) -
            8 * a3 * b0 * b3 * pow(c1, 2) * c5 + 8 * a3 * b0 * b5 * pow(c1, 2) * c3 +
            32 * a3 * b1 * b5 * c1 * pow(c2, 2) - 8 * a3 * b2 * b5 * pow(c0, 2) * c2 -
            8 * a3 * b3 * b5 * c0 * pow(c1, 2) - 16 * a4 * b0 * b2 * c1 * pow(c5, 2) +
            16 * a4 * b1 * b2 * c0 * pow(c5, 2) - 16 * a4 * b1 * b2 * pow(c0, 2) * c5 -
            128 * a4 * b1 * b4 * c1 * pow(c2, 2) + 32 * a4 * b2 * b4 * pow(c0, 2) * c2 -
            8 * a5 * b0 * b1 * c1 * pow(c5, 2) + 8 * a5 * b0 * b3 * pow(c1, 2) * c3 -
            8 * a5 * b0 * b5 * c0 * pow(c2, 2) + 16 * a5 * b1 * b2 * pow(c0, 2) * c4 +
            32 * a5 * b1 * b3 * c1 * pow(c2, 2) - 8 * a5 * b1 * b5 * pow(c0, 2) * c1 -
            8 * a5 * b2 * b3 * pow(c0, 2) * c2 - 18 * a0 * a3 * b0 * pow(c5, 2) * d5 +
            16 * a0 * a3 * b3 * pow(c2, 2) * d5 - 32 * a0 * a3 * b4 * pow(c2, 2) * d4 -
            6 * a0 * a3 * b5 * pow(c0, 2) * d5 + 6 * a0 * a3 * b5 * pow(c5, 2) * d0 +
            8 * a0 * a4 * b0 * pow(c5, 2) * d4 - 32 * a0 * a4 * b3 * pow(c2, 2) * d4 +
            8 * a0 * a4 * b4 * pow(c0, 2) * d5 + 32 * a0 * a4 * b4 * pow(c2, 2) * d3 -
            8 * a0 * a4 * b4 * pow(c5, 2) * d0 + 8 * a0 * a4 * b5 * pow(c0, 2) * d4 -
            12 * a0 * a5 * b0 * pow(c3, 2) * d5 + 6 * a0 * a5 * b0 * pow(c5, 2) * d3 -
            6 * a0 * a5 * b3 * pow(c0, 2) * d5 + 6 * a0 * a5 * b3 * pow(c5, 2) * d0 +
            8 * a0 * a5 * b4 * pow(c0, 2) * d4 - 6 * a0 * a5 * b5 * pow(c0, 2) * d3 +
            12 * a0 * a5 * b5 * pow(c3, 2) * d0 + 8 * a0 * b0 * b4 * c4 * pow(c5, 2) +
            6 * a0 * b0 * b5 * c3 * pow(c5, 2) - 12 * a0 * b0 * b5 * pow(c3, 2) * c5 -
            32 * a0 * b3 * b4 * pow(c2, 2) * c4 + 6 * a0 * b3 * b5 * c0 * pow(c5, 2) -
            6 * a0 * b3 * b5 * pow(c0, 2) * c5 + 8 * a0 * b4 * b5 * pow(c0, 2) * c4 +
            8 * a1 * a3 * b1 * pow(c5, 2) * d3 - 8 * a1 * a3 * b3 * pow(c5, 2) * d1 +
            8 * a1 * b1 * b3 * c3 * pow(c5, 2) + 32 * a2 * a3 * b2 * pow(c1, 2) * d5 -
            32 * a2 * a3 * b5 * pow(c1, 2) * d2 - 128 * a2 * a4 * b2 * pow(c1, 2) * d4 +
            128 * a2 * a4 * b4 * pow(c1, 2) * d2 + 32 * a2 * a5 * b2 * pow(c1, 2) * d3 -
            32 * a2 * a5 * b3 * pow(c1, 2) * d2 + 32 * a2 * b2 * b3 * pow(c1, 2) * c5 -
            128 * a2 * b2 * b4 * pow(c1, 2) * c4 + 32 * a2 * b2 * b5 * pow(c1, 2) * c3 -
            32 * a2 * b3 * b5 * pow(c1, 2) * c2 - 32 * a3 * a4 * b0 * pow(c2, 2) * d4 +
            32 * a3 * a4 * b4 * pow(c2, 2) * d0 - 6 * a3 * a5 * b0 * pow(c0, 2) * d5 +
            6 * a3 * a5 * b0 * pow(c5, 2) * d0 - 32 * a3 * a5 * b2 * pow(c1, 2) * d2 -
            16 * a3 * a5 * b3 * pow(c2, 2) * d0 + 18 * a3 * a5 * b5 * pow(c0, 2) * d0 +
            16 * a3 * b0 * b3 * pow(c2, 2) * c5 - 32 * a3 * b0 * b4 * pow(c2, 2) * c4 +
            6 * a3 * b0 * b5 * c0 * pow(c5, 2) - 6 * a3 * b0 * b5 * pow(c0, 2) * c5 -
            8 * a3 * b1 * b3 * c1 * pow(c5, 2) - 32 * a3 * b2 * b5 * pow(c1, 2) * c2 -
            16 * a3 * b3 * b5 * c0 * pow(c2, 2) + 8 * a4 * a5 * b0 * pow(c0, 2) * d4 -
            24 * a4 * a5 * b4 * pow(c0, 2) * d0 - 32 * a4 * b0 * b3 * pow(c2, 2) * c4 -
            8 * a4 * b0 * b4 * c0 * pow(c5, 2) + 8 * a4 * b0 * b4 * pow(c0, 2) * c5 +
            32 * a4 * b0 * b4 * pow(c2, 2) * c3 + 8 * a4 * b0 * b5 * pow(c0, 2) * c4 +
            128 * a4 * b2 * b4 * pow(c1, 2) * c2 + 32 * a4 * b3 * b4 * c0 * pow(c2, 2) +
            6 * a5 * b0 * b3 * c0 * pow(c5, 2) - 6 * a5 * b0 * b3 * pow(c0, 2) * c5 +
            8 * a5 * b0 * b4 * pow(c0, 2) * c4 + 12 * a5 * b0 * b5 * c0 * pow(c3, 2) -
            6 * a5 * b0 * b5 * pow(c0, 2) * c3 - 32 * a5 * b2 * b3 * pow(c1, 2) * c2 -
            6 * a0 * a3 * b3 * pow(c5, 2) * d3 - 32 * a0 * a4 * b4 * pow(c1, 2) * d5 +
            32 * a0 * a4 * b5 * pow(c1, 2) * d4 - 8 * a0 * a5 * b0 * pow(c4, 2) * d5 +
            32 * a0 * a5 * b4 * pow(c1, 2) * d4 - 16 * a0 * a5 * b5 * pow(c1, 2) * d3 +
            8 * a0 * a5 * b5 * pow(c4, 2) * d0 - 8 * a0 * b0 * b5 * pow(c4, 2) * c5 +
            32 * a0 * b4 * b5 * pow(c1, 2) * c4 + 32 * a1 * a5 * b1 * pow(c2, 2) * d5 -
            32 * a1 * a5 * b5 * pow(c2, 2) * d1 + 32 * a1 * b1 * b5 * pow(c2, 2) * c5 +
            32 * a2 * a3 * b2 * pow(c4, 2) * d3 - 32 * a2 * a3 * b3 * pow(c4, 2) * d2 -
            8 * a2 * a5 * b2 * pow(c0, 2) * d5 + 8 * a2 * a5 * b5 * pow(c0, 2) * d2 +
            32 * a2 * b2 * b3 * c3 * pow(c4, 2) - 8 * a2 * b2 * b5 * pow(c0, 2) * c5 +
            8 * a3 * a4 * b3 * pow(c0, 2) * d4 - 8 * a3 * a4 * b4 * pow(c0, 2) * d3 +
            6 * a3 * a5 * b3 * pow(c0, 2) * d3 + 16 * a3 * a5 * b5 * pow(c1, 2) * d0 -
            6 * a3 * b0 * b3 * c3 * pow(c5, 2) - 32 * a3 * b2 * b3 * c2 * pow(c4, 2) +
            8 * a3 * b3 * b4 * pow(c0, 2) * c4 + 6 * a3 * b3 * b5 * pow(c0, 2) * c3 +
            32 * a4 * a5 * b0 * pow(c1, 2) * d4 - 32 * a4 * a5 * b4 * pow(c1, 2) * d0 -
            32 * a4 * b0 * b4 * pow(c1, 2) * c5 + 32 * a4 * b0 * b5 * pow(c1, 2) * c4 -
            8 * a4 * b3 * b4 * pow(c0, 2) * c3 - 32 * a4 * b4 * b5 * c0 * pow(c1, 2) +
            32 * a5 * b0 * b4 * pow(c1, 2) * c4 + 8 * a5 * b0 * b5 * c0 * pow(c4, 2) -
            16 * a5 * b0 * b5 * pow(c1, 2) * c3 - 32 * a5 * b1 * b5 * c1 * pow(c2, 2) +
            8 * a5 * b2 * b5 * pow(c0, 2) * c2 + 16 * a5 * b3 * b5 * c0 * pow(c1, 2) +
            8 * a0 * a3 * b3 * pow(c4, 2) * d5 - 8 * a0 * a3 * b5 * pow(c2, 2) * d5 -
            8 * a0 * a3 * b5 * pow(c4, 2) * d3 - 8 * a0 * a5 * b3 * pow(c2, 2) * d5 -
            8 * a0 * a5 * b3 * pow(c4, 2) * d3 + 6 * a0 * a5 * b5 * pow(c0, 2) * d5 +
            8 * a0 * a5 * b5 * pow(c2, 2) * d3 - 8 * a0 * b3 * b5 * c3 * pow(c4, 2) -
            8 * a0 * b3 * b5 * pow(c2, 2) * c5 + 16 * a1 * a2 * b4 * pow(c3, 2) * d5 -
            16 * a1 * a2 * b4 * pow(c5, 2) * d3 - 24 * a1 * a3 * b1 * pow(c5, 2) * d5 +
            8 * a1 * a3 * b5 * pow(c5, 2) * d1 + 32 * a1 * a4 * b1 * pow(c5, 2) * d4 +
            16 * a1 * a4 * b2 * pow(c3, 2) * d5 - 16 * a1 * a4 * b2 * pow(c5, 2) * d3 -
            32 * a1 * a4 * b4 * pow(c5, 2) * d1 - 16 * a1 * a4 * b5 * pow(c3, 2) * d2 -
            8 * a1 * a5 * b1 * pow(c3, 2) * d5 + 8 * a1 * a5 * b1 * pow(c5, 2) * d3 +
            8 * a1 * a5 * b3 * pow(c5, 2) * d1 - 16 * a1 * a5 * b4 * pow(c3, 2) * d2 +
            8 * a1 * a5 * b5 * pow(c3, 2) * d1 + 32 * a1 * b1 * b4 * c4 * pow(c5, 2) +
            8 * a1 * b1 * b5 * c3 * pow(c5, 2) - 8 * a1 * b1 * b5 * pow(c3, 2) * c5 -
            16 * a1 * b2 * b4 * c3 * pow(c5, 2) + 16 * a1 * b2 * b4 * pow(c3, 2) * c5 +
            8 * a1 * b3 * b5 * c1 * pow(c5, 2) - 16 * a1 * b4 * b5 * c2 * pow(c3, 2) -
            8 * a2 * a3 * b2 * pow(c3, 2) * d5 + 8 * a2 * a3 * b2 * pow(c5, 2) * d3 -
            8 * a2 * a3 * b3 * pow(c5, 2) * d2 + 16 * a2 * a3 * b4 * pow(c5, 2) * d1 -
            8 * a2 * a3 * b5 * pow(c3, 2) * d2 + 16 * a2 * a4 * b1 * pow(c3, 2) * d5 -
            16 * a2 * a4 * b1 * pow(c5, 2) * d3 - 32 * a2 * a4 * b2 * pow(c3, 2) * d4 +
            16 * a2 * a4 * b3 * pow(c5, 2) * d1 + 32 * a2 * a4 * b4 * pow(c3, 2) * d2 -
            32 * a2 * a5 * b2 * pow(c1, 2) * d5 + 24 * a2 * a5 * b2 * pow(c3, 2) * d3 -
            8 * a2 * a5 * b3 * pow(c3, 2) * d2 + 32 * a2 * a5 * b5 * pow(c1, 2) * d2 -
            16 * a2 * b1 * b4 * c3 * pow(c5, 2) + 16 * a2 * b1 * b4 * pow(c3, 2) * c5 +
            8 * a2 * b2 * b3 * c3 * pow(c5, 2) - 8 * a2 * b2 * b3 * pow(c3, 2) * c5 -
            32 * a2 * b2 * b4 * pow(c3, 2) * c4 - 32 * a2 * b2 * b5 * pow(c1, 2) * c5 +
            16 * a2 * b3 * b4 * c1 * pow(c5, 2) - 8 * a2 * b3 * b5 * c2 * pow(c3, 2) +
            16 * a3 * a4 * b2 * pow(c5, 2) * d1 - 8 * a3 * a5 * b0 * pow(c2, 2) * d5 -
            8 * a3 * a5 * b0 * pow(c4, 2) * d3 + 8 * a3 * a5 * b1 * pow(c5, 2) * d1 -
            8 * a3 * a5 * b2 * pow(c3, 2) * d2 + 8 * a3 * a5 * b3 * pow(c4, 2) * d0 +
            8 * a3 * a5 * b5 * pow(c2, 2) * d0 + 8 * a3 * b0 * b3 * pow(c4, 2) * c5 -
            8 * a3 * b0 * b5 * c3 * pow(c4, 2) - 8 * a3 * b0 * b5 * pow(c2, 2) * c5 +
            8 * a3 * b1 * b5 * c1 * pow(c5, 2) - 8 * a3 * b2 * b3 * c2 * pow(c5, 2) +
            16 * a3 * b2 * b4 * c1 * pow(c5, 2) - 8 * a3 * b2 * b5 * c2 * pow(c3, 2) +
            8 * a3 * b3 * b5 * c0 * pow(c4, 2) - 16 * a4 * a5 * b1 * pow(c3, 2) * d2 -
            16 * a4 * b1 * b2 * c3 * pow(c5, 2) + 16 * a4 * b1 * b2 * pow(c3, 2) * c5 -
            32 * a4 * b1 * b4 * c1 * pow(c5, 2) - 16 * a4 * b1 * b5 * c2 * pow(c3, 2) +
            16 * a4 * b2 * b3 * c1 * pow(c5, 2) + 32 * a4 * b2 * b4 * c2 * pow(c3, 2) -
            8 * a5 * b0 * b3 * c3 * pow(c4, 2) - 8 * a5 * b0 * b3 * pow(c2, 2) * c5 +
            6 * a5 * b0 * b5 * pow(c0, 2) * c5 + 8 * a5 * b0 * b5 * pow(c2, 2) * c3 +
            8 * a5 * b1 * b3 * c1 * pow(c5, 2) - 16 * a5 * b1 * b4 * c2 * pow(c3, 2) +
            8 * a5 * b1 * b5 * c1 * pow(c3, 2) - 8 * a5 * b2 * b3 * c2 * pow(c3, 2) +
            32 * a5 * b2 * b5 * pow(c1, 2) * c2 + 8 * a5 * b3 * b5 * c0 * pow(c2, 2) +
            18 * a0 * a3 * b3 * pow(c5, 2) * d5 - 8 * a0 * a3 * b4 * pow(c5, 2) * d4 +
            6 * a0 * a3 * b5 * pow(c3, 2) * d5 - 6 * a0 * a3 * b5 * pow(c5, 2) * d3 -
            8 * a0 * a4 * b3 * pow(c5, 2) * d4 - 8 * a0 * a4 * b4 * pow(c3, 2) * d5 +
            8 * a0 * a4 * b4 * pow(c5, 2) * d3 + 8 * a0 * a4 * b5 * pow(c3, 2) * d4 +
            6 * a0 * a5 * b3 * pow(c3, 2) * d5 - 6 * a0 * a5 * b3 * pow(c5, 2) * d3 +
            8 * a0 * a5 * b4 * pow(c3, 2) * d4 + 8 * a0 * a5 * b5 * pow(c1, 2) * d5 -
            18 * a0 * a5 * b5 * pow(c3, 2) * d3 - 8 * a0 * b3 * b4 * c4 * pow(c5, 2) -
            6 * a0 * b3 * b5 * c3 * pow(c5, 2) + 6 * a0 * b3 * b5 * pow(c3, 2) * c5 +
            8 * a0 * b4 * b5 * pow(c3, 2) * c4 - 32 * a1 * a5 * b1 * pow(c4, 2) * d5 +
            32 * a1 * a5 * b5 * pow(c4, 2) * d1 - 32 * a1 * b1 * b5 * pow(c4, 2) * c5 -
            8 * a3 * a4 * b0 * pow(c5, 2) * d4 + 32 * a3 * a4 * b3 * pow(c2, 2) * d4 -
            16 * a3 * a4 * b4 * pow(c0, 2) * d5 - 32 * a3 * a4 * b4 * pow(c2, 2) * d3 +
            8 * a3 * a4 * b4 * pow(c5, 2) * d0 + 6 * a3 * a5 * b0 * pow(c3, 2) * d5 -
            6 * a3 * a5 * b0 * pow(c5, 2) * d3 + 12 * a3 * a5 * b3 * pow(c0, 2) * d5 +
            8 * a3 * a5 * b3 * pow(c2, 2) * d3 - 6 * a3 * a5 * b3 * pow(c5, 2) * d0 -
            12 * a3 * a5 * b5 * pow(c0, 2) * d3 + 6 * a3 * a5 * b5 * pow(c3, 2) * d0 -
            8 * a3 * b0 * b4 * c4 * pow(c5, 2) - 6 * a3 * b0 * b5 * c3 * pow(c5, 2) +
            6 * a3 * b0 * b5 * pow(c3, 2) * c5 + 32 * a3 * b3 * b4 * pow(c2, 2) * c4 -
            6 * a3 * b3 * b5 * c0 * pow(c5, 2) + 12 * a3 * b3 * b5 * pow(c0, 2) * c5 +
            8 * a3 * b3 * b5 * pow(c2, 2) * c3 + 8 * a4 * a5 * b0 * pow(c3, 2) * d4 +
            16 * a4 * a5 * b4 * pow(c0, 2) * d3 - 8 * a4 * a5 * b4 * pow(c3, 2) * d0 -
            8 * a4 * b0 * b3 * c4 * pow(c5, 2) + 8 * a4 * b0 * b4 * c3 * pow(c5, 2) -
            8 * a4 * b0 * b4 * pow(c3, 2) * c5 + 8 * a4 * b0 * b5 * pow(c3, 2) * c4 +
            8 * a4 * b3 * b4 * c0 * pow(c5, 2) - 16 * a4 * b3 * b4 * pow(c0, 2) * c5 -
            32 * a4 * b3 * b4 * pow(c2, 2) * c3 - 8 * a4 * b4 * b5 * c0 * pow(c3, 2) +
            16 * a4 * b4 * b5 * pow(c0, 2) * c3 - 6 * a5 * b0 * b3 * c3 * pow(c5, 2) +
            6 * a5 * b0 * b3 * pow(c3, 2) * c5 + 8 * a5 * b0 * b4 * pow(c3, 2) * c4 +
            8 * a5 * b0 * b5 * pow(c1, 2) * c5 + 32 * a5 * b1 * b5 * c1 * pow(c4, 2) +
            6 * a5 * b3 * b5 * c0 * pow(c3, 2) - 12 * a5 * b3 * b5 * pow(c0, 2) * c3 +
            8 * a0 * a3 * b5 * pow(c4, 2) * d5 + 8 * a0 * a5 * b3 * pow(c4, 2) * d5 -
            8 * a0 * a5 * b5 * pow(c4, 2) * d3 + 8 * a0 * b3 * b5 * pow(c4, 2) * c5 -
            8 * a2 * a5 * b2 * pow(c3, 2) * d5 + 8 * a2 * a5 * b5 * pow(c3, 2) * d2 -
            8 * a2 * b2 * b5 * pow(c3, 2) * c5 + 8 * a3 * a5 * b0 * pow(c4, 2) * d5 +
            8 * a3 * a5 * b3 * pow(c1, 2) * d5 - 8 * a3 * a5 * b5 * pow(c1, 2) * d3 -
            8 * a3 * a5 * b5 * pow(c4, 2) * d0 + 8 * a3 * b0 * b5 * pow(c4, 2) * c5 +
            8 * a3 * b3 * b5 * pow(c1, 2) * c5 + 8 * a5 * b0 * b3 * pow(c4, 2) * c5 -
            8 * a5 * b0 * b5 * c3 * pow(c4, 2) + 8 * a5 * b2 * b5 * c2 * pow(c3, 2) -
            8 * a5 * b3 * b5 * c0 * pow(c4, 2) - 8 * a5 * b3 * b5 * pow(c1, 2) * c3 +
            6 * a0 * a5 * b5 * pow(c3, 2) * d5 + 8 * a3 * a5 * b3 * pow(c2, 2) * d5 -
            6 * a3 * a5 * b5 * pow(c0, 2) * d5 - 8 * a3 * a5 * b5 * pow(c2, 2) * d3 +
            8 * a3 * b3 * b5 * pow(c2, 2) * c5 + 8 * a4 * a5 * b4 * pow(c0, 2) * d5 -
            8 * a4 * a5 * b5 * pow(c0, 2) * d4 + 8 * a4 * b4 * b5 * pow(c0, 2) * c5 +
            6 * a5 * b0 * b5 * pow(c3, 2) * c5 - 6 * a5 * b3 * b5 * pow(c0, 2) * c5 -
            8 * a5 * b3 * b5 * pow(c2, 2) * c3 - 8 * a5 * b4 * b5 * pow(c0, 2) * c4 +
            8 * a3 * a4 * b3 * pow(c5, 2) * d4 - 8 * a3 * a4 * b4 * pow(c5, 2) * d3 +
            6 * a3 * a5 * b3 * pow(c5, 2) * d3 - 8 * a3 * a5 * b5 * pow(c1, 2) * d5 +
            8 * a3 * b3 * b4 * c4 * pow(c5, 2) + 6 * a3 * b3 * b5 * c3 * pow(c5, 2) +
            32 * a4 * a5 * b4 * pow(c1, 2) * d5 - 32 * a4 * a5 * b5 * pow(c1, 2) * d4 -
            8 * a4 * b3 * b4 * c3 * pow(c5, 2) + 32 * a4 * b4 * b5 * pow(c1, 2) * c5 -
            8 * a5 * b3 * b5 * pow(c1, 2) * c5 - 32 * a5 * b4 * b5 * pow(c1, 2) * c4 -
            8 * a3 * a5 * b3 * pow(c4, 2) * d5 + 8 * a3 * a5 * b5 * pow(c4, 2) * d3 -
            8 * a3 * b3 * b5 * pow(c4, 2) * c5 + 8 * a5 * b3 * b5 * c3 * pow(c4, 2) -
            6 * a3 * a5 * b5 * pow(c3, 2) * d5 + 8 * a4 * a5 * b4 * pow(c3, 2) * d5 -
            8 * a4 * a5 * b5 * pow(c3, 2) * d4 + 8 * a4 * b4 * b5 * pow(c3, 2) * c5 -
            6 * a5 * b3 * b5 * pow(c3, 2) * c5 - 8 * a5 * b4 * b5 * pow(c3, 2) * c4 +
            8 * a0 * pow(b1, 2) * c0 * c3 * c5 - 8 * a0 * pow(b2, 2) * c0 * c3 * c5 +
            16 * a0 * pow(b3, 2) * c1 * c2 * c4 - 8 * a1 * pow(b0, 2) * c1 * c3 * c5 +
            8 * a1 * pow(b3, 2) * c0 * c1 * c5 - 16 * a2 * pow(b3, 2) * c0 * c1 * c4 -
            8 * a2 * pow(b3, 2) * c0 * c2 * c3 - 16 * a3 * pow(b0, 2) * c1 * c2 * c4 +
            16 * a4 * pow(b0, 2) * c1 * c2 * c3 + 6 * a0 * pow(b3, 2) * c0 * c3 * c5 +
            32 * a1 * pow(b4, 2) * c0 * c1 * c5 - 32 * a2 * pow(b4, 2) * c0 * c2 * c3 -
            6 * a3 * pow(b0, 2) * c0 * c3 * c5 + 8 * a4 * pow(b0, 2) * c0 * c3 * c4 -
            16 * a0 * pow(b5, 2) * c1 * c2 * c4 - 32 * a1 * pow(b2, 2) * c1 * c3 * c5 +
            8 * a1 * pow(b5, 2) * c0 * c1 * c5 + 16 * a1 * pow(b5, 2) * c0 * c2 * c4 +
            8 * a2 * pow(b0, 2) * c2 * c3 * c5 - 8 * a2 * pow(b5, 2) * c0 * c2 * c3 -
            8 * a3 * pow(b1, 2) * c0 * c3 * c5 - 16 * a4 * pow(b0, 2) * c1 * c2 * c5 +
            16 * a5 * pow(b0, 2) * c1 * c2 * c4 - 6 * a0 * pow(b5, 2) * c0 * c3 * c5 +
            32 * a2 * pow(b1, 2) * c2 * c3 * c5 - 8 * a4 * pow(b0, 2) * c0 * c4 * c5 +
            32 * a4 * pow(b2, 2) * c0 * c3 * c4 + 6 * a5 * pow(b0, 2) * c0 * c3 * c5 -
            32 * a4 * pow(b1, 2) * c0 * c4 * c5 - 8 * a1 * pow(b5, 2) * c1 * c3 * c5 -
            16 * a1 * pow(b5, 2) * c2 * c3 * c4 + 16 * a2 * pow(b3, 2) * c1 * c4 * c5 +
            8 * a2 * pow(b3, 2) * c2 * c3 * c5 + 8 * a3 * pow(b4, 2) * c0 * c3 * c5 +
            16 * a3 * pow(b5, 2) * c1 * c2 * c4 + 8 * a5 * pow(b2, 2) * c0 * c3 * c5 -
            16 * a5 * pow(b3, 2) * c1 * c2 * c4 + 6 * a3 * pow(b5, 2) * c0 * c3 * c5 -
            8 * a4 * pow(b3, 2) * c0 * c4 * c5 + 8 * a4 * pow(b5, 2) * c0 * c3 * c4 -
            6 * a5 * pow(b3, 2) * c0 * c3 * c5 - 8 * a5 * pow(b4, 2) * c0 * c3 * c5 +
            8 * a0 * pow(a3, 2) * c1 * d0 * d1 - 8 * a1 * pow(a3, 2) * c0 * d0 * d1 +
            8 * pow(a3, 2) * b0 * c0 * c1 * d1 - 8 * pow(a3, 2) * b1 * c0 * c1 * d0 -
            6 * a0 * pow(a3, 2) * c0 * d0 * d3 + 32 * a0 * pow(a4, 2) * c1 * d0 * d1 -
            32 * a1 * pow(a4, 2) * c0 * d0 * d1 - 6 * pow(a3, 2) * b0 * c0 * c3 * d0 +
            32 * pow(a4, 2) * b0 * c0 * c1 * d1 - 32 * pow(a4, 2) * b1 * c0 * c1 * d0 -
            8 * a0 * pow(a1, 2) * c3 * d0 * d3 - 8 * a0 * pow(a3, 2) * c2 * d0 * d2 -
            8 * a0 * pow(a4, 2) * c0 * d0 * d3 + 8 * a0 * pow(a5, 2) * c1 * d0 * d1 -
            8 * a1 * pow(a5, 2) * c0 * d0 * d1 + 8 * a2 * pow(a3, 2) * c0 * d0 * d2 +
            8 * pow(a1, 2) * a3 * c0 * d0 * d3 - 8 * pow(a1, 2) * b0 * c0 * c3 * d3 +
            8 * pow(a1, 2) * b3 * c0 * c3 * d0 - 8 * pow(a3, 2) * b0 * c0 * c2 * d2 +
            8 * pow(a3, 2) * b2 * c0 * c2 * d0 - 8 * pow(a4, 2) * b0 * c0 * c3 * d0 +
            8 * pow(a5, 2) * b0 * c0 * c1 * d1 - 8 * pow(a5, 2) * b1 * c0 * c1 * d0 +
            8 * a0 * pow(a2, 2) * c3 * d0 * d3 + 6 * a0 * pow(a3, 2) * c0 * d0 * d5 -
            32 * a0 * pow(a4, 2) * c2 * d0 * d2 - 6 * a0 * pow(a5, 2) * c0 * d0 * d3 +
            32 * a2 * pow(a4, 2) * c0 * d0 * d2 + 8 * pow(a0, 2) * a1 * c3 * d1 * d3 -
            8 * pow(a0, 2) * a3 * c1 * d1 * d3 + 8 * pow(a0, 2) * b1 * c1 * c3 * d3 -
            8 * pow(a0, 2) * b3 * c1 * c3 * d1 - 8 * pow(a2, 2) * a3 * c0 * d0 * d3 +
            8 * pow(a2, 2) * b0 * c0 * c3 * d3 - 8 * pow(a2, 2) * b3 * c0 * c3 * d0 +
            6 * pow(a3, 2) * b0 * c0 * c5 * d0 - 32 * pow(a4, 2) * b0 * c0 * c2 * d2 +
            32 * pow(a4, 2) * b2 * c0 * c2 * d0 - 6 * pow(a5, 2) * b0 * c0 * c3 * d0 +
            8 * a0 * pow(a1, 2) * c0 * d3 * d5 + 8 * a0 * pow(a1, 2) * c3 * d0 * d5 -
            32 * a0 * pow(a1, 2) * c4 * d0 * d4 + 8 * a0 * pow(a1, 2) * c5 * d0 * d3 +
            8 * a0 * pow(a4, 2) * c0 * d0 * d5 - 8 * a0 * pow(a5, 2) * c2 * d0 * d2 -
            32 * a1 * pow(a3, 2) * c2 * d1 * d2 + 32 * a2 * pow(a3, 2) * c1 * d1 * d2 +
            8 * a2 * pow(a5, 2) * c0 * d0 * d2 + 6 * pow(a0, 2) * a3 * c3 * d0 * d3 +
            6 * pow(a0, 2) * b3 * c0 * c3 * d3 - 8 * pow(a1, 2) * a3 * c0 * d0 * d5 +
            32 * pow(a1, 2) * a4 * c0 * d0 * d4 - 8 * pow(a1, 2) * a5 * c0 * d0 * d3 +
            8 * pow(a1, 2) * b0 * c0 * c3 * d5 - 32 * pow(a1, 2) * b0 * c0 * c4 * d4 +
            8 * pow(a1, 2) * b0 * c0 * c5 * d3 + 8 * pow(a1, 2) * b0 * c3 * c5 * d0 -
            8 * pow(a1, 2) * b3 * c0 * c5 * d0 + 32 * pow(a1, 2) * b4 * c0 * c4 * d0 -
            8 * pow(a1, 2) * b5 * c0 * c3 * d0 - 32 * pow(a3, 2) * b1 * c1 * c2 * d2 +
            32 * pow(a3, 2) * b2 * c1 * c2 * d1 + 8 * pow(a4, 2) * b0 * c0 * c5 * d0 -
            8 * pow(a5, 2) * b0 * c0 * c2 * d2 + 8 * pow(a5, 2) * b2 * c0 * c2 * d0 -
            8 * a0 * pow(a2, 2) * c0 * d3 * d5 - 8 * a0 * pow(a2, 2) * c3 * d0 * d5 +
            32 * a0 * pow(a2, 2) * c4 * d0 * d4 - 8 * a0 * pow(a2, 2) * c5 * d0 * d3 -
            8 * a0 * pow(a3, 2) * c1 * d1 * d5 + 16 * a0 * pow(a3, 2) * c1 * d2 * d4 +
            16 * a0 * pow(a3, 2) * c2 * d1 * d4 - 8 * a0 * pow(a3, 2) * c2 * d2 * d3 +
            16 * a0 * pow(a3, 2) * c4 * d1 * d2 + 8 * a0 * pow(a4, 2) * c3 * d0 * d3 +
            6 * a0 * pow(a5, 2) * c0 * d0 * d5 - 16 * a0 * pow(a5, 2) * c1 * d1 * d3 +
            32 * a1 * pow(a2, 2) * c3 * d1 * d3 + 8 * a1 * pow(a3, 2) * c0 * d1 * d5 +
            8 * a1 * pow(a3, 2) * c1 * d0 * d5 + 8 * a1 * pow(a3, 2) * c5 * d0 * d1 -
            128 * a1 * pow(a4, 2) * c2 * d1 * d2 - 16 * a2 * pow(a3, 2) * c0 * d1 * d4 -
            8 * a2 * pow(a3, 2) * c0 * d2 * d3 - 16 * a2 * pow(a3, 2) * c1 * d0 * d4 -
            8 * a2 * pow(a3, 2) * c2 * d0 * d3 - 8 * a2 * pow(a3, 2) * c3 * d0 * d2 -
            16 * a2 * pow(a3, 2) * c4 * d0 * d1 + 128 * a2 * pow(a4, 2) * c1 * d1 * d2 -
            8 * a3 * pow(a4, 2) * c0 * d0 * d3 + 16 * a3 * pow(a5, 2) * c1 * d0 * d1 -
            8 * pow(a0, 2) * a1 * c1 * d3 * d5 - 8 * pow(a0, 2) * a1 * c3 * d1 * d5 +
            32 * pow(a0, 2) * a1 * c4 * d1 * d4 - 8 * pow(a0, 2) * a1 * c5 * d1 * d3 -
            8 * pow(a0, 2) * a2 * c3 * d2 * d3 + 8 * pow(a0, 2) * a3 * c1 * d1 * d5 -
            16 * pow(a0, 2) * a3 * c1 * d2 * d4 - 16 * pow(a0, 2) * a3 * c2 * d1 * d4 +
            8 * pow(a0, 2) * a3 * c2 * d2 * d3 - 16 * pow(a0, 2) * a3 * c4 * d1 * d2 -
            32 * pow(a0, 2) * a4 * c1 * d1 * d4 + 16 * pow(a0, 2) * a4 * c1 * d2 * d3 +
            16 * pow(a0, 2) * a4 * c2 * d1 * d3 + 16 * pow(a0, 2) * a4 * c3 * d1 * d2 +
            8 * pow(a0, 2) * a5 * c1 * d1 * d3 - 8 * pow(a0, 2) * b1 * c1 * c3 * d5 +
            32 * pow(a0, 2) * b1 * c1 * c4 * d4 - 8 * pow(a0, 2) * b1 * c1 * c5 * d3 -
            8 * pow(a0, 2) * b1 * c3 * c5 * d1 - 8 * pow(a0, 2) * b2 * c2 * c3 * d3 -
            16 * pow(a0, 2) * b3 * c1 * c2 * d4 - 16 * pow(a0, 2) * b3 * c1 * c4 * d2 +
            8 * pow(a0, 2) * b3 * c1 * c5 * d1 + 8 * pow(a0, 2) * b3 * c2 * c3 * d2 -
            16 * pow(a0, 2) * b3 * c2 * c4 * d1 + 16 * pow(a0, 2) * b4 * c1 * c2 * d3 +
            16 * pow(a0, 2) * b4 * c1 * c3 * d2 - 32 * pow(a0, 2) * b4 * c1 * c4 * d1 +
            16 * pow(a0, 2) * b4 * c2 * c3 * d1 + 8 * pow(a0, 2) * b5 * c1 * c3 * d1 +
            8 * pow(a2, 2) * a3 * c0 * d0 * d5 - 32 * pow(a2, 2) * a3 * c1 * d1 * d3 -
            32 * pow(a2, 2) * a4 * c0 * d0 * d4 + 8 * pow(a2, 2) * a5 * c0 * d0 * d3 -
            8 * pow(a2, 2) * b0 * c0 * c3 * d5 + 32 * pow(a2, 2) * b0 * c0 * c4 * d4 -
            8 * pow(a2, 2) * b0 * c0 * c5 * d3 - 8 * pow(a2, 2) * b0 * c3 * c5 * d0 +
            32 * pow(a2, 2) * b1 * c1 * c3 * d3 + 8 * pow(a2, 2) * b3 * c0 * c5 * d0 -
            32 * pow(a2, 2) * b3 * c1 * c3 * d1 - 32 * pow(a2, 2) * b4 * c0 * c4 * d0 +
            8 * pow(a2, 2) * b5 * c0 * c3 * d0 - 8 * pow(a3, 2) * a5 * c1 * d0 * d1 +
            16 * pow(a3, 2) * b0 * c1 * c2 * d4 + 16 * pow(a3, 2) * b0 * c1 * c4 * d2 -
            8 * pow(a3, 2) * b0 * c1 * c5 * d1 - 8 * pow(a3, 2) * b0 * c2 * c3 * d2 +
            16 * pow(a3, 2) * b0 * c2 * c4 * d1 + 8 * pow(a3, 2) * b1 * c0 * c1 * d5 +
            8 * pow(a3, 2) * b1 * c0 * c5 * d1 + 8 * pow(a3, 2) * b1 * c1 * c5 * d0 -
            16 * pow(a3, 2) * b2 * c0 * c1 * d4 - 8 * pow(a3, 2) * b2 * c0 * c2 * d3 -
            8 * pow(a3, 2) * b2 * c0 * c3 * d2 - 16 * pow(a3, 2) * b2 * c0 * c4 * d1 -
            16 * pow(a3, 2) * b2 * c1 * c4 * d0 - 8 * pow(a3, 2) * b2 * c2 * c3 * d0 +
            24 * pow(a3, 2) * b3 * c0 * c2 * d2 - 8 * pow(a3, 2) * b5 * c0 * c1 * d1 +
            8 * pow(a4, 2) * b0 * c0 * c3 * d3 - 128 * pow(a4, 2) * b1 * c1 * c2 * d2 +
            128 * pow(a4, 2) * b2 * c1 * c2 * d1 - 8 * pow(a4, 2) * b3 * c0 * c3 * d0 +
            6 * pow(a5, 2) * b0 * c0 * c5 * d0 - 16 * pow(a5, 2) * b0 * c1 * c3 * d1 +
            16 * pow(a5, 2) * b3 * c0 * c1 * d1 - 8 * a0 * pow(a1, 2) * c5 * d0 * d5 +
            6 * a0 * pow(a3, 2) * c0 * d3 * d5 + 6 * a0 * pow(a3, 2) * c3 * d0 * d5 -
            8 * a0 * pow(a3, 2) * c4 * d0 * d4 + 6 * a0 * pow(a3, 2) * c5 * d0 * d3 -
            32 * a0 * pow(a4, 2) * c1 * d1 * d5 + 32 * a0 * pow(a4, 2) * c2 * d2 * d3 +
            12 * a0 * pow(a5, 2) * c3 * d0 * d3 + 32 * a1 * pow(a4, 2) * c0 * d1 * d5 +
            32 * a1 * pow(a4, 2) * c1 * d0 * d5 + 32 * a1 * pow(a4, 2) * c5 * d0 * d1 -
            32 * a1 * pow(a5, 2) * c2 * d1 * d2 - 32 * a2 * pow(a4, 2) * c0 * d2 * d3 -
            32 * a2 * pow(a4, 2) * c2 * d0 * d3 - 32 * a2 * pow(a4, 2) * c3 * d0 * d2 +
            32 * a2 * pow(a5, 2) * c1 * d1 * d2 + 32 * a3 * pow(a4, 2) * c2 * d0 * d2 -
            12 * a3 * pow(a5, 2) * c0 * d0 * d3 - 6 * pow(a0, 2) * a3 * c0 * d3 * d5 -
            6 * pow(a0, 2) * a3 * c3 * d0 * d5 + 8 * pow(a0, 2) * a3 * c4 * d0 * d4 -
            6 * pow(a0, 2) * a3 * c5 * d0 * d3 + 8 * pow(a0, 2) * a4 * c0 * d3 * d4 +
            8 * pow(a0, 2) * a4 * c3 * d0 * d4 + 8 * pow(a0, 2) * a4 * c4 * d0 * d3 -
            6 * pow(a0, 2) * a5 * c3 * d0 * d3 - 24 * pow(a0, 2) * b0 * c3 * c4 * d4 +
            18 * pow(a0, 2) * b0 * c3 * c5 * d3 - 6 * pow(a0, 2) * b3 * c0 * c3 * d5 +
            8 * pow(a0, 2) * b3 * c0 * c4 * d4 - 6 * pow(a0, 2) * b3 * c0 * c5 * d3 -
            6 * pow(a0, 2) * b3 * c3 * c5 * d0 + 8 * pow(a0, 2) * b4 * c0 * c3 * d4 +
            8 * pow(a0, 2) * b4 * c0 * c4 * d3 + 8 * pow(a0, 2) * b4 * c3 * c4 * d0 -
            6 * pow(a0, 2) * b5 * c0 * c3 * d3 - 32 * pow(a1, 2) * a2 * c3 * d2 * d3 +
            32 * pow(a1, 2) * a3 * c2 * d2 * d3 + 8 * pow(a1, 2) * a5 * c0 * d0 * d5 -
            8 * pow(a1, 2) * b0 * c0 * c5 * d5 - 32 * pow(a1, 2) * b2 * c2 * c3 * d3 +
            32 * pow(a1, 2) * b3 * c2 * c3 * d2 + 8 * pow(a1, 2) * b5 * c0 * c5 * d0 +
            8 * pow(a2, 2) * a3 * c3 * d0 * d3 + 8 * pow(a2, 2) * b3 * c0 * c3 * d3 +
            8 * pow(a3, 2) * a4 * c0 * d0 * d4 + 6 * pow(a3, 2) * a5 * c0 * d0 * d3 +
            6 * pow(a3, 2) * b0 * c0 * c3 * d5 - 8 * pow(a3, 2) * b0 * c0 * c4 * d4 +
            6 * pow(a3, 2) * b0 * c0 * c5 * d3 + 6 * pow(a3, 2) * b0 * c3 * c5 * d0 -
            18 * pow(a3, 2) * b3 * c0 * c5 * d0 + 8 * pow(a3, 2) * b4 * c0 * c4 * d0 +
            6 * pow(a3, 2) * b5 * c0 * c3 * d0 - 32 * pow(a4, 2) * a5 * c1 * d0 * d1 -
            32 * pow(a4, 2) * b0 * c1 * c5 * d1 + 32 * pow(a4, 2) * b0 * c2 * c3 * d2 +
            32 * pow(a4, 2) * b1 * c0 * c1 * d5 + 32 * pow(a4, 2) * b1 * c0 * c5 * d1 +
            32 * pow(a4, 2) * b1 * c1 * c5 * d0 - 32 * pow(a4, 2) * b2 * c0 * c2 * d3 -
            32 * pow(a4, 2) * b2 * c0 * c3 * d2 - 32 * pow(a4, 2) * b2 * c2 * c3 * d0 +
            32 * pow(a4, 2) * b3 * c0 * c2 * d2 - 32 * pow(a4, 2) * b5 * c0 * c1 * d1 +
            12 * pow(a5, 2) * b0 * c0 * c3 * d3 - 32 * pow(a5, 2) * b1 * c1 * c2 * d2 +
            32 * pow(a5, 2) * b2 * c1 * c2 * d1 - 12 * pow(a5, 2) * b3 * c0 * c3 * d0 +
            8 * a0 * pow(a1, 2) * c3 * d3 * d5 + 8 * a0 * pow(a2, 2) * c5 * d0 * d5 +
            16 * a0 * pow(a3, 2) * c2 * d2 * d5 + 8 * a0 * pow(a5, 2) * c1 * d1 * d5 -
            16 * a0 * pow(a5, 2) * c1 * d2 * d4 - 16 * a0 * pow(a5, 2) * c2 * d1 * d4 +
            8 * a0 * pow(a5, 2) * c2 * d2 * d3 - 16 * a0 * pow(a5, 2) * c4 * d1 * d2 -
            32 * a1 * pow(a2, 2) * c1 * d3 * d5 - 32 * a1 * pow(a2, 2) * c3 * d1 * d5 +
            128 * a1 * pow(a2, 2) * c4 * d1 * d4 - 32 * a1 * pow(a2, 2) * c5 * d1 * d3 +
            8 * a1 * pow(a5, 2) * c0 * d1 * d5 + 16 * a1 * pow(a5, 2) * c0 * d2 * d4 +
            8 * a1 * pow(a5, 2) * c1 * d0 * d5 + 16 * a1 * pow(a5, 2) * c2 * d0 * d4 +
            16 * a1 * pow(a5, 2) * c4 * d0 * d2 + 8 * a1 * pow(a5, 2) * c5 * d0 * d1 -
            8 * a2 * pow(a5, 2) * c0 * d2 * d3 - 8 * a2 * pow(a5, 2) * c2 * d0 * d3 -
            8 * a2 * pow(a5, 2) * c3 * d0 * d2 - 16 * a3 * pow(a4, 2) * c0 * d0 * d5 +
            8 * a3 * pow(a5, 2) * c2 * d0 * d2 + 8 * pow(a0, 2) * a1 * c5 * d1 * d5 +
            8 * pow(a0, 2) * a2 * c2 * d3 * d5 + 8 * pow(a0, 2) * a2 * c3 * d2 * d5 -
            32 * pow(a0, 2) * a2 * c4 * d2 * d4 + 8 * pow(a0, 2) * a2 * c5 * d2 * d3 -
            8 * pow(a0, 2) * a3 * c2 * d2 * d5 - 16 * pow(a0, 2) * a4 * c1 * d2 * d5 -
            16 * pow(a0, 2) * a4 * c2 * d1 * d5 + 32 * pow(a0, 2) * a4 * c2 * d2 * d4 -
            16 * pow(a0, 2) * a4 * c5 * d1 * d2 - 8 * pow(a0, 2) * a5 * c1 * d1 * d5 +
            16 * pow(a0, 2) * a5 * c1 * d2 * d4 + 16 * pow(a0, 2) * a5 * c2 * d1 * d4 -
            8 * pow(a0, 2) * a5 * c2 * d2 * d3 + 16 * pow(a0, 2) * a5 * c4 * d1 * d2 +
            8 * pow(a0, 2) * b1 * c1 * c5 * d5 + 8 * pow(a0, 2) * b2 * c2 * c3 * d5 -
            32 * pow(a0, 2) * b2 * c2 * c4 * d4 + 8 * pow(a0, 2) * b2 * c2 * c5 * d3 +
            8 * pow(a0, 2) * b2 * c3 * c5 * d2 - 8 * pow(a0, 2) * b3 * c2 * c5 * d2 -
            16 * pow(a0, 2) * b4 * c1 * c2 * d5 - 16 * pow(a0, 2) * b4 * c1 * c5 * d2 +
            32 * pow(a0, 2) * b4 * c2 * c4 * d2 - 16 * pow(a0, 2) * b4 * c2 * c5 * d1 +
            16 * pow(a0, 2) * b5 * c1 * c2 * d4 + 16 * pow(a0, 2) * b5 * c1 * c4 * d2 -
            8 * pow(a0, 2) * b5 * c1 * c5 * d1 - 8 * pow(a0, 2) * b5 * c2 * c3 * d2 +
            16 * pow(a0, 2) * b5 * c2 * c4 * d1 - 8 * pow(a1, 2) * a3 * c0 * d3 * d5 -
            8 * pow(a1, 2) * a3 * c3 * d0 * d5 - 8 * pow(a1, 2) * a3 * c5 * d0 * d3 +
            8 * pow(a1, 2) * a5 * c3 * d0 * d3 + 8 * pow(a1, 2) * b0 * c3 * c5 * d3 -
            8 * pow(a1, 2) * b3 * c0 * c3 * d5 - 8 * pow(a1, 2) * b3 * c0 * c5 * d3 -
            8 * pow(a1, 2) * b3 * c3 * c5 * d0 + 8 * pow(a1, 2) * b5 * c0 * c3 * d3 +
            32 * pow(a2, 2) * a3 * c1 * d1 * d5 - 128 * pow(a2, 2) * a4 * c1 * d1 * d4 -
            8 * pow(a2, 2) * a5 * c0 * d0 * d5 + 32 * pow(a2, 2) * a5 * c1 * d1 * d3 +
            8 * pow(a2, 2) * b0 * c0 * c5 * d5 - 32 * pow(a2, 2) * b1 * c1 * c3 * d5 +
            128 * pow(a2, 2) * b1 * c1 * c4 * d4 - 32 * pow(a2, 2) * b1 * c1 * c5 * d3 -
            32 * pow(a2, 2) * b1 * c3 * c5 * d1 + 32 * pow(a2, 2) * b3 * c1 * c5 * d1 -
            128 * pow(a2, 2) * b4 * c1 * c4 * d1 - 8 * pow(a2, 2) * b5 * c0 * c5 * d0 +
            32 * pow(a2, 2) * b5 * c1 * c3 * d1 - 16 * pow(a3, 2) * a5 * c2 * d0 * d2 +
            16 * pow(a3, 2) * b0 * c2 * c5 * d2 - 16 * pow(a3, 2) * b5 * c0 * c2 * d2 +
            16 * pow(a4, 2) * a5 * c0 * d0 * d3 - 16 * pow(a4, 2) * b3 * c0 * c5 * d0 +
            16 * pow(a4, 2) * b5 * c0 * c3 * d0 - 16 * pow(a5, 2) * b0 * c1 * c2 * d4 -
            16 * pow(a5, 2) * b0 * c1 * c4 * d2 + 8 * pow(a5, 2) * b0 * c1 * c5 * d1 +
            8 * pow(a5, 2) * b0 * c2 * c3 * d2 - 16 * pow(a5, 2) * b0 * c2 * c4 * d1 +
            8 * pow(a5, 2) * b1 * c0 * c1 * d5 + 16 * pow(a5, 2) * b1 * c0 * c2 * d4 +
            16 * pow(a5, 2) * b1 * c0 * c4 * d2 + 8 * pow(a5, 2) * b1 * c0 * c5 * d1 +
            8 * pow(a5, 2) * b1 * c1 * c5 * d0 + 16 * pow(a5, 2) * b1 * c2 * c4 * d0 -
            8 * pow(a5, 2) * b2 * c0 * c2 * d3 - 8 * pow(a5, 2) * b2 * c0 * c3 * d2 -
            8 * pow(a5, 2) * b2 * c2 * c3 * d0 + 8 * pow(a5, 2) * b3 * c0 * c2 * d2 -
            24 * pow(a5, 2) * b5 * c0 * c1 * d1 + 16 * a0 * pow(a2, 2) * c3 * d3 * d5 -
            32 * a0 * pow(a2, 2) * c4 * d3 * d4 - 12 * a0 * pow(a3, 2) * c5 * d0 * d5 -
            6 * a0 * pow(a5, 2) * c0 * d3 * d5 - 6 * a0 * pow(a5, 2) * c3 * d0 * d5 +
            8 * a0 * pow(a5, 2) * c4 * d0 * d4 - 6 * a0 * pow(a5, 2) * c5 * d0 * d3 +
            8 * a1 * pow(a5, 2) * c3 * d1 * d3 - 6 * a3 * pow(a5, 2) * c0 * d0 * d5 -
            8 * a3 * pow(a5, 2) * c1 * d1 * d3 - 8 * a4 * pow(a5, 2) * c0 * d0 * d4 +
            6 * pow(a0, 2) * a3 * c5 * d0 * d5 - 8 * pow(a0, 2) * a4 * c0 * d4 * d5 -
            8 * pow(a0, 2) * a4 * c4 * d0 * d5 - 8 * pow(a0, 2) * a4 * c5 * d0 * d4 +
            6 * pow(a0, 2) * a5 * c0 * d3 * d5 + 6 * pow(a0, 2) * a5 * c3 * d0 * d5 -
            8 * pow(a0, 2) * a5 * c4 * d0 * d4 + 6 * pow(a0, 2) * a5 * c5 * d0 * d3 -
            18 * pow(a0, 2) * b0 * c3 * c5 * d5 + 24 * pow(a0, 2) * b0 * c4 * c5 * d4 +
            6 * pow(a0, 2) * b3 * c0 * c5 * d5 - 8 * pow(a0, 2) * b4 * c0 * c4 * d5 -
            8 * pow(a0, 2) * b4 * c0 * c5 * d4 - 8 * pow(a0, 2) * b4 * c4 * c5 * d0 +
            6 * pow(a0, 2) * b5 * c0 * c3 * d5 - 8 * pow(a0, 2) * b5 * c0 * c4 * d4 +
            6 * pow(a0, 2) * b5 * c0 * c5 * d3 + 6 * pow(a0, 2) * b5 * c3 * c5 * d0 +
            32 * pow(a1, 2) * a2 * c2 * d3 * d5 + 32 * pow(a1, 2) * a2 * c3 * d2 * d5 -
            128 * pow(a1, 2) * a2 * c4 * d2 * d4 + 32 * pow(a1, 2) * a2 * c5 * d2 * d3 -
            32 * pow(a1, 2) * a3 * c2 * d2 * d5 + 128 * pow(a1, 2) * a4 * c2 * d2 * d4 -
            32 * pow(a1, 2) * a5 * c2 * d2 * d3 + 32 * pow(a1, 2) * b2 * c2 * c3 * d5 -
            128 * pow(a1, 2) * b2 * c2 * c4 * d4 + 32 * pow(a1, 2) * b2 * c2 * c5 * d3 +
            32 * pow(a1, 2) * b2 * c3 * c5 * d2 - 32 * pow(a1, 2) * b3 * c2 * c5 * d2 +
            128 * pow(a1, 2) * b4 * c2 * c4 * d2 - 32 * pow(a1, 2) * b5 * c2 * c3 * d2 -
            32 * pow(a2, 2) * a3 * c4 * d0 * d4 + 32 * pow(a2, 2) * a4 * c0 * d3 * d4 +
            32 * pow(a2, 2) * a4 * c3 * d0 * d4 + 32 * pow(a2, 2) * a4 * c4 * d0 * d3 -
            16 * pow(a2, 2) * a5 * c3 * d0 * d3 - 32 * pow(a2, 2) * b0 * c3 * c4 * d4 +
            16 * pow(a2, 2) * b0 * c3 * c5 * d3 - 32 * pow(a2, 2) * b3 * c0 * c4 * d4 +
            32 * pow(a2, 2) * b4 * c0 * c3 * d4 + 32 * pow(a2, 2) * b4 * c0 * c4 * d3 +
            32 * pow(a2, 2) * b4 * c3 * c4 * d0 - 16 * pow(a2, 2) * b5 * c0 * c3 * d3 +
            12 * pow(a3, 2) * a5 * c0 * d0 * d5 - 12 * pow(a3, 2) * b0 * c0 * c5 * d5 +
            12 * pow(a3, 2) * b5 * c0 * c5 * d0 - 6 * pow(a5, 2) * b0 * c0 * c3 * d5 +
            8 * pow(a5, 2) * b0 * c0 * c4 * d4 - 6 * pow(a5, 2) * b0 * c0 * c5 * d3 -
            6 * pow(a5, 2) * b0 * c3 * c5 * d0 + 8 * pow(a5, 2) * b1 * c1 * c3 * d3 -
            6 * pow(a5, 2) * b3 * c0 * c5 * d0 - 8 * pow(a5, 2) * b3 * c1 * c3 * d1 -
            8 * pow(a5, 2) * b4 * c0 * c4 * d0 + 18 * pow(a5, 2) * b5 * c0 * c3 * d0 +
            32 * a0 * pow(a1, 2) * c4 * d4 * d5 - 16 * a0 * pow(a1, 2) * c5 * d3 * d5 -
            8 * a0 * pow(a4, 2) * c5 * d0 * d5 + 32 * a1 * pow(a2, 2) * c5 * d1 * d5 +
            32 * a2 * pow(a4, 2) * c3 * d2 * d3 - 32 * a3 * pow(a4, 2) * c2 * d2 * d3 +
            6 * a3 * pow(a5, 2) * c3 * d0 * d3 - 8 * pow(a0, 2) * a2 * c5 * d2 * d5 -
            6 * pow(a0, 2) * a3 * c3 * d3 * d5 + 8 * pow(a0, 2) * a3 * c4 * d3 * d4 -
            8 * pow(a0, 2) * a4 * c3 * d3 * d4 + 8 * pow(a0, 2) * a5 * c2 * d2 * d5 -
            8 * pow(a0, 2) * b2 * c2 * c5 * d5 + 8 * pow(a0, 2) * b3 * c3 * c4 * d4 -
            6 * pow(a0, 2) * b3 * c3 * c5 * d3 - 8 * pow(a0, 2) * b4 * c3 * c4 * d3 +
            8 * pow(a0, 2) * b5 * c2 * c5 * d2 + 16 * pow(a1, 2) * a3 * c5 * d0 * d5 -
            32 * pow(a1, 2) * a4 * c0 * d4 * d5 - 32 * pow(a1, 2) * a4 * c4 * d0 * d5 -
            32 * pow(a1, 2) * a4 * c5 * d0 * d4 + 32 * pow(a1, 2) * a5 * c4 * d0 * d4 -
            16 * pow(a1, 2) * b0 * c3 * c5 * d5 + 32 * pow(a1, 2) * b0 * c4 * c5 * d4 +
            16 * pow(a1, 2) * b3 * c0 * c5 * d5 - 32 * pow(a1, 2) * b4 * c0 * c4 * d5 -
            32 * pow(a1, 2) * b4 * c0 * c5 * d4 - 32 * pow(a1, 2) * b4 * c4 * c5 * d0 +
            32 * pow(a1, 2) * b5 * c0 * c4 * d4 - 32 * pow(a2, 2) * a5 * c1 * d1 * d5 +
            32 * pow(a2, 2) * b1 * c1 * c5 * d5 - 32 * pow(a2, 2) * b5 * c1 * c5 * d1 +
            8 * pow(a4, 2) * a5 * c0 * d0 * d5 - 8 * pow(a4, 2) * b0 * c0 * c5 * d5 +
            32 * pow(a4, 2) * b2 * c2 * c3 * d3 - 32 * pow(a4, 2) * b3 * c2 * c3 * d2 +
            8 * pow(a4, 2) * b5 * c0 * c5 * d0 + 6 * pow(a5, 2) * b3 * c0 * c3 * d3 -
            8 * a0 * pow(a2, 2) * c5 * d3 * d5 - 8 * a0 * pow(a4, 2) * c3 * d3 * d5 -
            8 * a1 * pow(a3, 2) * c5 * d1 * d5 - 8 * a1 * pow(a5, 2) * c1 * d3 * d5 -
            16 * a1 * pow(a5, 2) * c2 * d3 * d4 - 8 * a1 * pow(a5, 2) * c3 * d1 * d5 -
            16 * a1 * pow(a5, 2) * c3 * d2 * d4 + 32 * a1 * pow(a5, 2) * c4 * d1 * d4 -
            16 * a1 * pow(a5, 2) * c4 * d2 * d3 - 8 * a1 * pow(a5, 2) * c5 * d1 * d3 +
            16 * a2 * pow(a3, 2) * c1 * d4 * d5 + 8 * a2 * pow(a3, 2) * c2 * d3 * d5 +
            8 * a2 * pow(a3, 2) * c3 * d2 * d5 + 16 * a2 * pow(a3, 2) * c4 * d1 * d5 -
            32 * a2 * pow(a3, 2) * c4 * d2 * d4 + 16 * a2 * pow(a3, 2) * c5 * d1 * d4 +
            8 * a2 * pow(a3, 2) * c5 * d2 * d3 + 8 * a2 * pow(a5, 2) * c3 * d2 * d3 +
            8 * a3 * pow(a4, 2) * c0 * d3 * d5 + 8 * a3 * pow(a4, 2) * c3 * d0 * d5 +
            8 * a3 * pow(a4, 2) * c5 * d0 * d3 - 8 * a3 * pow(a5, 2) * c1 * d1 * d5 +
            16 * a3 * pow(a5, 2) * c1 * d2 * d4 + 16 * a3 * pow(a5, 2) * c2 * d1 * d4 -
            8 * a3 * pow(a5, 2) * c2 * d2 * d3 + 16 * a3 * pow(a5, 2) * c4 * d1 * d2 -
            32 * a4 * pow(a5, 2) * c1 * d1 * d4 - 6 * pow(a0, 2) * a5 * c5 * d0 * d5 -
            6 * pow(a0, 2) * b5 * c0 * c5 * d5 - 32 * pow(a1, 2) * a2 * c5 * d2 * d5 +
            32 * pow(a1, 2) * a5 * c2 * d2 * d5 - 32 * pow(a1, 2) * b2 * c2 * c5 * d5 +
            32 * pow(a1, 2) * b5 * c2 * c5 * d2 - 8 * pow(a2, 2) * a3 * c5 * d0 * d5 +
            8 * pow(a2, 2) * a5 * c0 * d3 * d5 + 8 * pow(a2, 2) * a5 * c3 * d0 * d5 +
            8 * pow(a2, 2) * a5 * c5 * d0 * d3 - 8 * pow(a2, 2) * b0 * c3 * c5 * d5 -
            8 * pow(a2, 2) * b3 * c0 * c5 * d5 + 8 * pow(a2, 2) * b5 * c0 * c3 * d5 +
            8 * pow(a2, 2) * b5 * c0 * c5 * d3 + 8 * pow(a2, 2) * b5 * c3 * c5 * d0 +
            32 * pow(a3, 2) * a4 * c2 * d2 * d4 + 8 * pow(a3, 2) * a5 * c1 * d1 * d5 -
            16 * pow(a3, 2) * a5 * c1 * d2 * d4 - 16 * pow(a3, 2) * a5 * c2 * d1 * d4 +
            8 * pow(a3, 2) * a5 * c2 * d2 * d3 - 16 * pow(a3, 2) * a5 * c4 * d1 * d2 -
            8 * pow(a3, 2) * b1 * c1 * c5 * d5 + 16 * pow(a3, 2) * b2 * c1 * c4 * d5 +
            16 * pow(a3, 2) * b2 * c1 * c5 * d4 + 8 * pow(a3, 2) * b2 * c2 * c3 * d5 -
            32 * pow(a3, 2) * b2 * c2 * c4 * d4 + 8 * pow(a3, 2) * b2 * c2 * c5 * d3 +
            8 * pow(a3, 2) * b2 * c3 * c5 * d2 + 16 * pow(a3, 2) * b2 * c4 * c5 * d1 -
            24 * pow(a3, 2) * b3 * c2 * c5 * d2 + 32 * pow(a3, 2) * b4 * c2 * c4 * d2 -
            16 * pow(a3, 2) * b5 * c1 * c2 * d4 - 16 * pow(a3, 2) * b5 * c1 * c4 * d2 +
            8 * pow(a3, 2) * b5 * c1 * c5 * d1 + 8 * pow(a3, 2) * b5 * c2 * c3 * d2 -
            16 * pow(a3, 2) * b5 * c2 * c4 * d1 - 8 * pow(a4, 2) * a5 * c3 * d0 * d3 -
            8 * pow(a4, 2) * b0 * c3 * c5 * d3 + 8 * pow(a4, 2) * b3 * c0 * c3 * d5 +
            8 * pow(a4, 2) * b3 * c0 * c5 * d3 + 8 * pow(a4, 2) * b3 * c3 * c5 * d0 -
            8 * pow(a4, 2) * b5 * c0 * c3 * d3 - 8 * pow(a5, 2) * b1 * c1 * c3 * d5 +
            32 * pow(a5, 2) * b1 * c1 * c4 * d4 - 8 * pow(a5, 2) * b1 * c1 * c5 * d3 -
            16 * pow(a5, 2) * b1 * c2 * c3 * d4 - 16 * pow(a5, 2) * b1 * c2 * c4 * d3 -
            16 * pow(a5, 2) * b1 * c3 * c4 * d2 - 8 * pow(a5, 2) * b1 * c3 * c5 * d1 +
            8 * pow(a5, 2) * b2 * c2 * c3 * d3 + 16 * pow(a5, 2) * b3 * c1 * c2 * d4 +
            16 * pow(a5, 2) * b3 * c1 * c4 * d2 - 8 * pow(a5, 2) * b3 * c1 * c5 * d1 -
            8 * pow(a5, 2) * b3 * c2 * c3 * d2 + 16 * pow(a5, 2) * b3 * c2 * c4 * d1 -
            32 * pow(a5, 2) * b4 * c1 * c4 * d1 + 24 * pow(a5, 2) * b5 * c1 * c3 * d1 +
            8 * a0 * pow(a3, 2) * c4 * d4 * d5 - 6 * a0 * pow(a3, 2) * c5 * d3 * d5 +
            6 * a0 * pow(a5, 2) * c3 * d3 * d5 - 8 * a0 * pow(a5, 2) * c4 * d3 * d4 -
            32 * a1 * pow(a4, 2) * c5 * d1 * d5 + 6 * a3 * pow(a5, 2) * c0 * d3 * d5 +
            6 * a3 * pow(a5, 2) * c3 * d0 * d5 - 8 * a3 * pow(a5, 2) * c4 * d0 * d4 +
            6 * a3 * pow(a5, 2) * c5 * d0 * d3 + 8 * a4 * pow(a5, 2) * c0 * d3 * d4 +
            8 * a4 * pow(a5, 2) * c3 * d0 * d4 + 8 * a4 * pow(a5, 2) * c4 * d0 * d3 -
            16 * pow(a0, 2) * a3 * c4 * d4 * d5 + 12 * pow(a0, 2) * a3 * c5 * d3 * d5 -
            12 * pow(a0, 2) * a5 * c3 * d3 * d5 + 16 * pow(a0, 2) * a5 * c4 * d3 * d4 +
            12 * pow(a0, 2) * b3 * c3 * c5 * d5 - 16 * pow(a0, 2) * b3 * c4 * c5 * d4 +
            16 * pow(a0, 2) * b5 * c3 * c4 * d4 - 12 * pow(a0, 2) * b5 * c3 * c5 * d3 -
            8 * pow(a1, 2) * a5 * c5 * d0 * d5 - 8 * pow(a1, 2) * b5 * c0 * c5 * d5 -
            8 * pow(a2, 2) * a3 * c3 * d3 * d5 + 32 * pow(a2, 2) * a3 * c4 * d3 * d4 -
            32 * pow(a2, 2) * a4 * c3 * d3 * d4 + 32 * pow(a2, 2) * b3 * c3 * c4 * d4 -
            8 * pow(a2, 2) * b3 * c3 * c5 * d3 - 32 * pow(a2, 2) * b4 * c3 * c4 * d3 -
            8 * pow(a3, 2) * a4 * c0 * d4 * d5 - 8 * pow(a3, 2) * a4 * c4 * d0 * d5 -
            8 * pow(a3, 2) * a4 * c5 * d0 * d4 - 6 * pow(a3, 2) * a5 * c0 * d3 * d5 -
            6 * pow(a3, 2) * a5 * c3 * d0 * d5 + 8 * pow(a3, 2) * a5 * c4 * d0 * d4 -
            6 * pow(a3, 2) * a5 * c5 * d0 * d3 - 6 * pow(a3, 2) * b0 * c3 * c5 * d5 +
            8 * pow(a3, 2) * b0 * c4 * c5 * d4 + 18 * pow(a3, 2) * b3 * c0 * c5 * d5 -
            8 * pow(a3, 2) * b4 * c0 * c4 * d5 - 8 * pow(a3, 2) * b4 * c0 * c5 * d4 -
            8 * pow(a3, 2) * b4 * c4 * c5 * d0 - 6 * pow(a3, 2) * b5 * c0 * c3 * d5 +
            8 * pow(a3, 2) * b5 * c0 * c4 * d4 - 6 * pow(a3, 2) * b5 * c0 * c5 * d3 -
            6 * pow(a3, 2) * b5 * c3 * c5 * d0 + 32 * pow(a4, 2) * a5 * c1 * d1 * d5 -
            32 * pow(a4, 2) * b1 * c1 * c5 * d5 + 32 * pow(a4, 2) * b5 * c1 * c5 * d1 -
            8 * pow(a5, 2) * b0 * c3 * c4 * d4 + 6 * pow(a5, 2) * b0 * c3 * c5 * d3 +
            6 * pow(a5, 2) * b3 * c0 * c3 * d5 - 8 * pow(a5, 2) * b3 * c0 * c4 * d4 +
            6 * pow(a5, 2) * b3 * c0 * c5 * d3 + 6 * pow(a5, 2) * b3 * c3 * c5 * d0 +
            8 * pow(a5, 2) * b4 * c0 * c3 * d4 + 8 * pow(a5, 2) * b4 * c0 * c4 * d3 +
            8 * pow(a5, 2) * b4 * c3 * c4 * d0 - 18 * pow(a5, 2) * b5 * c0 * c3 * d3 +
            8 * a0 * pow(a4, 2) * c5 * d3 * d5 - 8 * a2 * pow(a3, 2) * c5 * d2 * d5 +
            8 * a3 * pow(a4, 2) * c5 * d0 * d5 + 8 * pow(a1, 2) * a3 * c5 * d3 * d5 -
            8 * pow(a1, 2) * a5 * c3 * d3 * d5 + 8 * pow(a1, 2) * b3 * c3 * c5 * d5 -
            8 * pow(a1, 2) * b5 * c3 * c5 * d3 + 8 * pow(a3, 2) * a5 * c2 * d2 * d5 -
            8 * pow(a3, 2) * b2 * c2 * c5 * d5 + 8 * pow(a3, 2) * b5 * c2 * c5 * d2 -
            8 * pow(a4, 2) * a5 * c0 * d3 * d5 - 8 * pow(a4, 2) * a5 * c3 * d0 * d5 -
            8 * pow(a4, 2) * a5 * c5 * d0 * d3 + 8 * pow(a4, 2) * b0 * c3 * c5 * d5 +
            8 * pow(a4, 2) * b3 * c0 * c5 * d5 - 8 * pow(a4, 2) * b5 * c0 * c3 * d5 -
            8 * pow(a4, 2) * b5 * c0 * c5 * d3 - 8 * pow(a4, 2) * b5 * c3 * c5 * d0 +
            8 * pow(a0, 2) * a4 * c5 * d4 * d5 - 8 * pow(a0, 2) * a5 * c4 * d4 * d5 +
            6 * pow(a0, 2) * a5 * c5 * d3 * d5 + 8 * pow(a0, 2) * b4 * c4 * c5 * d5 +
            6 * pow(a0, 2) * b5 * c3 * c5 * d5 - 8 * pow(a0, 2) * b5 * c4 * c5 * d4 +
            8 * pow(a2, 2) * a3 * c5 * d3 * d5 - 8 * pow(a2, 2) * a5 * c3 * d3 * d5 +
            8 * pow(a2, 2) * b3 * c3 * c5 * d5 - 8 * pow(a2, 2) * b5 * c3 * c5 * d3 -
            6 * pow(a3, 2) * a5 * c5 * d0 * d5 - 6 * pow(a3, 2) * b5 * c0 * c5 * d5 -
            6 * a3 * pow(a5, 2) * c3 * d3 * d5 + 8 * a3 * pow(a5, 2) * c4 * d3 * d4 -
            8 * a4 * pow(a5, 2) * c3 * d3 * d4 + 32 * pow(a1, 2) * a4 * c5 * d4 * d5 -
            32 * pow(a1, 2) * a5 * c4 * d4 * d5 + 8 * pow(a1, 2) * a5 * c5 * d3 * d5 +
            32 * pow(a1, 2) * b4 * c4 * c5 * d5 + 8 * pow(a1, 2) * b5 * c3 * c5 * d5 -
            32 * pow(a1, 2) * b5 * c4 * c5 * d4 + 8 * pow(a5, 2) * b3 * c3 * c4 * d4 -
            6 * pow(a5, 2) * b3 * c3 * c5 * d3 - 8 * pow(a5, 2) * b4 * c3 * c4 * d3 -
            8 * a3 * pow(a4, 2) * c5 * d3 * d5 + 8 * pow(a4, 2) * a5 * c3 * d3 * d5 -
            8 * pow(a4, 2) * b3 * c3 * c5 * d5 + 8 * pow(a4, 2) * b5 * c3 * c5 * d3 +
            8 * pow(a3, 2) * a4 * c5 * d4 * d5 - 8 * pow(a3, 2) * a5 * c4 * d4 * d5 +
            6 * pow(a3, 2) * a5 * c5 * d3 * d5 + 8 * pow(a3, 2) * b4 * c4 * c5 * d5 +
            6 * pow(a3, 2) * b5 * c3 * c5 * d5 - 8 * pow(a3, 2) * b5 * c4 * c5 * d4 + 16 * a0 * a1 * b0 * c1 * c3 * d3 -
            16 * a0 * a1 * b1 * c0 * c3 * d3 - 16 * a0 * a3 * b0 * c1 * c3 * d1 + 16 * a0 * a3 * b3 * c0 * c1 * d1 +
            16 * a1 * a3 * b1 * c0 * c3 * d0 - 16 * a1 * a3 * b3 * c0 * c1 * d0 + 12 * a0 * a3 * b0 * c0 * c3 * d3 -
            12 * a0 * a3 * b3 * c0 * c3 * d0 + 16 * a0 * a1 * a3 * c0 * d2 * d4 + 16 * a0 * a1 * a3 * c2 * d0 * d4 +
            16 * a0 * a1 * a3 * c4 * d0 * d2 - 16 * a0 * a1 * a4 * c0 * d2 * d3 - 16 * a0 * a1 * a4 * c2 * d0 * d3 -
            16 * a0 * a1 * a4 * c3 * d0 * d2 - 16 * a0 * a1 * b0 * c1 * c3 * d5 + 64 * a0 * a1 * b0 * c1 * c4 * d4 -
            16 * a0 * a1 * b0 * c1 * c5 * d3 - 16 * a0 * a1 * b0 * c3 * c5 * d1 + 16 * a0 * a1 * b1 * c0 * c3 * d5 -
            64 * a0 * a1 * b1 * c0 * c4 * d4 + 16 * a0 * a1 * b1 * c0 * c5 * d3 + 16 * a0 * a1 * b1 * c3 * c5 * d0 +
            16 * a0 * a1 * b3 * c0 * c2 * d4 + 16 * a0 * a1 * b3 * c0 * c4 * d2 + 16 * a0 * a1 * b3 * c2 * c4 * d0 -
            16 * a0 * a1 * b4 * c0 * c2 * d3 - 16 * a0 * a1 * b4 * c0 * c3 * d2 - 16 * a0 * a1 * b4 * c2 * c3 * d0 +
            16 * a0 * a2 * a3 * c0 * d1 * d4 + 16 * a0 * a2 * a3 * c1 * d0 * d4 + 16 * a0 * a2 * a3 * c4 * d0 * d1 -
            16 * a0 * a2 * a4 * c0 * d1 * d3 - 16 * a0 * a2 * a4 * c1 * d0 * d3 - 16 * a0 * a2 * a4 * c3 * d0 * d1 -
            16 * a0 * a2 * b0 * c2 * c3 * d3 + 16 * a0 * a2 * b2 * c0 * c3 * d3 + 16 * a0 * a2 * b3 * c0 * c1 * d4 +
            16 * a0 * a2 * b3 * c0 * c4 * d1 + 16 * a0 * a2 * b3 * c1 * c4 * d0 - 16 * a0 * a2 * b4 * c0 * c1 * d3 -
            16 * a0 * a2 * b4 * c0 * c3 * d1 - 16 * a0 * a2 * b4 * c1 * c3 * d0 - 16 * a0 * a3 * a5 * c1 * d0 * d1 -
            32 * a0 * a3 * b0 * c1 * c2 * d4 - 32 * a0 * a3 * b0 * c1 * c4 * d2 + 16 * a0 * a3 * b0 * c1 * c5 * d1 +
            16 * a0 * a3 * b0 * c2 * c3 * d2 - 32 * a0 * a3 * b0 * c2 * c4 * d1 + 16 * a0 * a3 * b1 * c0 * c2 * d4 +
            16 * a0 * a3 * b1 * c0 * c4 * d2 + 16 * a0 * a3 * b1 * c2 * c4 * d0 + 16 * a0 * a3 * b2 * c0 * c1 * d4 +
            16 * a0 * a3 * b2 * c0 * c4 * d1 + 16 * a0 * a3 * b2 * c1 * c4 * d0 - 16 * a0 * a3 * b3 * c0 * c2 * d2 -
            16 * a0 * a3 * b5 * c0 * c1 * d1 + 32 * a0 * a4 * b0 * c1 * c2 * d3 + 32 * a0 * a4 * b0 * c1 * c3 * d2 -
            64 * a0 * a4 * b0 * c1 * c4 * d1 + 32 * a0 * a4 * b0 * c2 * c3 * d1 - 16 * a0 * a4 * b1 * c0 * c2 * d3 -
            16 * a0 * a4 * b1 * c0 * c3 * d2 - 16 * a0 * a4 * b1 * c2 * c3 * d0 - 16 * a0 * a4 * b2 * c0 * c1 * d3 -
            16 * a0 * a4 * b2 * c0 * c3 * d1 - 16 * a0 * a4 * b2 * c1 * c3 * d0 + 64 * a0 * a4 * b4 * c0 * c1 * d1 +
            16 * a0 * a5 * b0 * c1 * c3 * d1 - 16 * a0 * a5 * b3 * c0 * c1 * d1 - 16 * a0 * b0 * b1 * c1 * c3 * c5 -
            32 * a0 * b0 * b3 * c1 * c2 * c4 + 32 * a0 * b0 * b4 * c1 * c2 * c3 + 16 * a0 * b1 * b3 * c0 * c2 * c4 -
            16 * a0 * b1 * b4 * c0 * c2 * c3 + 16 * a0 * b2 * b3 * c0 * c1 * c4 - 16 * a0 * b2 * b4 * c0 * c1 * c3 -
            32 * a1 * a2 * a3 * c0 * d0 * d4 + 32 * a1 * a2 * a4 * c0 * d0 * d3 - 32 * a1 * a2 * b3 * c0 * c4 * d0 +
            32 * a1 * a2 * b4 * c0 * c3 * d0 + 16 * a1 * a3 * a5 * c0 * d0 * d1 + 16 * a1 * a3 * b0 * c0 * c2 * d4 +
            16 * a1 * a3 * b0 * c0 * c4 * d2 + 16 * a1 * a3 * b0 * c2 * c4 * d0 - 16 * a1 * a3 * b1 * c0 * c5 * d0 -
            32 * a1 * a3 * b2 * c0 * c4 * d0 + 16 * a1 * a3 * b5 * c0 * c1 * d0 - 16 * a1 * a4 * b0 * c0 * c2 * d3 -
            16 * a1 * a4 * b0 * c0 * c3 * d2 - 16 * a1 * a4 * b0 * c2 * c3 * d0 + 64 * a1 * a4 * b1 * c0 * c4 * d0 +
            32 * a1 * a4 * b2 * c0 * c3 * d0 - 64 * a1 * a4 * b4 * c0 * c1 * d0 - 16 * a1 * a5 * b1 * c0 * c3 * d0 +
            16 * a1 * a5 * b3 * c0 * c1 * d0 + 16 * a1 * b0 * b1 * c0 * c3 * c5 + 16 * a1 * b0 * b3 * c0 * c2 * c4 -
            16 * a1 * b0 * b4 * c0 * c2 * c3 + 16 * a2 * a3 * b0 * c0 * c1 * d4 + 16 * a2 * a3 * b0 * c0 * c4 * d1 +
            16 * a2 * a3 * b0 * c1 * c4 * d0 - 32 * a2 * a3 * b1 * c0 * c4 * d0 - 16 * a2 * a3 * b2 * c0 * c3 * d0 +
            16 * a2 * a3 * b3 * c0 * c2 * d0 - 16 * a2 * a4 * b0 * c0 * c1 * d3 - 16 * a2 * a4 * b0 * c0 * c3 * d1 -
            16 * a2 * a4 * b0 * c1 * c3 * d0 + 32 * a2 * a4 * b1 * c0 * c3 * d0 + 16 * a2 * b0 * b3 * c0 * c1 * c4 -
            16 * a2 * b0 * b4 * c0 * c1 * c3 - 16 * a3 * a5 * b0 * c0 * c1 * d1 + 16 * a3 * a5 * b1 * c0 * c1 * d0 +
            16 * a3 * b0 * b1 * c0 * c2 * c4 + 16 * a3 * b0 * b2 * c0 * c1 * c4 - 16 * a4 * b0 * b1 * c0 * c2 * c3 -
            16 * a4 * b0 * b2 * c0 * c1 * c3 - 16 * a0 * a3 * a4 * c0 * d0 * d4 + 12 * a0 * a3 * a5 * c0 * d0 * d3 -
            12 * a0 * a3 * b0 * c0 * c3 * d5 + 16 * a0 * a3 * b0 * c0 * c4 * d4 - 12 * a0 * a3 * b0 * c0 * c5 * d3 -
            12 * a0 * a3 * b0 * c3 * c5 * d0 + 12 * a0 * a3 * b3 * c0 * c5 * d0 - 16 * a0 * a3 * b4 * c0 * c4 * d0 +
            12 * a0 * a3 * b5 * c0 * c3 * d0 + 16 * a0 * a4 * b0 * c0 * c3 * d4 + 16 * a0 * a4 * b0 * c0 * c4 * d3 +
            16 * a0 * a4 * b0 * c3 * c4 * d0 - 16 * a0 * a4 * b3 * c0 * c4 * d0 - 16 * a0 * a4 * b4 * c0 * c3 * d0 -
            12 * a0 * a5 * b0 * c0 * c3 * d3 + 12 * a0 * a5 * b3 * c0 * c3 * d0 - 12 * a0 * b0 * b3 * c0 * c3 * c5 +
            16 * a0 * b0 * b4 * c0 * c3 * c4 - 16 * a3 * a4 * b0 * c0 * c4 * d0 + 12 * a3 * a5 * b0 * c0 * c3 * d0 +
            16 * a0 * a1 * a4 * c0 * d2 * d5 + 16 * a0 * a1 * a4 * c2 * d0 * d5 + 16 * a0 * a1 * a4 * c5 * d0 * d2 -
            16 * a0 * a1 * a5 * c0 * d2 * d4 - 16 * a0 * a1 * a5 * c2 * d0 * d4 - 16 * a0 * a1 * a5 * c4 * d0 * d2 +
            16 * a0 * a1 * b0 * c1 * c5 * d5 - 16 * a0 * a1 * b1 * c0 * c5 * d5 + 16 * a0 * a1 * b4 * c0 * c2 * d5 +
            16 * a0 * a1 * b4 * c0 * c5 * d2 + 16 * a0 * a1 * b4 * c2 * c5 * d0 - 16 * a0 * a1 * b5 * c0 * c2 * d4 -
            16 * a0 * a1 * b5 * c0 * c4 * d2 - 16 * a0 * a1 * b5 * c2 * c4 * d0 + 16 * a0 * a2 * a4 * c0 * d1 * d5 +
            16 * a0 * a2 * a4 * c1 * d0 * d5 + 16 * a0 * a2 * a4 * c5 * d0 * d1 - 16 * a0 * a2 * a5 * c0 * d1 * d4 -
            16 * a0 * a2 * a5 * c1 * d0 * d4 - 16 * a0 * a2 * a5 * c4 * d0 * d1 + 16 * a0 * a2 * b0 * c2 * c3 * d5 -
            64 * a0 * a2 * b0 * c2 * c4 * d4 + 16 * a0 * a2 * b0 * c2 * c5 * d3 + 16 * a0 * a2 * b0 * c3 * c5 * d2 -
            16 * a0 * a2 * b2 * c0 * c3 * d5 + 64 * a0 * a2 * b2 * c0 * c4 * d4 - 16 * a0 * a2 * b2 * c0 * c5 * d3 -
            16 * a0 * a2 * b2 * c3 * c5 * d0 + 16 * a0 * a2 * b4 * c0 * c1 * d5 + 16 * a0 * a2 * b4 * c0 * c5 * d1 +
            16 * a0 * a2 * b4 * c1 * c5 * d0 - 16 * a0 * a2 * b5 * c0 * c1 * d4 - 16 * a0 * a2 * b5 * c0 * c4 * d1 -
            16 * a0 * a2 * b5 * c1 * c4 * d0 + 16 * a0 * a3 * a5 * c2 * d0 * d2 - 16 * a0 * a3 * b0 * c2 * c5 * d2 +
            16 * a0 * a3 * b5 * c0 * c2 * d2 - 32 * a0 * a4 * b0 * c1 * c2 * d5 - 32 * a0 * a4 * b0 * c1 * c5 * d2 +
            64 * a0 * a4 * b0 * c2 * c4 * d2 - 32 * a0 * a4 * b0 * c2 * c5 * d1 + 16 * a0 * a4 * b1 * c0 * c2 * d5 +
            16 * a0 * a4 * b1 * c0 * c5 * d2 + 16 * a0 * a4 * b1 * c2 * c5 * d0 + 16 * a0 * a4 * b2 * c0 * c1 * d5 +
            16 * a0 * a4 * b2 * c0 * c5 * d1 + 16 * a0 * a4 * b2 * c1 * c5 * d0 - 64 * a0 * a4 * b4 * c0 * c2 * d2 +
            32 * a0 * a5 * b0 * c1 * c2 * d4 + 32 * a0 * a5 * b0 * c1 * c4 * d2 - 16 * a0 * a5 * b0 * c1 * c5 * d1 -
            16 * a0 * a5 * b0 * c2 * c3 * d2 + 32 * a0 * a5 * b0 * c2 * c4 * d1 - 16 * a0 * a5 * b1 * c0 * c2 * d4 -
            16 * a0 * a5 * b1 * c0 * c4 * d2 - 16 * a0 * a5 * b1 * c2 * c4 * d0 - 16 * a0 * a5 * b2 * c0 * c1 * d4 -
            16 * a0 * a5 * b2 * c0 * c4 * d1 - 16 * a0 * a5 * b2 * c1 * c4 * d0 + 16 * a0 * a5 * b3 * c0 * c2 * d2 +
            16 * a0 * a5 * b5 * c0 * c1 * d1 + 16 * a0 * b0 * b2 * c2 * c3 * c5 - 32 * a0 * b0 * b4 * c1 * c2 * c5 +
            32 * a0 * b0 * b5 * c1 * c2 * c4 + 16 * a0 * b1 * b4 * c0 * c2 * c5 - 16 * a0 * b1 * b5 * c0 * c2 * c4 +
            16 * a0 * b2 * b4 * c0 * c1 * c5 - 16 * a0 * b2 * b5 * c0 * c1 * c4 - 32 * a1 * a2 * a4 * c0 * d0 * d5 +
            32 * a1 * a2 * a5 * c0 * d0 * d4 - 64 * a1 * a2 * b1 * c2 * c3 * d3 + 64 * a1 * a2 * b2 * c1 * c3 * d3 -
            32 * a1 * a2 * b4 * c0 * c5 * d0 + 32 * a1 * a2 * b5 * c0 * c4 * d0 + 64 * a1 * a3 * b1 * c2 * c3 * d2 -
            64 * a1 * a3 * b3 * c1 * c2 * d2 + 16 * a1 * a4 * b0 * c0 * c2 * d5 + 16 * a1 * a4 * b0 * c0 * c5 * d2 +
            16 * a1 * a4 * b0 * c2 * c5 * d0 - 32 * a1 * a4 * b2 * c0 * c5 * d0 - 16 * a1 * a5 * b0 * c0 * c2 * d4 -
            16 * a1 * a5 * b0 * c0 * c4 * d2 - 16 * a1 * a5 * b0 * c2 * c4 * d0 + 16 * a1 * a5 * b1 * c0 * c5 * d0 +
            32 * a1 * a5 * b2 * c0 * c4 * d0 - 16 * a1 * a5 * b5 * c0 * c1 * d0 + 16 * a1 * b0 * b4 * c0 * c2 * c5 -
            16 * a1 * b0 * b5 * c0 * c2 * c4 - 16 * a2 * a3 * a5 * c0 * d0 * d2 + 16 * a2 * a3 * b2 * c0 * c5 * d0 -
            64 * a2 * a3 * b2 * c1 * c3 * d1 + 64 * a2 * a3 * b3 * c1 * c2 * d1 - 16 * a2 * a3 * b5 * c0 * c2 * d0 +
            16 * a2 * a4 * b0 * c0 * c1 * d5 + 16 * a2 * a4 * b0 * c0 * c5 * d1 + 16 * a2 * a4 * b0 * c1 * c5 * d0 -
            32 * a2 * a4 * b1 * c0 * c5 * d0 - 64 * a2 * a4 * b2 * c0 * c4 * d0 + 64 * a2 * a4 * b4 * c0 * c2 * d0 -
            16 * a2 * a5 * b0 * c0 * c1 * d4 - 16 * a2 * a5 * b0 * c0 * c4 * d1 - 16 * a2 * a5 * b0 * c1 * c4 * d0 +
            32 * a2 * a5 * b1 * c0 * c4 * d0 + 16 * a2 * a5 * b2 * c0 * c3 * d0 - 16 * a2 * a5 * b3 * c0 * c2 * d0 -
            16 * a2 * b0 * b2 * c0 * c3 * c5 + 16 * a2 * b0 * b4 * c0 * c1 * c5 - 16 * a2 * b0 * b5 * c0 * c1 * c4 +
            16 * a3 * a5 * b0 * c0 * c2 * d2 - 16 * a3 * a5 * b2 * c0 * c2 * d0 + 16 * a4 * b0 * b1 * c0 * c2 * c5 +
            16 * a4 * b0 * b2 * c0 * c1 * c5 - 16 * a5 * b0 * b1 * c0 * c2 * c4 - 16 * a5 * b0 * b2 * c0 * c1 * c4 -
            16 * a0 * a1 * a3 * c2 * d3 * d4 - 16 * a0 * a1 * a3 * c3 * d2 * d4 - 16 * a0 * a1 * a3 * c4 * d2 * d3 +
            32 * a0 * a1 * a4 * c3 * d2 * d3 - 16 * a0 * a1 * a5 * c3 * d1 * d3 + 16 * a0 * a1 * b1 * c3 * c5 * d3 -
            16 * a0 * a1 * b3 * c2 * c3 * d4 - 16 * a0 * a1 * b3 * c2 * c4 * d3 - 16 * a0 * a1 * b3 * c3 * c4 * d2 +
            32 * a0 * a1 * b4 * c2 * c3 * d3 - 16 * a0 * a1 * b5 * c1 * c3 * d3 + 16 * a0 * a2 * a3 * c3 * d2 * d3 +
            16 * a0 * a2 * b3 * c2 * c3 * d3 - 16 * a0 * a3 * a4 * c1 * d2 * d3 - 16 * a0 * a3 * a4 * c2 * d1 * d3 -
            16 * a0 * a3 * a4 * c3 * d1 * d2 - 12 * a0 * a3 * a5 * c0 * d0 * d5 + 16 * a0 * a3 * a5 * c1 * d1 * d3 +
            12 * a0 * a3 * b0 * c0 * c5 * d5 - 16 * a0 * a3 * b1 * c2 * c3 * d4 - 16 * a0 * a3 * b1 * c2 * c4 * d3 -
            16 * a0 * a3 * b1 * c3 * c4 * d2 + 16 * a0 * a3 * b2 * c2 * c3 * d3 + 32 * a0 * a3 * b3 * c1 * c2 * d4 +
            32 * a0 * a3 * b3 * c1 * c4 * d2 - 16 * a0 * a3 * b3 * c1 * c5 * d1 - 16 * a0 * a3 * b3 * c2 * c3 * d2 +
            32 * a0 * a3 * b3 * c2 * c4 * d1 - 16 * a0 * a3 * b4 * c1 * c2 * d3 - 16 * a0 * a3 * b4 * c1 * c3 * d2 -
            16 * a0 * a3 * b4 * c2 * c3 * d1 - 12 * a0 * a3 * b5 * c0 * c5 * d0 + 16 * a0 * a3 * b5 * c1 * c3 * d1 +
            16 * a0 * a4 * a5 * c0 * d0 * d4 - 16 * a0 * a4 * b0 * c0 * c4 * d5 - 16 * a0 * a4 * b0 * c0 * c5 * d4 -
            16 * a0 * a4 * b0 * c4 * c5 * d0 + 32 * a0 * a4 * b1 * c2 * c3 * d3 - 16 * a0 * a4 * b3 * c1 * c2 * d3 -
            16 * a0 * a4 * b3 * c1 * c3 * d2 - 16 * a0 * a4 * b3 * c2 * c3 * d1 + 16 * a0 * a4 * b4 * c0 * c5 * d0 +
            16 * a0 * a4 * b5 * c0 * c4 * d0 + 12 * a0 * a5 * b0 * c0 * c3 * d5 - 16 * a0 * a5 * b0 * c0 * c4 * d4 +
            12 * a0 * a5 * b0 * c0 * c5 * d3 + 12 * a0 * a5 * b0 * c3 * c5 * d0 - 16 * a0 * a5 * b1 * c1 * c3 * d3 -
            12 * a0 * a5 * b3 * c0 * c5 * d0 + 16 * a0 * a5 * b3 * c1 * c3 * d1 + 16 * a0 * a5 * b4 * c0 * c4 * d0 -
            12 * a0 * a5 * b5 * c0 * c3 * d0 - 16 * a0 * b0 * b4 * c0 * c4 * c5 + 12 * a0 * b0 * b5 * c0 * c3 * c5 -
            16 * a0 * b1 * b3 * c2 * c3 * c4 - 16 * a0 * b3 * b4 * c1 * c2 * c3 + 16 * a1 * a2 * a3 * c0 * d3 * d4 +
            16 * a1 * a2 * a3 * c3 * d0 * d4 + 16 * a1 * a2 * a3 * c4 * d0 * d3 - 32 * a1 * a2 * a4 * c3 * d0 * d3 +
            16 * a1 * a2 * b3 * c0 * c3 * d4 + 16 * a1 * a2 * b3 * c0 * c4 * d3 + 16 * a1 * a2 * b3 * c3 * c4 * d0 -
            32 * a1 * a2 * b4 * c0 * c3 * d3 - 16 * a1 * a3 * b0 * c2 * c3 * d4 - 16 * a1 * a3 * b0 * c2 * c4 * d3 -
            16 * a1 * a3 * b0 * c3 * c4 * d2 - 16 * a1 * a3 * b1 * c0 * c3 * d5 - 16 * a1 * a3 * b1 * c0 * c5 * d3 -
            16 * a1 * a3 * b1 * c3 * c5 * d0 + 16 * a1 * a3 * b2 * c0 * c3 * d4 + 16 * a1 * a3 * b2 * c0 * c4 * d3 +
            16 * a1 * a3 * b2 * c3 * c4 * d0 + 16 * a1 * a3 * b3 * c0 * c1 * d5 + 16 * a1 * a3 * b3 * c0 * c5 * d1 +
            16 * a1 * a3 * b3 * c1 * c5 * d0 + 32 * a1 * a4 * b0 * c2 * c3 * d3 - 32 * a1 * a4 * b2 * c0 * c3 * d3 -
            16 * a1 * a5 * b0 * c1 * c3 * d3 + 16 * a1 * a5 * b1 * c0 * c3 * d3 - 16 * a1 * b0 * b3 * c2 * c3 * c4 -
            16 * a1 * b1 * b3 * c0 * c3 * c5 + 16 * a1 * b2 * b3 * c0 * c3 * c4 + 16 * a2 * a3 * a4 * c0 * d1 * d3 +
            16 * a2 * a3 * a4 * c1 * d0 * d3 + 16 * a2 * a3 * a4 * c3 * d0 * d1 + 16 * a2 * a3 * b0 * c2 * c3 * d3 +
            16 * a2 * a3 * b1 * c0 * c3 * d4 + 16 * a2 * a3 * b1 * c0 * c4 * d3 + 16 * a2 * a3 * b1 * c3 * c4 * d0 +
            16 * a2 * a3 * b2 * c0 * c3 * d3 - 32 * a2 * a3 * b3 * c0 * c1 * d4 - 16 * a2 * a3 * b3 * c0 * c2 * d3 -
            16 * a2 * a3 * b3 * c0 * c3 * d2 - 32 * a2 * a3 * b3 * c0 * c4 * d1 - 32 * a2 * a3 * b3 * c1 * c4 * d0 -
            16 * a2 * a3 * b3 * c2 * c3 * d0 + 16 * a2 * a3 * b4 * c0 * c1 * d3 + 16 * a2 * a3 * b4 * c0 * c3 * d1 +
            16 * a2 * a3 * b4 * c1 * c3 * d0 - 32 * a2 * a4 * b1 * c0 * c3 * d3 + 16 * a2 * a4 * b3 * c0 * c1 * d3 +
            16 * a2 * a4 * b3 * c0 * c3 * d1 + 16 * a2 * a4 * b3 * c1 * c3 * d0 + 16 * a2 * b1 * b3 * c0 * c3 * c4 +
            16 * a2 * b3 * b4 * c0 * c1 * c3 - 16 * a3 * a4 * b0 * c1 * c2 * d3 - 16 * a3 * a4 * b0 * c1 * c3 * d2 -
            16 * a3 * a4 * b0 * c2 * c3 * d1 + 16 * a3 * a4 * b2 * c0 * c1 * d3 + 16 * a3 * a4 * b2 * c0 * c3 * d1 +
            16 * a3 * a4 * b2 * c1 * c3 * d0 - 12 * a3 * a5 * b0 * c0 * c5 * d0 + 16 * a3 * a5 * b0 * c1 * c3 * d1 -
            16 * a3 * a5 * b3 * c0 * c1 * d1 - 16 * a3 * b0 * b1 * c2 * c3 * c4 + 32 * a3 * b0 * b3 * c1 * c2 * c4 -
            16 * a3 * b0 * b4 * c1 * c2 * c3 + 16 * a3 * b1 * b2 * c0 * c3 * c4 + 16 * a3 * b1 * b3 * c0 * c1 * c5 -
            32 * a3 * b2 * b3 * c0 * c1 * c4 - 16 * a3 * b2 * b3 * c0 * c2 * c3 + 16 * a3 * b2 * b4 * c0 * c1 * c3 +
            16 * a4 * a5 * b0 * c0 * c4 * d0 - 16 * a4 * b0 * b3 * c1 * c2 * c3 + 16 * a4 * b2 * b3 * c0 * c1 * c3 -
            16 * a0 * a2 * b0 * c2 * c5 * d5 + 16 * a0 * a2 * b2 * c0 * c5 * d5 - 12 * a0 * a3 * a5 * c3 * d0 * d3 +
            16 * a0 * a3 * b0 * c3 * c4 * d4 - 12 * a0 * a3 * b0 * c3 * c5 * d3 + 12 * a0 * a3 * b3 * c0 * c3 * d5 -
            16 * a0 * a3 * b3 * c0 * c4 * d4 + 12 * a0 * a3 * b3 * c0 * c5 * d3 + 12 * a0 * a3 * b3 * c3 * c5 * d0 -
            12 * a0 * a3 * b5 * c0 * c3 * d3 - 16 * a0 * a4 * b0 * c3 * c4 * d3 + 16 * a0 * a4 * b4 * c0 * c3 * d3 +
            16 * a0 * a5 * b0 * c2 * c5 * d2 - 12 * a0 * a5 * b3 * c0 * c3 * d3 - 16 * a0 * a5 * b5 * c0 * c2 * d2 +
            64 * a1 * a2 * b1 * c2 * c3 * d5 - 256 * a1 * a2 * b1 * c2 * c4 * d4 + 64 * a1 * a2 * b1 * c2 * c5 * d3 +
            64 * a1 * a2 * b1 * c3 * c5 * d2 - 64 * a1 * a2 * b2 * c1 * c3 * d5 + 256 * a1 * a2 * b2 * c1 * c4 * d4 -
            64 * a1 * a2 * b2 * c1 * c5 * d3 - 64 * a1 * a2 * b2 * c3 * c5 * d1 + 64 * a1 * a3 * a5 * c2 * d1 * d2 -
            64 * a1 * a3 * b1 * c2 * c5 * d2 + 64 * a1 * a3 * b5 * c1 * c2 * d2 + 256 * a1 * a4 * b1 * c2 * c4 * d2 -
            256 * a1 * a4 * b4 * c1 * c2 * d2 - 64 * a1 * a5 * b1 * c2 * c3 * d2 + 64 * a1 * a5 * b3 * c1 * c2 * d2 +
            64 * a1 * b1 * b2 * c2 * c3 * c5 - 64 * a2 * a3 * a5 * c1 * d1 * d2 + 64 * a2 * a3 * b2 * c1 * c5 * d1 -
            64 * a2 * a3 * b5 * c1 * c2 * d1 - 256 * a2 * a4 * b2 * c1 * c4 * d1 + 256 * a2 * a4 * b4 * c1 * c2 * d1 -
            16 * a2 * a5 * b2 * c0 * c5 * d0 + 64 * a2 * a5 * b2 * c1 * c3 * d1 - 64 * a2 * a5 * b3 * c1 * c2 * d1 +
            16 * a2 * a5 * b5 * c0 * c2 * d0 - 64 * a2 * b1 * b2 * c1 * c3 * c5 + 16 * a3 * a4 * b3 * c0 * c4 * d0 -
            16 * a3 * a4 * b4 * c0 * c3 * d0 - 12 * a3 * a5 * b0 * c0 * c3 * d3 + 64 * a3 * a5 * b1 * c1 * c2 * d2 -
            64 * a3 * a5 * b2 * c1 * c2 * d1 + 12 * a3 * a5 * b3 * c0 * c3 * d0 + 12 * a3 * b0 * b3 * c0 * c3 * c5 -
            16 * a0 * a1 * a4 * c2 * d3 * d5 - 16 * a0 * a1 * a4 * c3 * d2 * d5 - 16 * a0 * a1 * a4 * c5 * d2 * d3 +
            16 * a0 * a1 * a5 * c1 * d3 * d5 + 16 * a0 * a1 * a5 * c2 * d3 * d4 + 16 * a0 * a1 * a5 * c3 * d1 * d5 +
            16 * a0 * a1 * a5 * c3 * d2 * d4 - 64 * a0 * a1 * a5 * c4 * d1 * d4 + 16 * a0 * a1 * a5 * c4 * d2 * d3 +
            16 * a0 * a1 * a5 * c5 * d1 * d3 - 32 * a0 * a1 * b1 * c3 * c5 * d5 + 64 * a0 * a1 * b1 * c4 * c5 * d4 -
            16 * a0 * a1 * b4 * c2 * c3 * d5 - 16 * a0 * a1 * b4 * c2 * c5 * d3 - 16 * a0 * a1 * b4 * c3 * c5 * d2 +
            16 * a0 * a1 * b5 * c1 * c3 * d5 - 64 * a0 * a1 * b5 * c1 * c4 * d4 + 16 * a0 * a1 * b5 * c1 * c5 * d3 +
            16 * a0 * a1 * b5 * c2 * c3 * d4 + 16 * a0 * a1 * b5 * c2 * c4 * d3 + 16 * a0 * a1 * b5 * c3 * c4 * d2 +
            16 * a0 * a1 * b5 * c3 * c5 * d1 - 16 * a0 * a2 * a3 * c1 * d4 * d5 - 16 * a0 * a2 * a3 * c2 * d3 * d5 -
            16 * a0 * a2 * a3 * c3 * d2 * d5 - 16 * a0 * a2 * a3 * c4 * d1 * d5 + 64 * a0 * a2 * a3 * c4 * d2 * d4 -
            16 * a0 * a2 * a3 * c5 * d1 * d4 - 16 * a0 * a2 * a3 * c5 * d2 * d3 + 16 * a0 * a2 * a4 * c1 * d3 * d5 +
            16 * a0 * a2 * a4 * c3 * d1 * d5 + 16 * a0 * a2 * a4 * c5 * d1 * d3 - 64 * a0 * a2 * b2 * c3 * c4 * d4 +
            32 * a0 * a2 * b2 * c3 * c5 * d3 - 16 * a0 * a2 * b3 * c1 * c4 * d5 - 16 * a0 * a2 * b3 * c1 * c5 * d4 -
            16 * a0 * a2 * b3 * c2 * c3 * d5 + 64 * a0 * a2 * b3 * c2 * c4 * d4 - 16 * a0 * a2 * b3 * c2 * c5 * d3 -
            16 * a0 * a2 * b3 * c3 * c5 * d2 - 16 * a0 * a2 * b3 * c4 * c5 * d1 + 16 * a0 * a2 * b4 * c1 * c3 * d5 +
            16 * a0 * a2 * b4 * c1 * c5 * d3 + 16 * a0 * a2 * b4 * c3 * c5 * d1 + 16 * a0 * a3 * a4 * c1 * d2 * d5 +
            16 * a0 * a3 * a4 * c2 * d1 * d5 - 64 * a0 * a3 * a4 * c2 * d2 * d4 + 16 * a0 * a3 * a4 * c5 * d1 * d2 -
            16 * a0 * a3 * b2 * c1 * c4 * d5 - 16 * a0 * a3 * b2 * c1 * c5 * d4 - 16 * a0 * a3 * b2 * c2 * c3 * d5 +
            64 * a0 * a3 * b2 * c2 * c4 * d4 - 16 * a0 * a3 * b2 * c2 * c5 * d3 - 16 * a0 * a3 * b2 * c3 * c5 * d2 -
            16 * a0 * a3 * b2 * c4 * c5 * d1 + 32 * a0 * a3 * b3 * c2 * c5 * d2 + 16 * a0 * a3 * b4 * c1 * c2 * d5 +
            16 * a0 * a3 * b4 * c1 * c5 * d2 - 64 * a0 * a3 * b4 * c2 * c4 * d2 + 16 * a0 * a3 * b4 * c2 * c5 * d1 +
            64 * a0 * a4 * a5 * c1 * d1 * d4 - 16 * a0 * a4 * a5 * c1 * d2 * d3 - 16 * a0 * a4 * a5 * c2 * d1 * d3 -
            16 * a0 * a4 * a5 * c3 * d1 * d2 - 16 * a0 * a4 * b1 * c2 * c3 * d5 - 16 * a0 * a4 * b1 * c2 * c5 * d3 -
            16 * a0 * a4 * b1 * c3 * c5 * d2 + 16 * a0 * a4 * b2 * c1 * c3 * d5 + 16 * a0 * a4 * b2 * c1 * c5 * d3 +
            16 * a0 * a4 * b2 * c3 * c5 * d1 + 16 * a0 * a4 * b3 * c1 * c2 * d5 + 16 * a0 * a4 * b3 * c1 * c5 * d2 -
            64 * a0 * a4 * b3 * c2 * c4 * d2 + 16 * a0 * a4 * b3 * c2 * c5 * d1 - 64 * a0 * a4 * b4 * c1 * c5 * d1 +
            64 * a0 * a4 * b4 * c2 * c3 * d2 - 16 * a0 * a4 * b5 * c1 * c2 * d3 - 16 * a0 * a4 * b5 * c1 * c3 * d2 +
            64 * a0 * a4 * b5 * c1 * c4 * d1 - 16 * a0 * a4 * b5 * c2 * c3 * d1 - 12 * a0 * a5 * b0 * c0 * c5 * d5 +
            16 * a0 * a5 * b1 * c1 * c3 * d5 - 64 * a0 * a5 * b1 * c1 * c4 * d4 + 16 * a0 * a5 * b1 * c1 * c5 * d3 +
            16 * a0 * a5 * b1 * c2 * c3 * d4 + 16 * a0 * a5 * b1 * c2 * c4 * d3 + 16 * a0 * a5 * b1 * c3 * c4 * d2 +
            16 * a0 * a5 * b1 * c3 * c5 * d1 - 16 * a0 * a5 * b4 * c1 * c2 * d3 - 16 * a0 * a5 * b4 * c1 * c3 * d2 +
            64 * a0 * a5 * b4 * c1 * c4 * d1 - 16 * a0 * a5 * b4 * c2 * c3 * d1 + 12 * a0 * a5 * b5 * c0 * c5 * d0 -
            32 * a0 * a5 * b5 * c1 * c3 * d1 - 16 * a0 * b1 * b4 * c2 * c3 * c5 + 16 * a0 * b1 * b5 * c1 * c3 * c5 +
            16 * a0 * b1 * b5 * c2 * c3 * c4 - 16 * a0 * b2 * b3 * c1 * c4 * c5 - 16 * a0 * b2 * b3 * c2 * c3 * c5 +
            16 * a0 * b2 * b4 * c1 * c3 * c5 + 16 * a0 * b3 * b4 * c1 * c2 * c5 - 16 * a0 * b4 * b5 * c1 * c2 * c3 +
            16 * a1 * a2 * a3 * c0 * d4 * d5 + 16 * a1 * a2 * a3 * c4 * d0 * d5 + 16 * a1 * a2 * a3 * c5 * d0 * d4 -
            16 * a1 * a2 * a5 * c0 * d3 * d4 - 16 * a1 * a2 * a5 * c3 * d0 * d4 - 16 * a1 * a2 * a5 * c4 * d0 * d3 +
            16 * a1 * a2 * b3 * c0 * c4 * d5 + 16 * a1 * a2 * b3 * c0 * c5 * d4 + 16 * a1 * a2 * b3 * c4 * c5 * d0 -
            16 * a1 * a2 * b5 * c0 * c3 * d4 - 16 * a1 * a2 * b5 * c0 * c4 * d3 - 16 * a1 * a2 * b5 * c3 * c4 * d0 -
            16 * a1 * a3 * a5 * c0 * d1 * d5 - 16 * a1 * a3 * a5 * c0 * d2 * d4 - 16 * a1 * a3 * a5 * c1 * d0 * d5 -
            16 * a1 * a3 * a5 * c2 * d0 * d4 - 16 * a1 * a3 * a5 * c4 * d0 * d2 - 16 * a1 * a3 * a5 * c5 * d0 * d1 +
            32 * a1 * a3 * b1 * c0 * c5 * d5 + 16 * a1 * a3 * b2 * c0 * c4 * d5 + 16 * a1 * a3 * b2 * c0 * c5 * d4 +
            16 * a1 * a3 * b2 * c4 * c5 * d0 - 16 * a1 * a3 * b5 * c0 * c1 * d5 - 16 * a1 * a3 * b5 * c0 * c2 * d4 -
            16 * a1 * a3 * b5 * c0 * c4 * d2 - 16 * a1 * a3 * b5 * c0 * c5 * d1 - 16 * a1 * a3 * b5 * c1 * c5 * d0 -
            16 * a1 * a3 * b5 * c2 * c4 * d0 + 16 * a1 * a4 * a5 * c0 * d2 * d3 + 16 * a1 * a4 * a5 * c2 * d0 * d3 +
            16 * a1 * a4 * a5 * c3 * d0 * d2 - 16 * a1 * a4 * b0 * c2 * c3 * d5 - 16 * a1 * a4 * b0 * c2 * c5 * d3 -
            16 * a1 * a4 * b0 * c3 * c5 * d2 - 64 * a1 * a4 * b1 * c0 * c4 * d5 - 64 * a1 * a4 * b1 * c0 * c5 * d4 -
            64 * a1 * a4 * b1 * c4 * c5 * d0 + 64 * a1 * a4 * b4 * c0 * c1 * d5 + 64 * a1 * a4 * b4 * c0 * c5 * d1 +
            64 * a1 * a4 * b4 * c1 * c5 * d0 + 16 * a1 * a4 * b5 * c0 * c2 * d3 + 16 * a1 * a4 * b5 * c0 * c3 * d2 +
            16 * a1 * a4 * b5 * c2 * c3 * d0 + 16 * a1 * a5 * b0 * c1 * c3 * d5 - 64 * a1 * a5 * b0 * c1 * c4 * d4 +
            16 * a1 * a5 * b0 * c1 * c5 * d3 + 16 * a1 * a5 * b0 * c2 * c3 * d4 + 16 * a1 * a5 * b0 * c2 * c4 * d3 +
            16 * a1 * a5 * b0 * c3 * c4 * d2 + 16 * a1 * a5 * b0 * c3 * c5 * d1 + 64 * a1 * a5 * b1 * c0 * c4 * d4 -
            16 * a1 * a5 * b2 * c0 * c3 * d4 - 16 * a1 * a5 * b2 * c0 * c4 * d3 - 16 * a1 * a5 * b2 * c3 * c4 * d0 -
            16 * a1 * a5 * b3 * c0 * c1 * d5 - 16 * a1 * a5 * b3 * c0 * c2 * d4 - 16 * a1 * a5 * b3 * c0 * c4 * d2 -
            16 * a1 * a5 * b3 * c0 * c5 * d1 - 16 * a1 * a5 * b3 * c1 * c5 * d0 - 16 * a1 * a5 * b3 * c2 * c4 * d0 +
            16 * a1 * a5 * b4 * c0 * c2 * d3 + 16 * a1 * a5 * b4 * c0 * c3 * d2 + 16 * a1 * a5 * b4 * c2 * c3 * d0 -
            16 * a1 * b0 * b4 * c2 * c3 * c5 + 16 * a1 * b0 * b5 * c1 * c3 * c5 + 16 * a1 * b0 * b5 * c2 * c3 * c4 -
            64 * a1 * b1 * b4 * c0 * c4 * c5 + 16 * a1 * b2 * b3 * c0 * c4 * c5 - 16 * a1 * b2 * b5 * c0 * c3 * c4 -
            16 * a1 * b3 * b5 * c0 * c1 * c5 - 16 * a1 * b3 * b5 * c0 * c2 * c4 + 16 * a1 * b4 * b5 * c0 * c2 * c3 -
            16 * a2 * a3 * a4 * c0 * d1 * d5 - 16 * a2 * a3 * a4 * c1 * d0 * d5 - 16 * a2 * a3 * a4 * c5 * d0 * d1 +
            16 * a2 * a3 * a5 * c0 * d1 * d4 + 16 * a2 * a3 * a5 * c0 * d2 * d3 + 16 * a2 * a3 * a5 * c1 * d0 * d4 +
            16 * a2 * a3 * a5 * c2 * d0 * d3 + 16 * a2 * a3 * a5 * c3 * d0 * d2 + 16 * a2 * a3 * a5 * c4 * d0 * d1 -
            16 * a2 * a3 * b0 * c1 * c4 * d5 - 16 * a2 * a3 * b0 * c1 * c5 * d4 - 16 * a2 * a3 * b0 * c2 * c3 * d5 +
            64 * a2 * a3 * b0 * c2 * c4 * d4 - 16 * a2 * a3 * b0 * c2 * c5 * d3 - 16 * a2 * a3 * b0 * c3 * c5 * d2 -
            16 * a2 * a3 * b0 * c4 * c5 * d1 + 16 * a2 * a3 * b1 * c0 * c4 * d5 + 16 * a2 * a3 * b1 * c0 * c5 * d4 +
            16 * a2 * a3 * b1 * c4 * c5 * d0 - 64 * a2 * a3 * b2 * c0 * c4 * d4 - 16 * a2 * a3 * b4 * c0 * c1 * d5 -
            16 * a2 * a3 * b4 * c0 * c5 * d1 - 16 * a2 * a3 * b4 * c1 * c5 * d0 + 16 * a2 * a3 * b5 * c0 * c1 * d4 +
            16 * a2 * a3 * b5 * c0 * c2 * d3 + 16 * a2 * a3 * b5 * c0 * c3 * d2 + 16 * a2 * a3 * b5 * c0 * c4 * d1 +
            16 * a2 * a3 * b5 * c1 * c4 * d0 + 16 * a2 * a3 * b5 * c2 * c3 * d0 + 16 * a2 * a4 * b0 * c1 * c3 * d5 +
            16 * a2 * a4 * b0 * c1 * c5 * d3 + 16 * a2 * a4 * b0 * c3 * c5 * d1 + 64 * a2 * a4 * b2 * c0 * c3 * d4 +
            64 * a2 * a4 * b2 * c0 * c4 * d3 + 64 * a2 * a4 * b2 * c3 * c4 * d0 - 16 * a2 * a4 * b3 * c0 * c1 * d5 -
            16 * a2 * a4 * b3 * c0 * c5 * d1 - 16 * a2 * a4 * b3 * c1 * c5 * d0 - 64 * a2 * a4 * b4 * c0 * c2 * d3 -
            64 * a2 * a4 * b4 * c0 * c3 * d2 - 64 * a2 * a4 * b4 * c2 * c3 * d0 - 16 * a2 * a5 * b1 * c0 * c3 * d4 -
            16 * a2 * a5 * b1 * c0 * c4 * d3 - 16 * a2 * a5 * b1 * c3 * c4 * d0 - 32 * a2 * a5 * b2 * c0 * c3 * d3 +
            16 * a2 * a5 * b3 * c0 * c1 * d4 + 16 * a2 * a5 * b3 * c0 * c2 * d3 + 16 * a2 * a5 * b3 * c0 * c3 * d2 +
            16 * a2 * a5 * b3 * c0 * c4 * d1 + 16 * a2 * a5 * b3 * c1 * c4 * d0 + 16 * a2 * a5 * b3 * c2 * c3 * d0 -
            16 * a2 * b0 * b3 * c1 * c4 * c5 - 16 * a2 * b0 * b3 * c2 * c3 * c5 + 16 * a2 * b0 * b4 * c1 * c3 * c5 +
            16 * a2 * b1 * b3 * c0 * c4 * c5 - 16 * a2 * b1 * b5 * c0 * c3 * c4 + 64 * a2 * b2 * b4 * c0 * c3 * c4 -
            16 * a2 * b3 * b4 * c0 * c1 * c5 + 16 * a2 * b3 * b5 * c0 * c1 * c4 + 16 * a2 * b3 * b5 * c0 * c2 * c3 +
            16 * a3 * a4 * b0 * c1 * c2 * d5 + 16 * a3 * a4 * b0 * c1 * c5 * d2 - 64 * a3 * a4 * b0 * c2 * c4 * d2 +
            16 * a3 * a4 * b0 * c2 * c5 * d1 - 16 * a3 * a4 * b2 * c0 * c1 * d5 - 16 * a3 * a4 * b2 * c0 * c5 * d1 -
            16 * a3 * a4 * b2 * c1 * c5 * d0 + 64 * a3 * a4 * b4 * c0 * c2 * d2 - 16 * a3 * a5 * b1 * c0 * c1 * d5 -
            16 * a3 * a5 * b1 * c0 * c2 * d4 - 16 * a3 * a5 * b1 * c0 * c4 * d2 - 16 * a3 * a5 * b1 * c0 * c5 * d1 -
            16 * a3 * a5 * b1 * c1 * c5 * d0 - 16 * a3 * a5 * b1 * c2 * c4 * d0 + 16 * a3 * a5 * b2 * c0 * c1 * d4 +
            16 * a3 * a5 * b2 * c0 * c2 * d3 + 16 * a3 * a5 * b2 * c0 * c3 * d2 + 16 * a3 * a5 * b2 * c0 * c4 * d1 +
            16 * a3 * a5 * b2 * c1 * c4 * d0 + 16 * a3 * a5 * b2 * c2 * c3 * d0 - 32 * a3 * a5 * b3 * c0 * c2 * d2 +
            32 * a3 * a5 * b5 * c0 * c1 * d1 - 16 * a3 * b0 * b2 * c1 * c4 * c5 - 16 * a3 * b0 * b2 * c2 * c3 * c5 +
            16 * a3 * b0 * b4 * c1 * c2 * c5 + 16 * a3 * b1 * b2 * c0 * c4 * c5 - 16 * a3 * b1 * b5 * c0 * c1 * c5 -
            16 * a3 * b1 * b5 * c0 * c2 * c4 - 16 * a3 * b2 * b4 * c0 * c1 * c5 + 16 * a3 * b2 * b5 * c0 * c1 * c4 +
            16 * a3 * b2 * b5 * c0 * c2 * c3 - 16 * a4 * a5 * b0 * c1 * c2 * d3 - 16 * a4 * a5 * b0 * c1 * c3 * d2 +
            64 * a4 * a5 * b0 * c1 * c4 * d1 - 16 * a4 * a5 * b0 * c2 * c3 * d1 + 16 * a4 * a5 * b1 * c0 * c2 * d3 +
            16 * a4 * a5 * b1 * c0 * c3 * d2 + 16 * a4 * a5 * b1 * c2 * c3 * d0 - 64 * a4 * a5 * b4 * c0 * c1 * d1 -
            16 * a4 * b0 * b1 * c2 * c3 * c5 + 16 * a4 * b0 * b2 * c1 * c3 * c5 + 16 * a4 * b0 * b3 * c1 * c2 * c5 -
            16 * a4 * b0 * b5 * c1 * c2 * c3 + 64 * a4 * b1 * b4 * c0 * c1 * c5 + 16 * a4 * b1 * b5 * c0 * c2 * c3 -
            16 * a4 * b2 * b3 * c0 * c1 * c5 - 64 * a4 * b2 * b4 * c0 * c2 * c3 + 16 * a5 * b0 * b1 * c1 * c3 * c5 +
            16 * a5 * b0 * b1 * c2 * c3 * c4 - 16 * a5 * b0 * b4 * c1 * c2 * c3 - 16 * a5 * b1 * b2 * c0 * c3 * c4 -
            16 * a5 * b1 * b3 * c0 * c1 * c5 - 16 * a5 * b1 * b3 * c0 * c2 * c4 + 16 * a5 * b1 * b4 * c0 * c2 * c3 +
            16 * a5 * b2 * b3 * c0 * c1 * c4 + 16 * a5 * b2 * b3 * c0 * c2 * c3 + 16 * a0 * a3 * a4 * c0 * d4 * d5 +
            16 * a0 * a3 * a4 * c4 * d0 * d5 + 16 * a0 * a3 * a4 * c5 * d0 * d4 + 24 * a0 * a3 * b0 * c3 * c5 * d5 -
            32 * a0 * a3 * b0 * c4 * c5 * d4 - 24 * a0 * a3 * b3 * c0 * c5 * d5 + 16 * a0 * a3 * b4 * c0 * c4 * d5 +
            16 * a0 * a3 * b4 * c0 * c5 * d4 + 16 * a0 * a3 * b4 * c4 * c5 * d0 - 16 * a0 * a4 * a5 * c0 * d3 * d4 -
            16 * a0 * a4 * a5 * c3 * d0 * d4 - 16 * a0 * a4 * a5 * c4 * d0 * d3 + 16 * a0 * a4 * b3 * c0 * c4 * d5 +
            16 * a0 * a4 * b3 * c0 * c5 * d4 + 16 * a0 * a4 * b3 * c4 * c5 * d0 - 16 * a0 * a4 * b5 * c0 * c3 * d4 -
            16 * a0 * a4 * b5 * c0 * c4 * d3 - 16 * a0 * a4 * b5 * c3 * c4 * d0 + 32 * a0 * a5 * b0 * c3 * c4 * d4 -
            24 * a0 * a5 * b0 * c3 * c5 * d3 - 16 * a0 * a5 * b4 * c0 * c3 * d4 - 16 * a0 * a5 * b4 * c0 * c4 * d3 -
            16 * a0 * a5 * b4 * c3 * c4 * d0 + 24 * a0 * a5 * b5 * c0 * c3 * d3 + 16 * a0 * b3 * b4 * c0 * c4 * c5 -
            16 * a0 * b4 * b5 * c0 * c3 * c4 - 64 * a1 * a2 * b1 * c2 * c5 * d5 + 64 * a1 * a2 * b2 * c1 * c5 * d5 +
            64 * a1 * a5 * b1 * c2 * c5 * d2 - 64 * a1 * a5 * b5 * c1 * c2 * d2 - 64 * a2 * a5 * b2 * c1 * c5 * d1 +
            64 * a2 * a5 * b5 * c1 * c2 * d1 + 16 * a3 * a4 * b0 * c0 * c4 * d5 + 16 * a3 * a4 * b0 * c0 * c5 * d4 +
            16 * a3 * a4 * b0 * c4 * c5 * d0 - 32 * a3 * a4 * b4 * c0 * c5 * d0 + 24 * a3 * a5 * b3 * c0 * c5 * d0 -
            24 * a3 * a5 * b5 * c0 * c3 * d0 + 16 * a3 * b0 * b4 * c0 * c4 * c5 - 16 * a4 * a5 * b0 * c0 * c3 * d4 -
            16 * a4 * a5 * b0 * c0 * c4 * d3 - 16 * a4 * a5 * b0 * c3 * c4 * d0 + 32 * a4 * a5 * b4 * c0 * c3 * d0 +
            16 * a4 * b0 * b3 * c0 * c4 * c5 - 16 * a4 * b0 * b5 * c0 * c3 * c4 - 16 * a5 * b0 * b4 * c0 * c3 * c4 -
            16 * a0 * a1 * a5 * c5 * d1 * d5 - 16 * a0 * a1 * b5 * c1 * c5 * d5 + 16 * a0 * a2 * a3 * c5 * d2 * d5 -
            32 * a0 * a2 * a4 * c5 * d1 * d5 + 16 * a0 * a2 * a5 * c1 * d4 * d5 + 16 * a0 * a2 * a5 * c4 * d1 * d5 +
            16 * a0 * a2 * a5 * c5 * d1 * d4 - 16 * a0 * a2 * b2 * c3 * c5 * d5 + 16 * a0 * a2 * b3 * c2 * c5 * d5 -
            32 * a0 * a2 * b4 * c1 * c5 * d5 + 16 * a0 * a2 * b5 * c1 * c4 * d5 + 16 * a0 * a2 * b5 * c1 * c5 * d4 +
            16 * a0 * a2 * b5 * c4 * c5 * d1 - 16 * a0 * a3 * a5 * c2 * d2 * d5 + 16 * a0 * a3 * b2 * c2 * c5 * d5 -
            16 * a0 * a3 * b5 * c2 * c5 * d2 + 16 * a0 * a4 * a5 * c1 * d2 * d5 + 16 * a0 * a4 * a5 * c2 * d1 * d5 +
            16 * a0 * a4 * a5 * c5 * d1 * d2 - 32 * a0 * a4 * b2 * c1 * c5 * d5 + 16 * a0 * a4 * b5 * c1 * c2 * d5 +
            16 * a0 * a4 * b5 * c1 * c5 * d2 + 16 * a0 * a4 * b5 * c2 * c5 * d1 - 16 * a0 * a5 * b1 * c1 * c5 * d5 +
            16 * a0 * a5 * b2 * c1 * c4 * d5 + 16 * a0 * a5 * b2 * c1 * c5 * d4 + 16 * a0 * a5 * b2 * c4 * c5 * d1 -
            16 * a0 * a5 * b3 * c2 * c5 * d2 + 16 * a0 * a5 * b4 * c1 * c2 * d5 + 16 * a0 * a5 * b4 * c1 * c5 * d2 +
            16 * a0 * a5 * b4 * c2 * c5 * d1 - 32 * a0 * a5 * b5 * c1 * c2 * d4 - 32 * a0 * a5 * b5 * c1 * c4 * d2 +
            16 * a0 * a5 * b5 * c1 * c5 * d1 + 16 * a0 * a5 * b5 * c2 * c3 * d2 - 32 * a0 * a5 * b5 * c2 * c4 * d1 +
            16 * a0 * b2 * b5 * c1 * c4 * c5 + 16 * a0 * b4 * b5 * c1 * c2 * c5 + 32 * a1 * a2 * a4 * c5 * d0 * d5 -
            16 * a1 * a2 * a5 * c0 * d4 * d5 - 16 * a1 * a2 * a5 * c4 * d0 * d5 - 16 * a1 * a2 * a5 * c5 * d0 * d4 +
            32 * a1 * a2 * b4 * c0 * c5 * d5 - 16 * a1 * a2 * b5 * c0 * c4 * d5 - 16 * a1 * a2 * b5 * c0 * c5 * d4 -
            16 * a1 * a2 * b5 * c4 * c5 * d0 - 16 * a1 * a4 * a5 * c0 * d2 * d5 - 16 * a1 * a4 * a5 * c2 * d0 * d5 -
            16 * a1 * a4 * a5 * c5 * d0 * d2 + 32 * a1 * a4 * b2 * c0 * c5 * d5 - 16 * a1 * a4 * b5 * c0 * c2 * d5 -
            16 * a1 * a4 * b5 * c0 * c5 * d2 - 16 * a1 * a4 * b5 * c2 * c5 * d0 - 16 * a1 * a5 * b0 * c1 * c5 * d5 -
            16 * a1 * a5 * b1 * c0 * c5 * d5 - 16 * a1 * a5 * b2 * c0 * c4 * d5 - 16 * a1 * a5 * b2 * c0 * c5 * d4 -
            16 * a1 * a5 * b2 * c4 * c5 * d0 - 16 * a1 * a5 * b4 * c0 * c2 * d5 - 16 * a1 * a5 * b4 * c0 * c5 * d2 -
            16 * a1 * a5 * b4 * c2 * c5 * d0 + 16 * a1 * a5 * b5 * c0 * c1 * d5 + 32 * a1 * a5 * b5 * c0 * c2 * d4 +
            32 * a1 * a5 * b5 * c0 * c4 * d2 + 16 * a1 * a5 * b5 * c0 * c5 * d1 + 16 * a1 * a5 * b5 * c1 * c5 * d0 +
            32 * a1 * a5 * b5 * c2 * c4 * d0 - 16 * a1 * b2 * b5 * c0 * c4 * c5 - 16 * a1 * b4 * b5 * c0 * c2 * c5 +
            16 * a2 * a3 * b0 * c2 * c5 * d5 - 16 * a2 * a3 * b2 * c0 * c5 * d5 - 32 * a2 * a4 * b0 * c1 * c5 * d5 +
            32 * a2 * a4 * b1 * c0 * c5 * d5 + 16 * a2 * a5 * b0 * c1 * c4 * d5 + 16 * a2 * a5 * b0 * c1 * c5 * d4 +
            16 * a2 * a5 * b0 * c4 * c5 * d1 - 16 * a2 * a5 * b1 * c0 * c4 * d5 - 16 * a2 * a5 * b1 * c0 * c5 * d4 -
            16 * a2 * a5 * b1 * c4 * c5 * d0 + 16 * a2 * a5 * b2 * c0 * c3 * d5 + 16 * a2 * a5 * b2 * c0 * c5 * d3 +
            16 * a2 * a5 * b2 * c3 * c5 * d0 - 16 * a2 * a5 * b5 * c0 * c2 * d3 - 16 * a2 * a5 * b5 * c0 * c3 * d2 -
            16 * a2 * a5 * b5 * c2 * c3 * d0 + 16 * a2 * b0 * b5 * c1 * c4 * c5 - 16 * a2 * b1 * b5 * c0 * c4 * c5 +
            16 * a2 * b2 * b5 * c0 * c3 * c5 - 16 * a3 * a5 * b0 * c2 * c5 * d2 + 16 * a3 * a5 * b5 * c0 * c2 * d2 +
            16 * a4 * a5 * b0 * c1 * c2 * d5 + 16 * a4 * a5 * b0 * c1 * c5 * d2 + 16 * a4 * a5 * b0 * c2 * c5 * d1 -
            16 * a4 * a5 * b1 * c0 * c2 * d5 - 16 * a4 * a5 * b1 * c0 * c5 * d2 - 16 * a4 * a5 * b1 * c2 * c5 * d0 +
            16 * a4 * b0 * b5 * c1 * c2 * c5 - 16 * a4 * b1 * b5 * c0 * c2 * c5 + 16 * a5 * b0 * b2 * c1 * c4 * c5 +
            16 * a5 * b0 * b4 * c1 * c2 * c5 - 32 * a5 * b0 * b5 * c1 * c2 * c4 - 16 * a5 * b1 * b2 * c0 * c4 * c5 -
            16 * a5 * b1 * b4 * c0 * c2 * c5 + 16 * a5 * b1 * b5 * c0 * c1 * c5 + 32 * a5 * b1 * b5 * c0 * c2 * c4 -
            16 * a5 * b2 * b5 * c0 * c2 * c3 + 12 * a0 * a3 * a5 * c5 * d0 * d5 + 12 * a0 * a3 * b5 * c0 * c5 * d5 +
            16 * a0 * a4 * b0 * c4 * c5 * d5 - 16 * a0 * a4 * b4 * c0 * c5 * d5 + 12 * a0 * a5 * b0 * c3 * c5 * d5 -
            16 * a0 * a5 * b0 * c4 * c5 * d4 + 12 * a0 * a5 * b3 * c0 * c5 * d5 - 12 * a0 * a5 * b5 * c0 * c3 * d5 +
            16 * a0 * a5 * b5 * c0 * c4 * d4 - 12 * a0 * a5 * b5 * c0 * c5 * d3 - 12 * a0 * a5 * b5 * c3 * c5 * d0 -
            16 * a1 * a2 * a3 * c3 * d4 * d5 - 16 * a1 * a2 * a3 * c4 * d3 * d5 - 16 * a1 * a2 * a3 * c5 * d3 * d4 +
            32 * a1 * a2 * a4 * c3 * d3 * d5 - 16 * a1 * a2 * b3 * c3 * c4 * d5 - 16 * a1 * a2 * b3 * c3 * c5 * d4 -
            16 * a1 * a2 * b3 * c4 * c5 * d3 + 32 * a1 * a2 * b4 * c3 * c5 * d3 + 16 * a1 * a3 * a5 * c2 * d3 * d4 +
            16 * a1 * a3 * a5 * c3 * d2 * d4 + 16 * a1 * a3 * a5 * c4 * d2 * d3 + 16 * a1 * a3 * b1 * c3 * c5 * d5 -
            16 * a1 * a3 * b2 * c3 * c4 * d5 - 16 * a1 * a3 * b2 * c3 * c5 * d4 - 16 * a1 * a3 * b2 * c4 * c5 * d3 -
            16 * a1 * a3 * b3 * c1 * c5 * d5 + 16 * a1 * a3 * b5 * c2 * c3 * d4 + 16 * a1 * a3 * b5 * c2 * c4 * d3 +
            16 * a1 * a3 * b5 * c3 * c4 * d2 - 32 * a1 * a4 * a5 * c3 * d2 * d3 + 32 * a1 * a4 * b2 * c3 * c5 * d3 -
            32 * a1 * a4 * b5 * c2 * c3 * d3 - 16 * a1 * a5 * b1 * c3 * c5 * d3 + 16 * a1 * a5 * b3 * c2 * c3 * d4 +
            16 * a1 * a5 * b3 * c2 * c4 * d3 + 16 * a1 * a5 * b3 * c3 * c4 * d2 - 32 * a1 * a5 * b4 * c2 * c3 * d3 +
            16 * a1 * a5 * b5 * c1 * c3 * d3 - 16 * a1 * b2 * b3 * c3 * c4 * c5 + 16 * a1 * b3 * b5 * c2 * c3 * c4 -
            16 * a2 * a3 * a4 * c1 * d3 * d5 - 16 * a2 * a3 * a4 * c3 * d1 * d5 - 16 * a2 * a3 * a4 * c5 * d1 * d3 -
            16 * a2 * a3 * a5 * c3 * d2 * d3 - 16 * a2 * a3 * b1 * c3 * c4 * d5 - 16 * a2 * a3 * b1 * c3 * c5 * d4 -
            16 * a2 * a3 * b1 * c4 * c5 * d3 + 64 * a2 * a3 * b2 * c3 * c4 * d4 - 16 * a2 * a3 * b2 * c3 * c5 * d3 +
            32 * a2 * a3 * b3 * c1 * c4 * d5 + 32 * a2 * a3 * b3 * c1 * c5 * d4 + 16 * a2 * a3 * b3 * c2 * c3 * d5 -
            64 * a2 * a3 * b3 * c2 * c4 * d4 + 16 * a2 * a3 * b3 * c2 * c5 * d3 + 16 * a2 * a3 * b3 * c3 * c5 * d2 +
            32 * a2 * a3 * b3 * c4 * c5 * d1 - 16 * a2 * a3 * b4 * c1 * c3 * d5 - 16 * a2 * a3 * b4 * c1 * c5 * d3 -
            16 * a2 * a3 * b4 * c3 * c5 * d1 - 16 * a2 * a3 * b5 * c2 * c3 * d3 + 32 * a2 * a4 * b1 * c3 * c5 * d3 -
            64 * a2 * a4 * b2 * c3 * c4 * d3 - 16 * a2 * a4 * b3 * c1 * c3 * d5 - 16 * a2 * a4 * b3 * c1 * c5 * d3 -
            16 * a2 * a4 * b3 * c3 * c5 * d1 + 64 * a2 * a4 * b4 * c2 * c3 * d3 - 16 * a2 * a5 * b3 * c2 * c3 * d3 -
            16 * a2 * b1 * b3 * c3 * c4 * c5 - 16 * a2 * b3 * b4 * c1 * c3 * c5 + 16 * a3 * a4 * a5 * c1 * d2 * d3 +
            16 * a3 * a4 * a5 * c2 * d1 * d3 + 16 * a3 * a4 * a5 * c3 * d1 * d2 - 16 * a3 * a4 * b2 * c1 * c3 * d5 -
            16 * a3 * a4 * b2 * c1 * c5 * d3 - 16 * a3 * a4 * b2 * c3 * c5 * d1 + 64 * a3 * a4 * b3 * c2 * c4 * d2 -
            64 * a3 * a4 * b4 * c2 * c3 * d2 + 16 * a3 * a4 * b5 * c1 * c2 * d3 + 16 * a3 * a4 * b5 * c1 * c3 * d2 +
            16 * a3 * a4 * b5 * c2 * c3 * d1 + 12 * a3 * a5 * b0 * c0 * c5 * d5 + 16 * a3 * a5 * b1 * c2 * c3 * d4 +
            16 * a3 * a5 * b1 * c2 * c4 * d3 + 16 * a3 * a5 * b1 * c3 * c4 * d2 - 16 * a3 * a5 * b2 * c2 * c3 * d3 -
            32 * a3 * a5 * b3 * c1 * c2 * d4 - 32 * a3 * a5 * b3 * c1 * c4 * d2 + 16 * a3 * a5 * b3 * c1 * c5 * d1 +
            16 * a3 * a5 * b3 * c2 * c3 * d2 - 32 * a3 * a5 * b3 * c2 * c4 * d1 + 16 * a3 * a5 * b4 * c1 * c2 * d3 +
            16 * a3 * a5 * b4 * c1 * c3 * d2 + 16 * a3 * a5 * b4 * c2 * c3 * d1 - 12 * a3 * a5 * b5 * c0 * c5 * d0 -
            16 * a3 * a5 * b5 * c1 * c3 * d1 - 16 * a3 * b1 * b2 * c3 * c4 * c5 + 16 * a3 * b1 * b5 * c2 * c3 * c4 +
            32 * a3 * b2 * b3 * c1 * c4 * c5 + 16 * a3 * b2 * b3 * c2 * c3 * c5 - 16 * a3 * b2 * b4 * c1 * c3 * c5 -
            32 * a3 * b3 * b5 * c1 * c2 * c4 + 16 * a3 * b4 * b5 * c1 * c2 * c3 - 32 * a4 * a5 * b1 * c2 * c3 * d3 +
            16 * a4 * a5 * b3 * c1 * c2 * d3 + 16 * a4 * a5 * b3 * c1 * c3 * d2 + 16 * a4 * a5 * b3 * c2 * c3 * d1 +
            16 * a4 * a5 * b4 * c0 * c5 * d0 - 16 * a4 * a5 * b5 * c0 * c4 * d0 - 16 * a4 * b2 * b3 * c1 * c3 * c5 +
            16 * a4 * b3 * b5 * c1 * c2 * c3 - 12 * a5 * b0 * b5 * c0 * c3 * c5 + 16 * a5 * b1 * b3 * c2 * c3 * c4 +
            16 * a5 * b3 * b4 * c1 * c2 * c3 + 12 * a0 * a3 * a5 * c3 * d3 * d5 - 16 * a0 * a3 * a5 * c4 * d3 * d4 -
            12 * a0 * a3 * b3 * c3 * c5 * d5 + 16 * a0 * a3 * b3 * c4 * c5 * d4 - 16 * a0 * a3 * b5 * c3 * c4 * d4 +
            12 * a0 * a3 * b5 * c3 * c5 * d3 + 16 * a0 * a4 * a5 * c3 * d3 * d4 - 16 * a0 * a4 * b4 * c3 * c5 * d3 +
            16 * a0 * a4 * b5 * c3 * c4 * d3 - 16 * a0 * a5 * b3 * c3 * c4 * d4 + 12 * a0 * a5 * b3 * c3 * c5 * d3 +
            16 * a0 * a5 * b4 * c3 * c4 * d3 - 16 * a3 * a4 * b3 * c0 * c4 * d5 - 16 * a3 * a4 * b3 * c0 * c5 * d4 -
            16 * a3 * a4 * b3 * c4 * c5 * d0 + 16 * a3 * a4 * b4 * c0 * c3 * d5 + 16 * a3 * a4 * b4 * c0 * c5 * d3 +
            16 * a3 * a4 * b4 * c3 * c5 * d0 - 16 * a3 * a5 * b0 * c3 * c4 * d4 + 12 * a3 * a5 * b0 * c3 * c5 * d3 -
            12 * a3 * a5 * b3 * c0 * c3 * d5 + 16 * a3 * a5 * b3 * c0 * c4 * d4 - 12 * a3 * a5 * b3 * c0 * c5 * d3 -
            12 * a3 * a5 * b3 * c3 * c5 * d0 + 12 * a3 * a5 * b5 * c0 * c3 * d3 - 16 * a3 * b3 * b4 * c0 * c4 * c5 -
            12 * a3 * b3 * b5 * c0 * c3 * c5 + 16 * a4 * a5 * b0 * c3 * c4 * d3 - 16 * a4 * a5 * b4 * c0 * c3 * d3 +
            16 * a4 * b3 * b4 * c0 * c3 * c5 - 32 * a1 * a2 * a4 * c5 * d3 * d5 + 16 * a1 * a2 * a5 * c3 * d4 * d5 +
            16 * a1 * a2 * a5 * c4 * d3 * d5 + 16 * a1 * a2 * a5 * c5 * d3 * d4 - 32 * a1 * a2 * b4 * c3 * c5 * d5 +
            16 * a1 * a2 * b5 * c3 * c4 * d5 + 16 * a1 * a2 * b5 * c3 * c5 * d4 + 16 * a1 * a2 * b5 * c4 * c5 * d3 +
            16 * a1 * a3 * a5 * c5 * d1 * d5 + 16 * a1 * a3 * b5 * c1 * c5 * d5 + 16 * a1 * a4 * a5 * c2 * d3 * d5 +
            16 * a1 * a4 * a5 * c3 * d2 * d5 + 16 * a1 * a4 * a5 * c5 * d2 * d3 + 64 * a1 * a4 * b1 * c4 * c5 * d5 -
            32 * a1 * a4 * b2 * c3 * c5 * d5 - 64 * a1 * a4 * b4 * c1 * c5 * d5 + 16 * a1 * a4 * b5 * c2 * c3 * d5 +
            16 * a1 * a4 * b5 * c2 * c5 * d3 + 16 * a1 * a4 * b5 * c3 * c5 * d2 + 16 * a1 * a5 * b1 * c3 * c5 * d5 -
            64 * a1 * a5 * b1 * c4 * c5 * d4 + 16 * a1 * a5 * b2 * c3 * c4 * d5 + 16 * a1 * a5 * b2 * c3 * c5 * d4 +
            16 * a1 * a5 * b2 * c4 * c5 * d3 + 16 * a1 * a5 * b3 * c1 * c5 * d5 + 16 * a1 * a5 * b4 * c2 * c3 * d5 +
            16 * a1 * a5 * b4 * c2 * c5 * d3 + 16 * a1 * a5 * b4 * c3 * c5 * d2 - 16 * a1 * a5 * b5 * c1 * c3 * d5 +
            64 * a1 * a5 * b5 * c1 * c4 * d4 - 16 * a1 * a5 * b5 * c1 * c5 * d3 - 32 * a1 * a5 * b5 * c2 * c3 * d4 -
            32 * a1 * a5 * b5 * c2 * c4 * d3 - 32 * a1 * a5 * b5 * c3 * c4 * d2 - 16 * a1 * a5 * b5 * c3 * c5 * d1 +
            16 * a1 * b2 * b5 * c3 * c4 * c5 + 16 * a1 * b4 * b5 * c2 * c3 * c5 + 32 * a2 * a3 * a4 * c5 * d1 * d5 -
            16 * a2 * a3 * a5 * c1 * d4 * d5 - 16 * a2 * a3 * a5 * c4 * d1 * d5 - 16 * a2 * a3 * a5 * c5 * d1 * d4 +
            16 * a2 * a3 * b2 * c3 * c5 * d5 - 16 * a2 * a3 * b3 * c2 * c5 * d5 + 32 * a2 * a3 * b4 * c1 * c5 * d5 -
            16 * a2 * a3 * b5 * c1 * c4 * d5 - 16 * a2 * a3 * b5 * c1 * c5 * d4 - 16 * a2 * a3 * b5 * c4 * c5 * d1 -
            32 * a2 * a4 * b1 * c3 * c5 * d5 + 32 * a2 * a4 * b3 * c1 * c5 * d5 + 16 * a2 * a5 * b1 * c3 * c4 * d5 +
            16 * a2 * a5 * b1 * c3 * c5 * d4 + 16 * a2 * a5 * b1 * c4 * c5 * d3 - 16 * a2 * a5 * b2 * c3 * c5 * d3 -
            16 * a2 * a5 * b3 * c1 * c4 * d5 - 16 * a2 * a5 * b3 * c1 * c5 * d4 - 16 * a2 * a5 * b3 * c4 * c5 * d1 +
            16 * a2 * a5 * b5 * c2 * c3 * d3 + 16 * a2 * b1 * b5 * c3 * c4 * c5 - 16 * a2 * b3 * b5 * c1 * c4 * c5 -
            16 * a3 * a4 * a5 * c1 * d2 * d5 - 16 * a3 * a4 * a5 * c2 * d1 * d5 - 16 * a3 * a4 * a5 * c5 * d1 * d2 +
            32 * a3 * a4 * b2 * c1 * c5 * d5 - 16 * a3 * a4 * b5 * c1 * c2 * d5 - 16 * a3 * a4 * b5 * c1 * c5 * d2 -
            16 * a3 * a4 * b5 * c2 * c5 * d1 + 16 * a3 * a5 * b1 * c1 * c5 * d5 - 16 * a3 * a5 * b2 * c1 * c4 * d5 -
            16 * a3 * a5 * b2 * c1 * c5 * d4 - 16 * a3 * a5 * b2 * c4 * c5 * d1 + 16 * a3 * a5 * b3 * c2 * c5 * d2 -
            16 * a3 * a5 * b4 * c1 * c2 * d5 - 16 * a3 * a5 * b4 * c1 * c5 * d2 - 16 * a3 * a5 * b4 * c2 * c5 * d1 +
            32 * a3 * a5 * b5 * c1 * c2 * d4 + 32 * a3 * a5 * b5 * c1 * c4 * d2 - 16 * a3 * a5 * b5 * c1 * c5 * d1 -
            16 * a3 * a5 * b5 * c2 * c3 * d2 + 32 * a3 * a5 * b5 * c2 * c4 * d1 - 16 * a3 * b2 * b5 * c1 * c4 * c5 -
            16 * a3 * b4 * b5 * c1 * c2 * c5 + 16 * a4 * a5 * b1 * c2 * c3 * d5 + 16 * a4 * a5 * b1 * c2 * c5 * d3 +
            16 * a4 * a5 * b1 * c3 * c5 * d2 - 16 * a4 * a5 * b3 * c1 * c2 * d5 - 16 * a4 * a5 * b3 * c1 * c5 * d2 -
            16 * a4 * a5 * b3 * c2 * c5 * d1 + 64 * a4 * a5 * b4 * c1 * c5 * d1 - 64 * a4 * a5 * b5 * c1 * c4 * d1 +
            16 * a4 * b1 * b5 * c2 * c3 * c5 - 16 * a4 * b3 * b5 * c1 * c2 * c5 + 16 * a5 * b1 * b2 * c3 * c4 * c5 +
            16 * a5 * b1 * b4 * c2 * c3 * c5 - 16 * a5 * b1 * b5 * c1 * c3 * c5 - 32 * a5 * b1 * b5 * c2 * c3 * c4 -
            16 * a5 * b2 * b3 * c1 * c4 * c5 - 16 * a5 * b3 * b4 * c1 * c2 * c5 + 32 * a5 * b3 * b5 * c1 * c2 * c4 -
            16 * a0 * a3 * a4 * c5 * d4 * d5 + 16 * a0 * a3 * a5 * c4 * d4 * d5 - 12 * a0 * a3 * a5 * c5 * d3 * d5 -
            16 * a0 * a3 * b4 * c4 * c5 * d5 - 12 * a0 * a3 * b5 * c3 * c5 * d5 + 16 * a0 * a3 * b5 * c4 * c5 * d4 -
            16 * a0 * a4 * b3 * c4 * c5 * d5 + 16 * a0 * a4 * b4 * c3 * c5 * d5 - 12 * a0 * a5 * b3 * c3 * c5 * d5 +
            16 * a0 * a5 * b3 * c4 * c5 * d4 - 16 * a0 * a5 * b5 * c3 * c4 * d4 + 12 * a0 * a5 * b5 * c3 * c5 * d3 -
            16 * a3 * a4 * b0 * c4 * c5 * d5 + 16 * a3 * a4 * b4 * c0 * c5 * d5 - 12 * a3 * a5 * b0 * c3 * c5 * d5 +
            16 * a3 * a5 * b0 * c4 * c5 * d4 - 12 * a3 * a5 * b3 * c0 * c5 * d5 + 12 * a3 * a5 * b5 * c0 * c3 * d5 -
            16 * a3 * a5 * b5 * c0 * c4 * d4 + 12 * a3 * a5 * b5 * c0 * c5 * d3 + 12 * a3 * a5 * b5 * c3 * c5 * d0 -
            16 * a4 * a5 * b4 * c0 * c3 * d5 - 16 * a4 * a5 * b4 * c0 * c5 * d3 - 16 * a4 * a5 * b4 * c3 * c5 * d0 +
            16 * a4 * a5 * b5 * c0 * c3 * d4 + 16 * a4 * a5 * b5 * c0 * c4 * d3 + 16 * a4 * a5 * b5 * c3 * c4 * d0 -
            16 * a4 * b4 * b5 * c0 * c3 * c5 + 12 * a5 * b3 * b5 * c0 * c3 * c5 + 16 * a5 * b4 * b5 * c0 * c3 * c4 +
            16 * a3 * a4 * b3 * c4 * c5 * d5 - 16 * a3 * a4 * b4 * c3 * c5 * d5 + 12 * a3 * a5 * b3 * c3 * c5 * d5 -
            16 * a3 * a5 * b3 * c4 * c5 * d4 + 16 * a3 * a5 * b5 * c3 * c4 * d4 - 12 * a3 * a5 * b5 * c3 * c5 * d3 +
            16 * a4 * a5 * b4 * c3 * c5 * d3 - 16 * a4 * a5 * b5 * c3 * c4 * d3,
        pow(a3, 3) * pow(d0, 3) - pow(a0, 3) * pow(d3, 3) - pow(b0, 3) * pow(c3, 3) + pow(b3, 3) * pow(c0, 3) +
            pow(a0, 3) * pow(d5, 3) - pow(a5, 3) * pow(d0, 3) + pow(b0, 3) * pow(c5, 3) - pow(b5, 3) * pow(c0, 3) -
            pow(a3, 3) * pow(d5, 3) + pow(a5, 3) * pow(d3, 3) - pow(b3, 3) * pow(c5, 3) + pow(b5, 3) * pow(c3, 3) -
            4 * a0 * pow(a2, 2) * pow(d3, 3) + 4 * a0 * pow(a1, 2) * pow(d5, 3) + 4 * a3 * pow(a4, 2) * pow(d0, 3) +
            3 * a0 * pow(a3, 2) * pow(d5, 3) - 3 * a0 * pow(a5, 2) * pow(d3, 3) + 3 * a3 * pow(a5, 2) * pow(d0, 3) -
            3 * pow(a0, 2) * a3 * pow(d5, 3) + 3 * pow(a0, 2) * a5 * pow(d3, 3) - 3 * pow(a3, 2) * a5 * pow(d0, 3) -
            4 * pow(a1, 2) * a3 * pow(d5, 3) - 4 * pow(a4, 2) * a5 * pow(d0, 3) + 4 * pow(a2, 2) * a5 * pow(d3, 3) -
            4 * b0 * pow(b2, 2) * pow(c3, 3) + 4 * b0 * pow(b1, 2) * pow(c5, 3) + 4 * b3 * pow(b4, 2) * pow(c0, 3) +
            3 * b0 * pow(b3, 2) * pow(c5, 3) - 3 * b0 * pow(b5, 2) * pow(c3, 3) + 3 * b3 * pow(b5, 2) * pow(c0, 3) -
            3 * pow(b0, 2) * b3 * pow(c5, 3) + 3 * pow(b0, 2) * b5 * pow(c3, 3) - 3 * pow(b3, 2) * b5 * pow(c0, 3) -
            4 * pow(b1, 2) * b3 * pow(c5, 3) - 4 * pow(b4, 2) * b5 * pow(c0, 3) + 4 * pow(b2, 2) * b5 * pow(c3, 3) +
            4 * pow(b3, 3) * c0 * pow(c2, 2) - 4 * pow(b5, 3) * c0 * pow(c1, 2) - 4 * pow(b0, 3) * c3 * pow(c4, 2) -
            3 * pow(b0, 3) * c3 * pow(c5, 2) + 3 * pow(b0, 3) * pow(c3, 2) * c5 + 3 * pow(b3, 3) * c0 * pow(c5, 2) -
            3 * pow(b3, 3) * pow(c0, 2) * c5 - 3 * pow(b5, 3) * c0 * pow(c3, 2) + 3 * pow(b5, 3) * pow(c0, 2) * c3 +
            4 * pow(b0, 3) * pow(c4, 2) * c5 + 4 * pow(b5, 3) * pow(c1, 2) * c3 - 4 * pow(b3, 3) * pow(c2, 2) * c5 +
            4 * pow(a3, 3) * d0 * pow(d2, 2) - 4 * pow(a5, 3) * d0 * pow(d1, 2) - 4 * pow(a0, 3) * d3 * pow(d4, 2) -
            3 * pow(a0, 3) * d3 * pow(d5, 2) + 3 * pow(a0, 3) * pow(d3, 2) * d5 + 3 * pow(a3, 3) * d0 * pow(d5, 2) -
            3 * pow(a3, 3) * pow(d0, 2) * d5 - 3 * pow(a5, 3) * d0 * pow(d3, 2) + 3 * pow(a5, 3) * pow(d0, 2) * d3 +
            4 * pow(a0, 3) * pow(d4, 2) * d5 + 4 * pow(a5, 3) * pow(d1, 2) * d3 - 4 * pow(a3, 3) * pow(d2, 2) * d5 -
            4 * a0 * pow(a1, 2) * d0 * pow(d3, 2) + 4 * a0 * pow(a3, 2) * d0 * pow(d1, 2) -
            4 * a0 * pow(b1, 2) * pow(c3, 2) * d0 + 4 * a0 * pow(b3, 2) * pow(c1, 2) * d0 -
            4 * b0 * pow(b1, 2) * c0 * pow(c3, 2) + 4 * b0 * pow(b3, 2) * c0 * pow(c1, 2) -
            4 * pow(a1, 2) * b0 * c0 * pow(d3, 2) + 4 * pow(a3, 2) * b0 * c0 * pow(d1, 2) -
            16 * a0 * pow(a1, 2) * d0 * pow(d4, 2) + 4 * a0 * pow(a2, 2) * d0 * pow(d3, 2) -
            4 * a0 * pow(a3, 2) * d0 * pow(d2, 2) + 16 * a0 * pow(a4, 2) * d0 * pow(d1, 2) -
            16 * a0 * pow(b1, 2) * pow(c4, 2) * d0 + 4 * a0 * pow(b2, 2) * pow(c3, 2) * d0 -
            4 * a0 * pow(b3, 2) * pow(c2, 2) * d0 + 16 * a0 * pow(b4, 2) * pow(c1, 2) * d0 -
            4 * a1 * pow(a3, 2) * pow(d0, 2) * d1 + 4 * a1 * pow(b0, 2) * pow(c3, 2) * d1 -
            4 * a1 * pow(b3, 2) * pow(c0, 2) * d1 - 16 * b0 * pow(b1, 2) * c0 * pow(c4, 2) +
            4 * b0 * pow(b2, 2) * c0 * pow(c3, 2) - 4 * b0 * pow(b3, 2) * c0 * pow(c2, 2) +
            16 * b0 * pow(b4, 2) * c0 * pow(c1, 2) - 4 * b1 * pow(b3, 2) * pow(c0, 2) * c1 +
            4 * pow(a0, 2) * a1 * d1 * pow(d3, 2) + 4 * pow(a0, 2) * b1 * c1 * pow(d3, 2) -
            16 * pow(a1, 2) * b0 * c0 * pow(d4, 2) + 4 * pow(a2, 2) * b0 * c0 * pow(d3, 2) -
            4 * pow(a3, 2) * b0 * c0 * pow(d2, 2) - 4 * pow(a3, 2) * b1 * c1 * pow(d0, 2) +
            16 * pow(a4, 2) * b0 * c0 * pow(d1, 2) + 4 * pow(b0, 2) * b1 * c1 * pow(c3, 2) -
            4 * a0 * pow(a1, 2) * d0 * pow(d5, 2) + 16 * a0 * pow(a2, 2) * d0 * pow(d4, 2) -
            3 * a0 * pow(a3, 2) * pow(d0, 2) * d3 - 16 * a0 * pow(a4, 2) * d0 * pow(d2, 2) +
            4 * a0 * pow(a5, 2) * d0 * pow(d1, 2) - 9 * a0 * pow(b0, 2) * pow(c3, 2) * d3 -
            4 * a0 * pow(b1, 2) * pow(c5, 2) * d0 + 16 * a0 * pow(b2, 2) * pow(c4, 2) * d0 -
            3 * a0 * pow(b3, 2) * pow(c0, 2) * d3 - 16 * a0 * pow(b4, 2) * pow(c2, 2) * d0 +
            4 * a0 * pow(b5, 2) * pow(c1, 2) * d0 - 16 * a1 * pow(a4, 2) * pow(d0, 2) * d1 +
            16 * a1 * pow(b0, 2) * pow(c4, 2) * d1 - 16 * a1 * pow(b4, 2) * pow(c0, 2) * d1 +
            3 * a3 * pow(b0, 2) * pow(c3, 2) * d0 + 9 * a3 * pow(b3, 2) * pow(c0, 2) * d0 -
            4 * b0 * pow(b1, 2) * c0 * pow(c5, 2) + 16 * b0 * pow(b2, 2) * c0 * pow(c4, 2) -
            3 * b0 * pow(b3, 2) * pow(c0, 2) * c3 - 16 * b0 * pow(b4, 2) * c0 * pow(c2, 2) +
            4 * b0 * pow(b5, 2) * c0 * pow(c1, 2) - 16 * b1 * pow(b4, 2) * pow(c0, 2) * c1 +
            16 * pow(a0, 2) * a1 * d1 * pow(d4, 2) + 3 * pow(a0, 2) * a3 * d0 * pow(d3, 2) -
            9 * pow(a0, 2) * b0 * c3 * pow(d3, 2) + 16 * pow(a0, 2) * b1 * c1 * pow(d4, 2) +
            3 * pow(a0, 2) * b3 * c0 * pow(d3, 2) - 4 * pow(a1, 2) * b0 * c0 * pow(d5, 2) +
            16 * pow(a2, 2) * b0 * c0 * pow(d4, 2) - 3 * pow(a3, 2) * b0 * c3 * pow(d0, 2) +
            9 * pow(a3, 2) * b3 * c0 * pow(d0, 2) - 16 * pow(a4, 2) * b0 * c0 * pow(d2, 2) -
            16 * pow(a4, 2) * b1 * c1 * pow(d0, 2) + 4 * pow(a5, 2) * b0 * c0 * pow(d1, 2) +
            16 * pow(b0, 2) * b1 * c1 * pow(c4, 2) + 3 * pow(b0, 2) * b3 * c0 * pow(c3, 2) +
            4 * a0 * pow(a2, 2) * d0 * pow(d5, 2) - 4 * a0 * pow(a3, 2) * d0 * pow(d4, 2) +
            4 * a0 * pow(a4, 2) * d0 * pow(d3, 2) - 4 * a0 * pow(a4, 2) * pow(d0, 2) * d3 -
            4 * a0 * pow(a5, 2) * d0 * pow(d2, 2) - 12 * a0 * pow(b0, 2) * pow(c4, 2) * d3 +
            4 * a0 * pow(b2, 2) * pow(c5, 2) * d0 - 4 * a0 * pow(b3, 2) * pow(c4, 2) * d0 -
            4 * a0 * pow(b4, 2) * pow(c0, 2) * d3 + 4 * a0 * pow(b4, 2) * pow(c3, 2) * d0 -
            4 * a0 * pow(b5, 2) * pow(c2, 2) * d0 + 16 * a1 * pow(a2, 2) * d1 * pow(d3, 2) -
            16 * a1 * pow(a3, 2) * d1 * pow(d2, 2) - 4 * a1 * pow(a5, 2) * pow(d0, 2) * d1 +
            4 * a1 * pow(b0, 2) * pow(c5, 2) * d1 + 16 * a1 * pow(b2, 2) * pow(c3, 2) * d1 -
            16 * a1 * pow(b3, 2) * pow(c2, 2) * d1 - 4 * a1 * pow(b5, 2) * pow(c0, 2) * d1 +
            4 * a2 * pow(a3, 2) * pow(d0, 2) * d2 - 4 * a2 * pow(b0, 2) * pow(c3, 2) * d2 +
            4 * a2 * pow(b3, 2) * pow(c0, 2) * d2 - 4 * a3 * pow(b0, 2) * pow(c1, 2) * d3 +
            4 * a3 * pow(b0, 2) * pow(c4, 2) * d0 + 4 * a3 * pow(b1, 2) * pow(c0, 2) * d3 +
            12 * a3 * pow(b4, 2) * pow(c0, 2) * d0 + 4 * b0 * pow(b2, 2) * c0 * pow(c5, 2) -
            4 * b0 * pow(b3, 2) * c0 * pow(c4, 2) + 4 * b0 * pow(b4, 2) * c0 * pow(c3, 2) -
            4 * b0 * pow(b4, 2) * pow(c0, 2) * c3 - 4 * b0 * pow(b5, 2) * c0 * pow(c2, 2) +
            16 * b1 * pow(b2, 2) * c1 * pow(c3, 2) - 16 * b1 * pow(b3, 2) * c1 * pow(c2, 2) -
            4 * b1 * pow(b5, 2) * pow(c0, 2) * c1 + 4 * b2 * pow(b3, 2) * pow(c0, 2) * c2 +
            4 * pow(a0, 2) * a1 * d1 * pow(d5, 2) - 4 * pow(a0, 2) * a2 * d2 * pow(d3, 2) +
            4 * pow(a0, 2) * a3 * d0 * pow(d4, 2) - 4 * pow(a0, 2) * a3 * pow(d1, 2) * d3 -
            12 * pow(a0, 2) * b0 * c3 * pow(d4, 2) + 4 * pow(a0, 2) * b1 * c1 * pow(d5, 2) -
            4 * pow(a0, 2) * b2 * c2 * pow(d3, 2) + 4 * pow(a0, 2) * b3 * c0 * pow(d4, 2) -
            4 * pow(a0, 2) * b3 * c3 * pow(d1, 2) + 4 * pow(a1, 2) * a3 * pow(d0, 2) * d3 +
            4 * pow(a1, 2) * b3 * c3 * pow(d0, 2) + 4 * pow(a2, 2) * b0 * c0 * pow(d5, 2) +
            16 * pow(a2, 2) * b1 * c1 * pow(d3, 2) - 4 * pow(a3, 2) * b0 * c0 * pow(d4, 2) -
            16 * pow(a3, 2) * b1 * c1 * pow(d2, 2) + 4 * pow(a3, 2) * b2 * c2 * pow(d0, 2) +
            4 * pow(a4, 2) * b0 * c0 * pow(d3, 2) - 4 * pow(a4, 2) * b0 * c3 * pow(d0, 2) +
            12 * pow(a4, 2) * b3 * c0 * pow(d0, 2) - 4 * pow(a5, 2) * b0 * c0 * pow(d2, 2) -
            4 * pow(a5, 2) * b1 * c1 * pow(d0, 2) + 4 * pow(b0, 2) * b1 * c1 * pow(c5, 2) -
            4 * pow(b0, 2) * b2 * c2 * pow(c3, 2) + 4 * pow(b0, 2) * b3 * c0 * pow(c4, 2) -
            4 * pow(b0, 2) * b3 * pow(c1, 2) * c3 + 4 * pow(b1, 2) * b3 * pow(c0, 2) * c3 -
            6 * a0 * pow(a3, 2) * d0 * pow(d5, 2) + 3 * a0 * pow(a3, 2) * pow(d0, 2) * d5 -
            4 * a0 * pow(a3, 2) * pow(d2, 2) * d3 + 6 * a0 * pow(a5, 2) * d0 * pow(d3, 2) -
            3 * a0 * pow(a5, 2) * pow(d0, 2) * d3 + 9 * a0 * pow(b0, 2) * pow(c3, 2) * d5 -
            9 * a0 * pow(b0, 2) * pow(c5, 2) * d3 - 12 * a0 * pow(b2, 2) * pow(c3, 2) * d3 +
            3 * a0 * pow(b3, 2) * pow(c0, 2) * d5 - 4 * a0 * pow(b3, 2) * pow(c2, 2) * d3 -
            6 * a0 * pow(b3, 2) * pow(c5, 2) * d0 - 3 * a0 * pow(b5, 2) * pow(c0, 2) * d3 +
            6 * a0 * pow(b5, 2) * pow(c3, 2) * d0 + 64 * a1 * pow(a2, 2) * d1 * pow(d4, 2) -
            64 * a1 * pow(a4, 2) * d1 * pow(d2, 2) + 64 * a1 * pow(b2, 2) * pow(c4, 2) * d1 -
            64 * a1 * pow(b4, 2) * pow(c2, 2) * d1 + 16 * a2 * pow(a3, 2) * pow(d1, 2) * d2 +
            16 * a2 * pow(a4, 2) * pow(d0, 2) * d2 - 16 * a2 * pow(b0, 2) * pow(c4, 2) * d2 -
            16 * a2 * pow(b1, 2) * pow(c3, 2) * d2 + 16 * a2 * pow(b3, 2) * pow(c1, 2) * d2 +
            16 * a2 * pow(b4, 2) * pow(c0, 2) * d2 + 4 * a3 * pow(b0, 2) * pow(c2, 2) * d3 +
            3 * a3 * pow(b0, 2) * pow(c5, 2) * d0 - 4 * a3 * pow(b2, 2) * pow(c0, 2) * d3 +
            4 * a3 * pow(b2, 2) * pow(c3, 2) * d0 + 12 * a3 * pow(b3, 2) * pow(c2, 2) * d0 +
            9 * a3 * pow(b5, 2) * pow(c0, 2) * d0 - 3 * a5 * pow(b0, 2) * pow(c3, 2) * d0 -
            9 * a5 * pow(b3, 2) * pow(c0, 2) * d0 - 6 * b0 * pow(b3, 2) * c0 * pow(c5, 2) +
            3 * b0 * pow(b3, 2) * pow(c0, 2) * c5 - 4 * b0 * pow(b3, 2) * pow(c2, 2) * c3 +
            6 * b0 * pow(b5, 2) * c0 * pow(c3, 2) - 3 * b0 * pow(b5, 2) * pow(c0, 2) * c3 +
            64 * b1 * pow(b2, 2) * c1 * pow(c4, 2) - 64 * b1 * pow(b4, 2) * c1 * pow(c2, 2) +
            16 * b2 * pow(b3, 2) * pow(c1, 2) * c2 + 16 * b2 * pow(b4, 2) * pow(c0, 2) * c2 -
            16 * pow(a0, 2) * a2 * d2 * pow(d4, 2) + 3 * pow(a0, 2) * a3 * d0 * pow(d5, 2) +
            4 * pow(a0, 2) * a3 * pow(d2, 2) * d3 - 3 * pow(a0, 2) * a5 * d0 * pow(d3, 2) -
            9 * pow(a0, 2) * b0 * c3 * pow(d5, 2) + 9 * pow(a0, 2) * b0 * c5 * pow(d3, 2) -
            16 * pow(a0, 2) * b2 * c2 * pow(d4, 2) + 3 * pow(a0, 2) * b3 * c0 * pow(d5, 2) +
            4 * pow(a0, 2) * b3 * c3 * pow(d2, 2) - 3 * pow(a0, 2) * b5 * c0 * pow(d3, 2) -
            16 * pow(a1, 2) * a2 * d2 * pow(d3, 2) - 16 * pow(a1, 2) * b2 * c2 * pow(d3, 2) +
            4 * pow(a2, 2) * a3 * d0 * pow(d3, 2) - 4 * pow(a2, 2) * a3 * pow(d0, 2) * d3 -
            12 * pow(a2, 2) * b0 * c3 * pow(d3, 2) + 64 * pow(a2, 2) * b1 * c1 * pow(d4, 2) +
            4 * pow(a2, 2) * b3 * c0 * pow(d3, 2) - 4 * pow(a2, 2) * b3 * c3 * pow(d0, 2) -
            6 * pow(a3, 2) * b0 * c0 * pow(d5, 2) - 4 * pow(a3, 2) * b0 * c3 * pow(d2, 2) +
            3 * pow(a3, 2) * b0 * c5 * pow(d0, 2) + 16 * pow(a3, 2) * b2 * c2 * pow(d1, 2) +
            12 * pow(a3, 2) * b3 * c0 * pow(d2, 2) - 9 * pow(a3, 2) * b5 * c0 * pow(d0, 2) -
            64 * pow(a4, 2) * b1 * c1 * pow(d2, 2) + 16 * pow(a4, 2) * b2 * c2 * pow(d0, 2) +
            6 * pow(a5, 2) * b0 * c0 * pow(d3, 2) - 3 * pow(a5, 2) * b0 * c3 * pow(d0, 2) +
            9 * pow(a5, 2) * b3 * c0 * pow(d0, 2) - 16 * pow(b0, 2) * b2 * c2 * pow(c4, 2) +
            3 * pow(b0, 2) * b3 * c0 * pow(c5, 2) + 4 * pow(b0, 2) * b3 * pow(c2, 2) * c3 -
            3 * pow(b0, 2) * b5 * c0 * pow(c3, 2) - 16 * pow(b1, 2) * b2 * c2 * pow(c3, 2) +
            4 * pow(b2, 2) * b3 * c0 * pow(c3, 2) - 4 * pow(b2, 2) * b3 * pow(c0, 2) * c3 -
            8 * a0 * pow(a1, 2) * d3 * pow(d5, 2) + 4 * a0 * pow(a1, 2) * pow(d3, 2) * d5 -
            16 * a0 * pow(a2, 2) * d3 * pow(d4, 2) - 4 * a0 * pow(a3, 2) * pow(d1, 2) * d5 -
            4 * a0 * pow(a4, 2) * d0 * pow(d5, 2) + 4 * a0 * pow(a4, 2) * pow(d0, 2) * d5 +
            16 * a0 * pow(a4, 2) * pow(d2, 2) * d3 + 4 * a0 * pow(a5, 2) * d0 * pow(d4, 2) -
            8 * a0 * pow(a5, 2) * pow(d1, 2) * d3 + 12 * a0 * pow(b0, 2) * pow(c4, 2) * d5 +
            4 * a0 * pow(b1, 2) * pow(c3, 2) * d5 - 8 * a0 * pow(b1, 2) * pow(c5, 2) * d3 -
            16 * a0 * pow(b2, 2) * pow(c4, 2) * d3 - 4 * a0 * pow(b3, 2) * pow(c1, 2) * d5 +
            4 * a0 * pow(b4, 2) * pow(c0, 2) * d5 + 16 * a0 * pow(b4, 2) * pow(c2, 2) * d3 -
            4 * a0 * pow(b4, 2) * pow(c5, 2) * d0 - 8 * a0 * pow(b5, 2) * pow(c1, 2) * d3 +
            4 * a0 * pow(b5, 2) * pow(c4, 2) * d0 + 16 * a1 * pow(a2, 2) * d1 * pow(d5, 2) -
            16 * a1 * pow(a5, 2) * d1 * pow(d2, 2) + 16 * a1 * pow(b2, 2) * pow(c5, 2) * d1 -
            16 * a1 * pow(b5, 2) * pow(c2, 2) * d1 + 64 * a2 * pow(a4, 2) * pow(d1, 2) * d2 +
            4 * a2 * pow(a5, 2) * pow(d0, 2) * d2 - 4 * a2 * pow(b0, 2) * pow(c5, 2) * d2 -
            64 * a2 * pow(b1, 2) * pow(c4, 2) * d2 + 64 * a2 * pow(b4, 2) * pow(c1, 2) * d2 +
            4 * a2 * pow(b5, 2) * pow(c0, 2) * d2 + 16 * a3 * pow(a4, 2) * d0 * pow(d2, 2) +
            8 * a3 * pow(a5, 2) * d0 * pow(d1, 2) + 4 * a3 * pow(b0, 2) * pow(c1, 2) * d5 -
            4 * a3 * pow(b1, 2) * pow(c0, 2) * d5 + 16 * a3 * pow(b1, 2) * pow(c2, 2) * d3 +
            8 * a3 * pow(b1, 2) * pow(c5, 2) * d0 - 16 * a3 * pow(b2, 2) * pow(c1, 2) * d3 -
            16 * a3 * pow(b2, 2) * pow(c4, 2) * d0 + 16 * a3 * pow(b4, 2) * pow(c2, 2) * d0 +
            8 * a3 * pow(b5, 2) * pow(c1, 2) * d0 - 16 * a4 * pow(b0, 2) * pow(c1, 2) * d4 +
            16 * a4 * pow(b1, 2) * pow(c0, 2) * d4 + 4 * a5 * pow(b0, 2) * pow(c1, 2) * d3 -
            4 * a5 * pow(b0, 2) * pow(c4, 2) * d0 - 4 * a5 * pow(b1, 2) * pow(c0, 2) * d3 +
            4 * a5 * pow(b1, 2) * pow(c3, 2) * d0 - 4 * a5 * pow(b3, 2) * pow(c1, 2) * d0 -
            12 * a5 * pow(b4, 2) * pow(c0, 2) * d0 - 8 * b0 * pow(b1, 2) * c3 * pow(c5, 2) +
            4 * b0 * pow(b1, 2) * pow(c3, 2) * c5 - 16 * b0 * pow(b2, 2) * c3 * pow(c4, 2) -
            4 * b0 * pow(b3, 2) * pow(c1, 2) * c5 - 4 * b0 * pow(b4, 2) * c0 * pow(c5, 2) +
            4 * b0 * pow(b4, 2) * pow(c0, 2) * c5 + 16 * b0 * pow(b4, 2) * pow(c2, 2) * c3 +
            4 * b0 * pow(b5, 2) * c0 * pow(c4, 2) - 8 * b0 * pow(b5, 2) * pow(c1, 2) * c3 +
            16 * b1 * pow(b2, 2) * c1 * pow(c5, 2) - 16 * b1 * pow(b5, 2) * c1 * pow(c2, 2) +
            64 * b2 * pow(b4, 2) * pow(c1, 2) * c2 + 4 * b2 * pow(b5, 2) * pow(c0, 2) * c2 +
            16 * b3 * pow(b4, 2) * c0 * pow(c2, 2) + 8 * b3 * pow(b5, 2) * c0 * pow(c1, 2) -
            4 * pow(a0, 2) * a2 * d2 * pow(d5, 2) + 4 * pow(a0, 2) * a3 * pow(d1, 2) * d5 -
            16 * pow(a0, 2) * a4 * pow(d1, 2) * d4 - 4 * pow(a0, 2) * a5 * d0 * pow(d4, 2) +
            4 * pow(a0, 2) * a5 * pow(d1, 2) * d3 + 12 * pow(a0, 2) * b0 * c5 * pow(d4, 2) -
            4 * pow(a0, 2) * b2 * c2 * pow(d5, 2) + 4 * pow(a0, 2) * b3 * c5 * pow(d1, 2) -
            16 * pow(a0, 2) * b4 * c4 * pow(d1, 2) - 4 * pow(a0, 2) * b5 * c0 * pow(d4, 2) +
            4 * pow(a0, 2) * b5 * c3 * pow(d1, 2) - 64 * pow(a1, 2) * a2 * d2 * pow(d4, 2) +
            8 * pow(a1, 2) * a3 * d0 * pow(d5, 2) - 4 * pow(a1, 2) * a3 * pow(d0, 2) * d5 +
            16 * pow(a1, 2) * a3 * pow(d2, 2) * d3 + 16 * pow(a1, 2) * a4 * pow(d0, 2) * d4 +
            4 * pow(a1, 2) * a5 * d0 * pow(d3, 2) - 4 * pow(a1, 2) * a5 * pow(d0, 2) * d3 -
            8 * pow(a1, 2) * b0 * c3 * pow(d5, 2) + 4 * pow(a1, 2) * b0 * c5 * pow(d3, 2) -
            64 * pow(a1, 2) * b2 * c2 * pow(d4, 2) + 8 * pow(a1, 2) * b3 * c0 * pow(d5, 2) +
            16 * pow(a1, 2) * b3 * c3 * pow(d2, 2) - 4 * pow(a1, 2) * b3 * c5 * pow(d0, 2) +
            16 * pow(a1, 2) * b4 * c4 * pow(d0, 2) + 4 * pow(a1, 2) * b5 * c0 * pow(d3, 2) -
            4 * pow(a1, 2) * b5 * c3 * pow(d0, 2) - 16 * pow(a2, 2) * a3 * d0 * pow(d4, 2) -
            16 * pow(a2, 2) * a3 * pow(d1, 2) * d3 - 16 * pow(a2, 2) * b0 * c3 * pow(d4, 2) +
            16 * pow(a2, 2) * b1 * c1 * pow(d5, 2) - 16 * pow(a2, 2) * b3 * c0 * pow(d4, 2) -
            16 * pow(a2, 2) * b3 * c3 * pow(d1, 2) - 4 * pow(a3, 2) * a5 * d0 * pow(d1, 2) -
            4 * pow(a3, 2) * b0 * c5 * pow(d1, 2) - 4 * pow(a3, 2) * b5 * c0 * pow(d1, 2) -
            4 * pow(a4, 2) * b0 * c0 * pow(d5, 2) + 16 * pow(a4, 2) * b0 * c3 * pow(d2, 2) +
            4 * pow(a4, 2) * b0 * c5 * pow(d0, 2) + 64 * pow(a4, 2) * b2 * c2 * pow(d1, 2) +
            16 * pow(a4, 2) * b3 * c0 * pow(d2, 2) - 12 * pow(a4, 2) * b5 * c0 * pow(d0, 2) +
            4 * pow(a5, 2) * b0 * c0 * pow(d4, 2) - 8 * pow(a5, 2) * b0 * c3 * pow(d1, 2) -
            16 * pow(a5, 2) * b1 * c1 * pow(d2, 2) + 4 * pow(a5, 2) * b2 * c2 * pow(d0, 2) +
            8 * pow(a5, 2) * b3 * c0 * pow(d1, 2) - 4 * pow(b0, 2) * b2 * c2 * pow(c5, 2) +
            4 * pow(b0, 2) * b3 * pow(c1, 2) * c5 - 16 * pow(b0, 2) * b4 * pow(c1, 2) * c4 -
            4 * pow(b0, 2) * b5 * c0 * pow(c4, 2) + 4 * pow(b0, 2) * b5 * pow(c1, 2) * c3 -
            64 * pow(b1, 2) * b2 * c2 * pow(c4, 2) + 8 * pow(b1, 2) * b3 * c0 * pow(c5, 2) -
            4 * pow(b1, 2) * b3 * pow(c0, 2) * c5 + 16 * pow(b1, 2) * b3 * pow(c2, 2) * c3 +
            16 * pow(b1, 2) * b4 * pow(c0, 2) * c4 + 4 * pow(b1, 2) * b5 * c0 * pow(c3, 2) -
            4 * pow(b1, 2) * b5 * pow(c0, 2) * c3 - 16 * pow(b2, 2) * b3 * c0 * pow(c4, 2) -
            16 * pow(b2, 2) * b3 * pow(c1, 2) * c3 - 4 * pow(b3, 2) * b5 * c0 * pow(c1, 2) +
            16 * a0 * pow(a1, 2) * pow(d4, 2) * d5 - 4 * a0 * pow(a2, 2) * d3 * pow(d5, 2) +
            8 * a0 * pow(a2, 2) * pow(d3, 2) * d5 + 8 * a0 * pow(a3, 2) * pow(d2, 2) * d5 -
            16 * a0 * pow(a4, 2) * pow(d1, 2) * d5 + 3 * a0 * pow(a5, 2) * pow(d0, 2) * d5 +
            4 * a0 * pow(a5, 2) * pow(d2, 2) * d3 + 9 * a0 * pow(b0, 2) * pow(c5, 2) * d5 +
            16 * a0 * pow(b1, 2) * pow(c4, 2) * d5 + 8 * a0 * pow(b2, 2) * pow(c3, 2) * d5 -
            4 * a0 * pow(b2, 2) * pow(c5, 2) * d3 + 8 * a0 * pow(b3, 2) * pow(c2, 2) * d5 -
            16 * a0 * pow(b4, 2) * pow(c1, 2) * d5 + 3 * a0 * pow(b5, 2) * pow(c0, 2) * d5 +
            4 * a0 * pow(b5, 2) * pow(c2, 2) * d3 - 4 * a1 * pow(a3, 2) * d1 * pow(d5, 2) +
            4 * a1 * pow(a5, 2) * d1 * pow(d3, 2) - 4 * a1 * pow(b3, 2) * pow(c5, 2) * d1 +
            4 * a1 * pow(b5, 2) * pow(c3, 2) * d1 + 16 * a2 * pow(a5, 2) * pow(d1, 2) * d2 -
            16 * a2 * pow(b1, 2) * pow(c5, 2) * d2 + 16 * a2 * pow(b5, 2) * pow(c1, 2) * d2 -
            4 * a3 * pow(a4, 2) * pow(d0, 2) * d3 + 4 * a3 * pow(a5, 2) * d0 * pow(d2, 2) -
            4 * a3 * pow(b0, 2) * pow(c2, 2) * d5 + 4 * a3 * pow(b0, 2) * pow(c4, 2) * d3 +
            4 * a3 * pow(b2, 2) * pow(c0, 2) * d5 - 4 * a3 * pow(b2, 2) * pow(c5, 2) * d0 -
            4 * a3 * pow(b4, 2) * pow(c0, 2) * d3 + 4 * a3 * pow(b5, 2) * pow(c2, 2) * d0 +
            16 * a4 * pow(b0, 2) * pow(c2, 2) * d4 - 16 * a4 * pow(b2, 2) * pow(c0, 2) * d4 -
            4 * a5 * pow(b0, 2) * pow(c2, 2) * d3 - 3 * a5 * pow(b0, 2) * pow(c5, 2) * d0 +
            16 * a5 * pow(b1, 2) * pow(c4, 2) * d0 + 4 * a5 * pow(b2, 2) * pow(c0, 2) * d3 -
            8 * a5 * pow(b2, 2) * pow(c3, 2) * d0 - 8 * a5 * pow(b3, 2) * pow(c2, 2) * d0 -
            16 * a5 * pow(b4, 2) * pow(c1, 2) * d0 - 9 * a5 * pow(b5, 2) * pow(c0, 2) * d0 +
            16 * b0 * pow(b1, 2) * pow(c4, 2) * c5 - 4 * b0 * pow(b2, 2) * c3 * pow(c5, 2) +
            8 * b0 * pow(b2, 2) * pow(c3, 2) * c5 + 8 * b0 * pow(b3, 2) * pow(c2, 2) * c5 -
            16 * b0 * pow(b4, 2) * pow(c1, 2) * c5 + 3 * b0 * pow(b5, 2) * pow(c0, 2) * c5 +
            4 * b0 * pow(b5, 2) * pow(c2, 2) * c3 - 4 * b1 * pow(b3, 2) * c1 * pow(c5, 2) +
            4 * b1 * pow(b5, 2) * c1 * pow(c3, 2) + 16 * b2 * pow(b5, 2) * pow(c1, 2) * c2 -
            4 * b3 * pow(b4, 2) * pow(c0, 2) * c3 + 4 * b3 * pow(b5, 2) * c0 * pow(c2, 2) +
            4 * pow(a0, 2) * a3 * d3 * pow(d4, 2) - 4 * pow(a0, 2) * a3 * pow(d2, 2) * d5 +
            16 * pow(a0, 2) * a4 * pow(d2, 2) * d4 - 3 * pow(a0, 2) * a5 * d0 * pow(d5, 2) -
            4 * pow(a0, 2) * a5 * pow(d2, 2) * d3 + 9 * pow(a0, 2) * b0 * c5 * pow(d5, 2) +
            4 * pow(a0, 2) * b3 * c3 * pow(d4, 2) - 4 * pow(a0, 2) * b3 * c5 * pow(d2, 2) +
            16 * pow(a0, 2) * b4 * c4 * pow(d2, 2) - 3 * pow(a0, 2) * b5 * c0 * pow(d5, 2) -
            4 * pow(a0, 2) * b5 * c3 * pow(d2, 2) - 16 * pow(a1, 2) * a2 * d2 * pow(d5, 2) +
            16 * pow(a1, 2) * a5 * d0 * pow(d4, 2) + 16 * pow(a1, 2) * b0 * c5 * pow(d4, 2) -
            16 * pow(a1, 2) * b2 * c2 * pow(d5, 2) + 16 * pow(a1, 2) * b5 * c0 * pow(d4, 2) -
            4 * pow(a2, 2) * a3 * d0 * pow(d5, 2) + 4 * pow(a2, 2) * a3 * pow(d0, 2) * d5 -
            16 * pow(a2, 2) * a4 * pow(d0, 2) * d4 - 8 * pow(a2, 2) * a5 * d0 * pow(d3, 2) +
            4 * pow(a2, 2) * a5 * pow(d0, 2) * d3 - 4 * pow(a2, 2) * b0 * c3 * pow(d5, 2) +
            8 * pow(a2, 2) * b0 * c5 * pow(d3, 2) - 4 * pow(a2, 2) * b3 * c0 * pow(d5, 2) +
            4 * pow(a2, 2) * b3 * c5 * pow(d0, 2) - 16 * pow(a2, 2) * b4 * c4 * pow(d0, 2) -
            8 * pow(a2, 2) * b5 * c0 * pow(d3, 2) + 4 * pow(a2, 2) * b5 * c3 * pow(d0, 2) -
            8 * pow(a3, 2) * a5 * d0 * pow(d2, 2) + 8 * pow(a3, 2) * b0 * c5 * pow(d2, 2) -
            4 * pow(a3, 2) * b1 * c1 * pow(d5, 2) - 8 * pow(a3, 2) * b5 * c0 * pow(d2, 2) -
            16 * pow(a4, 2) * a5 * d0 * pow(d1, 2) - 16 * pow(a4, 2) * b0 * c5 * pow(d1, 2) -
            4 * pow(a4, 2) * b3 * c3 * pow(d0, 2) - 16 * pow(a4, 2) * b5 * c0 * pow(d1, 2) +
            4 * pow(a5, 2) * b0 * c3 * pow(d2, 2) + 3 * pow(a5, 2) * b0 * c5 * pow(d0, 2) +
            4 * pow(a5, 2) * b1 * c1 * pow(d3, 2) + 16 * pow(a5, 2) * b2 * c2 * pow(d1, 2) +
            4 * pow(a5, 2) * b3 * c0 * pow(d2, 2) - 9 * pow(a5, 2) * b5 * c0 * pow(d0, 2) +
            4 * pow(b0, 2) * b3 * c3 * pow(c4, 2) - 4 * pow(b0, 2) * b3 * pow(c2, 2) * c5 +
            16 * pow(b0, 2) * b4 * pow(c2, 2) * c4 - 3 * pow(b0, 2) * b5 * c0 * pow(c5, 2) -
            4 * pow(b0, 2) * b5 * pow(c2, 2) * c3 - 16 * pow(b1, 2) * b2 * c2 * pow(c5, 2) +
            16 * pow(b1, 2) * b5 * c0 * pow(c4, 2) - 4 * pow(b2, 2) * b3 * c0 * pow(c5, 2) +
            4 * pow(b2, 2) * b3 * pow(c0, 2) * c5 - 16 * pow(b2, 2) * b4 * pow(c0, 2) * c4 -
            8 * pow(b2, 2) * b5 * c0 * pow(c3, 2) + 4 * pow(b2, 2) * b5 * pow(c0, 2) * c3 -
            8 * pow(b3, 2) * b5 * c0 * pow(c2, 2) - 16 * pow(b4, 2) * b5 * c0 * pow(c1, 2) -
            3 * a0 * pow(a3, 2) * d3 * pow(d5, 2) + 4 * a0 * pow(a5, 2) * pow(d1, 2) * d5 +
            12 * a0 * pow(b1, 2) * pow(c5, 2) * d5 - 3 * a0 * pow(b3, 2) * pow(c5, 2) * d3 +
            4 * a0 * pow(b5, 2) * pow(c1, 2) * d5 - 9 * a0 * pow(b5, 2) * pow(c3, 2) * d3 -
            16 * a1 * pow(a4, 2) * d1 * pow(d5, 2) + 16 * a1 * pow(a5, 2) * d1 * pow(d4, 2) -
            16 * a1 * pow(b4, 2) * pow(c5, 2) * d1 + 16 * a1 * pow(b5, 2) * pow(c4, 2) * d1 -
            16 * a2 * pow(a3, 2) * d2 * pow(d4, 2) + 16 * a2 * pow(a4, 2) * d2 * pow(d3, 2) -
            16 * a2 * pow(b3, 2) * pow(c4, 2) * d2 + 16 * a2 * pow(b4, 2) * pow(c3, 2) * d2 +
            3 * a3 * pow(a5, 2) * d0 * pow(d3, 2) - 6 * a3 * pow(a5, 2) * pow(d0, 2) * d3 -
            3 * a3 * pow(b0, 2) * pow(c3, 2) * d5 + 6 * a3 * pow(b0, 2) * pow(c5, 2) * d3 -
            16 * a3 * pow(b1, 2) * pow(c2, 2) * d5 + 16 * a3 * pow(b2, 2) * pow(c1, 2) * d5 -
            9 * a3 * pow(b3, 2) * pow(c0, 2) * d5 + 9 * a3 * pow(b3, 2) * pow(c5, 2) * d0 -
            6 * a3 * pow(b5, 2) * pow(c0, 2) * d3 + 3 * a3 * pow(b5, 2) * pow(c3, 2) * d0 -
            4 * a4 * pow(b0, 2) * pow(c3, 2) * d4 + 64 * a4 * pow(b1, 2) * pow(c2, 2) * d4 -
            64 * a4 * pow(b2, 2) * pow(c1, 2) * d4 + 4 * a4 * pow(b3, 2) * pow(c0, 2) * d4 -
            4 * a5 * pow(b0, 2) * pow(c1, 2) * d5 + 9 * a5 * pow(b0, 2) * pow(c3, 2) * d3 +
            4 * a5 * pow(b1, 2) * pow(c0, 2) * d5 - 16 * a5 * pow(b1, 2) * pow(c2, 2) * d3 -
            4 * a5 * pow(b1, 2) * pow(c5, 2) * d0 + 16 * a5 * pow(b2, 2) * pow(c1, 2) * d3 +
            3 * a5 * pow(b3, 2) * pow(c0, 2) * d3 - 12 * a5 * pow(b5, 2) * pow(c1, 2) * d0 -
            3 * b0 * pow(b3, 2) * c3 * pow(c5, 2) + 4 * b0 * pow(b5, 2) * pow(c1, 2) * c5 -
            16 * b1 * pow(b4, 2) * c1 * pow(c5, 2) + 16 * b1 * pow(b5, 2) * c1 * pow(c4, 2) -
            16 * b2 * pow(b3, 2) * c2 * pow(c4, 2) + 16 * b2 * pow(b4, 2) * c2 * pow(c3, 2) +
            3 * b3 * pow(b5, 2) * c0 * pow(c3, 2) - 6 * b3 * pow(b5, 2) * pow(c0, 2) * c3 +
            6 * pow(a0, 2) * a3 * d3 * pow(d5, 2) - 3 * pow(a0, 2) * a3 * pow(d3, 2) * d5 -
            4 * pow(a0, 2) * a4 * pow(d3, 2) * d4 - 4 * pow(a0, 2) * a5 * pow(d1, 2) * d5 +
            6 * pow(a0, 2) * b3 * c3 * pow(d5, 2) - 3 * pow(a0, 2) * b3 * c5 * pow(d3, 2) -
            4 * pow(a0, 2) * b4 * c4 * pow(d3, 2) + 9 * pow(a0, 2) * b5 * c3 * pow(d3, 2) -
            4 * pow(a0, 2) * b5 * c5 * pow(d1, 2) - 16 * pow(a1, 2) * a3 * pow(d2, 2) * d5 +
            64 * pow(a1, 2) * a4 * pow(d2, 2) * d4 - 4 * pow(a1, 2) * a5 * d0 * pow(d5, 2) +
            4 * pow(a1, 2) * a5 * pow(d0, 2) * d5 - 16 * pow(a1, 2) * a5 * pow(d2, 2) * d3 +
            12 * pow(a1, 2) * b0 * c5 * pow(d5, 2) - 16 * pow(a1, 2) * b3 * c5 * pow(d2, 2) +
            64 * pow(a1, 2) * b4 * c4 * pow(d2, 2) - 4 * pow(a1, 2) * b5 * c0 * pow(d5, 2) -
            16 * pow(a1, 2) * b5 * c3 * pow(d2, 2) + 4 * pow(a1, 2) * b5 * c5 * pow(d0, 2) +
            16 * pow(a2, 2) * a3 * pow(d1, 2) * d5 - 64 * pow(a2, 2) * a4 * pow(d1, 2) * d4 +
            16 * pow(a2, 2) * a5 * pow(d1, 2) * d3 + 16 * pow(a2, 2) * b3 * c5 * pow(d1, 2) -
            64 * pow(a2, 2) * b4 * c4 * pow(d1, 2) + 16 * pow(a2, 2) * b5 * c3 * pow(d1, 2) +
            4 * pow(a3, 2) * a4 * pow(d0, 2) * d4 + 3 * pow(a3, 2) * a5 * pow(d0, 2) * d3 -
            3 * pow(a3, 2) * b0 * c3 * pow(d5, 2) - 16 * pow(a3, 2) * b2 * c2 * pow(d4, 2) +
            9 * pow(a3, 2) * b3 * c0 * pow(d5, 2) - 9 * pow(a3, 2) * b3 * c5 * pow(d0, 2) +
            4 * pow(a3, 2) * b4 * c4 * pow(d0, 2) + 3 * pow(a3, 2) * b5 * c3 * pow(d0, 2) -
            16 * pow(a4, 2) * b1 * c1 * pow(d5, 2) + 16 * pow(a4, 2) * b2 * c2 * pow(d3, 2) -
            9 * pow(a5, 2) * b0 * c3 * pow(d3, 2) + 4 * pow(a5, 2) * b0 * c5 * pow(d1, 2) +
            16 * pow(a5, 2) * b1 * c1 * pow(d4, 2) + 3 * pow(a5, 2) * b3 * c0 * pow(d3, 2) -
            6 * pow(a5, 2) * b3 * c3 * pow(d0, 2) - 12 * pow(a5, 2) * b5 * c0 * pow(d1, 2) +
            6 * pow(b0, 2) * b3 * c3 * pow(c5, 2) - 3 * pow(b0, 2) * b3 * pow(c3, 2) * c5 -
            4 * pow(b0, 2) * b4 * pow(c3, 2) * c4 - 4 * pow(b0, 2) * b5 * pow(c1, 2) * c5 -
            16 * pow(b1, 2) * b3 * pow(c2, 2) * c5 + 64 * pow(b1, 2) * b4 * pow(c2, 2) * c4 -
            4 * pow(b1, 2) * b5 * c0 * pow(c5, 2) + 4 * pow(b1, 2) * b5 * pow(c0, 2) * c5 -
            16 * pow(b1, 2) * b5 * pow(c2, 2) * c3 + 16 * pow(b2, 2) * b3 * pow(c1, 2) * c5 -
            64 * pow(b2, 2) * b4 * pow(c1, 2) * c4 + 16 * pow(b2, 2) * b5 * pow(c1, 2) * c3 +
            4 * pow(b3, 2) * b4 * pow(c0, 2) * c4 + 3 * pow(b3, 2) * b5 * pow(c0, 2) * c3 +
            4 * a0 * pow(a3, 2) * pow(d4, 2) * d5 + 4 * a0 * pow(a4, 2) * d3 * pow(d5, 2) -
            4 * a0 * pow(a4, 2) * pow(d3, 2) * d5 - 4 * a0 * pow(a5, 2) * d3 * pow(d4, 2) +
            4 * a0 * pow(b3, 2) * pow(c4, 2) * d5 - 4 * a0 * pow(b4, 2) * pow(c3, 2) * d5 +
            4 * a0 * pow(b4, 2) * pow(c5, 2) * d3 - 4 * a0 * pow(b5, 2) * pow(c4, 2) * d3 -
            4 * a2 * pow(a3, 2) * d2 * pow(d5, 2) + 4 * a2 * pow(a5, 2) * d2 * pow(d3, 2) -
            4 * a2 * pow(b3, 2) * pow(c5, 2) * d2 + 4 * a2 * pow(b5, 2) * pow(c3, 2) * d2 +
            4 * a3 * pow(a4, 2) * d0 * pow(d5, 2) - 8 * a3 * pow(a4, 2) * pow(d0, 2) * d5 -
            16 * a3 * pow(a4, 2) * pow(d2, 2) * d3 - 4 * a3 * pow(a5, 2) * d0 * pow(d4, 2) -
            4 * a3 * pow(a5, 2) * pow(d1, 2) * d3 - 8 * a3 * pow(b0, 2) * pow(c4, 2) * d5 +
            4 * a3 * pow(b1, 2) * pow(c5, 2) * d3 + 16 * a3 * pow(b2, 2) * pow(c4, 2) * d3 -
            8 * a3 * pow(b4, 2) * pow(c0, 2) * d5 - 16 * a3 * pow(b4, 2) * pow(c2, 2) * d3 +
            4 * a3 * pow(b4, 2) * pow(c5, 2) * d0 - 4 * a3 * pow(b5, 2) * pow(c1, 2) * d3 -
            4 * a3 * pow(b5, 2) * pow(c4, 2) * d0 + 4 * a5 * pow(b0, 2) * pow(c2, 2) * d5 +
            8 * a5 * pow(b0, 2) * pow(c4, 2) * d3 - 4 * a5 * pow(b2, 2) * pow(c0, 2) * d5 +
            4 * a5 * pow(b3, 2) * pow(c4, 2) * d0 + 8 * a5 * pow(b4, 2) * pow(c0, 2) * d3 -
            4 * a5 * pow(b4, 2) * pow(c3, 2) * d0 + 4 * b0 * pow(b3, 2) * pow(c4, 2) * c5 +
            4 * b0 * pow(b4, 2) * c3 * pow(c5, 2) - 4 * b0 * pow(b4, 2) * pow(c3, 2) * c5 -
            4 * b0 * pow(b5, 2) * c3 * pow(c4, 2) - 4 * b2 * pow(b3, 2) * c2 * pow(c5, 2) +
            4 * b2 * pow(b5, 2) * c2 * pow(c3, 2) + 4 * b3 * pow(b4, 2) * c0 * pow(c5, 2) -
            8 * b3 * pow(b4, 2) * pow(c0, 2) * c5 - 16 * b3 * pow(b4, 2) * pow(c2, 2) * c3 -
            4 * b3 * pow(b5, 2) * c0 * pow(c4, 2) - 4 * b3 * pow(b5, 2) * pow(c1, 2) * c3 -
            8 * pow(a0, 2) * a3 * pow(d4, 2) * d5 + 8 * pow(a0, 2) * a5 * d3 * pow(d4, 2) +
            4 * pow(a0, 2) * a5 * pow(d2, 2) * d5 - 8 * pow(a0, 2) * b3 * c5 * pow(d4, 2) +
            8 * pow(a0, 2) * b5 * c3 * pow(d4, 2) + 4 * pow(a0, 2) * b5 * c5 * pow(d2, 2) +
            4 * pow(a1, 2) * a3 * d3 * pow(d5, 2) + 4 * pow(a1, 2) * b3 * c3 * pow(d5, 2) +
            16 * pow(a2, 2) * a3 * d3 * pow(d4, 2) - 4 * pow(a2, 2) * a5 * pow(d0, 2) * d5 +
            16 * pow(a2, 2) * b3 * c3 * pow(d4, 2) - 4 * pow(a2, 2) * b5 * c5 * pow(d0, 2) +
            4 * pow(a3, 2) * a5 * d0 * pow(d4, 2) + 4 * pow(a3, 2) * b0 * c5 * pow(d4, 2) -
            4 * pow(a3, 2) * b2 * c2 * pow(d5, 2) + 4 * pow(a3, 2) * b5 * c0 * pow(d4, 2) -
            4 * pow(a4, 2) * a5 * d0 * pow(d3, 2) + 8 * pow(a4, 2) * a5 * pow(d0, 2) * d3 +
            4 * pow(a4, 2) * b0 * c3 * pow(d5, 2) - 4 * pow(a4, 2) * b0 * c5 * pow(d3, 2) +
            4 * pow(a4, 2) * b3 * c0 * pow(d5, 2) - 16 * pow(a4, 2) * b3 * c3 * pow(d2, 2) -
            8 * pow(a4, 2) * b3 * c5 * pow(d0, 2) - 4 * pow(a4, 2) * b5 * c0 * pow(d3, 2) +
            8 * pow(a4, 2) * b5 * c3 * pow(d0, 2) - 4 * pow(a5, 2) * b0 * c3 * pow(d4, 2) +
            4 * pow(a5, 2) * b2 * c2 * pow(d3, 2) - 4 * pow(a5, 2) * b3 * c0 * pow(d4, 2) -
            4 * pow(a5, 2) * b3 * c3 * pow(d1, 2) - 8 * pow(b0, 2) * b3 * pow(c4, 2) * c5 +
            8 * pow(b0, 2) * b5 * c3 * pow(c4, 2) + 4 * pow(b0, 2) * b5 * pow(c2, 2) * c5 +
            4 * pow(b1, 2) * b3 * c3 * pow(c5, 2) + 16 * pow(b2, 2) * b3 * c3 * pow(c4, 2) -
            4 * pow(b2, 2) * b5 * pow(c0, 2) * c5 + 4 * pow(b3, 2) * b5 * c0 * pow(c4, 2) -
            4 * pow(b4, 2) * b5 * c0 * pow(c3, 2) + 8 * pow(b4, 2) * b5 * pow(c0, 2) * c3 +
            3 * a0 * pow(a5, 2) * pow(d3, 2) * d5 + 9 * a0 * pow(b3, 2) * pow(c5, 2) * d5 +
            3 * a0 * pow(b5, 2) * pow(c3, 2) * d5 - 3 * a3 * pow(a5, 2) * pow(d0, 2) * d5 -
            4 * a3 * pow(a5, 2) * pow(d2, 2) * d3 - 9 * a3 * pow(b0, 2) * pow(c5, 2) * d5 -
            4 * a3 * pow(b2, 2) * pow(c3, 2) * d5 + 4 * a3 * pow(b2, 2) * pow(c5, 2) * d3 -
            12 * a3 * pow(b3, 2) * pow(c2, 2) * d5 - 3 * a3 * pow(b5, 2) * pow(c0, 2) * d5 -
            4 * a3 * pow(b5, 2) * pow(c2, 2) * d3 - 4 * a4 * pow(a5, 2) * pow(d0, 2) * d4 +
            4 * a4 * pow(b0, 2) * pow(c5, 2) * d4 - 16 * a4 * pow(b2, 2) * pow(c3, 2) * d4 +
            16 * a4 * pow(b3, 2) * pow(c2, 2) * d4 - 4 * a4 * pow(b5, 2) * pow(c0, 2) * d4 -
            6 * a5 * pow(b0, 2) * pow(c3, 2) * d5 + 3 * a5 * pow(b0, 2) * pow(c5, 2) * d3 +
            16 * a5 * pow(b1, 2) * pow(c2, 2) * d5 - 16 * a5 * pow(b2, 2) * pow(c1, 2) * d5 +
            12 * a5 * pow(b2, 2) * pow(c3, 2) * d3 + 6 * a5 * pow(b3, 2) * pow(c0, 2) * d5 +
            4 * a5 * pow(b3, 2) * pow(c2, 2) * d3 - 3 * a5 * pow(b3, 2) * pow(c5, 2) * d0 +
            9 * a5 * pow(b5, 2) * pow(c0, 2) * d3 - 9 * a5 * pow(b5, 2) * pow(c3, 2) * d0 +
            3 * b0 * pow(b5, 2) * pow(c3, 2) * c5 - 3 * b3 * pow(b5, 2) * pow(c0, 2) * c5 -
            4 * b3 * pow(b5, 2) * pow(c2, 2) * c3 - 4 * b4 * pow(b5, 2) * pow(c0, 2) * c4 +
            4 * pow(a0, 2) * a4 * d4 * pow(d5, 2) + 3 * pow(a0, 2) * a5 * d3 * pow(d5, 2) -
            6 * pow(a0, 2) * a5 * pow(d3, 2) * d5 - 9 * pow(a0, 2) * b3 * c5 * pow(d5, 2) +
            4 * pow(a0, 2) * b4 * c4 * pow(d5, 2) + 3 * pow(a0, 2) * b5 * c3 * pow(d5, 2) -
            6 * pow(a0, 2) * b5 * c5 * pow(d3, 2) + 16 * pow(a1, 2) * a5 * pow(d2, 2) * d5 +
            16 * pow(a1, 2) * b5 * c5 * pow(d2, 2) + 4 * pow(a2, 2) * a3 * d3 * pow(d5, 2) -
            4 * pow(a2, 2) * a3 * pow(d3, 2) * d5 - 16 * pow(a2, 2) * a4 * pow(d3, 2) * d4 -
            16 * pow(a2, 2) * a5 * pow(d1, 2) * d5 + 4 * pow(a2, 2) * b3 * c3 * pow(d5, 2) -
            4 * pow(a2, 2) * b3 * c5 * pow(d3, 2) - 16 * pow(a2, 2) * b4 * c4 * pow(d3, 2) +
            12 * pow(a2, 2) * b5 * c3 * pow(d3, 2) - 16 * pow(a2, 2) * b5 * c5 * pow(d1, 2) +
            16 * pow(a3, 2) * a4 * pow(d2, 2) * d4 - 3 * pow(a3, 2) * a5 * d0 * pow(d5, 2) +
            6 * pow(a3, 2) * a5 * pow(d0, 2) * d5 + 4 * pow(a3, 2) * a5 * pow(d2, 2) * d3 +
            9 * pow(a3, 2) * b0 * c5 * pow(d5, 2) - 12 * pow(a3, 2) * b3 * c5 * pow(d2, 2) +
            16 * pow(a3, 2) * b4 * c4 * pow(d2, 2) - 3 * pow(a3, 2) * b5 * c0 * pow(d5, 2) +
            4 * pow(a3, 2) * b5 * c3 * pow(d2, 2) + 6 * pow(a3, 2) * b5 * c5 * pow(d0, 2) +
            3 * pow(a5, 2) * b0 * c5 * pow(d3, 2) - 4 * pow(a5, 2) * b3 * c3 * pow(d2, 2) -
            3 * pow(a5, 2) * b3 * c5 * pow(d0, 2) - 4 * pow(a5, 2) * b4 * c4 * pow(d0, 2) -
            9 * pow(a5, 2) * b5 * c0 * pow(d3, 2) + 9 * pow(a5, 2) * b5 * c3 * pow(d0, 2) +
            4 * pow(b0, 2) * b4 * c4 * pow(c5, 2) + 3 * pow(b0, 2) * b5 * c3 * pow(c5, 2) -
            6 * pow(b0, 2) * b5 * pow(c3, 2) * c5 + 16 * pow(b1, 2) * b5 * pow(c2, 2) * c5 +
            4 * pow(b2, 2) * b3 * c3 * pow(c5, 2) - 4 * pow(b2, 2) * b3 * pow(c3, 2) * c5 -
            16 * pow(b2, 2) * b4 * pow(c3, 2) * c4 - 16 * pow(b2, 2) * b5 * pow(c1, 2) * c5 +
            16 * pow(b3, 2) * b4 * pow(c2, 2) * c4 - 3 * pow(b3, 2) * b5 * c0 * pow(c5, 2) +
            6 * pow(b3, 2) * b5 * pow(c0, 2) * c5 + 4 * pow(b3, 2) * b5 * pow(c2, 2) * c3 -
            4 * a3 * pow(a5, 2) * pow(d1, 2) * d5 - 12 * a3 * pow(b1, 2) * pow(c5, 2) * d5 -
            4 * a3 * pow(b5, 2) * pow(c1, 2) * d5 - 16 * a4 * pow(a5, 2) * pow(d1, 2) * d4 +
            16 * a4 * pow(b1, 2) * pow(c5, 2) * d4 - 16 * a4 * pow(b5, 2) * pow(c1, 2) * d4 -
            4 * a5 * pow(b0, 2) * pow(c4, 2) * d5 - 4 * a5 * pow(b1, 2) * pow(c3, 2) * d5 +
            4 * a5 * pow(b1, 2) * pow(c5, 2) * d3 + 4 * a5 * pow(b3, 2) * pow(c1, 2) * d5 +
            4 * a5 * pow(b4, 2) * pow(c0, 2) * d5 + 12 * a5 * pow(b5, 2) * pow(c1, 2) * d3 -
            4 * b3 * pow(b5, 2) * pow(c1, 2) * c5 - 16 * b4 * pow(b5, 2) * pow(c1, 2) * c4 -
            4 * pow(a0, 2) * a5 * pow(d4, 2) * d5 - 4 * pow(a0, 2) * b5 * c5 * pow(d4, 2) +
            16 * pow(a1, 2) * a4 * d4 * pow(d5, 2) + 4 * pow(a1, 2) * a5 * d3 * pow(d5, 2) -
            4 * pow(a1, 2) * a5 * pow(d3, 2) * d5 - 12 * pow(a1, 2) * b3 * c5 * pow(d5, 2) +
            16 * pow(a1, 2) * b4 * c4 * pow(d5, 2) + 4 * pow(a1, 2) * b5 * c3 * pow(d5, 2) -
            4 * pow(a1, 2) * b5 * c5 * pow(d3, 2) + 4 * pow(a3, 2) * a5 * pow(d1, 2) * d5 +
            4 * pow(a3, 2) * b5 * c5 * pow(d1, 2) + 4 * pow(a4, 2) * a5 * pow(d0, 2) * d5 +
            4 * pow(a4, 2) * b5 * c5 * pow(d0, 2) - 4 * pow(a5, 2) * b3 * c5 * pow(d1, 2) -
            16 * pow(a5, 2) * b4 * c4 * pow(d1, 2) + 12 * pow(a5, 2) * b5 * c3 * pow(d1, 2) -
            4 * pow(b0, 2) * b5 * pow(c4, 2) * c5 + 16 * pow(b1, 2) * b4 * c4 * pow(c5, 2) +
            4 * pow(b1, 2) * b5 * c3 * pow(c5, 2) - 4 * pow(b1, 2) * b5 * pow(c3, 2) * c5 +
            4 * pow(b3, 2) * b5 * pow(c1, 2) * c5 + 4 * pow(b4, 2) * b5 * pow(c0, 2) * c5 -
            4 * a3 * pow(a4, 2) * d3 * pow(d5, 2) + 4 * a3 * pow(a5, 2) * d3 * pow(d4, 2) -
            4 * a3 * pow(b4, 2) * pow(c5, 2) * d3 + 4 * a3 * pow(b5, 2) * pow(c4, 2) * d3 -
            16 * a5 * pow(b1, 2) * pow(c4, 2) * d5 - 4 * a5 * pow(b2, 2) * pow(c3, 2) * d5 +
            4 * a5 * pow(b3, 2) * pow(c2, 2) * d5 + 16 * a5 * pow(b4, 2) * pow(c1, 2) * d5 -
            4 * b3 * pow(b4, 2) * c3 * pow(c5, 2) + 4 * b3 * pow(b5, 2) * c3 * pow(c4, 2) -
            16 * pow(a1, 2) * a5 * pow(d4, 2) * d5 - 16 * pow(a1, 2) * b5 * c5 * pow(d4, 2) -
            4 * pow(a2, 2) * a5 * pow(d3, 2) * d5 - 4 * pow(a2, 2) * b5 * c5 * pow(d3, 2) +
            4 * pow(a3, 2) * a5 * pow(d2, 2) * d5 + 4 * pow(a3, 2) * b5 * c5 * pow(d2, 2) +
            16 * pow(a4, 2) * a5 * pow(d1, 2) * d5 - 4 * pow(a4, 2) * b3 * c3 * pow(d5, 2) +
            16 * pow(a4, 2) * b5 * c5 * pow(d1, 2) + 4 * pow(a5, 2) * b3 * c3 * pow(d4, 2) -
            16 * pow(b1, 2) * b5 * pow(c4, 2) * c5 - 4 * pow(b2, 2) * b5 * pow(c3, 2) * c5 +
            4 * pow(b3, 2) * b5 * pow(c2, 2) * c5 + 16 * pow(b4, 2) * b5 * pow(c1, 2) * c5 -
            3 * a3 * pow(a5, 2) * pow(d3, 2) * d5 - 9 * a3 * pow(b3, 2) * pow(c5, 2) * d5 -
            3 * a3 * pow(b5, 2) * pow(c3, 2) * d5 - 4 * a4 * pow(a5, 2) * pow(d3, 2) * d4 +
            4 * a4 * pow(b3, 2) * pow(c5, 2) * d4 - 4 * a4 * pow(b5, 2) * pow(c3, 2) * d4 +
            3 * a5 * pow(b3, 2) * pow(c5, 2) * d3 + 9 * a5 * pow(b5, 2) * pow(c3, 2) * d3 -
            3 * b3 * pow(b5, 2) * pow(c3, 2) * c5 - 4 * b4 * pow(b5, 2) * pow(c3, 2) * c4 +
            4 * pow(a3, 2) * a4 * d4 * pow(d5, 2) + 3 * pow(a3, 2) * a5 * d3 * pow(d5, 2) -
            9 * pow(a3, 2) * b3 * c5 * pow(d5, 2) + 4 * pow(a3, 2) * b4 * c4 * pow(d5, 2) +
            3 * pow(a3, 2) * b5 * c3 * pow(d5, 2) - 3 * pow(a5, 2) * b3 * c5 * pow(d3, 2) -
            4 * pow(a5, 2) * b4 * c4 * pow(d3, 2) + 9 * pow(a5, 2) * b5 * c3 * pow(d3, 2) +
            4 * pow(b3, 2) * b4 * c4 * pow(c5, 2) + 3 * pow(b3, 2) * b5 * c3 * pow(c5, 2) -
            4 * a5 * pow(b3, 2) * pow(c4, 2) * d5 + 4 * a5 * pow(b4, 2) * pow(c3, 2) * d5 -
            4 * pow(a3, 2) * a5 * pow(d4, 2) * d5 - 4 * pow(a3, 2) * b5 * c5 * pow(d4, 2) +
            4 * pow(a4, 2) * a5 * pow(d3, 2) * d5 + 4 * pow(a4, 2) * b5 * c5 * pow(d3, 2) -
            4 * pow(b3, 2) * b5 * pow(c4, 2) * c5 + 4 * pow(b4, 2) * b5 * pow(c3, 2) * c5 +
            8 * a0 * a1 * b0 * c1 * pow(d3, 2) - 8 * a0 * a1 * b1 * c0 * pow(d3, 2) +
            32 * a0 * a1 * b0 * c1 * pow(d4, 2) - 32 * a0 * a1 * b1 * c0 * pow(d4, 2) +
            6 * a0 * a3 * b0 * c0 * pow(d3, 2) + 8 * a0 * a1 * b0 * c1 * pow(d5, 2) -
            8 * a0 * a1 * b1 * c0 * pow(d5, 2) - 8 * a0 * a2 * b0 * c2 * pow(d3, 2) +
            8 * a0 * a2 * b2 * c0 * pow(d3, 2) + 8 * a0 * a3 * b0 * c0 * pow(d4, 2) -
            8 * a0 * a3 * b0 * c3 * pow(d1, 2) + 8 * a0 * a3 * b3 * c0 * pow(d1, 2) -
            32 * a0 * a2 * b0 * c2 * pow(d4, 2) + 32 * a0 * a2 * b2 * c0 * pow(d4, 2) +
            6 * a0 * a3 * b0 * c0 * pow(d5, 2) + 8 * a0 * a3 * b0 * c3 * pow(d2, 2) -
            8 * a0 * a3 * b3 * c0 * pow(d2, 2) - 6 * a0 * a5 * b0 * c0 * pow(d3, 2) +
            8 * a1 * a3 * b1 * c3 * pow(d0, 2) - 8 * a1 * a3 * b3 * c1 * pow(d0, 2) -
            8 * a0 * a2 * b0 * c2 * pow(d5, 2) + 8 * a0 * a2 * b2 * c0 * pow(d5, 2) -
            8 * a0 * a3 * a5 * d0 * pow(d1, 2) + 8 * a0 * a3 * b0 * c5 * pow(d1, 2) -
            6 * a0 * a3 * b3 * c3 * pow(d0, 2) - 8 * a0 * a3 * b5 * c0 * pow(d1, 2) -
            32 * a0 * a4 * b0 * c4 * pow(d1, 2) + 32 * a0 * a4 * b4 * c0 * pow(d1, 2) -
            8 * a0 * a5 * b0 * c0 * pow(d4, 2) + 8 * a0 * a5 * b0 * c3 * pow(d1, 2) -
            8 * a0 * a5 * b3 * c0 * pow(d1, 2) - 32 * a1 * a2 * b1 * c2 * pow(d3, 2) +
            32 * a1 * a2 * b2 * c1 * pow(d3, 2) - 8 * a3 * a5 * b0 * c0 * pow(d1, 2) +
            16 * a0 * a1 * a4 * d2 * pow(d3, 2) - 8 * a0 * a1 * a5 * d1 * pow(d3, 2) -
            16 * a0 * a1 * b1 * c3 * pow(d5, 2) + 8 * a0 * a1 * b1 * c5 * pow(d3, 2) +
            16 * a0 * a1 * b4 * c2 * pow(d3, 2) - 8 * a0 * a1 * b5 * c1 * pow(d3, 2) +
            8 * a0 * a2 * a3 * d2 * pow(d3, 2) - 24 * a0 * a2 * b2 * c3 * pow(d3, 2) +
            8 * a0 * a2 * b3 * c2 * pow(d3, 2) + 8 * a0 * a3 * a5 * d0 * pow(d2, 2) +
            8 * a0 * a3 * b0 * c3 * pow(d4, 2) - 8 * a0 * a3 * b0 * c5 * pow(d2, 2) +
            8 * a0 * a3 * b2 * c2 * pow(d3, 2) - 8 * a0 * a3 * b3 * c0 * pow(d4, 2) +
            8 * a0 * a3 * b5 * c0 * pow(d2, 2) + 32 * a0 * a4 * b0 * c4 * pow(d2, 2) +
            16 * a0 * a4 * b1 * c2 * pow(d3, 2) - 32 * a0 * a4 * b4 * c0 * pow(d2, 2) -
            6 * a0 * a5 * b0 * c0 * pow(d5, 2) - 8 * a0 * a5 * b0 * c3 * pow(d2, 2) -
            8 * a0 * a5 * b1 * c1 * pow(d3, 2) + 8 * a0 * a5 * b3 * c0 * pow(d2, 2) -
            16 * a1 * a2 * a3 * pow(d0, 2) * d4 - 16 * a1 * a2 * a4 * d0 * pow(d3, 2) +
            16 * a1 * a2 * a4 * pow(d0, 2) * d3 - 128 * a1 * a2 * b1 * c2 * pow(d4, 2) +
            128 * a1 * a2 * b2 * c1 * pow(d4, 2) - 16 * a1 * a2 * b3 * c4 * pow(d0, 2) -
            16 * a1 * a2 * b4 * c0 * pow(d3, 2) + 16 * a1 * a2 * b4 * c3 * pow(d0, 2) +
            8 * a1 * a3 * a5 * pow(d0, 2) * d1 + 16 * a1 * a3 * b1 * c0 * pow(d5, 2) +
            32 * a1 * a3 * b1 * c3 * pow(d2, 2) - 8 * a1 * a3 * b1 * c5 * pow(d0, 2) -
            16 * a1 * a3 * b2 * c4 * pow(d0, 2) - 32 * a1 * a3 * b3 * c1 * pow(d2, 2) +
            8 * a1 * a3 * b5 * c1 * pow(d0, 2) + 16 * a1 * a4 * b0 * c2 * pow(d3, 2) +
            32 * a1 * a4 * b1 * c4 * pow(d0, 2) - 16 * a1 * a4 * b2 * c0 * pow(d3, 2) +
            16 * a1 * a4 * b2 * c3 * pow(d0, 2) - 32 * a1 * a4 * b4 * c1 * pow(d0, 2) -
            8 * a1 * a5 * b0 * c1 * pow(d3, 2) + 8 * a1 * a5 * b1 * c0 * pow(d3, 2) -
            8 * a1 * a5 * b1 * c3 * pow(d0, 2) + 8 * a1 * a5 * b3 * c1 * pow(d0, 2) +
            8 * a2 * a3 * b0 * c2 * pow(d3, 2) - 16 * a2 * a3 * b1 * c4 * pow(d0, 2) +
            8 * a2 * a3 * b2 * c0 * pow(d3, 2) - 8 * a2 * a3 * b2 * c3 * pow(d0, 2) +
            8 * a2 * a3 * b3 * c2 * pow(d0, 2) - 16 * a2 * a4 * b1 * c0 * pow(d3, 2) +
            16 * a2 * a4 * b1 * c3 * pow(d0, 2) + 8 * a3 * a5 * b0 * c0 * pow(d2, 2) +
            8 * a3 * a5 * b1 * c1 * pow(d0, 2) - 32 * a0 * a1 * a5 * d1 * pow(d4, 2) +
            32 * a0 * a1 * b1 * c5 * pow(d4, 2) - 32 * a0 * a1 * b5 * c1 * pow(d4, 2) +
            32 * a0 * a2 * a3 * d2 * pow(d4, 2) - 32 * a0 * a2 * b2 * c3 * pow(d4, 2) +
            32 * a0 * a2 * b3 * c2 * pow(d4, 2) - 8 * a0 * a3 * a4 * pow(d0, 2) * d4 -
            6 * a0 * a3 * a5 * d0 * pow(d3, 2) + 6 * a0 * a3 * a5 * pow(d0, 2) * d3 +
            12 * a0 * a3 * b0 * c3 * pow(d5, 2) - 6 * a0 * a3 * b0 * c5 * pow(d3, 2) +
            32 * a0 * a3 * b2 * c2 * pow(d4, 2) - 12 * a0 * a3 * b3 * c0 * pow(d5, 2) -
            8 * a0 * a3 * b3 * c3 * pow(d2, 2) + 6 * a0 * a3 * b3 * c5 * pow(d0, 2) -
            8 * a0 * a3 * b4 * c4 * pow(d0, 2) - 6 * a0 * a3 * b5 * c0 * pow(d3, 2) +
            6 * a0 * a3 * b5 * c3 * pow(d0, 2) - 8 * a0 * a4 * b0 * c4 * pow(d3, 2) -
            8 * a0 * a4 * b3 * c4 * pow(d0, 2) + 8 * a0 * a4 * b4 * c0 * pow(d3, 2) -
            8 * a0 * a4 * b4 * c3 * pow(d0, 2) + 18 * a0 * a5 * b0 * c3 * pow(d3, 2) -
            8 * a0 * a5 * b0 * c5 * pow(d1, 2) - 32 * a0 * a5 * b1 * c1 * pow(d4, 2) -
            6 * a0 * a5 * b3 * c0 * pow(d3, 2) + 6 * a0 * a5 * b3 * c3 * pow(d0, 2) +
            8 * a0 * a5 * b5 * c0 * pow(d1, 2) - 32 * a1 * a2 * b1 * c2 * pow(d5, 2) +
            32 * a1 * a2 * b2 * c1 * pow(d5, 2) - 32 * a1 * a5 * b0 * c1 * pow(d4, 2) +
            32 * a1 * a5 * b1 * c0 * pow(d4, 2) + 32 * a2 * a3 * b0 * c2 * pow(d4, 2) -
            32 * a2 * a3 * b2 * c0 * pow(d4, 2) - 32 * a2 * a3 * b2 * c3 * pow(d1, 2) +
            32 * a2 * a3 * b3 * c2 * pow(d1, 2) - 8 * a3 * a4 * b0 * c4 * pow(d0, 2) +
            24 * a3 * a4 * b4 * c0 * pow(d0, 2) - 6 * a3 * a5 * b0 * c0 * pow(d3, 2) +
            6 * a3 * a5 * b0 * c3 * pow(d0, 2) - 18 * a3 * a5 * b3 * c0 * pow(d0, 2) -
            8 * a0 * a1 * a5 * d1 * pow(d5, 2) + 24 * a0 * a1 * b1 * c5 * pow(d5, 2) -
            8 * a0 * a1 * b5 * c1 * pow(d5, 2) + 8 * a0 * a2 * a3 * d2 * pow(d5, 2) -
            16 * a0 * a2 * a4 * d1 * pow(d5, 2) - 8 * a0 * a2 * b2 * c3 * pow(d5, 2) +
            16 * a0 * a2 * b2 * c5 * pow(d3, 2) + 8 * a0 * a2 * b3 * c2 * pow(d5, 2) -
            16 * a0 * a2 * b4 * c1 * pow(d5, 2) + 8 * a0 * a3 * a5 * pow(d1, 2) * d3 -
            16 * a0 * a3 * b0 * c5 * pow(d4, 2) + 8 * a0 * a3 * b2 * c2 * pow(d5, 2) -
            8 * a0 * a3 * b3 * c5 * pow(d1, 2) + 8 * a0 * a3 * b5 * c3 * pow(d1, 2) -
            16 * a0 * a4 * b2 * c1 * pow(d5, 2) + 16 * a0 * a5 * b0 * c3 * pow(d4, 2) +
            8 * a0 * a5 * b0 * c5 * pow(d2, 2) - 8 * a0 * a5 * b1 * c1 * pow(d5, 2) +
            8 * a0 * a5 * b3 * c3 * pow(d1, 2) - 8 * a0 * a5 * b5 * c0 * pow(d2, 2) +
            16 * a1 * a2 * a4 * d0 * pow(d5, 2) - 16 * a1 * a2 * a4 * pow(d0, 2) * d5 +
            16 * a1 * a2 * a5 * pow(d0, 2) * d4 + 16 * a1 * a2 * b4 * c0 * pow(d5, 2) -
            16 * a1 * a2 * b4 * c5 * pow(d0, 2) + 16 * a1 * a2 * b5 * c4 * pow(d0, 2) +
            32 * a1 * a3 * a5 * d1 * pow(d2, 2) - 32 * a1 * a3 * b1 * c5 * pow(d2, 2) +
            32 * a1 * a3 * b5 * c1 * pow(d2, 2) + 128 * a1 * a4 * b1 * c4 * pow(d2, 2) +
            16 * a1 * a4 * b2 * c0 * pow(d5, 2) - 16 * a1 * a4 * b2 * c5 * pow(d0, 2) -
            128 * a1 * a4 * b4 * c1 * pow(d2, 2) - 8 * a1 * a5 * b0 * c1 * pow(d5, 2) -
            8 * a1 * a5 * b1 * c0 * pow(d5, 2) - 32 * a1 * a5 * b1 * c3 * pow(d2, 2) +
            8 * a1 * a5 * b1 * c5 * pow(d0, 2) + 16 * a1 * a5 * b2 * c4 * pow(d0, 2) +
            32 * a1 * a5 * b3 * c1 * pow(d2, 2) - 8 * a1 * a5 * b5 * c1 * pow(d0, 2) -
            8 * a2 * a3 * a5 * pow(d0, 2) * d2 + 8 * a2 * a3 * b0 * c2 * pow(d5, 2) -
            8 * a2 * a3 * b2 * c0 * pow(d5, 2) + 8 * a2 * a3 * b2 * c5 * pow(d0, 2) -
            8 * a2 * a3 * b5 * c2 * pow(d0, 2) - 16 * a2 * a4 * b0 * c1 * pow(d5, 2) +
            16 * a2 * a4 * b1 * c0 * pow(d5, 2) - 16 * a2 * a4 * b1 * c5 * pow(d0, 2) -
            32 * a2 * a4 * b2 * c4 * pow(d0, 2) + 32 * a2 * a4 * b4 * c2 * pow(d0, 2) +
            16 * a2 * a5 * b1 * c4 * pow(d0, 2) - 16 * a2 * a5 * b2 * c0 * pow(d3, 2) +
            8 * a2 * a5 * b2 * c3 * pow(d0, 2) - 8 * a2 * a5 * b3 * c2 * pow(d0, 2) +
            8 * a3 * a5 * b0 * c3 * pow(d1, 2) + 32 * a3 * a5 * b1 * c1 * pow(d2, 2) -
            8 * a3 * a5 * b2 * c2 * pow(d0, 2) - 8 * a3 * a5 * b3 * c0 * pow(d1, 2) -
            32 * a0 * a3 * a4 * pow(d2, 2) * d4 + 6 * a0 * a3 * a5 * d0 * pow(d5, 2) -
            6 * a0 * a3 * a5 * pow(d0, 2) * d5 - 18 * a0 * a3 * b0 * c5 * pow(d5, 2) +
            16 * a0 * a3 * b3 * c5 * pow(d2, 2) - 32 * a0 * a3 * b4 * c4 * pow(d2, 2) +
            6 * a0 * a3 * b5 * c0 * pow(d5, 2) - 6 * a0 * a3 * b5 * c5 * pow(d0, 2) +
            8 * a0 * a4 * a5 * pow(d0, 2) * d4 + 8 * a0 * a4 * b0 * c4 * pow(d5, 2) -
            32 * a0 * a4 * b3 * c4 * pow(d2, 2) - 8 * a0 * a4 * b4 * c0 * pow(d5, 2) +
            32 * a0 * a4 * b4 * c3 * pow(d2, 2) + 8 * a0 * a4 * b4 * c5 * pow(d0, 2) +
            8 * a0 * a4 * b5 * c4 * pow(d0, 2) + 6 * a0 * a5 * b0 * c3 * pow(d5, 2) -
            12 * a0 * a5 * b0 * c5 * pow(d3, 2) + 6 * a0 * a5 * b3 * c0 * pow(d5, 2) -
            6 * a0 * a5 * b3 * c5 * pow(d0, 2) + 8 * a0 * a5 * b4 * c4 * pow(d0, 2) +
            12 * a0 * a5 * b5 * c0 * pow(d3, 2) - 6 * a0 * a5 * b5 * c3 * pow(d0, 2) +
            8 * a1 * a3 * b1 * c3 * pow(d5, 2) - 8 * a1 * a3 * b3 * c1 * pow(d5, 2) -
            32 * a2 * a3 * a5 * pow(d1, 2) * d2 + 32 * a2 * a3 * b2 * c5 * pow(d1, 2) -
            32 * a2 * a3 * b5 * c2 * pow(d1, 2) - 128 * a2 * a4 * b2 * c4 * pow(d1, 2) +
            128 * a2 * a4 * b4 * c2 * pow(d1, 2) + 32 * a2 * a5 * b2 * c3 * pow(d1, 2) -
            32 * a2 * a5 * b3 * c2 * pow(d1, 2) - 32 * a3 * a4 * b0 * c4 * pow(d2, 2) +
            32 * a3 * a4 * b4 * c0 * pow(d2, 2) + 6 * a3 * a5 * b0 * c0 * pow(d5, 2) -
            6 * a3 * a5 * b0 * c5 * pow(d0, 2) - 32 * a3 * a5 * b2 * c2 * pow(d1, 2) -
            16 * a3 * a5 * b3 * c0 * pow(d2, 2) + 18 * a3 * a5 * b5 * c0 * pow(d0, 2) +
            8 * a4 * a5 * b0 * c4 * pow(d0, 2) - 24 * a4 * a5 * b4 * c0 * pow(d0, 2) -
            6 * a0 * a3 * b3 * c3 * pow(d5, 2) + 32 * a0 * a4 * a5 * pow(d1, 2) * d4 -
            32 * a0 * a4 * b4 * c5 * pow(d1, 2) + 32 * a0 * a4 * b5 * c4 * pow(d1, 2) -
            8 * a0 * a5 * b0 * c5 * pow(d4, 2) + 32 * a0 * a5 * b4 * c4 * pow(d1, 2) +
            8 * a0 * a5 * b5 * c0 * pow(d4, 2) - 16 * a0 * a5 * b5 * c3 * pow(d1, 2) +
            32 * a1 * a5 * b1 * c5 * pow(d2, 2) - 32 * a1 * a5 * b5 * c1 * pow(d2, 2) +
            32 * a2 * a3 * b2 * c3 * pow(d4, 2) - 32 * a2 * a3 * b3 * c2 * pow(d4, 2) -
            8 * a2 * a5 * b2 * c5 * pow(d0, 2) + 8 * a2 * a5 * b5 * c2 * pow(d0, 2) +
            8 * a3 * a4 * b3 * c4 * pow(d0, 2) - 8 * a3 * a4 * b4 * c3 * pow(d0, 2) +
            6 * a3 * a5 * b3 * c3 * pow(d0, 2) + 16 * a3 * a5 * b5 * c0 * pow(d1, 2) +
            32 * a4 * a5 * b0 * c4 * pow(d1, 2) - 32 * a4 * a5 * b4 * c0 * pow(d1, 2) -
            8 * a0 * a3 * a5 * d3 * pow(d4, 2) - 8 * a0 * a3 * a5 * pow(d2, 2) * d5 +
            8 * a0 * a3 * b3 * c5 * pow(d4, 2) - 8 * a0 * a3 * b5 * c3 * pow(d4, 2) -
            8 * a0 * a3 * b5 * c5 * pow(d2, 2) - 8 * a0 * a5 * b3 * c3 * pow(d4, 2) -
            8 * a0 * a5 * b3 * c5 * pow(d2, 2) + 8 * a0 * a5 * b5 * c3 * pow(d2, 2) +
            6 * a0 * a5 * b5 * c5 * pow(d0, 2) - 16 * a1 * a2 * a4 * d3 * pow(d5, 2) +
            16 * a1 * a2 * a4 * pow(d3, 2) * d5 - 16 * a1 * a2 * b4 * c3 * pow(d5, 2) +
            16 * a1 * a2 * b4 * c5 * pow(d3, 2) + 8 * a1 * a3 * a5 * d1 * pow(d5, 2) -
            24 * a1 * a3 * b1 * c5 * pow(d5, 2) + 8 * a1 * a3 * b5 * c1 * pow(d5, 2) -
            16 * a1 * a4 * a5 * d2 * pow(d3, 2) + 32 * a1 * a4 * b1 * c4 * pow(d5, 2) -
            16 * a1 * a4 * b2 * c3 * pow(d5, 2) + 16 * a1 * a4 * b2 * c5 * pow(d3, 2) -
            32 * a1 * a4 * b4 * c1 * pow(d5, 2) - 16 * a1 * a4 * b5 * c2 * pow(d3, 2) +
            8 * a1 * a5 * b1 * c3 * pow(d5, 2) - 8 * a1 * a5 * b1 * c5 * pow(d3, 2) +
            8 * a1 * a5 * b3 * c1 * pow(d5, 2) - 16 * a1 * a5 * b4 * c2 * pow(d3, 2) +
            8 * a1 * a5 * b5 * c1 * pow(d3, 2) + 16 * a2 * a3 * a4 * d1 * pow(d5, 2) -
            8 * a2 * a3 * a5 * d2 * pow(d3, 2) + 8 * a2 * a3 * b2 * c3 * pow(d5, 2) -
            8 * a2 * a3 * b2 * c5 * pow(d3, 2) - 8 * a2 * a3 * b3 * c2 * pow(d5, 2) +
            16 * a2 * a3 * b4 * c1 * pow(d5, 2) - 8 * a2 * a3 * b5 * c2 * pow(d3, 2) -
            16 * a2 * a4 * b1 * c3 * pow(d5, 2) + 16 * a2 * a4 * b1 * c5 * pow(d3, 2) -
            32 * a2 * a4 * b2 * c4 * pow(d3, 2) + 16 * a2 * a4 * b3 * c1 * pow(d5, 2) +
            32 * a2 * a4 * b4 * c2 * pow(d3, 2) + 24 * a2 * a5 * b2 * c3 * pow(d3, 2) -
            32 * a2 * a5 * b2 * c5 * pow(d1, 2) - 8 * a2 * a5 * b3 * c2 * pow(d3, 2) +
            32 * a2 * a5 * b5 * c2 * pow(d1, 2) + 16 * a3 * a4 * b2 * c1 * pow(d5, 2) -
            8 * a3 * a5 * b0 * c3 * pow(d4, 2) - 8 * a3 * a5 * b0 * c5 * pow(d2, 2) +
            8 * a3 * a5 * b1 * c1 * pow(d5, 2) - 8 * a3 * a5 * b2 * c2 * pow(d3, 2) +
            8 * a3 * a5 * b3 * c0 * pow(d4, 2) + 8 * a3 * a5 * b5 * c0 * pow(d2, 2) -
            16 * a4 * a5 * b1 * c2 * pow(d3, 2) - 8 * a0 * a3 * a4 * d4 * pow(d5, 2) -
            6 * a0 * a3 * a5 * d3 * pow(d5, 2) + 6 * a0 * a3 * a5 * pow(d3, 2) * d5 +
            18 * a0 * a3 * b3 * c5 * pow(d5, 2) - 8 * a0 * a3 * b4 * c4 * pow(d5, 2) -
            6 * a0 * a3 * b5 * c3 * pow(d5, 2) + 6 * a0 * a3 * b5 * c5 * pow(d3, 2) +
            8 * a0 * a4 * a5 * pow(d3, 2) * d4 - 8 * a0 * a4 * b3 * c4 * pow(d5, 2) +
            8 * a0 * a4 * b4 * c3 * pow(d5, 2) - 8 * a0 * a4 * b4 * c5 * pow(d3, 2) +
            8 * a0 * a4 * b5 * c4 * pow(d3, 2) - 6 * a0 * a5 * b3 * c3 * pow(d5, 2) +
            6 * a0 * a5 * b3 * c5 * pow(d3, 2) + 8 * a0 * a5 * b4 * c4 * pow(d3, 2) -
            18 * a0 * a5 * b5 * c3 * pow(d3, 2) + 8 * a0 * a5 * b5 * c5 * pow(d1, 2) -
            32 * a1 * a5 * b1 * c5 * pow(d4, 2) + 32 * a1 * a5 * b5 * c1 * pow(d4, 2) -
            8 * a3 * a4 * b0 * c4 * pow(d5, 2) + 32 * a3 * a4 * b3 * c4 * pow(d2, 2) +
            8 * a3 * a4 * b4 * c0 * pow(d5, 2) - 32 * a3 * a4 * b4 * c3 * pow(d2, 2) -
            16 * a3 * a4 * b4 * c5 * pow(d0, 2) - 6 * a3 * a5 * b0 * c3 * pow(d5, 2) +
            6 * a3 * a5 * b0 * c5 * pow(d3, 2) - 6 * a3 * a5 * b3 * c0 * pow(d5, 2) +
            8 * a3 * a5 * b3 * c3 * pow(d2, 2) + 12 * a3 * a5 * b3 * c5 * pow(d0, 2) +
            6 * a3 * a5 * b5 * c0 * pow(d3, 2) - 12 * a3 * a5 * b5 * c3 * pow(d0, 2) +
            8 * a4 * a5 * b0 * c4 * pow(d3, 2) - 8 * a4 * a5 * b4 * c0 * pow(d3, 2) +
            16 * a4 * a5 * b4 * c3 * pow(d0, 2) + 8 * a0 * a3 * a5 * pow(d4, 2) * d5 +
            8 * a0 * a3 * b5 * c5 * pow(d4, 2) + 8 * a0 * a5 * b3 * c5 * pow(d4, 2) -
            8 * a0 * a5 * b5 * c3 * pow(d4, 2) - 8 * a2 * a5 * b2 * c5 * pow(d3, 2) +
            8 * a2 * a5 * b5 * c2 * pow(d3, 2) + 8 * a3 * a5 * b0 * c5 * pow(d4, 2) +
            8 * a3 * a5 * b3 * c5 * pow(d1, 2) - 8 * a3 * a5 * b5 * c0 * pow(d4, 2) -
            8 * a3 * a5 * b5 * c3 * pow(d1, 2) + 6 * a0 * a5 * b5 * c5 * pow(d3, 2) +
            8 * a3 * a5 * b3 * c5 * pow(d2, 2) - 8 * a3 * a5 * b5 * c3 * pow(d2, 2) -
            6 * a3 * a5 * b5 * c5 * pow(d0, 2) + 8 * a4 * a5 * b4 * c5 * pow(d0, 2) -
            8 * a4 * a5 * b5 * c4 * pow(d0, 2) + 8 * a3 * a4 * b3 * c4 * pow(d5, 2) -
            8 * a3 * a4 * b4 * c3 * pow(d5, 2) + 6 * a3 * a5 * b3 * c3 * pow(d5, 2) -
            8 * a3 * a5 * b5 * c5 * pow(d1, 2) + 32 * a4 * a5 * b4 * c5 * pow(d1, 2) -
            32 * a4 * a5 * b5 * c4 * pow(d1, 2) - 8 * a3 * a5 * b3 * c5 * pow(d4, 2) +
            8 * a3 * a5 * b5 * c3 * pow(d4, 2) - 6 * a3 * a5 * b5 * c5 * pow(d3, 2) +
            8 * a4 * a5 * b4 * c5 * pow(d3, 2) - 8 * a4 * a5 * b5 * c4 * pow(d3, 2) +
            8 * a0 * b0 * b1 * pow(c3, 2) * d1 - 8 * a1 * b0 * b1 * pow(c3, 2) * d0 +
            32 * a0 * b0 * b1 * pow(c4, 2) * d1 + 6 * a0 * b0 * b3 * pow(c3, 2) * d0 -
            32 * a1 * b0 * b1 * pow(c4, 2) * d0 + 8 * a0 * b0 * b1 * pow(c5, 2) * d1 -
            8 * a0 * b0 * b2 * pow(c3, 2) * d2 - 8 * a0 * b0 * b3 * pow(c1, 2) * d3 +
            8 * a0 * b0 * b3 * pow(c4, 2) * d0 - 8 * a1 * b0 * b1 * pow(c5, 2) * d0 +
            8 * a2 * b0 * b2 * pow(c3, 2) * d0 + 8 * a3 * b0 * b3 * pow(c1, 2) * d0 -
            32 * a0 * b0 * b2 * pow(c4, 2) * d2 + 8 * a0 * b0 * b3 * pow(c2, 2) * d3 +
            6 * a0 * b0 * b3 * pow(c5, 2) * d0 - 6 * a0 * b0 * b5 * pow(c3, 2) * d0 +
            8 * a1 * b1 * b3 * pow(c0, 2) * d3 + 32 * a2 * b0 * b2 * pow(c4, 2) * d0 -
            8 * a3 * b0 * b3 * pow(c2, 2) * d0 - 8 * a3 * b1 * b3 * pow(c0, 2) * d1 -
            8 * a0 * b0 * b2 * pow(c5, 2) * d2 + 8 * a0 * b0 * b3 * pow(c1, 2) * d5 -
            32 * a0 * b0 * b4 * pow(c1, 2) * d4 + 8 * a0 * b0 * b5 * pow(c1, 2) * d3 -
            8 * a0 * b0 * b5 * pow(c4, 2) * d0 - 8 * a0 * b3 * b5 * pow(c1, 2) * d0 -
            32 * a1 * b1 * b2 * pow(c3, 2) * d2 + 8 * a2 * b0 * b2 * pow(c5, 2) * d0 +
            32 * a2 * b1 * b2 * pow(c3, 2) * d1 - 6 * a3 * b0 * b3 * pow(c0, 2) * d3 -
            8 * a3 * b0 * b5 * pow(c1, 2) * d0 + 32 * a4 * b0 * b4 * pow(c1, 2) * d0 -
            8 * a5 * b0 * b3 * pow(c1, 2) * d0 - 8 * b0 * b3 * b5 * c0 * pow(c1, 2) -
            8 * a0 * b0 * b3 * pow(c2, 2) * d5 + 8 * a0 * b0 * b3 * pow(c4, 2) * d3 +
            32 * a0 * b0 * b4 * pow(c2, 2) * d4 - 8 * a0 * b0 * b5 * pow(c2, 2) * d3 -
            6 * a0 * b0 * b5 * pow(c5, 2) * d0 + 16 * a0 * b1 * b4 * pow(c3, 2) * d2 -
            8 * a0 * b1 * b5 * pow(c3, 2) * d1 + 8 * a0 * b2 * b3 * pow(c3, 2) * d2 +
            8 * a0 * b3 * b5 * pow(c2, 2) * d0 + 8 * a1 * b0 * b1 * pow(c3, 2) * d5 -
            16 * a1 * b0 * b1 * pow(c5, 2) * d3 + 16 * a1 * b0 * b4 * pow(c3, 2) * d2 -
            8 * a1 * b0 * b5 * pow(c3, 2) * d1 - 128 * a1 * b1 * b2 * pow(c4, 2) * d2 -
            8 * a1 * b1 * b3 * pow(c0, 2) * d5 + 32 * a1 * b1 * b3 * pow(c2, 2) * d3 +
            16 * a1 * b1 * b3 * pow(c5, 2) * d0 + 32 * a1 * b1 * b4 * pow(c0, 2) * d4 -
            8 * a1 * b1 * b5 * pow(c0, 2) * d3 + 8 * a1 * b1 * b5 * pow(c3, 2) * d0 -
            16 * a1 * b2 * b3 * pow(c0, 2) * d4 + 16 * a1 * b2 * b4 * pow(c0, 2) * d3 -
            16 * a1 * b2 * b4 * pow(c3, 2) * d0 + 8 * a1 * b3 * b5 * pow(c0, 2) * d1 -
            24 * a2 * b0 * b2 * pow(c3, 2) * d3 + 8 * a2 * b0 * b3 * pow(c3, 2) * d2 +
            128 * a2 * b1 * b2 * pow(c4, 2) * d1 - 16 * a2 * b1 * b3 * pow(c0, 2) * d4 +
            16 * a2 * b1 * b4 * pow(c0, 2) * d3 - 16 * a2 * b1 * b4 * pow(c3, 2) * d0 -
            8 * a2 * b2 * b3 * pow(c0, 2) * d3 + 8 * a2 * b2 * b3 * pow(c3, 2) * d0 +
            8 * a3 * b0 * b2 * pow(c3, 2) * d2 - 8 * a3 * b0 * b3 * pow(c4, 2) * d0 +
            8 * a3 * b0 * b5 * pow(c2, 2) * d0 - 16 * a3 * b1 * b2 * pow(c0, 2) * d4 -
            32 * a3 * b1 * b3 * pow(c2, 2) * d1 + 8 * a3 * b1 * b5 * pow(c0, 2) * d1 +
            8 * a3 * b2 * b3 * pow(c0, 2) * d2 + 16 * a4 * b0 * b1 * pow(c3, 2) * d2 -
            32 * a4 * b0 * b4 * pow(c2, 2) * d0 + 16 * a4 * b1 * b2 * pow(c0, 2) * d3 -
            16 * a4 * b1 * b2 * pow(c3, 2) * d0 - 32 * a4 * b1 * b4 * pow(c0, 2) * d1 -
            8 * a5 * b0 * b1 * pow(c3, 2) * d1 + 8 * a5 * b0 * b3 * pow(c2, 2) * d0 +
            8 * a5 * b1 * b3 * pow(c0, 2) * d1 + 16 * b0 * b1 * b4 * c2 * pow(c3, 2) -
            8 * b0 * b1 * b5 * c1 * pow(c3, 2) + 8 * b0 * b2 * b3 * c2 * pow(c3, 2) +
            8 * b0 * b3 * b5 * c0 * pow(c2, 2) - 16 * b1 * b2 * b3 * pow(c0, 2) * c4 -
            16 * b1 * b2 * b4 * c0 * pow(c3, 2) + 16 * b1 * b2 * b4 * pow(c0, 2) * c3 +
            8 * b1 * b3 * b5 * pow(c0, 2) * c1 - 6 * a0 * b0 * b3 * pow(c3, 2) * d5 +
            12 * a0 * b0 * b3 * pow(c5, 2) * d3 - 8 * a0 * b0 * b4 * pow(c3, 2) * d4 -
            8 * a0 * b0 * b5 * pow(c1, 2) * d5 + 18 * a0 * b0 * b5 * pow(c3, 2) * d3 -
            32 * a0 * b1 * b5 * pow(c4, 2) * d1 + 32 * a0 * b2 * b3 * pow(c4, 2) * d2 -
            8 * a0 * b3 * b4 * pow(c0, 2) * d4 + 6 * a0 * b3 * b5 * pow(c0, 2) * d3 -
            6 * a0 * b3 * b5 * pow(c3, 2) * d0 + 32 * a1 * b0 * b1 * pow(c4, 2) * d5 -
            32 * a1 * b0 * b5 * pow(c4, 2) * d1 - 32 * a1 * b1 * b2 * pow(c5, 2) * d2 +
            32 * a1 * b1 * b5 * pow(c4, 2) * d0 - 32 * a2 * b0 * b2 * pow(c4, 2) * d3 +
            32 * a2 * b0 * b3 * pow(c4, 2) * d2 + 32 * a2 * b1 * b2 * pow(c5, 2) * d1 -
            32 * a2 * b2 * b3 * pow(c1, 2) * d3 - 32 * a2 * b2 * b3 * pow(c4, 2) * d0 +
            32 * a3 * b0 * b2 * pow(c4, 2) * d2 + 6 * a3 * b0 * b3 * pow(c0, 2) * d5 -
            8 * a3 * b0 * b3 * pow(c2, 2) * d3 - 12 * a3 * b0 * b3 * pow(c5, 2) * d0 -
            8 * a3 * b0 * b4 * pow(c0, 2) * d4 + 6 * a3 * b0 * b5 * pow(c0, 2) * d3 -
            6 * a3 * b0 * b5 * pow(c3, 2) * d0 + 32 * a3 * b2 * b3 * pow(c1, 2) * d2 -
            18 * a3 * b3 * b5 * pow(c0, 2) * d0 - 8 * a4 * b0 * b3 * pow(c0, 2) * d4 -
            8 * a4 * b0 * b4 * pow(c0, 2) * d3 + 8 * a4 * b0 * b4 * pow(c3, 2) * d0 +
            24 * a4 * b3 * b4 * pow(c0, 2) * d0 - 32 * a5 * b0 * b1 * pow(c4, 2) * d1 +
            6 * a5 * b0 * b3 * pow(c0, 2) * d3 - 6 * a5 * b0 * b3 * pow(c3, 2) * d0 +
            8 * a5 * b0 * b5 * pow(c1, 2) * d0 - 32 * b0 * b1 * b5 * c1 * pow(c4, 2) +
            32 * b0 * b2 * b3 * c2 * pow(c4, 2) - 8 * b0 * b3 * b4 * pow(c0, 2) * c4 -
            6 * b0 * b3 * b5 * c0 * pow(c3, 2) + 6 * b0 * b3 * b5 * pow(c0, 2) * c3 -
            16 * a0 * b0 * b3 * pow(c4, 2) * d5 + 8 * a0 * b0 * b5 * pow(c2, 2) * d5 +
            16 * a0 * b0 * b5 * pow(c4, 2) * d3 - 8 * a0 * b1 * b5 * pow(c5, 2) * d1 +
            8 * a0 * b2 * b3 * pow(c5, 2) * d2 - 16 * a0 * b2 * b4 * pow(c5, 2) * d1 +
            8 * a0 * b3 * b5 * pow(c1, 2) * d3 + 24 * a1 * b0 * b1 * pow(c5, 2) * d5 -
            8 * a1 * b0 * b5 * pow(c5, 2) * d1 - 32 * a1 * b1 * b3 * pow(c2, 2) * d5 +
            128 * a1 * b1 * b4 * pow(c2, 2) * d4 + 8 * a1 * b1 * b5 * pow(c0, 2) * d5 -
            32 * a1 * b1 * b5 * pow(c2, 2) * d3 - 8 * a1 * b1 * b5 * pow(c5, 2) * d0 -
            16 * a1 * b2 * b4 * pow(c0, 2) * d5 + 16 * a1 * b2 * b4 * pow(c5, 2) * d0 +
            16 * a1 * b2 * b5 * pow(c0, 2) * d4 + 32 * a1 * b3 * b5 * pow(c2, 2) * d1 +
            16 * a2 * b0 * b2 * pow(c3, 2) * d5 - 8 * a2 * b0 * b2 * pow(c5, 2) * d3 +
            8 * a2 * b0 * b3 * pow(c5, 2) * d2 - 16 * a2 * b0 * b4 * pow(c5, 2) * d1 -
            16 * a2 * b1 * b4 * pow(c0, 2) * d5 + 16 * a2 * b1 * b4 * pow(c5, 2) * d0 +
            16 * a2 * b1 * b5 * pow(c0, 2) * d4 + 8 * a2 * b2 * b3 * pow(c0, 2) * d5 -
            8 * a2 * b2 * b3 * pow(c5, 2) * d0 - 32 * a2 * b2 * b4 * pow(c0, 2) * d4 +
            8 * a2 * b2 * b5 * pow(c0, 2) * d3 - 16 * a2 * b2 * b5 * pow(c3, 2) * d0 -
            8 * a2 * b3 * b5 * pow(c0, 2) * d2 + 8 * a3 * b0 * b2 * pow(c5, 2) * d2 -
            8 * a3 * b0 * b3 * pow(c1, 2) * d5 + 8 * a3 * b0 * b5 * pow(c1, 2) * d3 +
            32 * a3 * b1 * b5 * pow(c2, 2) * d1 - 8 * a3 * b2 * b5 * pow(c0, 2) * d2 -
            8 * a3 * b3 * b5 * pow(c1, 2) * d0 - 16 * a4 * b0 * b2 * pow(c5, 2) * d1 -
            16 * a4 * b1 * b2 * pow(c0, 2) * d5 + 16 * a4 * b1 * b2 * pow(c5, 2) * d0 -
            128 * a4 * b1 * b4 * pow(c2, 2) * d1 + 32 * a4 * b2 * b4 * pow(c0, 2) * d2 -
            8 * a5 * b0 * b1 * pow(c5, 2) * d1 + 8 * a5 * b0 * b3 * pow(c1, 2) * d3 -
            8 * a5 * b0 * b5 * pow(c2, 2) * d0 + 16 * a5 * b1 * b2 * pow(c0, 2) * d4 +
            32 * a5 * b1 * b3 * pow(c2, 2) * d1 - 8 * a5 * b1 * b5 * pow(c0, 2) * d1 -
            8 * a5 * b2 * b3 * pow(c0, 2) * d2 - 8 * b0 * b1 * b5 * c1 * pow(c5, 2) +
            8 * b0 * b2 * b3 * c2 * pow(c5, 2) - 16 * b0 * b2 * b4 * c1 * pow(c5, 2) +
            8 * b0 * b3 * b5 * pow(c1, 2) * c3 + 16 * b1 * b2 * b4 * c0 * pow(c5, 2) -
            16 * b1 * b2 * b4 * pow(c0, 2) * c5 + 16 * b1 * b2 * b5 * pow(c0, 2) * c4 +
            32 * b1 * b3 * b5 * c1 * pow(c2, 2) - 8 * b2 * b3 * b5 * pow(c0, 2) * c2 -
            18 * a0 * b0 * b3 * pow(c5, 2) * d5 + 8 * a0 * b0 * b4 * pow(c5, 2) * d4 -
            12 * a0 * b0 * b5 * pow(c3, 2) * d5 + 6 * a0 * b0 * b5 * pow(c5, 2) * d3 -
            32 * a0 * b3 * b4 * pow(c2, 2) * d4 - 6 * a0 * b3 * b5 * pow(c0, 2) * d5 +
            6 * a0 * b3 * b5 * pow(c5, 2) * d0 + 8 * a0 * b4 * b5 * pow(c0, 2) * d4 +
            8 * a1 * b1 * b3 * pow(c5, 2) * d3 + 32 * a2 * b2 * b3 * pow(c1, 2) * d5 -
            128 * a2 * b2 * b4 * pow(c1, 2) * d4 + 32 * a2 * b2 * b5 * pow(c1, 2) * d3 -
            32 * a2 * b3 * b5 * pow(c1, 2) * d2 + 16 * a3 * b0 * b3 * pow(c2, 2) * d5 -
            32 * a3 * b0 * b4 * pow(c2, 2) * d4 - 6 * a3 * b0 * b5 * pow(c0, 2) * d5 +
            6 * a3 * b0 * b5 * pow(c5, 2) * d0 - 8 * a3 * b1 * b3 * pow(c5, 2) * d1 -
            32 * a3 * b2 * b5 * pow(c1, 2) * d2 - 16 * a3 * b3 * b5 * pow(c2, 2) * d0 -
            32 * a4 * b0 * b3 * pow(c2, 2) * d4 + 8 * a4 * b0 * b4 * pow(c0, 2) * d5 +
            32 * a4 * b0 * b4 * pow(c2, 2) * d3 - 8 * a4 * b0 * b4 * pow(c5, 2) * d0 +
            8 * a4 * b0 * b5 * pow(c0, 2) * d4 + 128 * a4 * b2 * b4 * pow(c1, 2) * d2 +
            32 * a4 * b3 * b4 * pow(c2, 2) * d0 - 24 * a4 * b4 * b5 * pow(c0, 2) * d0 -
            6 * a5 * b0 * b3 * pow(c0, 2) * d5 + 6 * a5 * b0 * b3 * pow(c5, 2) * d0 +
            8 * a5 * b0 * b4 * pow(c0, 2) * d4 - 6 * a5 * b0 * b5 * pow(c0, 2) * d3 +
            12 * a5 * b0 * b5 * pow(c3, 2) * d0 - 32 * a5 * b2 * b3 * pow(c1, 2) * d2 +
            18 * a5 * b3 * b5 * pow(c0, 2) * d0 - 32 * b0 * b3 * b4 * pow(c2, 2) * c4 +
            6 * b0 * b3 * b5 * c0 * pow(c5, 2) - 6 * b0 * b3 * b5 * pow(c0, 2) * c5 +
            8 * b0 * b4 * b5 * pow(c0, 2) * c4 - 32 * b2 * b3 * b5 * pow(c1, 2) * c2 -
            8 * a0 * b0 * b5 * pow(c4, 2) * d5 + 32 * a0 * b4 * b5 * pow(c1, 2) * d4 +
            32 * a1 * b1 * b5 * pow(c2, 2) * d5 + 32 * a2 * b2 * b3 * pow(c4, 2) * d3 -
            8 * a2 * b2 * b5 * pow(c0, 2) * d5 - 6 * a3 * b0 * b3 * pow(c5, 2) * d3 -
            32 * a3 * b2 * b3 * pow(c4, 2) * d2 + 8 * a3 * b3 * b4 * pow(c0, 2) * d4 +
            6 * a3 * b3 * b5 * pow(c0, 2) * d3 - 32 * a4 * b0 * b4 * pow(c1, 2) * d5 +
            32 * a4 * b0 * b5 * pow(c1, 2) * d4 - 8 * a4 * b3 * b4 * pow(c0, 2) * d3 -
            32 * a4 * b4 * b5 * pow(c1, 2) * d0 + 32 * a5 * b0 * b4 * pow(c1, 2) * d4 -
            16 * a5 * b0 * b5 * pow(c1, 2) * d3 + 8 * a5 * b0 * b5 * pow(c4, 2) * d0 -
            32 * a5 * b1 * b5 * pow(c2, 2) * d1 + 8 * a5 * b2 * b5 * pow(c0, 2) * d2 +
            16 * a5 * b3 * b5 * pow(c1, 2) * d0 + 32 * b0 * b4 * b5 * pow(c1, 2) * c4 -
            8 * a0 * b3 * b5 * pow(c2, 2) * d5 - 8 * a0 * b3 * b5 * pow(c4, 2) * d3 -
            24 * a1 * b1 * b3 * pow(c5, 2) * d5 + 32 * a1 * b1 * b4 * pow(c5, 2) * d4 -
            8 * a1 * b1 * b5 * pow(c3, 2) * d5 + 8 * a1 * b1 * b5 * pow(c5, 2) * d3 +
            16 * a1 * b2 * b4 * pow(c3, 2) * d5 - 16 * a1 * b2 * b4 * pow(c5, 2) * d3 +
            8 * a1 * b3 * b5 * pow(c5, 2) * d1 - 16 * a1 * b4 * b5 * pow(c3, 2) * d2 +
            16 * a2 * b1 * b4 * pow(c3, 2) * d5 - 16 * a2 * b1 * b4 * pow(c5, 2) * d3 -
            8 * a2 * b2 * b3 * pow(c3, 2) * d5 + 8 * a2 * b2 * b3 * pow(c5, 2) * d3 -
            32 * a2 * b2 * b4 * pow(c3, 2) * d4 - 32 * a2 * b2 * b5 * pow(c1, 2) * d5 +
            24 * a2 * b2 * b5 * pow(c3, 2) * d3 + 16 * a2 * b3 * b4 * pow(c5, 2) * d1 -
            8 * a2 * b3 * b5 * pow(c3, 2) * d2 + 8 * a3 * b0 * b3 * pow(c4, 2) * d5 -
            8 * a3 * b0 * b5 * pow(c2, 2) * d5 - 8 * a3 * b0 * b5 * pow(c4, 2) * d3 +
            8 * a3 * b1 * b5 * pow(c5, 2) * d1 - 8 * a3 * b2 * b3 * pow(c5, 2) * d2 +
            16 * a3 * b2 * b4 * pow(c5, 2) * d1 - 8 * a3 * b2 * b5 * pow(c3, 2) * d2 +
            8 * a3 * b3 * b5 * pow(c4, 2) * d0 + 16 * a4 * b1 * b2 * pow(c3, 2) * d5 -
            16 * a4 * b1 * b2 * pow(c5, 2) * d3 - 32 * a4 * b1 * b4 * pow(c5, 2) * d1 -
            16 * a4 * b1 * b5 * pow(c3, 2) * d2 + 16 * a4 * b2 * b3 * pow(c5, 2) * d1 +
            32 * a4 * b2 * b4 * pow(c3, 2) * d2 - 8 * a5 * b0 * b3 * pow(c2, 2) * d5 -
            8 * a5 * b0 * b3 * pow(c4, 2) * d3 + 6 * a5 * b0 * b5 * pow(c0, 2) * d5 +
            8 * a5 * b0 * b5 * pow(c2, 2) * d3 + 8 * a5 * b1 * b3 * pow(c5, 2) * d1 -
            16 * a5 * b1 * b4 * pow(c3, 2) * d2 + 8 * a5 * b1 * b5 * pow(c3, 2) * d1 -
            8 * a5 * b2 * b3 * pow(c3, 2) * d2 + 32 * a5 * b2 * b5 * pow(c1, 2) * d2 +
            8 * a5 * b3 * b5 * pow(c2, 2) * d0 - 8 * b0 * b3 * b5 * c3 * pow(c4, 2) -
            8 * b0 * b3 * b5 * pow(c2, 2) * c5 - 16 * b1 * b2 * b4 * c3 * pow(c5, 2) +
            16 * b1 * b2 * b4 * pow(c3, 2) * c5 + 8 * b1 * b3 * b5 * c1 * pow(c5, 2) -
            16 * b1 * b4 * b5 * c2 * pow(c3, 2) + 16 * b2 * b3 * b4 * c1 * pow(c5, 2) -
            8 * b2 * b3 * b5 * c2 * pow(c3, 2) - 8 * a0 * b3 * b4 * pow(c5, 2) * d4 +
            6 * a0 * b3 * b5 * pow(c3, 2) * d5 - 6 * a0 * b3 * b5 * pow(c5, 2) * d3 +
            8 * a0 * b4 * b5 * pow(c3, 2) * d4 - 32 * a1 * b1 * b5 * pow(c4, 2) * d5 +
            18 * a3 * b0 * b3 * pow(c5, 2) * d5 - 8 * a3 * b0 * b4 * pow(c5, 2) * d4 +
            6 * a3 * b0 * b5 * pow(c3, 2) * d5 - 6 * a3 * b0 * b5 * pow(c5, 2) * d3 +
            32 * a3 * b3 * b4 * pow(c2, 2) * d4 + 12 * a3 * b3 * b5 * pow(c0, 2) * d5 +
            8 * a3 * b3 * b5 * pow(c2, 2) * d3 - 6 * a3 * b3 * b5 * pow(c5, 2) * d0 -
            8 * a4 * b0 * b3 * pow(c5, 2) * d4 - 8 * a4 * b0 * b4 * pow(c3, 2) * d5 +
            8 * a4 * b0 * b4 * pow(c5, 2) * d3 + 8 * a4 * b0 * b5 * pow(c3, 2) * d4 -
            16 * a4 * b3 * b4 * pow(c0, 2) * d5 - 32 * a4 * b3 * b4 * pow(c2, 2) * d3 +
            8 * a4 * b3 * b4 * pow(c5, 2) * d0 + 16 * a4 * b4 * b5 * pow(c0, 2) * d3 -
            8 * a4 * b4 * b5 * pow(c3, 2) * d0 + 6 * a5 * b0 * b3 * pow(c3, 2) * d5 -
            6 * a5 * b0 * b3 * pow(c5, 2) * d3 + 8 * a5 * b0 * b4 * pow(c3, 2) * d4 +
            8 * a5 * b0 * b5 * pow(c1, 2) * d5 - 18 * a5 * b0 * b5 * pow(c3, 2) * d3 +
            32 * a5 * b1 * b5 * pow(c4, 2) * d1 - 12 * a5 * b3 * b5 * pow(c0, 2) * d3 +
            6 * a5 * b3 * b5 * pow(c3, 2) * d0 - 8 * b0 * b3 * b4 * c4 * pow(c5, 2) -
            6 * b0 * b3 * b5 * c3 * pow(c5, 2) + 6 * b0 * b3 * b5 * pow(c3, 2) * c5 +
            8 * b0 * b4 * b5 * pow(c3, 2) * c4 + 8 * a0 * b3 * b5 * pow(c4, 2) * d5 -
            8 * a2 * b2 * b5 * pow(c3, 2) * d5 + 8 * a3 * b0 * b5 * pow(c4, 2) * d5 +
            8 * a3 * b3 * b5 * pow(c1, 2) * d5 + 8 * a5 * b0 * b3 * pow(c4, 2) * d5 -
            8 * a5 * b0 * b5 * pow(c4, 2) * d3 + 8 * a5 * b2 * b5 * pow(c3, 2) * d2 -
            8 * a5 * b3 * b5 * pow(c1, 2) * d3 - 8 * a5 * b3 * b5 * pow(c4, 2) * d0 +
            8 * b0 * b3 * b5 * pow(c4, 2) * c5 + 8 * a3 * b3 * b5 * pow(c2, 2) * d5 +
            8 * a4 * b4 * b5 * pow(c0, 2) * d5 + 6 * a5 * b0 * b5 * pow(c3, 2) * d5 -
            6 * a5 * b3 * b5 * pow(c0, 2) * d5 - 8 * a5 * b3 * b5 * pow(c2, 2) * d3 -
            8 * a5 * b4 * b5 * pow(c0, 2) * d4 + 8 * a3 * b3 * b4 * pow(c5, 2) * d4 +
            6 * a3 * b3 * b5 * pow(c5, 2) * d3 - 8 * a4 * b3 * b4 * pow(c5, 2) * d3 +
            32 * a4 * b4 * b5 * pow(c1, 2) * d5 - 8 * a5 * b3 * b5 * pow(c1, 2) * d5 -
            32 * a5 * b4 * b5 * pow(c1, 2) * d4 - 8 * a3 * b3 * b5 * pow(c4, 2) * d5 +
            8 * a5 * b3 * b5 * pow(c4, 2) * d3 + 8 * a4 * b4 * b5 * pow(c3, 2) * d5 -
            6 * a5 * b3 * b5 * pow(c3, 2) * d5 - 8 * a5 * b4 * b5 * pow(c3, 2) * d4 +
            8 * a0 * pow(b3, 2) * c0 * c1 * d1 - 8 * a1 * pow(b3, 2) * c0 * c1 * d0 -
            6 * a0 * pow(b3, 2) * c0 * c3 * d0 + 32 * a0 * pow(b4, 2) * c0 * c1 * d1 -
            32 * a1 * pow(b4, 2) * c0 * c1 * d0 - 8 * a0 * pow(b1, 2) * c0 * c3 * d3 -
            8 * a0 * pow(b3, 2) * c0 * c2 * d2 - 8 * a0 * pow(b4, 2) * c0 * c3 * d0 +
            8 * a0 * pow(b5, 2) * c0 * c1 * d1 - 8 * a1 * pow(b5, 2) * c0 * c1 * d0 +
            8 * a2 * pow(b3, 2) * c0 * c2 * d0 + 8 * a3 * pow(b1, 2) * c0 * c3 * d0 +
            8 * a0 * pow(b2, 2) * c0 * c3 * d3 + 6 * a0 * pow(b3, 2) * c0 * c5 * d0 -
            32 * a0 * pow(b4, 2) * c0 * c2 * d2 - 6 * a0 * pow(b5, 2) * c0 * c3 * d0 +
            8 * a1 * pow(b0, 2) * c1 * c3 * d3 + 32 * a2 * pow(b4, 2) * c0 * c2 * d0 -
            8 * a3 * pow(b0, 2) * c1 * c3 * d1 - 8 * a3 * pow(b2, 2) * c0 * c3 * d0 +
            8 * a0 * pow(b1, 2) * c0 * c3 * d5 - 32 * a0 * pow(b1, 2) * c0 * c4 * d4 +
            8 * a0 * pow(b1, 2) * c0 * c5 * d3 + 8 * a0 * pow(b1, 2) * c3 * c5 * d0 +
            8 * a0 * pow(b4, 2) * c0 * c5 * d0 - 8 * a0 * pow(b5, 2) * c0 * c2 * d2 -
            32 * a1 * pow(b3, 2) * c1 * c2 * d2 + 32 * a2 * pow(b3, 2) * c1 * c2 * d1 +
            8 * a2 * pow(b5, 2) * c0 * c2 * d0 + 6 * a3 * pow(b0, 2) * c0 * c3 * d3 -
            8 * a3 * pow(b1, 2) * c0 * c5 * d0 + 32 * a4 * pow(b1, 2) * c0 * c4 * d0 -
            8 * a5 * pow(b1, 2) * c0 * c3 * d0 + 8 * b0 * pow(b1, 2) * c0 * c3 * c5 -
            8 * a0 * pow(b2, 2) * c0 * c3 * d5 + 32 * a0 * pow(b2, 2) * c0 * c4 * d4 -
            8 * a0 * pow(b2, 2) * c0 * c5 * d3 - 8 * a0 * pow(b2, 2) * c3 * c5 * d0 +
            16 * a0 * pow(b3, 2) * c1 * c2 * d4 + 16 * a0 * pow(b3, 2) * c1 * c4 * d2 -
            8 * a0 * pow(b3, 2) * c1 * c5 * d1 - 8 * a0 * pow(b3, 2) * c2 * c3 * d2 +
            16 * a0 * pow(b3, 2) * c2 * c4 * d1 + 8 * a0 * pow(b4, 2) * c0 * c3 * d3 +
            6 * a0 * pow(b5, 2) * c0 * c5 * d0 - 16 * a0 * pow(b5, 2) * c1 * c3 * d1 -
            8 * a1 * pow(b0, 2) * c1 * c3 * d5 + 32 * a1 * pow(b0, 2) * c1 * c4 * d4 -
            8 * a1 * pow(b0, 2) * c1 * c5 * d3 - 8 * a1 * pow(b0, 2) * c3 * c5 * d1 +
            32 * a1 * pow(b2, 2) * c1 * c3 * d3 + 8 * a1 * pow(b3, 2) * c0 * c1 * d5 +
            8 * a1 * pow(b3, 2) * c0 * c5 * d1 + 8 * a1 * pow(b3, 2) * c1 * c5 * d0 -
            128 * a1 * pow(b4, 2) * c1 * c2 * d2 - 8 * a2 * pow(b0, 2) * c2 * c3 * d3 -
            16 * a2 * pow(b3, 2) * c0 * c1 * d4 - 8 * a2 * pow(b3, 2) * c0 * c2 * d3 -
            8 * a2 * pow(b3, 2) * c0 * c3 * d2 - 16 * a2 * pow(b3, 2) * c0 * c4 * d1 -
            16 * a2 * pow(b3, 2) * c1 * c4 * d0 - 8 * a2 * pow(b3, 2) * c2 * c3 * d0 +
            128 * a2 * pow(b4, 2) * c1 * c2 * d1 - 16 * a3 * pow(b0, 2) * c1 * c2 * d4 -
            16 * a3 * pow(b0, 2) * c1 * c4 * d2 + 8 * a3 * pow(b0, 2) * c1 * c5 * d1 +
            8 * a3 * pow(b0, 2) * c2 * c3 * d2 - 16 * a3 * pow(b0, 2) * c2 * c4 * d1 +
            8 * a3 * pow(b2, 2) * c0 * c5 * d0 - 32 * a3 * pow(b2, 2) * c1 * c3 * d1 +
            24 * a3 * pow(b3, 2) * c0 * c2 * d2 - 8 * a3 * pow(b4, 2) * c0 * c3 * d0 +
            16 * a3 * pow(b5, 2) * c0 * c1 * d1 + 16 * a4 * pow(b0, 2) * c1 * c2 * d3 +
            16 * a4 * pow(b0, 2) * c1 * c3 * d2 - 32 * a4 * pow(b0, 2) * c1 * c4 * d1 +
            16 * a4 * pow(b0, 2) * c2 * c3 * d1 - 32 * a4 * pow(b2, 2) * c0 * c4 * d0 +
            8 * a5 * pow(b0, 2) * c1 * c3 * d1 + 8 * a5 * pow(b2, 2) * c0 * c3 * d0 -
            8 * a5 * pow(b3, 2) * c0 * c1 * d1 - 8 * b0 * pow(b2, 2) * c0 * c3 * c5 +
            16 * b0 * pow(b3, 2) * c1 * c2 * c4 + 8 * b1 * pow(b3, 2) * c0 * c1 * c5 -
            16 * b2 * pow(b3, 2) * c0 * c1 * c4 - 8 * b2 * pow(b3, 2) * c0 * c2 * c3 -
            8 * pow(b0, 2) * b1 * c1 * c3 * c5 - 16 * pow(b0, 2) * b3 * c1 * c2 * c4 +
            16 * pow(b0, 2) * b4 * c1 * c2 * c3 - 24 * a0 * pow(b0, 2) * c3 * c4 * d4 +
            18 * a0 * pow(b0, 2) * c3 * c5 * d3 - 8 * a0 * pow(b1, 2) * c0 * c5 * d5 +
            6 * a0 * pow(b3, 2) * c0 * c3 * d5 - 8 * a0 * pow(b3, 2) * c0 * c4 * d4 +
            6 * a0 * pow(b3, 2) * c0 * c5 * d3 + 6 * a0 * pow(b3, 2) * c3 * c5 * d0 -
            32 * a0 * pow(b4, 2) * c1 * c5 * d1 + 32 * a0 * pow(b4, 2) * c2 * c3 * d2 +
            12 * a0 * pow(b5, 2) * c0 * c3 * d3 + 32 * a1 * pow(b4, 2) * c0 * c1 * d5 +
            32 * a1 * pow(b4, 2) * c0 * c5 * d1 + 32 * a1 * pow(b4, 2) * c1 * c5 * d0 -
            32 * a1 * pow(b5, 2) * c1 * c2 * d2 - 32 * a2 * pow(b1, 2) * c2 * c3 * d3 -
            32 * a2 * pow(b4, 2) * c0 * c2 * d3 - 32 * a2 * pow(b4, 2) * c0 * c3 * d2 -
            32 * a2 * pow(b4, 2) * c2 * c3 * d0 + 32 * a2 * pow(b5, 2) * c1 * c2 * d1 -
            6 * a3 * pow(b0, 2) * c0 * c3 * d5 + 8 * a3 * pow(b0, 2) * c0 * c4 * d4 -
            6 * a3 * pow(b0, 2) * c0 * c5 * d3 - 6 * a3 * pow(b0, 2) * c3 * c5 * d0 +
            32 * a3 * pow(b1, 2) * c2 * c3 * d2 + 8 * a3 * pow(b2, 2) * c0 * c3 * d3 -
            18 * a3 * pow(b3, 2) * c0 * c5 * d0 + 32 * a3 * pow(b4, 2) * c0 * c2 * d2 -
            12 * a3 * pow(b5, 2) * c0 * c3 * d0 + 8 * a4 * pow(b0, 2) * c0 * c3 * d4 +
            8 * a4 * pow(b0, 2) * c0 * c4 * d3 + 8 * a4 * pow(b0, 2) * c3 * c4 * d0 +
            8 * a4 * pow(b3, 2) * c0 * c4 * d0 - 6 * a5 * pow(b0, 2) * c0 * c3 * d3 +
            8 * a5 * pow(b1, 2) * c0 * c5 * d0 + 6 * a5 * pow(b3, 2) * c0 * c3 * d0 -
            32 * a5 * pow(b4, 2) * c0 * c1 * d1 + 6 * b0 * pow(b3, 2) * c0 * c3 * c5 +
            32 * b1 * pow(b4, 2) * c0 * c1 * c5 - 32 * b2 * pow(b4, 2) * c0 * c2 * c3 -
            6 * pow(b0, 2) * b3 * c0 * c3 * c5 + 8 * pow(b0, 2) * b4 * c0 * c3 * c4 +
            8 * a0 * pow(b1, 2) * c3 * c5 * d3 + 8 * a0 * pow(b2, 2) * c0 * c5 * d5 +
            16 * a0 * pow(b3, 2) * c2 * c5 * d2 - 16 * a0 * pow(b5, 2) * c1 * c2 * d4 -
            16 * a0 * pow(b5, 2) * c1 * c4 * d2 + 8 * a0 * pow(b5, 2) * c1 * c5 * d1 +
            8 * a0 * pow(b5, 2) * c2 * c3 * d2 - 16 * a0 * pow(b5, 2) * c2 * c4 * d1 +
            8 * a1 * pow(b0, 2) * c1 * c5 * d5 - 32 * a1 * pow(b2, 2) * c1 * c3 * d5 +
            128 * a1 * pow(b2, 2) * c1 * c4 * d4 - 32 * a1 * pow(b2, 2) * c1 * c5 * d3 -
            32 * a1 * pow(b2, 2) * c3 * c5 * d1 + 8 * a1 * pow(b5, 2) * c0 * c1 * d5 +
            16 * a1 * pow(b5, 2) * c0 * c2 * d4 + 16 * a1 * pow(b5, 2) * c0 * c4 * d2 +
            8 * a1 * pow(b5, 2) * c0 * c5 * d1 + 8 * a1 * pow(b5, 2) * c1 * c5 * d0 +
            16 * a1 * pow(b5, 2) * c2 * c4 * d0 + 8 * a2 * pow(b0, 2) * c2 * c3 * d5 -
            32 * a2 * pow(b0, 2) * c2 * c4 * d4 + 8 * a2 * pow(b0, 2) * c2 * c5 * d3 +
            8 * a2 * pow(b0, 2) * c3 * c5 * d2 - 8 * a2 * pow(b5, 2) * c0 * c2 * d3 -
            8 * a2 * pow(b5, 2) * c0 * c3 * d2 - 8 * a2 * pow(b5, 2) * c2 * c3 * d0 -
            8 * a3 * pow(b0, 2) * c2 * c5 * d2 - 8 * a3 * pow(b1, 2) * c0 * c3 * d5 -
            8 * a3 * pow(b1, 2) * c0 * c5 * d3 - 8 * a3 * pow(b1, 2) * c3 * c5 * d0 +
            32 * a3 * pow(b2, 2) * c1 * c5 * d1 - 16 * a3 * pow(b4, 2) * c0 * c5 * d0 +
            8 * a3 * pow(b5, 2) * c0 * c2 * d2 - 16 * a4 * pow(b0, 2) * c1 * c2 * d5 -
            16 * a4 * pow(b0, 2) * c1 * c5 * d2 + 32 * a4 * pow(b0, 2) * c2 * c4 * d2 -
            16 * a4 * pow(b0, 2) * c2 * c5 * d1 - 128 * a4 * pow(b2, 2) * c1 * c4 * d1 +
            16 * a5 * pow(b0, 2) * c1 * c2 * d4 + 16 * a5 * pow(b0, 2) * c1 * c4 * d2 -
            8 * a5 * pow(b0, 2) * c1 * c5 * d1 - 8 * a5 * pow(b0, 2) * c2 * c3 * d2 +
            16 * a5 * pow(b0, 2) * c2 * c4 * d1 + 8 * a5 * pow(b1, 2) * c0 * c3 * d3 -
            8 * a5 * pow(b2, 2) * c0 * c5 * d0 + 32 * a5 * pow(b2, 2) * c1 * c3 * d1 -
            16 * a5 * pow(b3, 2) * c0 * c2 * d2 + 16 * a5 * pow(b4, 2) * c0 * c3 * d0 -
            24 * a5 * pow(b5, 2) * c0 * c1 * d1 - 16 * b0 * pow(b5, 2) * c1 * c2 * c4 -
            32 * b1 * pow(b2, 2) * c1 * c3 * c5 + 8 * b1 * pow(b5, 2) * c0 * c1 * c5 +
            16 * b1 * pow(b5, 2) * c0 * c2 * c4 - 8 * b2 * pow(b5, 2) * c0 * c2 * c3 +
            8 * pow(b0, 2) * b2 * c2 * c3 * c5 - 16 * pow(b0, 2) * b4 * c1 * c2 * c5 +
            16 * pow(b0, 2) * b5 * c1 * c2 * c4 - 8 * pow(b1, 2) * b3 * c0 * c3 * c5 -
            18 * a0 * pow(b0, 2) * c3 * c5 * d5 + 24 * a0 * pow(b0, 2) * c4 * c5 * d4 -
            32 * a0 * pow(b2, 2) * c3 * c4 * d4 + 16 * a0 * pow(b2, 2) * c3 * c5 * d3 -
            12 * a0 * pow(b3, 2) * c0 * c5 * d5 - 6 * a0 * pow(b5, 2) * c0 * c3 * d5 +
            8 * a0 * pow(b5, 2) * c0 * c4 * d4 - 6 * a0 * pow(b5, 2) * c0 * c5 * d3 -
            6 * a0 * pow(b5, 2) * c3 * c5 * d0 + 8 * a1 * pow(b5, 2) * c1 * c3 * d3 +
            32 * a2 * pow(b1, 2) * c2 * c3 * d5 - 128 * a2 * pow(b1, 2) * c2 * c4 * d4 +
            32 * a2 * pow(b1, 2) * c2 * c5 * d3 + 32 * a2 * pow(b1, 2) * c3 * c5 * d2 +
            6 * a3 * pow(b0, 2) * c0 * c5 * d5 - 32 * a3 * pow(b1, 2) * c2 * c5 * d2 -
            32 * a3 * pow(b2, 2) * c0 * c4 * d4 - 6 * a3 * pow(b5, 2) * c0 * c5 * d0 -
            8 * a3 * pow(b5, 2) * c1 * c3 * d1 - 8 * a4 * pow(b0, 2) * c0 * c4 * d5 -
            8 * a4 * pow(b0, 2) * c0 * c5 * d4 - 8 * a4 * pow(b0, 2) * c4 * c5 * d0 +
            128 * a4 * pow(b1, 2) * c2 * c4 * d2 + 32 * a4 * pow(b2, 2) * c0 * c3 * d4 +
            32 * a4 * pow(b2, 2) * c0 * c4 * d3 + 32 * a4 * pow(b2, 2) * c3 * c4 * d0 -
            8 * a4 * pow(b5, 2) * c0 * c4 * d0 + 6 * a5 * pow(b0, 2) * c0 * c3 * d5 -
            8 * a5 * pow(b0, 2) * c0 * c4 * d4 + 6 * a5 * pow(b0, 2) * c0 * c5 * d3 +
            6 * a5 * pow(b0, 2) * c3 * c5 * d0 - 32 * a5 * pow(b1, 2) * c2 * c3 * d2 -
            16 * a5 * pow(b2, 2) * c0 * c3 * d3 + 12 * a5 * pow(b3, 2) * c0 * c5 * d0 +
            18 * a5 * pow(b5, 2) * c0 * c3 * d0 - 6 * b0 * pow(b5, 2) * c0 * c3 * c5 -
            8 * pow(b0, 2) * b4 * c0 * c4 * c5 + 6 * pow(b0, 2) * b5 * c0 * c3 * c5 +
            32 * pow(b1, 2) * b2 * c2 * c3 * c5 + 32 * pow(b2, 2) * b4 * c0 * c3 * c4 -
            16 * a0 * pow(b1, 2) * c3 * c5 * d5 + 32 * a0 * pow(b1, 2) * c4 * c5 * d4 -
            8 * a0 * pow(b4, 2) * c0 * c5 * d5 + 32 * a1 * pow(b2, 2) * c1 * c5 * d5 -
            8 * a2 * pow(b0, 2) * c2 * c5 * d5 + 32 * a2 * pow(b4, 2) * c2 * c3 * d3 +
            8 * a3 * pow(b0, 2) * c3 * c4 * d4 - 6 * a3 * pow(b0, 2) * c3 * c5 * d3 +
            16 * a3 * pow(b1, 2) * c0 * c5 * d5 - 32 * a3 * pow(b4, 2) * c2 * c3 * d2 +
            6 * a3 * pow(b5, 2) * c0 * c3 * d3 - 8 * a4 * pow(b0, 2) * c3 * c4 * d3 -
            32 * a4 * pow(b1, 2) * c0 * c4 * d5 - 32 * a4 * pow(b1, 2) * c0 * c5 * d4 -
            32 * a4 * pow(b1, 2) * c4 * c5 * d0 + 8 * a5 * pow(b0, 2) * c2 * c5 * d2 +
            32 * a5 * pow(b1, 2) * c0 * c4 * d4 - 32 * a5 * pow(b2, 2) * c1 * c5 * d1 +
            8 * a5 * pow(b4, 2) * c0 * c5 * d0 - 32 * pow(b1, 2) * b4 * c0 * c4 * c5 -
            8 * a0 * pow(b2, 2) * c3 * c5 * d5 - 8 * a0 * pow(b4, 2) * c3 * c5 * d3 -
            8 * a1 * pow(b3, 2) * c1 * c5 * d5 - 8 * a1 * pow(b5, 2) * c1 * c3 * d5 +
            32 * a1 * pow(b5, 2) * c1 * c4 * d4 - 8 * a1 * pow(b5, 2) * c1 * c5 * d3 -
            16 * a1 * pow(b5, 2) * c2 * c3 * d4 - 16 * a1 * pow(b5, 2) * c2 * c4 * d3 -
            16 * a1 * pow(b5, 2) * c3 * c4 * d2 - 8 * a1 * pow(b5, 2) * c3 * c5 * d1 -
            32 * a2 * pow(b1, 2) * c2 * c5 * d5 + 16 * a2 * pow(b3, 2) * c1 * c4 * d5 +
            16 * a2 * pow(b3, 2) * c1 * c5 * d4 + 8 * a2 * pow(b3, 2) * c2 * c3 * d5 -
            32 * a2 * pow(b3, 2) * c2 * c4 * d4 + 8 * a2 * pow(b3, 2) * c2 * c5 * d3 +
            8 * a2 * pow(b3, 2) * c3 * c5 * d2 + 16 * a2 * pow(b3, 2) * c4 * c5 * d1 +
            8 * a2 * pow(b5, 2) * c2 * c3 * d3 - 8 * a3 * pow(b2, 2) * c0 * c5 * d5 -
            24 * a3 * pow(b3, 2) * c2 * c5 * d2 + 8 * a3 * pow(b4, 2) * c0 * c3 * d5 +
            8 * a3 * pow(b4, 2) * c0 * c5 * d3 + 8 * a3 * pow(b4, 2) * c3 * c5 * d0 +
            16 * a3 * pow(b5, 2) * c1 * c2 * d4 + 16 * a3 * pow(b5, 2) * c1 * c4 * d2 -
            8 * a3 * pow(b5, 2) * c1 * c5 * d1 - 8 * a3 * pow(b5, 2) * c2 * c3 * d2 +
            16 * a3 * pow(b5, 2) * c2 * c4 * d1 + 32 * a4 * pow(b3, 2) * c2 * c4 * d2 -
            32 * a4 * pow(b5, 2) * c1 * c4 * d1 - 6 * a5 * pow(b0, 2) * c0 * c5 * d5 +
            32 * a5 * pow(b1, 2) * c2 * c5 * d2 + 8 * a5 * pow(b2, 2) * c0 * c3 * d5 +
            8 * a5 * pow(b2, 2) * c0 * c5 * d3 + 8 * a5 * pow(b2, 2) * c3 * c5 * d0 -
            16 * a5 * pow(b3, 2) * c1 * c2 * d4 - 16 * a5 * pow(b3, 2) * c1 * c4 * d2 +
            8 * a5 * pow(b3, 2) * c1 * c5 * d1 + 8 * a5 * pow(b3, 2) * c2 * c3 * d2 -
            16 * a5 * pow(b3, 2) * c2 * c4 * d1 - 8 * a5 * pow(b4, 2) * c0 * c3 * d3 +
            24 * a5 * pow(b5, 2) * c1 * c3 * d1 - 8 * b1 * pow(b5, 2) * c1 * c3 * c5 -
            16 * b1 * pow(b5, 2) * c2 * c3 * c4 + 16 * b2 * pow(b3, 2) * c1 * c4 * c5 +
            8 * b2 * pow(b3, 2) * c2 * c3 * c5 + 8 * b3 * pow(b4, 2) * c0 * c3 * c5 +
            16 * b3 * pow(b5, 2) * c1 * c2 * c4 + 8 * pow(b2, 2) * b5 * c0 * c3 * c5 -
            16 * pow(b3, 2) * b5 * c1 * c2 * c4 - 6 * a0 * pow(b3, 2) * c3 * c5 * d5 +
            8 * a0 * pow(b3, 2) * c4 * c5 * d4 - 8 * a0 * pow(b5, 2) * c3 * c4 * d4 +
            6 * a0 * pow(b5, 2) * c3 * c5 * d3 - 32 * a1 * pow(b4, 2) * c1 * c5 * d5 +
            12 * a3 * pow(b0, 2) * c3 * c5 * d5 - 16 * a3 * pow(b0, 2) * c4 * c5 * d4 +
            32 * a3 * pow(b2, 2) * c3 * c4 * d4 - 8 * a3 * pow(b2, 2) * c3 * c5 * d3 +
            18 * a3 * pow(b3, 2) * c0 * c5 * d5 + 6 * a3 * pow(b5, 2) * c0 * c3 * d5 -
            8 * a3 * pow(b5, 2) * c0 * c4 * d4 + 6 * a3 * pow(b5, 2) * c0 * c5 * d3 +
            6 * a3 * pow(b5, 2) * c3 * c5 * d0 - 32 * a4 * pow(b2, 2) * c3 * c4 * d3 -
            8 * a4 * pow(b3, 2) * c0 * c4 * d5 - 8 * a4 * pow(b3, 2) * c0 * c5 * d4 -
            8 * a4 * pow(b3, 2) * c4 * c5 * d0 + 8 * a4 * pow(b5, 2) * c0 * c3 * d4 +
            8 * a4 * pow(b5, 2) * c0 * c4 * d3 + 8 * a4 * pow(b5, 2) * c3 * c4 * d0 +
            16 * a5 * pow(b0, 2) * c3 * c4 * d4 - 12 * a5 * pow(b0, 2) * c3 * c5 * d3 -
            8 * a5 * pow(b1, 2) * c0 * c5 * d5 - 6 * a5 * pow(b3, 2) * c0 * c3 * d5 +
            8 * a5 * pow(b3, 2) * c0 * c4 * d4 - 6 * a5 * pow(b3, 2) * c0 * c5 * d3 -
            6 * a5 * pow(b3, 2) * c3 * c5 * d0 + 32 * a5 * pow(b4, 2) * c1 * c5 * d1 -
            18 * a5 * pow(b5, 2) * c0 * c3 * d3 + 6 * b3 * pow(b5, 2) * c0 * c3 * c5 +
            8 * b4 * pow(b5, 2) * c0 * c3 * c4 - 8 * pow(b3, 2) * b4 * c0 * c4 * c5 -
            6 * pow(b3, 2) * b5 * c0 * c3 * c5 + 8 * a0 * pow(b4, 2) * c3 * c5 * d5 -
            8 * a2 * pow(b3, 2) * c2 * c5 * d5 + 8 * a3 * pow(b1, 2) * c3 * c5 * d5 +
            8 * a3 * pow(b4, 2) * c0 * c5 * d5 - 8 * a5 * pow(b1, 2) * c3 * c5 * d3 +
            8 * a5 * pow(b3, 2) * c2 * c5 * d2 - 8 * a5 * pow(b4, 2) * c0 * c3 * d5 -
            8 * a5 * pow(b4, 2) * c0 * c5 * d3 - 8 * a5 * pow(b4, 2) * c3 * c5 * d0 -
            8 * pow(b4, 2) * b5 * c0 * c3 * c5 + 8 * a3 * pow(b2, 2) * c3 * c5 * d5 +
            8 * a4 * pow(b0, 2) * c4 * c5 * d5 + 6 * a5 * pow(b0, 2) * c3 * c5 * d5 -
            8 * a5 * pow(b0, 2) * c4 * c5 * d4 - 8 * a5 * pow(b2, 2) * c3 * c5 * d3 -
            6 * a5 * pow(b3, 2) * c0 * c5 * d5 + 8 * a3 * pow(b5, 2) * c3 * c4 * d4 -
            6 * a3 * pow(b5, 2) * c3 * c5 * d3 + 32 * a4 * pow(b1, 2) * c4 * c5 * d5 -
            8 * a4 * pow(b5, 2) * c3 * c4 * d3 + 8 * a5 * pow(b1, 2) * c3 * c5 * d5 -
            32 * a5 * pow(b1, 2) * c4 * c5 * d4 - 8 * a3 * pow(b4, 2) * c3 * c5 * d5 +
            8 * a5 * pow(b4, 2) * c3 * c5 * d3 + 8 * a4 * pow(b3, 2) * c4 * c5 * d5 +
            6 * a5 * pow(b3, 2) * c3 * c5 * d5 - 8 * a5 * pow(b3, 2) * c4 * c5 * d4 +
            8 * pow(a3, 2) * b0 * c1 * d0 * d1 - 8 * pow(a3, 2) * b1 * c0 * d0 * d1 -
            6 * pow(a3, 2) * b0 * c0 * d0 * d3 + 32 * pow(a4, 2) * b0 * c1 * d0 * d1 -
            32 * pow(a4, 2) * b1 * c0 * d0 * d1 - 8 * pow(a1, 2) * b0 * c3 * d0 * d3 +
            8 * pow(a1, 2) * b3 * c0 * d0 * d3 - 8 * pow(a3, 2) * b0 * c2 * d0 * d2 +
            8 * pow(a3, 2) * b2 * c0 * d0 * d2 - 8 * pow(a4, 2) * b0 * c0 * d0 * d3 +
            8 * pow(a5, 2) * b0 * c1 * d0 * d1 - 8 * pow(a5, 2) * b1 * c0 * d0 * d1 +
            8 * pow(a0, 2) * b1 * c3 * d1 * d3 - 8 * pow(a0, 2) * b3 * c1 * d1 * d3 +
            8 * pow(a2, 2) * b0 * c3 * d0 * d3 - 8 * pow(a2, 2) * b3 * c0 * d0 * d3 +
            6 * pow(a3, 2) * b0 * c0 * d0 * d5 - 32 * pow(a4, 2) * b0 * c2 * d0 * d2 +
            32 * pow(a4, 2) * b2 * c0 * d0 * d2 - 6 * pow(a5, 2) * b0 * c0 * d0 * d3 +
            8 * a0 * pow(a1, 2) * d0 * d3 * d5 + 6 * pow(a0, 2) * b3 * c3 * d0 * d3 +
            8 * pow(a1, 2) * b0 * c0 * d3 * d5 + 8 * pow(a1, 2) * b0 * c3 * d0 * d5 -
            32 * pow(a1, 2) * b0 * c4 * d0 * d4 + 8 * pow(a1, 2) * b0 * c5 * d0 * d3 -
            8 * pow(a1, 2) * b3 * c0 * d0 * d5 + 32 * pow(a1, 2) * b4 * c0 * d0 * d4 -
            8 * pow(a1, 2) * b5 * c0 * d0 * d3 - 32 * pow(a3, 2) * b1 * c2 * d1 * d2 +
            32 * pow(a3, 2) * b2 * c1 * d1 * d2 + 8 * pow(a4, 2) * b0 * c0 * d0 * d5 -
            8 * pow(a5, 2) * b0 * c2 * d0 * d2 + 8 * pow(a5, 2) * b2 * c0 * d0 * d2 -
            8 * a0 * pow(a2, 2) * d0 * d3 * d5 + 16 * a0 * pow(a3, 2) * d1 * d2 * d4 +
            8 * a1 * pow(a3, 2) * d0 * d1 * d5 - 16 * a2 * pow(a3, 2) * d0 * d1 * d4 -
            8 * a2 * pow(a3, 2) * d0 * d2 * d3 - 8 * pow(a0, 2) * a1 * d1 * d3 * d5 -
            16 * pow(a0, 2) * a3 * d1 * d2 * d4 + 16 * pow(a0, 2) * a4 * d1 * d2 * d3 -
            8 * pow(a0, 2) * b1 * c1 * d3 * d5 - 8 * pow(a0, 2) * b1 * c3 * d1 * d5 +
            32 * pow(a0, 2) * b1 * c4 * d1 * d4 - 8 * pow(a0, 2) * b1 * c5 * d1 * d3 -
            8 * pow(a0, 2) * b2 * c3 * d2 * d3 + 8 * pow(a0, 2) * b3 * c1 * d1 * d5 -
            16 * pow(a0, 2) * b3 * c1 * d2 * d4 - 16 * pow(a0, 2) * b3 * c2 * d1 * d4 +
            8 * pow(a0, 2) * b3 * c2 * d2 * d3 - 16 * pow(a0, 2) * b3 * c4 * d1 * d2 -
            32 * pow(a0, 2) * b4 * c1 * d1 * d4 + 16 * pow(a0, 2) * b4 * c1 * d2 * d3 +
            16 * pow(a0, 2) * b4 * c2 * d1 * d3 + 16 * pow(a0, 2) * b4 * c3 * d1 * d2 +
            8 * pow(a0, 2) * b5 * c1 * d1 * d3 - 8 * pow(a2, 2) * b0 * c0 * d3 * d5 -
            8 * pow(a2, 2) * b0 * c3 * d0 * d5 + 32 * pow(a2, 2) * b0 * c4 * d0 * d4 -
            8 * pow(a2, 2) * b0 * c5 * d0 * d3 + 32 * pow(a2, 2) * b1 * c3 * d1 * d3 +
            8 * pow(a2, 2) * b3 * c0 * d0 * d5 - 32 * pow(a2, 2) * b3 * c1 * d1 * d3 -
            32 * pow(a2, 2) * b4 * c0 * d0 * d4 + 8 * pow(a2, 2) * b5 * c0 * d0 * d3 -
            8 * pow(a3, 2) * b0 * c1 * d1 * d5 + 16 * pow(a3, 2) * b0 * c1 * d2 * d4 +
            16 * pow(a3, 2) * b0 * c2 * d1 * d4 - 8 * pow(a3, 2) * b0 * c2 * d2 * d3 +
            16 * pow(a3, 2) * b0 * c4 * d1 * d2 + 8 * pow(a3, 2) * b1 * c0 * d1 * d5 +
            8 * pow(a3, 2) * b1 * c1 * d0 * d5 + 8 * pow(a3, 2) * b1 * c5 * d0 * d1 -
            16 * pow(a3, 2) * b2 * c0 * d1 * d4 - 8 * pow(a3, 2) * b2 * c0 * d2 * d3 -
            16 * pow(a3, 2) * b2 * c1 * d0 * d4 - 8 * pow(a3, 2) * b2 * c2 * d0 * d3 -
            8 * pow(a3, 2) * b2 * c3 * d0 * d2 - 16 * pow(a3, 2) * b2 * c4 * d0 * d1 +
            24 * pow(a3, 2) * b3 * c2 * d0 * d2 - 8 * pow(a3, 2) * b5 * c1 * d0 * d1 +
            8 * pow(a4, 2) * b0 * c3 * d0 * d3 - 128 * pow(a4, 2) * b1 * c2 * d1 * d2 +
            128 * pow(a4, 2) * b2 * c1 * d1 * d2 - 8 * pow(a4, 2) * b3 * c0 * d0 * d3 +
            6 * pow(a5, 2) * b0 * c0 * d0 * d5 - 16 * pow(a5, 2) * b0 * c1 * d1 * d3 +
            16 * pow(a5, 2) * b3 * c1 * d0 * d1 + 6 * a0 * pow(a3, 2) * d0 * d3 * d5 +
            32 * a1 * pow(a4, 2) * d0 * d1 * d5 - 32 * a2 * pow(a4, 2) * d0 * d2 * d3 -
            6 * pow(a0, 2) * a3 * d0 * d3 * d5 + 8 * pow(a0, 2) * a4 * d0 * d3 * d4 +
            18 * pow(a0, 2) * b0 * c3 * d3 * d5 - 24 * pow(a0, 2) * b0 * c4 * d3 * d4 -
            6 * pow(a0, 2) * b3 * c0 * d3 * d5 - 6 * pow(a0, 2) * b3 * c3 * d0 * d5 +
            8 * pow(a0, 2) * b3 * c4 * d0 * d4 - 6 * pow(a0, 2) * b3 * c5 * d0 * d3 +
            8 * pow(a0, 2) * b4 * c0 * d3 * d4 + 8 * pow(a0, 2) * b4 * c3 * d0 * d4 +
            8 * pow(a0, 2) * b4 * c4 * d0 * d3 - 6 * pow(a0, 2) * b5 * c3 * d0 * d3 -
            8 * pow(a1, 2) * b0 * c5 * d0 * d5 - 32 * pow(a1, 2) * b2 * c3 * d2 * d3 +
            32 * pow(a1, 2) * b3 * c2 * d2 * d3 + 8 * pow(a1, 2) * b5 * c0 * d0 * d5 +
            8 * pow(a2, 2) * b3 * c3 * d0 * d3 + 6 * pow(a3, 2) * b0 * c0 * d3 * d5 +
            6 * pow(a3, 2) * b0 * c3 * d0 * d5 - 8 * pow(a3, 2) * b0 * c4 * d0 * d4 +
            6 * pow(a3, 2) * b0 * c5 * d0 * d3 - 18 * pow(a3, 2) * b3 * c0 * d0 * d5 +
            8 * pow(a3, 2) * b4 * c0 * d0 * d4 + 6 * pow(a3, 2) * b5 * c0 * d0 * d3 -
            32 * pow(a4, 2) * b0 * c1 * d1 * d5 + 32 * pow(a4, 2) * b0 * c2 * d2 * d3 +
            32 * pow(a4, 2) * b1 * c0 * d1 * d5 + 32 * pow(a4, 2) * b1 * c1 * d0 * d5 +
            32 * pow(a4, 2) * b1 * c5 * d0 * d1 - 32 * pow(a4, 2) * b2 * c0 * d2 * d3 -
            32 * pow(a4, 2) * b2 * c2 * d0 * d3 - 32 * pow(a4, 2) * b2 * c3 * d0 * d2 +
            32 * pow(a4, 2) * b3 * c2 * d0 * d2 - 32 * pow(a4, 2) * b5 * c1 * d0 * d1 +
            12 * pow(a5, 2) * b0 * c3 * d0 * d3 - 32 * pow(a5, 2) * b1 * c2 * d1 * d2 +
            32 * pow(a5, 2) * b2 * c1 * d1 * d2 - 12 * pow(a5, 2) * b3 * c0 * d0 * d3 -
            16 * a0 * pow(a5, 2) * d1 * d2 * d4 - 32 * a1 * pow(a2, 2) * d1 * d3 * d5 +
            8 * a1 * pow(a5, 2) * d0 * d1 * d5 + 16 * a1 * pow(a5, 2) * d0 * d2 * d4 -
            8 * a2 * pow(a5, 2) * d0 * d2 * d3 + 8 * pow(a0, 2) * a2 * d2 * d3 * d5 -
            16 * pow(a0, 2) * a4 * d1 * d2 * d5 + 16 * pow(a0, 2) * a5 * d1 * d2 * d4 +
            8 * pow(a0, 2) * b1 * c5 * d1 * d5 + 8 * pow(a0, 2) * b2 * c2 * d3 * d5 +
            8 * pow(a0, 2) * b2 * c3 * d2 * d5 - 32 * pow(a0, 2) * b2 * c4 * d2 * d4 +
            8 * pow(a0, 2) * b2 * c5 * d2 * d3 - 8 * pow(a0, 2) * b3 * c2 * d2 * d5 -
            16 * pow(a0, 2) * b4 * c1 * d2 * d5 - 16 * pow(a0, 2) * b4 * c2 * d1 * d5 +
            32 * pow(a0, 2) * b4 * c2 * d2 * d4 - 16 * pow(a0, 2) * b4 * c5 * d1 * d2 -
            8 * pow(a0, 2) * b5 * c1 * d1 * d5 + 16 * pow(a0, 2) * b5 * c1 * d2 * d4 +
            16 * pow(a0, 2) * b5 * c2 * d1 * d4 - 8 * pow(a0, 2) * b5 * c2 * d2 * d3 +
            16 * pow(a0, 2) * b5 * c4 * d1 * d2 - 8 * pow(a1, 2) * a3 * d0 * d3 * d5 +
            8 * pow(a1, 2) * b0 * c3 * d3 * d5 - 8 * pow(a1, 2) * b3 * c0 * d3 * d5 -
            8 * pow(a1, 2) * b3 * c3 * d0 * d5 - 8 * pow(a1, 2) * b3 * c5 * d0 * d3 +
            8 * pow(a1, 2) * b5 * c3 * d0 * d3 + 8 * pow(a2, 2) * b0 * c5 * d0 * d5 -
            32 * pow(a2, 2) * b1 * c1 * d3 * d5 - 32 * pow(a2, 2) * b1 * c3 * d1 * d5 +
            128 * pow(a2, 2) * b1 * c4 * d1 * d4 - 32 * pow(a2, 2) * b1 * c5 * d1 * d3 +
            32 * pow(a2, 2) * b3 * c1 * d1 * d5 - 128 * pow(a2, 2) * b4 * c1 * d1 * d4 -
            8 * pow(a2, 2) * b5 * c0 * d0 * d5 + 32 * pow(a2, 2) * b5 * c1 * d1 * d3 +
            16 * pow(a3, 2) * b0 * c2 * d2 * d5 - 16 * pow(a3, 2) * b5 * c2 * d0 * d2 -
            16 * pow(a4, 2) * b3 * c0 * d0 * d5 + 16 * pow(a4, 2) * b5 * c0 * d0 * d3 +
            8 * pow(a5, 2) * b0 * c1 * d1 * d5 - 16 * pow(a5, 2) * b0 * c1 * d2 * d4 -
            16 * pow(a5, 2) * b0 * c2 * d1 * d4 + 8 * pow(a5, 2) * b0 * c2 * d2 * d3 -
            16 * pow(a5, 2) * b0 * c4 * d1 * d2 + 8 * pow(a5, 2) * b1 * c0 * d1 * d5 +
            16 * pow(a5, 2) * b1 * c0 * d2 * d4 + 8 * pow(a5, 2) * b1 * c1 * d0 * d5 +
            16 * pow(a5, 2) * b1 * c2 * d0 * d4 + 16 * pow(a5, 2) * b1 * c4 * d0 * d2 +
            8 * pow(a5, 2) * b1 * c5 * d0 * d1 - 8 * pow(a5, 2) * b2 * c0 * d2 * d3 -
            8 * pow(a5, 2) * b2 * c2 * d0 * d3 - 8 * pow(a5, 2) * b2 * c3 * d0 * d2 +
            8 * pow(a5, 2) * b3 * c2 * d0 * d2 - 24 * pow(a5, 2) * b5 * c1 * d0 * d1 -
            6 * a0 * pow(a5, 2) * d0 * d3 * d5 - 8 * pow(a0, 2) * a4 * d0 * d4 * d5 +
            6 * pow(a0, 2) * a5 * d0 * d3 * d5 + 24 * pow(a0, 2) * b0 * c4 * d4 * d5 -
            18 * pow(a0, 2) * b0 * c5 * d3 * d5 + 6 * pow(a0, 2) * b3 * c5 * d0 * d5 -
            8 * pow(a0, 2) * b4 * c0 * d4 * d5 - 8 * pow(a0, 2) * b4 * c4 * d0 * d5 -
            8 * pow(a0, 2) * b4 * c5 * d0 * d4 + 6 * pow(a0, 2) * b5 * c0 * d3 * d5 +
            6 * pow(a0, 2) * b5 * c3 * d0 * d5 - 8 * pow(a0, 2) * b5 * c4 * d0 * d4 +
            6 * pow(a0, 2) * b5 * c5 * d0 * d3 + 32 * pow(a1, 2) * a2 * d2 * d3 * d5 +
            32 * pow(a1, 2) * b2 * c2 * d3 * d5 + 32 * pow(a1, 2) * b2 * c3 * d2 * d5 -
            128 * pow(a1, 2) * b2 * c4 * d2 * d4 + 32 * pow(a1, 2) * b2 * c5 * d2 * d3 -
            32 * pow(a1, 2) * b3 * c2 * d2 * d5 + 128 * pow(a1, 2) * b4 * c2 * d2 * d4 -
            32 * pow(a1, 2) * b5 * c2 * d2 * d3 + 32 * pow(a2, 2) * a4 * d0 * d3 * d4 +
            16 * pow(a2, 2) * b0 * c3 * d3 * d5 - 32 * pow(a2, 2) * b0 * c4 * d3 * d4 -
            32 * pow(a2, 2) * b3 * c4 * d0 * d4 + 32 * pow(a2, 2) * b4 * c0 * d3 * d4 +
            32 * pow(a2, 2) * b4 * c3 * d0 * d4 + 32 * pow(a2, 2) * b4 * c4 * d0 * d3 -
            16 * pow(a2, 2) * b5 * c3 * d0 * d3 - 12 * pow(a3, 2) * b0 * c5 * d0 * d5 +
            12 * pow(a3, 2) * b5 * c0 * d0 * d5 - 6 * pow(a5, 2) * b0 * c0 * d3 * d5 -
            6 * pow(a5, 2) * b0 * c3 * d0 * d5 + 8 * pow(a5, 2) * b0 * c4 * d0 * d4 -
            6 * pow(a5, 2) * b0 * c5 * d0 * d3 + 8 * pow(a5, 2) * b1 * c3 * d1 * d3 -
            6 * pow(a5, 2) * b3 * c0 * d0 * d5 - 8 * pow(a5, 2) * b3 * c1 * d1 * d3 -
            8 * pow(a5, 2) * b4 * c0 * d0 * d4 + 18 * pow(a5, 2) * b5 * c0 * d0 * d3 -
            8 * pow(a0, 2) * b2 * c5 * d2 * d5 - 6 * pow(a0, 2) * b3 * c3 * d3 * d5 +
            8 * pow(a0, 2) * b3 * c4 * d3 * d4 - 8 * pow(a0, 2) * b4 * c3 * d3 * d4 +
            8 * pow(a0, 2) * b5 * c2 * d2 * d5 - 32 * pow(a1, 2) * a4 * d0 * d4 * d5 +
            32 * pow(a1, 2) * b0 * c4 * d4 * d5 - 16 * pow(a1, 2) * b0 * c5 * d3 * d5 +
            16 * pow(a1, 2) * b3 * c5 * d0 * d5 - 32 * pow(a1, 2) * b4 * c0 * d4 * d5 -
            32 * pow(a1, 2) * b4 * c4 * d0 * d5 - 32 * pow(a1, 2) * b4 * c5 * d0 * d4 +
            32 * pow(a1, 2) * b5 * c4 * d0 * d4 + 32 * pow(a2, 2) * b1 * c5 * d1 * d5 -
            32 * pow(a2, 2) * b5 * c1 * d1 * d5 - 8 * pow(a4, 2) * b0 * c5 * d0 * d5 +
            32 * pow(a4, 2) * b2 * c3 * d2 * d3 - 32 * pow(a4, 2) * b3 * c2 * d2 * d3 +
            8 * pow(a4, 2) * b5 * c0 * d0 * d5 + 6 * pow(a5, 2) * b3 * c3 * d0 * d3 -
            8 * a1 * pow(a5, 2) * d1 * d3 * d5 - 16 * a1 * pow(a5, 2) * d2 * d3 * d4 +
            16 * a2 * pow(a3, 2) * d1 * d4 * d5 + 8 * a2 * pow(a3, 2) * d2 * d3 * d5 +
            8 * a3 * pow(a4, 2) * d0 * d3 * d5 + 16 * a3 * pow(a5, 2) * d1 * d2 * d4 -
            6 * pow(a0, 2) * b5 * c5 * d0 * d5 - 32 * pow(a1, 2) * b2 * c5 * d2 * d5 +
            32 * pow(a1, 2) * b5 * c2 * d2 * d5 + 8 * pow(a2, 2) * a5 * d0 * d3 * d5 -
            8 * pow(a2, 2) * b0 * c5 * d3 * d5 - 8 * pow(a2, 2) * b3 * c5 * d0 * d5 +
            8 * pow(a2, 2) * b5 * c0 * d3 * d5 + 8 * pow(a2, 2) * b5 * c3 * d0 * d5 +
            8 * pow(a2, 2) * b5 * c5 * d0 * d3 - 16 * pow(a3, 2) * a5 * d1 * d2 * d4 -
            8 * pow(a3, 2) * b1 * c5 * d1 * d5 + 16 * pow(a3, 2) * b2 * c1 * d4 * d5 +
            8 * pow(a3, 2) * b2 * c2 * d3 * d5 + 8 * pow(a3, 2) * b2 * c3 * d2 * d5 +
            16 * pow(a3, 2) * b2 * c4 * d1 * d5 - 32 * pow(a3, 2) * b2 * c4 * d2 * d4 +
            16 * pow(a3, 2) * b2 * c5 * d1 * d4 + 8 * pow(a3, 2) * b2 * c5 * d2 * d3 -
            24 * pow(a3, 2) * b3 * c2 * d2 * d5 + 32 * pow(a3, 2) * b4 * c2 * d2 * d4 +
            8 * pow(a3, 2) * b5 * c1 * d1 * d5 - 16 * pow(a3, 2) * b5 * c1 * d2 * d4 -
            16 * pow(a3, 2) * b5 * c2 * d1 * d4 + 8 * pow(a3, 2) * b5 * c2 * d2 * d3 -
            16 * pow(a3, 2) * b5 * c4 * d1 * d2 - 8 * pow(a4, 2) * b0 * c3 * d3 * d5 +
            8 * pow(a4, 2) * b3 * c0 * d3 * d5 + 8 * pow(a4, 2) * b3 * c3 * d0 * d5 +
            8 * pow(a4, 2) * b3 * c5 * d0 * d3 - 8 * pow(a4, 2) * b5 * c3 * d0 * d3 -
            8 * pow(a5, 2) * b1 * c1 * d3 * d5 - 16 * pow(a5, 2) * b1 * c2 * d3 * d4 -
            8 * pow(a5, 2) * b1 * c3 * d1 * d5 - 16 * pow(a5, 2) * b1 * c3 * d2 * d4 +
            32 * pow(a5, 2) * b1 * c4 * d1 * d4 - 16 * pow(a5, 2) * b1 * c4 * d2 * d3 -
            8 * pow(a5, 2) * b1 * c5 * d1 * d3 + 8 * pow(a5, 2) * b2 * c3 * d2 * d3 -
            8 * pow(a5, 2) * b3 * c1 * d1 * d5 + 16 * pow(a5, 2) * b3 * c1 * d2 * d4 +
            16 * pow(a5, 2) * b3 * c2 * d1 * d4 - 8 * pow(a5, 2) * b3 * c2 * d2 * d3 +
            16 * pow(a5, 2) * b3 * c4 * d1 * d2 - 32 * pow(a5, 2) * b4 * c1 * d1 * d4 +
            24 * pow(a5, 2) * b5 * c1 * d1 * d3 + 6 * a3 * pow(a5, 2) * d0 * d3 * d5 +
            8 * a4 * pow(a5, 2) * d0 * d3 * d4 - 16 * pow(a0, 2) * b3 * c4 * d4 * d5 +
            12 * pow(a0, 2) * b3 * c5 * d3 * d5 - 12 * pow(a0, 2) * b5 * c3 * d3 * d5 +
            16 * pow(a0, 2) * b5 * c4 * d3 * d4 - 8 * pow(a1, 2) * b5 * c5 * d0 * d5 -
            8 * pow(a2, 2) * b3 * c3 * d3 * d5 + 32 * pow(a2, 2) * b3 * c4 * d3 * d4 -
            32 * pow(a2, 2) * b4 * c3 * d3 * d4 - 8 * pow(a3, 2) * a4 * d0 * d4 * d5 -
            6 * pow(a3, 2) * a5 * d0 * d3 * d5 + 8 * pow(a3, 2) * b0 * c4 * d4 * d5 -
            6 * pow(a3, 2) * b0 * c5 * d3 * d5 + 18 * pow(a3, 2) * b3 * c5 * d0 * d5 -
            8 * pow(a3, 2) * b4 * c0 * d4 * d5 - 8 * pow(a3, 2) * b4 * c4 * d0 * d5 -
            8 * pow(a3, 2) * b4 * c5 * d0 * d4 - 6 * pow(a3, 2) * b5 * c0 * d3 * d5 -
            6 * pow(a3, 2) * b5 * c3 * d0 * d5 + 8 * pow(a3, 2) * b5 * c4 * d0 * d4 -
            6 * pow(a3, 2) * b5 * c5 * d0 * d3 - 32 * pow(a4, 2) * b1 * c5 * d1 * d5 +
            32 * pow(a4, 2) * b5 * c1 * d1 * d5 + 6 * pow(a5, 2) * b0 * c3 * d3 * d5 -
            8 * pow(a5, 2) * b0 * c4 * d3 * d4 + 6 * pow(a5, 2) * b3 * c0 * d3 * d5 +
            6 * pow(a5, 2) * b3 * c3 * d0 * d5 - 8 * pow(a5, 2) * b3 * c4 * d0 * d4 +
            6 * pow(a5, 2) * b3 * c5 * d0 * d3 + 8 * pow(a5, 2) * b4 * c0 * d3 * d4 +
            8 * pow(a5, 2) * b4 * c3 * d0 * d4 + 8 * pow(a5, 2) * b4 * c4 * d0 * d3 -
            18 * pow(a5, 2) * b5 * c3 * d0 * d3 + 8 * pow(a1, 2) * b3 * c5 * d3 * d5 -
            8 * pow(a1, 2) * b5 * c3 * d3 * d5 - 8 * pow(a3, 2) * b2 * c5 * d2 * d5 +
            8 * pow(a3, 2) * b5 * c2 * d2 * d5 - 8 * pow(a4, 2) * a5 * d0 * d3 * d5 +
            8 * pow(a4, 2) * b0 * c5 * d3 * d5 + 8 * pow(a4, 2) * b3 * c5 * d0 * d5 -
            8 * pow(a4, 2) * b5 * c0 * d3 * d5 - 8 * pow(a4, 2) * b5 * c3 * d0 * d5 -
            8 * pow(a4, 2) * b5 * c5 * d0 * d3 + 8 * pow(a0, 2) * b4 * c5 * d4 * d5 -
            8 * pow(a0, 2) * b5 * c4 * d4 * d5 + 6 * pow(a0, 2) * b5 * c5 * d3 * d5 +
            8 * pow(a2, 2) * b3 * c5 * d3 * d5 - 8 * pow(a2, 2) * b5 * c3 * d3 * d5 -
            6 * pow(a3, 2) * b5 * c5 * d0 * d5 + 32 * pow(a1, 2) * b4 * c5 * d4 * d5 -
            32 * pow(a1, 2) * b5 * c4 * d4 * d5 + 8 * pow(a1, 2) * b5 * c5 * d3 * d5 -
            6 * pow(a5, 2) * b3 * c3 * d3 * d5 + 8 * pow(a5, 2) * b3 * c4 * d3 * d4 -
            8 * pow(a5, 2) * b4 * c3 * d3 * d4 - 8 * pow(a4, 2) * b3 * c5 * d3 * d5 +
            8 * pow(a4, 2) * b5 * c3 * d3 * d5 + 8 * pow(a3, 2) * b4 * c5 * d4 * d5 -
            8 * pow(a3, 2) * b5 * c4 * d4 * d5 + 6 * pow(a3, 2) * b5 * c5 * d3 * d5 + 16 * a0 * a1 * b0 * c3 * d1 * d3 -
            16 * a0 * a1 * b1 * c3 * d0 * d3 - 16 * a0 * a3 * b0 * c1 * d1 * d3 + 16 * a0 * a3 * b3 * c1 * d0 * d1 +
            16 * a0 * b0 * b1 * c1 * c3 * d3 - 16 * a0 * b0 * b3 * c1 * c3 * d1 + 16 * a1 * a3 * b1 * c0 * d0 * d3 -
            16 * a1 * a3 * b3 * c0 * d0 * d1 - 16 * a1 * b0 * b1 * c0 * c3 * d3 + 16 * a1 * b1 * b3 * c0 * c3 * d0 +
            16 * a3 * b0 * b3 * c0 * c1 * d1 - 16 * a3 * b1 * b3 * c0 * c1 * d0 + 12 * a0 * a3 * b0 * c3 * d0 * d3 -
            12 * a0 * a3 * b3 * c0 * d0 * d3 + 12 * a0 * b0 * b3 * c0 * c3 * d3 - 12 * a3 * b0 * b3 * c0 * c3 * d0 +
            16 * a0 * a1 * a3 * d0 * d2 * d4 - 16 * a0 * a1 * a4 * d0 * d2 * d3 - 16 * a0 * a1 * b0 * c1 * d3 * d5 -
            16 * a0 * a1 * b0 * c3 * d1 * d5 + 64 * a0 * a1 * b0 * c4 * d1 * d4 - 16 * a0 * a1 * b0 * c5 * d1 * d3 +
            16 * a0 * a1 * b1 * c0 * d3 * d5 + 16 * a0 * a1 * b1 * c3 * d0 * d5 - 64 * a0 * a1 * b1 * c4 * d0 * d4 +
            16 * a0 * a1 * b1 * c5 * d0 * d3 + 16 * a0 * a1 * b3 * c0 * d2 * d4 + 16 * a0 * a1 * b3 * c2 * d0 * d4 +
            16 * a0 * a1 * b3 * c4 * d0 * d2 - 16 * a0 * a1 * b4 * c0 * d2 * d3 - 16 * a0 * a1 * b4 * c2 * d0 * d3 -
            16 * a0 * a1 * b4 * c3 * d0 * d2 + 16 * a0 * a2 * a3 * d0 * d1 * d4 - 16 * a0 * a2 * a4 * d0 * d1 * d3 -
            16 * a0 * a2 * b0 * c3 * d2 * d3 + 16 * a0 * a2 * b2 * c3 * d0 * d3 + 16 * a0 * a2 * b3 * c0 * d1 * d4 +
            16 * a0 * a2 * b3 * c1 * d0 * d4 + 16 * a0 * a2 * b3 * c4 * d0 * d1 - 16 * a0 * a2 * b4 * c0 * d1 * d3 -
            16 * a0 * a2 * b4 * c1 * d0 * d3 - 16 * a0 * a2 * b4 * c3 * d0 * d1 + 16 * a0 * a3 * b0 * c1 * d1 * d5 -
            32 * a0 * a3 * b0 * c1 * d2 * d4 - 32 * a0 * a3 * b0 * c2 * d1 * d4 + 16 * a0 * a3 * b0 * c2 * d2 * d3 -
            32 * a0 * a3 * b0 * c4 * d1 * d2 + 16 * a0 * a3 * b1 * c0 * d2 * d4 + 16 * a0 * a3 * b1 * c2 * d0 * d4 +
            16 * a0 * a3 * b1 * c4 * d0 * d2 + 16 * a0 * a3 * b2 * c0 * d1 * d4 + 16 * a0 * a3 * b2 * c1 * d0 * d4 +
            16 * a0 * a3 * b2 * c4 * d0 * d1 - 16 * a0 * a3 * b3 * c2 * d0 * d2 - 16 * a0 * a3 * b5 * c1 * d0 * d1 -
            64 * a0 * a4 * b0 * c1 * d1 * d4 + 32 * a0 * a4 * b0 * c1 * d2 * d3 + 32 * a0 * a4 * b0 * c2 * d1 * d3 +
            32 * a0 * a4 * b0 * c3 * d1 * d2 - 16 * a0 * a4 * b1 * c0 * d2 * d3 - 16 * a0 * a4 * b1 * c2 * d0 * d3 -
            16 * a0 * a4 * b1 * c3 * d0 * d2 - 16 * a0 * a4 * b2 * c0 * d1 * d3 - 16 * a0 * a4 * b2 * c1 * d0 * d3 -
            16 * a0 * a4 * b2 * c3 * d0 * d1 + 64 * a0 * a4 * b4 * c1 * d0 * d1 + 16 * a0 * a5 * b0 * c1 * d1 * d3 -
            16 * a0 * a5 * b3 * c1 * d0 * d1 - 16 * a0 * b0 * b1 * c1 * c3 * d5 + 64 * a0 * b0 * b1 * c1 * c4 * d4 -
            16 * a0 * b0 * b1 * c1 * c5 * d3 - 16 * a0 * b0 * b1 * c3 * c5 * d1 - 16 * a0 * b0 * b2 * c2 * c3 * d3 -
            32 * a0 * b0 * b3 * c1 * c2 * d4 - 32 * a0 * b0 * b3 * c1 * c4 * d2 + 16 * a0 * b0 * b3 * c1 * c5 * d1 +
            16 * a0 * b0 * b3 * c2 * c3 * d2 - 32 * a0 * b0 * b3 * c2 * c4 * d1 + 32 * a0 * b0 * b4 * c1 * c2 * d3 +
            32 * a0 * b0 * b4 * c1 * c3 * d2 - 64 * a0 * b0 * b4 * c1 * c4 * d1 + 32 * a0 * b0 * b4 * c2 * c3 * d1 +
            16 * a0 * b0 * b5 * c1 * c3 * d1 + 16 * a0 * b1 * b3 * c0 * c2 * d4 + 16 * a0 * b1 * b3 * c0 * c4 * d2 +
            16 * a0 * b1 * b3 * c2 * c4 * d0 - 16 * a0 * b1 * b4 * c0 * c2 * d3 - 16 * a0 * b1 * b4 * c0 * c3 * d2 -
            16 * a0 * b1 * b4 * c2 * c3 * d0 + 16 * a0 * b2 * b3 * c0 * c1 * d4 + 16 * a0 * b2 * b3 * c0 * c4 * d1 +
            16 * a0 * b2 * b3 * c1 * c4 * d0 - 16 * a0 * b2 * b4 * c0 * c1 * d3 - 16 * a0 * b2 * b4 * c0 * c3 * d1 -
            16 * a0 * b2 * b4 * c1 * c3 * d0 - 16 * a0 * b3 * b5 * c0 * c1 * d1 - 32 * a1 * a2 * b3 * c0 * d0 * d4 +
            32 * a1 * a2 * b4 * c0 * d0 * d3 + 16 * a1 * a3 * b0 * c0 * d2 * d4 + 16 * a1 * a3 * b0 * c2 * d0 * d4 +
            16 * a1 * a3 * b0 * c4 * d0 * d2 - 16 * a1 * a3 * b1 * c0 * d0 * d5 - 32 * a1 * a3 * b2 * c0 * d0 * d4 +
            16 * a1 * a3 * b5 * c0 * d0 * d1 - 16 * a1 * a4 * b0 * c0 * d2 * d3 - 16 * a1 * a4 * b0 * c2 * d0 * d3 -
            16 * a1 * a4 * b0 * c3 * d0 * d2 + 64 * a1 * a4 * b1 * c0 * d0 * d4 + 32 * a1 * a4 * b2 * c0 * d0 * d3 -
            64 * a1 * a4 * b4 * c0 * d0 * d1 - 16 * a1 * a5 * b1 * c0 * d0 * d3 + 16 * a1 * a5 * b3 * c0 * d0 * d1 +
            16 * a1 * b0 * b1 * c0 * c3 * d5 - 64 * a1 * b0 * b1 * c0 * c4 * d4 + 16 * a1 * b0 * b1 * c0 * c5 * d3 +
            16 * a1 * b0 * b1 * c3 * c5 * d0 + 16 * a1 * b0 * b3 * c0 * c2 * d4 + 16 * a1 * b0 * b3 * c0 * c4 * d2 +
            16 * a1 * b0 * b3 * c2 * c4 * d0 - 16 * a1 * b0 * b4 * c0 * c2 * d3 - 16 * a1 * b0 * b4 * c0 * c3 * d2 -
            16 * a1 * b0 * b4 * c2 * c3 * d0 - 16 * a1 * b1 * b3 * c0 * c5 * d0 + 64 * a1 * b1 * b4 * c0 * c4 * d0 -
            16 * a1 * b1 * b5 * c0 * c3 * d0 - 32 * a1 * b2 * b3 * c0 * c4 * d0 + 32 * a1 * b2 * b4 * c0 * c3 * d0 +
            16 * a1 * b3 * b5 * c0 * c1 * d0 + 16 * a2 * a3 * b0 * c0 * d1 * d4 + 16 * a2 * a3 * b0 * c1 * d0 * d4 +
            16 * a2 * a3 * b0 * c4 * d0 * d1 - 32 * a2 * a3 * b1 * c0 * d0 * d4 - 16 * a2 * a3 * b2 * c0 * d0 * d3 +
            16 * a2 * a3 * b3 * c0 * d0 * d2 - 16 * a2 * a4 * b0 * c0 * d1 * d3 - 16 * a2 * a4 * b0 * c1 * d0 * d3 -
            16 * a2 * a4 * b0 * c3 * d0 * d1 + 32 * a2 * a4 * b1 * c0 * d0 * d3 + 16 * a2 * b0 * b2 * c0 * c3 * d3 +
            16 * a2 * b0 * b3 * c0 * c1 * d4 + 16 * a2 * b0 * b3 * c0 * c4 * d1 + 16 * a2 * b0 * b3 * c1 * c4 * d0 -
            16 * a2 * b0 * b4 * c0 * c1 * d3 - 16 * a2 * b0 * b4 * c0 * c3 * d1 - 16 * a2 * b0 * b4 * c1 * c3 * d0 -
            32 * a2 * b1 * b3 * c0 * c4 * d0 + 32 * a2 * b1 * b4 * c0 * c3 * d0 - 16 * a2 * b2 * b3 * c0 * c3 * d0 -
            16 * a3 * a5 * b0 * c1 * d0 * d1 + 16 * a3 * a5 * b1 * c0 * d0 * d1 + 16 * a3 * b0 * b1 * c0 * c2 * d4 +
            16 * a3 * b0 * b1 * c0 * c4 * d2 + 16 * a3 * b0 * b1 * c2 * c4 * d0 + 16 * a3 * b0 * b2 * c0 * c1 * d4 +
            16 * a3 * b0 * b2 * c0 * c4 * d1 + 16 * a3 * b0 * b2 * c1 * c4 * d0 - 16 * a3 * b0 * b3 * c0 * c2 * d2 -
            16 * a3 * b0 * b5 * c0 * c1 * d1 - 32 * a3 * b1 * b2 * c0 * c4 * d0 + 16 * a3 * b1 * b5 * c0 * c1 * d0 +
            16 * a3 * b2 * b3 * c0 * c2 * d0 - 16 * a4 * b0 * b1 * c0 * c2 * d3 - 16 * a4 * b0 * b1 * c0 * c3 * d2 -
            16 * a4 * b0 * b1 * c2 * c3 * d0 - 16 * a4 * b0 * b2 * c0 * c1 * d3 - 16 * a4 * b0 * b2 * c0 * c3 * d1 -
            16 * a4 * b0 * b2 * c1 * c3 * d0 + 64 * a4 * b0 * b4 * c0 * c1 * d1 + 32 * a4 * b1 * b2 * c0 * c3 * d0 -
            64 * a4 * b1 * b4 * c0 * c1 * d0 - 16 * a5 * b0 * b3 * c0 * c1 * d1 + 16 * a5 * b1 * b3 * c0 * c1 * d0 +
            16 * b0 * b1 * b3 * c0 * c2 * c4 - 16 * b0 * b1 * b4 * c0 * c2 * c3 + 16 * b0 * b2 * b3 * c0 * c1 * c4 -
            16 * b0 * b2 * b4 * c0 * c1 * c3 - 12 * a0 * a3 * b0 * c0 * d3 * d5 - 12 * a0 * a3 * b0 * c3 * d0 * d5 +
            16 * a0 * a3 * b0 * c4 * d0 * d4 - 12 * a0 * a3 * b0 * c5 * d0 * d3 + 12 * a0 * a3 * b3 * c0 * d0 * d5 -
            16 * a0 * a3 * b4 * c0 * d0 * d4 + 12 * a0 * a3 * b5 * c0 * d0 * d3 + 16 * a0 * a4 * b0 * c0 * d3 * d4 +
            16 * a0 * a4 * b0 * c3 * d0 * d4 + 16 * a0 * a4 * b0 * c4 * d0 * d3 - 16 * a0 * a4 * b3 * c0 * d0 * d4 -
            16 * a0 * a4 * b4 * c0 * d0 * d3 - 12 * a0 * a5 * b0 * c3 * d0 * d3 + 12 * a0 * a5 * b3 * c0 * d0 * d3 -
            12 * a0 * b0 * b3 * c0 * c3 * d5 + 16 * a0 * b0 * b3 * c0 * c4 * d4 - 12 * a0 * b0 * b3 * c0 * c5 * d3 -
            12 * a0 * b0 * b3 * c3 * c5 * d0 + 16 * a0 * b0 * b4 * c0 * c3 * d4 + 16 * a0 * b0 * b4 * c0 * c4 * d3 +
            16 * a0 * b0 * b4 * c3 * c4 * d0 - 12 * a0 * b0 * b5 * c0 * c3 * d3 - 16 * a0 * b3 * b4 * c0 * c4 * d0 +
            12 * a0 * b3 * b5 * c0 * c3 * d0 - 16 * a3 * a4 * b0 * c0 * d0 * d4 + 12 * a3 * a5 * b0 * c0 * d0 * d3 +
            12 * a3 * b0 * b3 * c0 * c5 * d0 - 16 * a3 * b0 * b4 * c0 * c4 * d0 + 12 * a3 * b0 * b5 * c0 * c3 * d0 -
            16 * a4 * b0 * b3 * c0 * c4 * d0 - 16 * a4 * b0 * b4 * c0 * c3 * d0 + 12 * a5 * b0 * b3 * c0 * c3 * d0 +
            16 * a0 * a1 * a4 * d0 * d2 * d5 - 16 * a0 * a1 * a5 * d0 * d2 * d4 + 16 * a0 * a1 * b0 * c5 * d1 * d5 -
            16 * a0 * a1 * b1 * c5 * d0 * d5 + 16 * a0 * a1 * b4 * c0 * d2 * d5 + 16 * a0 * a1 * b4 * c2 * d0 * d5 +
            16 * a0 * a1 * b4 * c5 * d0 * d2 - 16 * a0 * a1 * b5 * c0 * d2 * d4 - 16 * a0 * a1 * b5 * c2 * d0 * d4 -
            16 * a0 * a1 * b5 * c4 * d0 * d2 + 16 * a0 * a2 * a4 * d0 * d1 * d5 - 16 * a0 * a2 * a5 * d0 * d1 * d4 +
            16 * a0 * a2 * b0 * c2 * d3 * d5 + 16 * a0 * a2 * b0 * c3 * d2 * d5 - 64 * a0 * a2 * b0 * c4 * d2 * d4 +
            16 * a0 * a2 * b0 * c5 * d2 * d3 - 16 * a0 * a2 * b2 * c0 * d3 * d5 - 16 * a0 * a2 * b2 * c3 * d0 * d5 +
            64 * a0 * a2 * b2 * c4 * d0 * d4 - 16 * a0 * a2 * b2 * c5 * d0 * d3 + 16 * a0 * a2 * b4 * c0 * d1 * d5 +
            16 * a0 * a2 * b4 * c1 * d0 * d5 + 16 * a0 * a2 * b4 * c5 * d0 * d1 - 16 * a0 * a2 * b5 * c0 * d1 * d4 -
            16 * a0 * a2 * b5 * c1 * d0 * d4 - 16 * a0 * a2 * b5 * c4 * d0 * d1 - 16 * a0 * a3 * b0 * c2 * d2 * d5 +
            16 * a0 * a3 * b5 * c2 * d0 * d2 - 32 * a0 * a4 * b0 * c1 * d2 * d5 - 32 * a0 * a4 * b0 * c2 * d1 * d5 +
            64 * a0 * a4 * b0 * c2 * d2 * d4 - 32 * a0 * a4 * b0 * c5 * d1 * d2 + 16 * a0 * a4 * b1 * c0 * d2 * d5 +
            16 * a0 * a4 * b1 * c2 * d0 * d5 + 16 * a0 * a4 * b1 * c5 * d0 * d2 + 16 * a0 * a4 * b2 * c0 * d1 * d5 +
            16 * a0 * a4 * b2 * c1 * d0 * d5 + 16 * a0 * a4 * b2 * c5 * d0 * d1 - 64 * a0 * a4 * b4 * c2 * d0 * d2 -
            16 * a0 * a5 * b0 * c1 * d1 * d5 + 32 * a0 * a5 * b0 * c1 * d2 * d4 + 32 * a0 * a5 * b0 * c2 * d1 * d4 -
            16 * a0 * a5 * b0 * c2 * d2 * d3 + 32 * a0 * a5 * b0 * c4 * d1 * d2 - 16 * a0 * a5 * b1 * c0 * d2 * d4 -
            16 * a0 * a5 * b1 * c2 * d0 * d4 - 16 * a0 * a5 * b1 * c4 * d0 * d2 - 16 * a0 * a5 * b2 * c0 * d1 * d4 -
            16 * a0 * a5 * b2 * c1 * d0 * d4 - 16 * a0 * a5 * b2 * c4 * d0 * d1 + 16 * a0 * a5 * b3 * c2 * d0 * d2 +
            16 * a0 * a5 * b5 * c1 * d0 * d1 + 16 * a0 * b0 * b1 * c1 * c5 * d5 + 16 * a0 * b0 * b2 * c2 * c3 * d5 -
            64 * a0 * b0 * b2 * c2 * c4 * d4 + 16 * a0 * b0 * b2 * c2 * c5 * d3 + 16 * a0 * b0 * b2 * c3 * c5 * d2 -
            16 * a0 * b0 * b3 * c2 * c5 * d2 - 32 * a0 * b0 * b4 * c1 * c2 * d5 - 32 * a0 * b0 * b4 * c1 * c5 * d2 +
            64 * a0 * b0 * b4 * c2 * c4 * d2 - 32 * a0 * b0 * b4 * c2 * c5 * d1 + 32 * a0 * b0 * b5 * c1 * c2 * d4 +
            32 * a0 * b0 * b5 * c1 * c4 * d2 - 16 * a0 * b0 * b5 * c1 * c5 * d1 - 16 * a0 * b0 * b5 * c2 * c3 * d2 +
            32 * a0 * b0 * b5 * c2 * c4 * d1 + 16 * a0 * b1 * b4 * c0 * c2 * d5 + 16 * a0 * b1 * b4 * c0 * c5 * d2 +
            16 * a0 * b1 * b4 * c2 * c5 * d0 - 16 * a0 * b1 * b5 * c0 * c2 * d4 - 16 * a0 * b1 * b5 * c0 * c4 * d2 -
            16 * a0 * b1 * b5 * c2 * c4 * d0 + 16 * a0 * b2 * b4 * c0 * c1 * d5 + 16 * a0 * b2 * b4 * c0 * c5 * d1 +
            16 * a0 * b2 * b4 * c1 * c5 * d0 - 16 * a0 * b2 * b5 * c0 * c1 * d4 - 16 * a0 * b2 * b5 * c0 * c4 * d1 -
            16 * a0 * b2 * b5 * c1 * c4 * d0 + 16 * a0 * b3 * b5 * c0 * c2 * d2 - 64 * a1 * a2 * b1 * c3 * d2 * d3 +
            64 * a1 * a2 * b2 * c3 * d1 * d3 - 32 * a1 * a2 * b4 * c0 * d0 * d5 + 32 * a1 * a2 * b5 * c0 * d0 * d4 +
            64 * a1 * a3 * b1 * c2 * d2 * d3 - 64 * a1 * a3 * b3 * c2 * d1 * d2 + 16 * a1 * a4 * b0 * c0 * d2 * d5 +
            16 * a1 * a4 * b0 * c2 * d0 * d5 + 16 * a1 * a4 * b0 * c5 * d0 * d2 - 32 * a1 * a4 * b2 * c0 * d0 * d5 -
            16 * a1 * a5 * b0 * c0 * d2 * d4 - 16 * a1 * a5 * b0 * c2 * d0 * d4 - 16 * a1 * a5 * b0 * c4 * d0 * d2 +
            16 * a1 * a5 * b1 * c0 * d0 * d5 + 32 * a1 * a5 * b2 * c0 * d0 * d4 - 16 * a1 * a5 * b5 * c0 * d0 * d1 -
            16 * a1 * b0 * b1 * c0 * c5 * d5 + 16 * a1 * b0 * b4 * c0 * c2 * d5 + 16 * a1 * b0 * b4 * c0 * c5 * d2 +
            16 * a1 * b0 * b4 * c2 * c5 * d0 - 16 * a1 * b0 * b5 * c0 * c2 * d4 - 16 * a1 * b0 * b5 * c0 * c4 * d2 -
            16 * a1 * b0 * b5 * c2 * c4 * d0 - 64 * a1 * b1 * b2 * c2 * c3 * d3 + 64 * a1 * b1 * b3 * c2 * c3 * d2 +
            16 * a1 * b1 * b5 * c0 * c5 * d0 - 32 * a1 * b2 * b4 * c0 * c5 * d0 + 32 * a1 * b2 * b5 * c0 * c4 * d0 +
            16 * a2 * a3 * b2 * c0 * d0 * d5 - 64 * a2 * a3 * b2 * c1 * d1 * d3 + 64 * a2 * a3 * b3 * c1 * d1 * d2 -
            16 * a2 * a3 * b5 * c0 * d0 * d2 + 16 * a2 * a4 * b0 * c0 * d1 * d5 + 16 * a2 * a4 * b0 * c1 * d0 * d5 +
            16 * a2 * a4 * b0 * c5 * d0 * d1 - 32 * a2 * a4 * b1 * c0 * d0 * d5 - 64 * a2 * a4 * b2 * c0 * d0 * d4 +
            64 * a2 * a4 * b4 * c0 * d0 * d2 - 16 * a2 * a5 * b0 * c0 * d1 * d4 - 16 * a2 * a5 * b0 * c1 * d0 * d4 -
            16 * a2 * a5 * b0 * c4 * d0 * d1 + 32 * a2 * a5 * b1 * c0 * d0 * d4 + 16 * a2 * a5 * b2 * c0 * d0 * d3 -
            16 * a2 * a5 * b3 * c0 * d0 * d2 - 16 * a2 * b0 * b2 * c0 * c3 * d5 + 64 * a2 * b0 * b2 * c0 * c4 * d4 -
            16 * a2 * b0 * b2 * c0 * c5 * d3 - 16 * a2 * b0 * b2 * c3 * c5 * d0 + 16 * a2 * b0 * b4 * c0 * c1 * d5 +
            16 * a2 * b0 * b4 * c0 * c5 * d1 + 16 * a2 * b0 * b4 * c1 * c5 * d0 - 16 * a2 * b0 * b5 * c0 * c1 * d4 -
            16 * a2 * b0 * b5 * c0 * c4 * d1 - 16 * a2 * b0 * b5 * c1 * c4 * d0 + 64 * a2 * b1 * b2 * c1 * c3 * d3 -
            32 * a2 * b1 * b4 * c0 * c5 * d0 + 32 * a2 * b1 * b5 * c0 * c4 * d0 + 16 * a2 * b2 * b3 * c0 * c5 * d0 -
            64 * a2 * b2 * b3 * c1 * c3 * d1 - 64 * a2 * b2 * b4 * c0 * c4 * d0 + 16 * a2 * b2 * b5 * c0 * c3 * d0 -
            16 * a2 * b3 * b5 * c0 * c2 * d0 + 16 * a3 * a5 * b0 * c2 * d0 * d2 - 16 * a3 * a5 * b2 * c0 * d0 * d2 +
            16 * a3 * b0 * b5 * c0 * c2 * d2 - 64 * a3 * b1 * b3 * c1 * c2 * d2 + 64 * a3 * b2 * b3 * c1 * c2 * d1 -
            16 * a3 * b2 * b5 * c0 * c2 * d0 + 16 * a4 * b0 * b1 * c0 * c2 * d5 + 16 * a4 * b0 * b1 * c0 * c5 * d2 +
            16 * a4 * b0 * b1 * c2 * c5 * d0 + 16 * a4 * b0 * b2 * c0 * c1 * d5 + 16 * a4 * b0 * b2 * c0 * c5 * d1 +
            16 * a4 * b0 * b2 * c1 * c5 * d0 - 64 * a4 * b0 * b4 * c0 * c2 * d2 - 32 * a4 * b1 * b2 * c0 * c5 * d0 +
            64 * a4 * b2 * b4 * c0 * c2 * d0 - 16 * a5 * b0 * b1 * c0 * c2 * d4 - 16 * a5 * b0 * b1 * c0 * c4 * d2 -
            16 * a5 * b0 * b1 * c2 * c4 * d0 - 16 * a5 * b0 * b2 * c0 * c1 * d4 - 16 * a5 * b0 * b2 * c0 * c4 * d1 -
            16 * a5 * b0 * b2 * c1 * c4 * d0 + 16 * a5 * b0 * b3 * c0 * c2 * d2 + 16 * a5 * b0 * b5 * c0 * c1 * d1 +
            32 * a5 * b1 * b2 * c0 * c4 * d0 - 16 * a5 * b1 * b5 * c0 * c1 * d0 - 16 * a5 * b2 * b3 * c0 * c2 * d0 +
            16 * b0 * b1 * b4 * c0 * c2 * c5 - 16 * b0 * b1 * b5 * c0 * c2 * c4 + 16 * b0 * b2 * b4 * c0 * c1 * c5 -
            16 * b0 * b2 * b5 * c0 * c1 * c4 - 16 * a0 * a1 * a3 * d2 * d3 * d4 + 16 * a0 * a1 * b1 * c3 * d3 * d5 -
            16 * a0 * a1 * b3 * c2 * d3 * d4 - 16 * a0 * a1 * b3 * c3 * d2 * d4 - 16 * a0 * a1 * b3 * c4 * d2 * d3 +
            32 * a0 * a1 * b4 * c3 * d2 * d3 - 16 * a0 * a1 * b5 * c3 * d1 * d3 + 16 * a0 * a2 * b3 * c3 * d2 * d3 -
            16 * a0 * a3 * a4 * d1 * d2 * d3 + 12 * a0 * a3 * b0 * c5 * d0 * d5 - 16 * a0 * a3 * b1 * c2 * d3 * d4 -
            16 * a0 * a3 * b1 * c3 * d2 * d4 - 16 * a0 * a3 * b1 * c4 * d2 * d3 + 16 * a0 * a3 * b2 * c3 * d2 * d3 -
            16 * a0 * a3 * b3 * c1 * d1 * d5 + 32 * a0 * a3 * b3 * c1 * d2 * d4 + 32 * a0 * a3 * b3 * c2 * d1 * d4 -
            16 * a0 * a3 * b3 * c2 * d2 * d3 + 32 * a0 * a3 * b3 * c4 * d1 * d2 - 16 * a0 * a3 * b4 * c1 * d2 * d3 -
            16 * a0 * a3 * b4 * c2 * d1 * d3 - 16 * a0 * a3 * b4 * c3 * d1 * d2 - 12 * a0 * a3 * b5 * c0 * d0 * d5 +
            16 * a0 * a3 * b5 * c1 * d1 * d3 - 16 * a0 * a4 * b0 * c0 * d4 * d5 - 16 * a0 * a4 * b0 * c4 * d0 * d5 -
            16 * a0 * a4 * b0 * c5 * d0 * d4 + 32 * a0 * a4 * b1 * c3 * d2 * d3 - 16 * a0 * a4 * b3 * c1 * d2 * d3 -
            16 * a0 * a4 * b3 * c2 * d1 * d3 - 16 * a0 * a4 * b3 * c3 * d1 * d2 + 16 * a0 * a4 * b4 * c0 * d0 * d5 +
            16 * a0 * a4 * b5 * c0 * d0 * d4 + 12 * a0 * a5 * b0 * c0 * d3 * d5 + 12 * a0 * a5 * b0 * c3 * d0 * d5 -
            16 * a0 * a5 * b0 * c4 * d0 * d4 + 12 * a0 * a5 * b0 * c5 * d0 * d3 - 16 * a0 * a5 * b1 * c3 * d1 * d3 -
            12 * a0 * a5 * b3 * c0 * d0 * d5 + 16 * a0 * a5 * b3 * c1 * d1 * d3 + 16 * a0 * a5 * b4 * c0 * d0 * d4 -
            12 * a0 * a5 * b5 * c0 * d0 * d3 + 12 * a0 * b0 * b3 * c0 * c5 * d5 - 16 * a0 * b0 * b4 * c0 * c4 * d5 -
            16 * a0 * b0 * b4 * c0 * c5 * d4 - 16 * a0 * b0 * b4 * c4 * c5 * d0 + 12 * a0 * b0 * b5 * c0 * c3 * d5 -
            16 * a0 * b0 * b5 * c0 * c4 * d4 + 12 * a0 * b0 * b5 * c0 * c5 * d3 + 12 * a0 * b0 * b5 * c3 * c5 * d0 -
            16 * a0 * b1 * b3 * c2 * c3 * d4 - 16 * a0 * b1 * b3 * c2 * c4 * d3 - 16 * a0 * b1 * b3 * c3 * c4 * d2 +
            32 * a0 * b1 * b4 * c2 * c3 * d3 - 16 * a0 * b1 * b5 * c1 * c3 * d3 + 16 * a0 * b2 * b3 * c2 * c3 * d3 -
            16 * a0 * b3 * b4 * c1 * c2 * d3 - 16 * a0 * b3 * b4 * c1 * c3 * d2 - 16 * a0 * b3 * b4 * c2 * c3 * d1 -
            12 * a0 * b3 * b5 * c0 * c5 * d0 + 16 * a0 * b3 * b5 * c1 * c3 * d1 + 16 * a0 * b4 * b5 * c0 * c4 * d0 +
            16 * a1 * a2 * a3 * d0 * d3 * d4 + 16 * a1 * a2 * b3 * c0 * d3 * d4 + 16 * a1 * a2 * b3 * c3 * d0 * d4 +
            16 * a1 * a2 * b3 * c4 * d0 * d3 - 32 * a1 * a2 * b4 * c3 * d0 * d3 - 16 * a1 * a3 * b0 * c2 * d3 * d4 -
            16 * a1 * a3 * b0 * c3 * d2 * d4 - 16 * a1 * a3 * b0 * c4 * d2 * d3 - 16 * a1 * a3 * b1 * c0 * d3 * d5 -
            16 * a1 * a3 * b1 * c3 * d0 * d5 - 16 * a1 * a3 * b1 * c5 * d0 * d3 + 16 * a1 * a3 * b2 * c0 * d3 * d4 +
            16 * a1 * a3 * b2 * c3 * d0 * d4 + 16 * a1 * a3 * b2 * c4 * d0 * d3 + 16 * a1 * a3 * b3 * c0 * d1 * d5 +
            16 * a1 * a3 * b3 * c1 * d0 * d5 + 16 * a1 * a3 * b3 * c5 * d0 * d1 + 32 * a1 * a4 * b0 * c3 * d2 * d3 -
            32 * a1 * a4 * b2 * c3 * d0 * d3 - 16 * a1 * a5 * b0 * c3 * d1 * d3 + 16 * a1 * a5 * b1 * c3 * d0 * d3 +
            16 * a1 * b0 * b1 * c3 * c5 * d3 - 16 * a1 * b0 * b3 * c2 * c3 * d4 - 16 * a1 * b0 * b3 * c2 * c4 * d3 -
            16 * a1 * b0 * b3 * c3 * c4 * d2 + 32 * a1 * b0 * b4 * c2 * c3 * d3 - 16 * a1 * b0 * b5 * c1 * c3 * d3 -
            16 * a1 * b1 * b3 * c0 * c3 * d5 - 16 * a1 * b1 * b3 * c0 * c5 * d3 - 16 * a1 * b1 * b3 * c3 * c5 * d0 +
            16 * a1 * b1 * b5 * c0 * c3 * d3 + 16 * a1 * b2 * b3 * c0 * c3 * d4 + 16 * a1 * b2 * b3 * c0 * c4 * d3 +
            16 * a1 * b2 * b3 * c3 * c4 * d0 - 32 * a1 * b2 * b4 * c0 * c3 * d3 + 16 * a2 * a3 * a4 * d0 * d1 * d3 +
            16 * a2 * a3 * b0 * c3 * d2 * d3 + 16 * a2 * a3 * b1 * c0 * d3 * d4 + 16 * a2 * a3 * b1 * c3 * d0 * d4 +
            16 * a2 * a3 * b1 * c4 * d0 * d3 + 16 * a2 * a3 * b2 * c3 * d0 * d3 - 32 * a2 * a3 * b3 * c0 * d1 * d4 -
            16 * a2 * a3 * b3 * c0 * d2 * d3 - 32 * a2 * a3 * b3 * c1 * d0 * d4 - 16 * a2 * a3 * b3 * c2 * d0 * d3 -
            16 * a2 * a3 * b3 * c3 * d0 * d2 - 32 * a2 * a3 * b3 * c4 * d0 * d1 + 16 * a2 * a3 * b4 * c0 * d1 * d3 +
            16 * a2 * a3 * b4 * c1 * d0 * d3 + 16 * a2 * a3 * b4 * c3 * d0 * d1 - 32 * a2 * a4 * b1 * c3 * d0 * d3 +
            16 * a2 * a4 * b3 * c0 * d1 * d3 + 16 * a2 * a4 * b3 * c1 * d0 * d3 + 16 * a2 * a4 * b3 * c3 * d0 * d1 +
            16 * a2 * b0 * b3 * c2 * c3 * d3 + 16 * a2 * b1 * b3 * c0 * c3 * d4 + 16 * a2 * b1 * b3 * c0 * c4 * d3 +
            16 * a2 * b1 * b3 * c3 * c4 * d0 - 32 * a2 * b1 * b4 * c0 * c3 * d3 + 16 * a2 * b2 * b3 * c0 * c3 * d3 +
            16 * a2 * b3 * b4 * c0 * c1 * d3 + 16 * a2 * b3 * b4 * c0 * c3 * d1 + 16 * a2 * b3 * b4 * c1 * c3 * d0 -
            16 * a3 * a4 * b0 * c1 * d2 * d3 - 16 * a3 * a4 * b0 * c2 * d1 * d3 - 16 * a3 * a4 * b0 * c3 * d1 * d2 +
            16 * a3 * a4 * b2 * c0 * d1 * d3 + 16 * a3 * a4 * b2 * c1 * d0 * d3 + 16 * a3 * a4 * b2 * c3 * d0 * d1 -
            12 * a3 * a5 * b0 * c0 * d0 * d5 + 16 * a3 * a5 * b0 * c1 * d1 * d3 - 16 * a3 * a5 * b3 * c1 * d0 * d1 -
            16 * a3 * b0 * b1 * c2 * c3 * d4 - 16 * a3 * b0 * b1 * c2 * c4 * d3 - 16 * a3 * b0 * b1 * c3 * c4 * d2 +
            16 * a3 * b0 * b2 * c2 * c3 * d3 + 32 * a3 * b0 * b3 * c1 * c2 * d4 + 32 * a3 * b0 * b3 * c1 * c4 * d2 -
            16 * a3 * b0 * b3 * c1 * c5 * d1 - 16 * a3 * b0 * b3 * c2 * c3 * d2 + 32 * a3 * b0 * b3 * c2 * c4 * d1 -
            16 * a3 * b0 * b4 * c1 * c2 * d3 - 16 * a3 * b0 * b4 * c1 * c3 * d2 - 16 * a3 * b0 * b4 * c2 * c3 * d1 -
            12 * a3 * b0 * b5 * c0 * c5 * d0 + 16 * a3 * b0 * b5 * c1 * c3 * d1 + 16 * a3 * b1 * b2 * c0 * c3 * d4 +
            16 * a3 * b1 * b2 * c0 * c4 * d3 + 16 * a3 * b1 * b2 * c3 * c4 * d0 + 16 * a3 * b1 * b3 * c0 * c1 * d5 +
            16 * a3 * b1 * b3 * c0 * c5 * d1 + 16 * a3 * b1 * b3 * c1 * c5 * d0 - 32 * a3 * b2 * b3 * c0 * c1 * d4 -
            16 * a3 * b2 * b3 * c0 * c2 * d3 - 16 * a3 * b2 * b3 * c0 * c3 * d2 - 32 * a3 * b2 * b3 * c0 * c4 * d1 -
            32 * a3 * b2 * b3 * c1 * c4 * d0 - 16 * a3 * b2 * b3 * c2 * c3 * d0 + 16 * a3 * b2 * b4 * c0 * c1 * d3 +
            16 * a3 * b2 * b4 * c0 * c3 * d1 + 16 * a3 * b2 * b4 * c1 * c3 * d0 - 16 * a3 * b3 * b5 * c0 * c1 * d1 +
            16 * a4 * a5 * b0 * c0 * d0 * d4 + 32 * a4 * b0 * b1 * c2 * c3 * d3 - 16 * a4 * b0 * b3 * c1 * c2 * d3 -
            16 * a4 * b0 * b3 * c1 * c3 * d2 - 16 * a4 * b0 * b3 * c2 * c3 * d1 + 16 * a4 * b0 * b4 * c0 * c5 * d0 +
            16 * a4 * b0 * b5 * c0 * c4 * d0 - 32 * a4 * b1 * b2 * c0 * c3 * d3 + 16 * a4 * b2 * b3 * c0 * c1 * d3 +
            16 * a4 * b2 * b3 * c0 * c3 * d1 + 16 * a4 * b2 * b3 * c1 * c3 * d0 - 16 * a5 * b0 * b1 * c1 * c3 * d3 -
            12 * a5 * b0 * b3 * c0 * c5 * d0 + 16 * a5 * b0 * b3 * c1 * c3 * d1 + 16 * a5 * b0 * b4 * c0 * c4 * d0 -
            12 * a5 * b0 * b5 * c0 * c3 * d0 - 16 * b0 * b1 * b3 * c2 * c3 * c4 - 16 * b0 * b3 * b4 * c1 * c2 * c3 +
            16 * b1 * b2 * b3 * c0 * c3 * c4 + 16 * b2 * b3 * b4 * c0 * c1 * c3 - 16 * a0 * a2 * b0 * c5 * d2 * d5 +
            16 * a0 * a2 * b2 * c5 * d0 * d5 - 12 * a0 * a3 * b0 * c3 * d3 * d5 + 16 * a0 * a3 * b0 * c4 * d3 * d4 +
            12 * a0 * a3 * b3 * c0 * d3 * d5 + 12 * a0 * a3 * b3 * c3 * d0 * d5 - 16 * a0 * a3 * b3 * c4 * d0 * d4 +
            12 * a0 * a3 * b3 * c5 * d0 * d3 - 12 * a0 * a3 * b5 * c3 * d0 * d3 - 16 * a0 * a4 * b0 * c3 * d3 * d4 +
            16 * a0 * a4 * b4 * c3 * d0 * d3 + 16 * a0 * a5 * b0 * c2 * d2 * d5 - 12 * a0 * a5 * b3 * c3 * d0 * d3 -
            16 * a0 * a5 * b5 * c2 * d0 * d2 - 16 * a0 * b0 * b2 * c2 * c5 * d5 + 16 * a0 * b0 * b3 * c3 * c4 * d4 -
            12 * a0 * b0 * b3 * c3 * c5 * d3 - 16 * a0 * b0 * b4 * c3 * c4 * d3 + 16 * a0 * b0 * b5 * c2 * c5 * d2 -
            12 * a0 * b3 * b5 * c0 * c3 * d3 + 64 * a1 * a2 * b1 * c2 * d3 * d5 + 64 * a1 * a2 * b1 * c3 * d2 * d5 -
            256 * a1 * a2 * b1 * c4 * d2 * d4 + 64 * a1 * a2 * b1 * c5 * d2 * d3 - 64 * a1 * a2 * b2 * c1 * d3 * d5 -
            64 * a1 * a2 * b2 * c3 * d1 * d5 + 256 * a1 * a2 * b2 * c4 * d1 * d4 - 64 * a1 * a2 * b2 * c5 * d1 * d3 -
            64 * a1 * a3 * b1 * c2 * d2 * d5 + 64 * a1 * a3 * b5 * c2 * d1 * d2 + 256 * a1 * a4 * b1 * c2 * d2 * d4 -
            256 * a1 * a4 * b4 * c2 * d1 * d2 - 64 * a1 * a5 * b1 * c2 * d2 * d3 + 64 * a1 * a5 * b3 * c2 * d1 * d2 +
            64 * a1 * b1 * b2 * c2 * c3 * d5 - 256 * a1 * b1 * b2 * c2 * c4 * d4 + 64 * a1 * b1 * b2 * c2 * c5 * d3 +
            64 * a1 * b1 * b2 * c3 * c5 * d2 - 64 * a1 * b1 * b3 * c2 * c5 * d2 + 256 * a1 * b1 * b4 * c2 * c4 * d2 -
            64 * a1 * b1 * b5 * c2 * c3 * d2 + 64 * a1 * b3 * b5 * c1 * c2 * d2 + 64 * a2 * a3 * b2 * c1 * d1 * d5 -
            64 * a2 * a3 * b5 * c1 * d1 * d2 - 256 * a2 * a4 * b2 * c1 * d1 * d4 + 256 * a2 * a4 * b4 * c1 * d1 * d2 -
            16 * a2 * a5 * b2 * c0 * d0 * d5 + 64 * a2 * a5 * b2 * c1 * d1 * d3 - 64 * a2 * a5 * b3 * c1 * d1 * d2 +
            16 * a2 * a5 * b5 * c0 * d0 * d2 + 16 * a2 * b0 * b2 * c0 * c5 * d5 - 64 * a2 * b1 * b2 * c1 * c3 * d5 +
            256 * a2 * b1 * b2 * c1 * c4 * d4 - 64 * a2 * b1 * b2 * c1 * c5 * d3 - 64 * a2 * b1 * b2 * c3 * c5 * d1 +
            64 * a2 * b2 * b3 * c1 * c5 * d1 - 256 * a2 * b2 * b4 * c1 * c4 * d1 - 16 * a2 * b2 * b5 * c0 * c5 * d0 +
            64 * a2 * b2 * b5 * c1 * c3 * d1 - 64 * a2 * b3 * b5 * c1 * c2 * d1 + 16 * a3 * a4 * b3 * c0 * d0 * d4 -
            16 * a3 * a4 * b4 * c0 * d0 * d3 - 12 * a3 * a5 * b0 * c3 * d0 * d3 + 64 * a3 * a5 * b1 * c2 * d1 * d2 -
            64 * a3 * a5 * b2 * c1 * d1 * d2 + 12 * a3 * a5 * b3 * c0 * d0 * d3 + 12 * a3 * b0 * b3 * c0 * c3 * d5 -
            16 * a3 * b0 * b3 * c0 * c4 * d4 + 12 * a3 * b0 * b3 * c0 * c5 * d3 + 12 * a3 * b0 * b3 * c3 * c5 * d0 -
            12 * a3 * b0 * b5 * c0 * c3 * d3 + 64 * a3 * b1 * b5 * c1 * c2 * d2 - 64 * a3 * b2 * b5 * c1 * c2 * d1 +
            16 * a3 * b3 * b4 * c0 * c4 * d0 + 12 * a3 * b3 * b5 * c0 * c3 * d0 + 16 * a4 * b0 * b4 * c0 * c3 * d3 -
            256 * a4 * b1 * b4 * c1 * c2 * d2 + 256 * a4 * b2 * b4 * c1 * c2 * d1 - 16 * a4 * b3 * b4 * c0 * c3 * d0 -
            12 * a5 * b0 * b3 * c0 * c3 * d3 - 16 * a5 * b0 * b5 * c0 * c2 * d2 + 64 * a5 * b1 * b3 * c1 * c2 * d2 -
            64 * a5 * b2 * b3 * c1 * c2 * d1 + 16 * a5 * b2 * b5 * c0 * c2 * d0 - 16 * a0 * a1 * a4 * d2 * d3 * d5 +
            16 * a0 * a1 * a5 * d1 * d3 * d5 + 16 * a0 * a1 * a5 * d2 * d3 * d4 + 64 * a0 * a1 * b1 * c4 * d4 * d5 -
            32 * a0 * a1 * b1 * c5 * d3 * d5 - 16 * a0 * a1 * b4 * c2 * d3 * d5 - 16 * a0 * a1 * b4 * c3 * d2 * d5 -
            16 * a0 * a1 * b4 * c5 * d2 * d3 + 16 * a0 * a1 * b5 * c1 * d3 * d5 + 16 * a0 * a1 * b5 * c2 * d3 * d4 +
            16 * a0 * a1 * b5 * c3 * d1 * d5 + 16 * a0 * a1 * b5 * c3 * d2 * d4 - 64 * a0 * a1 * b5 * c4 * d1 * d4 +
            16 * a0 * a1 * b5 * c4 * d2 * d3 + 16 * a0 * a1 * b5 * c5 * d1 * d3 - 16 * a0 * a2 * a3 * d1 * d4 * d5 -
            16 * a0 * a2 * a3 * d2 * d3 * d5 + 16 * a0 * a2 * a4 * d1 * d3 * d5 + 32 * a0 * a2 * b2 * c3 * d3 * d5 -
            64 * a0 * a2 * b2 * c4 * d3 * d4 - 16 * a0 * a2 * b3 * c1 * d4 * d5 - 16 * a0 * a2 * b3 * c2 * d3 * d5 -
            16 * a0 * a2 * b3 * c3 * d2 * d5 - 16 * a0 * a2 * b3 * c4 * d1 * d5 + 64 * a0 * a2 * b3 * c4 * d2 * d4 -
            16 * a0 * a2 * b3 * c5 * d1 * d4 - 16 * a0 * a2 * b3 * c5 * d2 * d3 + 16 * a0 * a2 * b4 * c1 * d3 * d5 +
            16 * a0 * a2 * b4 * c3 * d1 * d5 + 16 * a0 * a2 * b4 * c5 * d1 * d3 + 16 * a0 * a3 * a4 * d1 * d2 * d5 -
            16 * a0 * a3 * b2 * c1 * d4 * d5 - 16 * a0 * a3 * b2 * c2 * d3 * d5 - 16 * a0 * a3 * b2 * c3 * d2 * d5 -
            16 * a0 * a3 * b2 * c4 * d1 * d5 + 64 * a0 * a3 * b2 * c4 * d2 * d4 - 16 * a0 * a3 * b2 * c5 * d1 * d4 -
            16 * a0 * a3 * b2 * c5 * d2 * d3 + 32 * a0 * a3 * b3 * c2 * d2 * d5 + 16 * a0 * a3 * b4 * c1 * d2 * d5 +
            16 * a0 * a3 * b4 * c2 * d1 * d5 - 64 * a0 * a3 * b4 * c2 * d2 * d4 + 16 * a0 * a3 * b4 * c5 * d1 * d2 -
            16 * a0 * a4 * a5 * d1 * d2 * d3 - 16 * a0 * a4 * b1 * c2 * d3 * d5 - 16 * a0 * a4 * b1 * c3 * d2 * d5 -
            16 * a0 * a4 * b1 * c5 * d2 * d3 + 16 * a0 * a4 * b2 * c1 * d3 * d5 + 16 * a0 * a4 * b2 * c3 * d1 * d5 +
            16 * a0 * a4 * b2 * c5 * d1 * d3 + 16 * a0 * a4 * b3 * c1 * d2 * d5 + 16 * a0 * a4 * b3 * c2 * d1 * d5 -
            64 * a0 * a4 * b3 * c2 * d2 * d4 + 16 * a0 * a4 * b3 * c5 * d1 * d2 - 64 * a0 * a4 * b4 * c1 * d1 * d5 +
            64 * a0 * a4 * b4 * c2 * d2 * d3 + 64 * a0 * a4 * b5 * c1 * d1 * d4 - 16 * a0 * a4 * b5 * c1 * d2 * d3 -
            16 * a0 * a4 * b5 * c2 * d1 * d3 - 16 * a0 * a4 * b5 * c3 * d1 * d2 - 12 * a0 * a5 * b0 * c5 * d0 * d5 +
            16 * a0 * a5 * b1 * c1 * d3 * d5 + 16 * a0 * a5 * b1 * c2 * d3 * d4 + 16 * a0 * a5 * b1 * c3 * d1 * d5 +
            16 * a0 * a5 * b1 * c3 * d2 * d4 - 64 * a0 * a5 * b1 * c4 * d1 * d4 + 16 * a0 * a5 * b1 * c4 * d2 * d3 +
            16 * a0 * a5 * b1 * c5 * d1 * d3 + 64 * a0 * a5 * b4 * c1 * d1 * d4 - 16 * a0 * a5 * b4 * c1 * d2 * d3 -
            16 * a0 * a5 * b4 * c2 * d1 * d3 - 16 * a0 * a5 * b4 * c3 * d1 * d2 + 12 * a0 * a5 * b5 * c0 * d0 * d5 -
            32 * a0 * a5 * b5 * c1 * d1 * d3 - 12 * a0 * b0 * b5 * c0 * c5 * d5 - 16 * a0 * b1 * b4 * c2 * c3 * d5 -
            16 * a0 * b1 * b4 * c2 * c5 * d3 - 16 * a0 * b1 * b4 * c3 * c5 * d2 + 16 * a0 * b1 * b5 * c1 * c3 * d5 -
            64 * a0 * b1 * b5 * c1 * c4 * d4 + 16 * a0 * b1 * b5 * c1 * c5 * d3 + 16 * a0 * b1 * b5 * c2 * c3 * d4 +
            16 * a0 * b1 * b5 * c2 * c4 * d3 + 16 * a0 * b1 * b5 * c3 * c4 * d2 + 16 * a0 * b1 * b5 * c3 * c5 * d1 -
            16 * a0 * b2 * b3 * c1 * c4 * d5 - 16 * a0 * b2 * b3 * c1 * c5 * d4 - 16 * a0 * b2 * b3 * c2 * c3 * d5 +
            64 * a0 * b2 * b3 * c2 * c4 * d4 - 16 * a0 * b2 * b3 * c2 * c5 * d3 - 16 * a0 * b2 * b3 * c3 * c5 * d2 -
            16 * a0 * b2 * b3 * c4 * c5 * d1 + 16 * a0 * b2 * b4 * c1 * c3 * d5 + 16 * a0 * b2 * b4 * c1 * c5 * d3 +
            16 * a0 * b2 * b4 * c3 * c5 * d1 + 16 * a0 * b3 * b4 * c1 * c2 * d5 + 16 * a0 * b3 * b4 * c1 * c5 * d2 -
            64 * a0 * b3 * b4 * c2 * c4 * d2 + 16 * a0 * b3 * b4 * c2 * c5 * d1 - 16 * a0 * b4 * b5 * c1 * c2 * d3 -
            16 * a0 * b4 * b5 * c1 * c3 * d2 + 64 * a0 * b4 * b5 * c1 * c4 * d1 - 16 * a0 * b4 * b5 * c2 * c3 * d1 +
            16 * a1 * a2 * a3 * d0 * d4 * d5 - 16 * a1 * a2 * a5 * d0 * d3 * d4 + 16 * a1 * a2 * b3 * c0 * d4 * d5 +
            16 * a1 * a2 * b3 * c4 * d0 * d5 + 16 * a1 * a2 * b3 * c5 * d0 * d4 - 16 * a1 * a2 * b5 * c0 * d3 * d4 -
            16 * a1 * a2 * b5 * c3 * d0 * d4 - 16 * a1 * a2 * b5 * c4 * d0 * d3 - 16 * a1 * a3 * a5 * d0 * d1 * d5 -
            16 * a1 * a3 * a5 * d0 * d2 * d4 + 32 * a1 * a3 * b1 * c5 * d0 * d5 + 16 * a1 * a3 * b2 * c0 * d4 * d5 +
            16 * a1 * a3 * b2 * c4 * d0 * d5 + 16 * a1 * a3 * b2 * c5 * d0 * d4 - 16 * a1 * a3 * b5 * c0 * d1 * d5 -
            16 * a1 * a3 * b5 * c0 * d2 * d4 - 16 * a1 * a3 * b5 * c1 * d0 * d5 - 16 * a1 * a3 * b5 * c2 * d0 * d4 -
            16 * a1 * a3 * b5 * c4 * d0 * d2 - 16 * a1 * a3 * b5 * c5 * d0 * d1 + 16 * a1 * a4 * a5 * d0 * d2 * d3 -
            16 * a1 * a4 * b0 * c2 * d3 * d5 - 16 * a1 * a4 * b0 * c3 * d2 * d5 - 16 * a1 * a4 * b0 * c5 * d2 * d3 -
            64 * a1 * a4 * b1 * c0 * d4 * d5 - 64 * a1 * a4 * b1 * c4 * d0 * d5 - 64 * a1 * a4 * b1 * c5 * d0 * d4 +
            64 * a1 * a4 * b4 * c0 * d1 * d5 + 64 * a1 * a4 * b4 * c1 * d0 * d5 + 64 * a1 * a4 * b4 * c5 * d0 * d1 +
            16 * a1 * a4 * b5 * c0 * d2 * d3 + 16 * a1 * a4 * b5 * c2 * d0 * d3 + 16 * a1 * a4 * b5 * c3 * d0 * d2 +
            16 * a1 * a5 * b0 * c1 * d3 * d5 + 16 * a1 * a5 * b0 * c2 * d3 * d4 + 16 * a1 * a5 * b0 * c3 * d1 * d5 +
            16 * a1 * a5 * b0 * c3 * d2 * d4 - 64 * a1 * a5 * b0 * c4 * d1 * d4 + 16 * a1 * a5 * b0 * c4 * d2 * d3 +
            16 * a1 * a5 * b0 * c5 * d1 * d3 + 64 * a1 * a5 * b1 * c4 * d0 * d4 - 16 * a1 * a5 * b2 * c0 * d3 * d4 -
            16 * a1 * a5 * b2 * c3 * d0 * d4 - 16 * a1 * a5 * b2 * c4 * d0 * d3 - 16 * a1 * a5 * b3 * c0 * d1 * d5 -
            16 * a1 * a5 * b3 * c0 * d2 * d4 - 16 * a1 * a5 * b3 * c1 * d0 * d5 - 16 * a1 * a5 * b3 * c2 * d0 * d4 -
            16 * a1 * a5 * b3 * c4 * d0 * d2 - 16 * a1 * a5 * b3 * c5 * d0 * d1 + 16 * a1 * a5 * b4 * c0 * d2 * d3 +
            16 * a1 * a5 * b4 * c2 * d0 * d3 + 16 * a1 * a5 * b4 * c3 * d0 * d2 - 32 * a1 * b0 * b1 * c3 * c5 * d5 +
            64 * a1 * b0 * b1 * c4 * c5 * d4 - 16 * a1 * b0 * b4 * c2 * c3 * d5 - 16 * a1 * b0 * b4 * c2 * c5 * d3 -
            16 * a1 * b0 * b4 * c3 * c5 * d2 + 16 * a1 * b0 * b5 * c1 * c3 * d5 - 64 * a1 * b0 * b5 * c1 * c4 * d4 +
            16 * a1 * b0 * b5 * c1 * c5 * d3 + 16 * a1 * b0 * b5 * c2 * c3 * d4 + 16 * a1 * b0 * b5 * c2 * c4 * d3 +
            16 * a1 * b0 * b5 * c3 * c4 * d2 + 16 * a1 * b0 * b5 * c3 * c5 * d1 + 32 * a1 * b1 * b3 * c0 * c5 * d5 -
            64 * a1 * b1 * b4 * c0 * c4 * d5 - 64 * a1 * b1 * b4 * c0 * c5 * d4 - 64 * a1 * b1 * b4 * c4 * c5 * d0 +
            64 * a1 * b1 * b5 * c0 * c4 * d4 + 16 * a1 * b2 * b3 * c0 * c4 * d5 + 16 * a1 * b2 * b3 * c0 * c5 * d4 +
            16 * a1 * b2 * b3 * c4 * c5 * d0 - 16 * a1 * b2 * b5 * c0 * c3 * d4 - 16 * a1 * b2 * b5 * c0 * c4 * d3 -
            16 * a1 * b2 * b5 * c3 * c4 * d0 - 16 * a1 * b3 * b5 * c0 * c1 * d5 - 16 * a1 * b3 * b5 * c0 * c2 * d4 -
            16 * a1 * b3 * b5 * c0 * c4 * d2 - 16 * a1 * b3 * b5 * c0 * c5 * d1 - 16 * a1 * b3 * b5 * c1 * c5 * d0 -
            16 * a1 * b3 * b5 * c2 * c4 * d0 + 16 * a1 * b4 * b5 * c0 * c2 * d3 + 16 * a1 * b4 * b5 * c0 * c3 * d2 +
            16 * a1 * b4 * b5 * c2 * c3 * d0 - 16 * a2 * a3 * a4 * d0 * d1 * d5 + 16 * a2 * a3 * a5 * d0 * d1 * d4 +
            16 * a2 * a3 * a5 * d0 * d2 * d3 - 16 * a2 * a3 * b0 * c1 * d4 * d5 - 16 * a2 * a3 * b0 * c2 * d3 * d5 -
            16 * a2 * a3 * b0 * c3 * d2 * d5 - 16 * a2 * a3 * b0 * c4 * d1 * d5 + 64 * a2 * a3 * b0 * c4 * d2 * d4 -
            16 * a2 * a3 * b0 * c5 * d1 * d4 - 16 * a2 * a3 * b0 * c5 * d2 * d3 + 16 * a2 * a3 * b1 * c0 * d4 * d5 +
            16 * a2 * a3 * b1 * c4 * d0 * d5 + 16 * a2 * a3 * b1 * c5 * d0 * d4 - 64 * a2 * a3 * b2 * c4 * d0 * d4 -
            16 * a2 * a3 * b4 * c0 * d1 * d5 - 16 * a2 * a3 * b4 * c1 * d0 * d5 - 16 * a2 * a3 * b4 * c5 * d0 * d1 +
            16 * a2 * a3 * b5 * c0 * d1 * d4 + 16 * a2 * a3 * b5 * c0 * d2 * d3 + 16 * a2 * a3 * b5 * c1 * d0 * d4 +
            16 * a2 * a3 * b5 * c2 * d0 * d3 + 16 * a2 * a3 * b5 * c3 * d0 * d2 + 16 * a2 * a3 * b5 * c4 * d0 * d1 +
            16 * a2 * a4 * b0 * c1 * d3 * d5 + 16 * a2 * a4 * b0 * c3 * d1 * d5 + 16 * a2 * a4 * b0 * c5 * d1 * d3 +
            64 * a2 * a4 * b2 * c0 * d3 * d4 + 64 * a2 * a4 * b2 * c3 * d0 * d4 + 64 * a2 * a4 * b2 * c4 * d0 * d3 -
            16 * a2 * a4 * b3 * c0 * d1 * d5 - 16 * a2 * a4 * b3 * c1 * d0 * d5 - 16 * a2 * a4 * b3 * c5 * d0 * d1 -
            64 * a2 * a4 * b4 * c0 * d2 * d3 - 64 * a2 * a4 * b4 * c2 * d0 * d3 - 64 * a2 * a4 * b4 * c3 * d0 * d2 -
            16 * a2 * a5 * b1 * c0 * d3 * d4 - 16 * a2 * a5 * b1 * c3 * d0 * d4 - 16 * a2 * a5 * b1 * c4 * d0 * d3 -
            32 * a2 * a5 * b2 * c3 * d0 * d3 + 16 * a2 * a5 * b3 * c0 * d1 * d4 + 16 * a2 * a5 * b3 * c0 * d2 * d3 +
            16 * a2 * a5 * b3 * c1 * d0 * d4 + 16 * a2 * a5 * b3 * c2 * d0 * d3 + 16 * a2 * a5 * b3 * c3 * d0 * d2 +
            16 * a2 * a5 * b3 * c4 * d0 * d1 - 64 * a2 * b0 * b2 * c3 * c4 * d4 + 32 * a2 * b0 * b2 * c3 * c5 * d3 -
            16 * a2 * b0 * b3 * c1 * c4 * d5 - 16 * a2 * b0 * b3 * c1 * c5 * d4 - 16 * a2 * b0 * b3 * c2 * c3 * d5 +
            64 * a2 * b0 * b3 * c2 * c4 * d4 - 16 * a2 * b0 * b3 * c2 * c5 * d3 - 16 * a2 * b0 * b3 * c3 * c5 * d2 -
            16 * a2 * b0 * b3 * c4 * c5 * d1 + 16 * a2 * b0 * b4 * c1 * c3 * d5 + 16 * a2 * b0 * b4 * c1 * c5 * d3 +
            16 * a2 * b0 * b4 * c3 * c5 * d1 + 16 * a2 * b1 * b3 * c0 * c4 * d5 + 16 * a2 * b1 * b3 * c0 * c5 * d4 +
            16 * a2 * b1 * b3 * c4 * c5 * d0 - 16 * a2 * b1 * b5 * c0 * c3 * d4 - 16 * a2 * b1 * b5 * c0 * c4 * d3 -
            16 * a2 * b1 * b5 * c3 * c4 * d0 - 64 * a2 * b2 * b3 * c0 * c4 * d4 + 64 * a2 * b2 * b4 * c0 * c3 * d4 +
            64 * a2 * b2 * b4 * c0 * c4 * d3 + 64 * a2 * b2 * b4 * c3 * c4 * d0 - 32 * a2 * b2 * b5 * c0 * c3 * d3 -
            16 * a2 * b3 * b4 * c0 * c1 * d5 - 16 * a2 * b3 * b4 * c0 * c5 * d1 - 16 * a2 * b3 * b4 * c1 * c5 * d0 +
            16 * a2 * b3 * b5 * c0 * c1 * d4 + 16 * a2 * b3 * b5 * c0 * c2 * d3 + 16 * a2 * b3 * b5 * c0 * c3 * d2 +
            16 * a2 * b3 * b5 * c0 * c4 * d1 + 16 * a2 * b3 * b5 * c1 * c4 * d0 + 16 * a2 * b3 * b5 * c2 * c3 * d0 +
            16 * a3 * a4 * b0 * c1 * d2 * d5 + 16 * a3 * a4 * b0 * c2 * d1 * d5 - 64 * a3 * a4 * b0 * c2 * d2 * d4 +
            16 * a3 * a4 * b0 * c5 * d1 * d2 - 16 * a3 * a4 * b2 * c0 * d1 * d5 - 16 * a3 * a4 * b2 * c1 * d0 * d5 -
            16 * a3 * a4 * b2 * c5 * d0 * d1 + 64 * a3 * a4 * b4 * c2 * d0 * d2 - 16 * a3 * a5 * b1 * c0 * d1 * d5 -
            16 * a3 * a5 * b1 * c0 * d2 * d4 - 16 * a3 * a5 * b1 * c1 * d0 * d5 - 16 * a3 * a5 * b1 * c2 * d0 * d4 -
            16 * a3 * a5 * b1 * c4 * d0 * d2 - 16 * a3 * a5 * b1 * c5 * d0 * d1 + 16 * a3 * a5 * b2 * c0 * d1 * d4 +
            16 * a3 * a5 * b2 * c0 * d2 * d3 + 16 * a3 * a5 * b2 * c1 * d0 * d4 + 16 * a3 * a5 * b2 * c2 * d0 * d3 +
            16 * a3 * a5 * b2 * c3 * d0 * d2 + 16 * a3 * a5 * b2 * c4 * d0 * d1 - 32 * a3 * a5 * b3 * c2 * d0 * d2 +
            32 * a3 * a5 * b5 * c1 * d0 * d1 - 16 * a3 * b0 * b2 * c1 * c4 * d5 - 16 * a3 * b0 * b2 * c1 * c5 * d4 -
            16 * a3 * b0 * b2 * c2 * c3 * d5 + 64 * a3 * b0 * b2 * c2 * c4 * d4 - 16 * a3 * b0 * b2 * c2 * c5 * d3 -
            16 * a3 * b0 * b2 * c3 * c5 * d2 - 16 * a3 * b0 * b2 * c4 * c5 * d1 + 32 * a3 * b0 * b3 * c2 * c5 * d2 +
            16 * a3 * b0 * b4 * c1 * c2 * d5 + 16 * a3 * b0 * b4 * c1 * c5 * d2 - 64 * a3 * b0 * b4 * c2 * c4 * d2 +
            16 * a3 * b0 * b4 * c2 * c5 * d1 + 16 * a3 * b1 * b2 * c0 * c4 * d5 + 16 * a3 * b1 * b2 * c0 * c5 * d4 +
            16 * a3 * b1 * b2 * c4 * c5 * d0 - 16 * a3 * b1 * b5 * c0 * c1 * d5 - 16 * a3 * b1 * b5 * c0 * c2 * d4 -
            16 * a3 * b1 * b5 * c0 * c4 * d2 - 16 * a3 * b1 * b5 * c0 * c5 * d1 - 16 * a3 * b1 * b5 * c1 * c5 * d0 -
            16 * a3 * b1 * b5 * c2 * c4 * d0 - 16 * a3 * b2 * b4 * c0 * c1 * d5 - 16 * a3 * b2 * b4 * c0 * c5 * d1 -
            16 * a3 * b2 * b4 * c1 * c5 * d0 + 16 * a3 * b2 * b5 * c0 * c1 * d4 + 16 * a3 * b2 * b5 * c0 * c2 * d3 +
            16 * a3 * b2 * b5 * c0 * c3 * d2 + 16 * a3 * b2 * b5 * c0 * c4 * d1 + 16 * a3 * b2 * b5 * c1 * c4 * d0 +
            16 * a3 * b2 * b5 * c2 * c3 * d0 - 32 * a3 * b3 * b5 * c0 * c2 * d2 + 64 * a4 * a5 * b0 * c1 * d1 * d4 -
            16 * a4 * a5 * b0 * c1 * d2 * d3 - 16 * a4 * a5 * b0 * c2 * d1 * d3 - 16 * a4 * a5 * b0 * c3 * d1 * d2 +
            16 * a4 * a5 * b1 * c0 * d2 * d3 + 16 * a4 * a5 * b1 * c2 * d0 * d3 + 16 * a4 * a5 * b1 * c3 * d0 * d2 -
            64 * a4 * a5 * b4 * c1 * d0 * d1 - 16 * a4 * b0 * b1 * c2 * c3 * d5 - 16 * a4 * b0 * b1 * c2 * c5 * d3 -
            16 * a4 * b0 * b1 * c3 * c5 * d2 + 16 * a4 * b0 * b2 * c1 * c3 * d5 + 16 * a4 * b0 * b2 * c1 * c5 * d3 +
            16 * a4 * b0 * b2 * c3 * c5 * d1 + 16 * a4 * b0 * b3 * c1 * c2 * d5 + 16 * a4 * b0 * b3 * c1 * c5 * d2 -
            64 * a4 * b0 * b3 * c2 * c4 * d2 + 16 * a4 * b0 * b3 * c2 * c5 * d1 - 64 * a4 * b0 * b4 * c1 * c5 * d1 +
            64 * a4 * b0 * b4 * c2 * c3 * d2 - 16 * a4 * b0 * b5 * c1 * c2 * d3 - 16 * a4 * b0 * b5 * c1 * c3 * d2 +
            64 * a4 * b0 * b5 * c1 * c4 * d1 - 16 * a4 * b0 * b5 * c2 * c3 * d1 + 64 * a4 * b1 * b4 * c0 * c1 * d5 +
            64 * a4 * b1 * b4 * c0 * c5 * d1 + 64 * a4 * b1 * b4 * c1 * c5 * d0 + 16 * a4 * b1 * b5 * c0 * c2 * d3 +
            16 * a4 * b1 * b5 * c0 * c3 * d2 + 16 * a4 * b1 * b5 * c2 * c3 * d0 - 16 * a4 * b2 * b3 * c0 * c1 * d5 -
            16 * a4 * b2 * b3 * c0 * c5 * d1 - 16 * a4 * b2 * b3 * c1 * c5 * d0 - 64 * a4 * b2 * b4 * c0 * c2 * d3 -
            64 * a4 * b2 * b4 * c0 * c3 * d2 - 64 * a4 * b2 * b4 * c2 * c3 * d0 + 64 * a4 * b3 * b4 * c0 * c2 * d2 -
            64 * a4 * b4 * b5 * c0 * c1 * d1 + 16 * a5 * b0 * b1 * c1 * c3 * d5 - 64 * a5 * b0 * b1 * c1 * c4 * d4 +
            16 * a5 * b0 * b1 * c1 * c5 * d3 + 16 * a5 * b0 * b1 * c2 * c3 * d4 + 16 * a5 * b0 * b1 * c2 * c4 * d3 +
            16 * a5 * b0 * b1 * c3 * c4 * d2 + 16 * a5 * b0 * b1 * c3 * c5 * d1 - 16 * a5 * b0 * b4 * c1 * c2 * d3 -
            16 * a5 * b0 * b4 * c1 * c3 * d2 + 64 * a5 * b0 * b4 * c1 * c4 * d1 - 16 * a5 * b0 * b4 * c2 * c3 * d1 +
            12 * a5 * b0 * b5 * c0 * c5 * d0 - 32 * a5 * b0 * b5 * c1 * c3 * d1 - 16 * a5 * b1 * b2 * c0 * c3 * d4 -
            16 * a5 * b1 * b2 * c0 * c4 * d3 - 16 * a5 * b1 * b2 * c3 * c4 * d0 - 16 * a5 * b1 * b3 * c0 * c1 * d5 -
            16 * a5 * b1 * b3 * c0 * c2 * d4 - 16 * a5 * b1 * b3 * c0 * c4 * d2 - 16 * a5 * b1 * b3 * c0 * c5 * d1 -
            16 * a5 * b1 * b3 * c1 * c5 * d0 - 16 * a5 * b1 * b3 * c2 * c4 * d0 + 16 * a5 * b1 * b4 * c0 * c2 * d3 +
            16 * a5 * b1 * b4 * c0 * c3 * d2 + 16 * a5 * b1 * b4 * c2 * c3 * d0 + 16 * a5 * b2 * b3 * c0 * c1 * d4 +
            16 * a5 * b2 * b3 * c0 * c2 * d3 + 16 * a5 * b2 * b3 * c0 * c3 * d2 + 16 * a5 * b2 * b3 * c0 * c4 * d1 +
            16 * a5 * b2 * b3 * c1 * c4 * d0 + 16 * a5 * b2 * b3 * c2 * c3 * d0 + 32 * a5 * b3 * b5 * c0 * c1 * d1 -
            16 * b0 * b1 * b4 * c2 * c3 * c5 + 16 * b0 * b1 * b5 * c1 * c3 * c5 + 16 * b0 * b1 * b5 * c2 * c3 * c4 -
            16 * b0 * b2 * b3 * c1 * c4 * c5 - 16 * b0 * b2 * b3 * c2 * c3 * c5 + 16 * b0 * b2 * b4 * c1 * c3 * c5 +
            16 * b0 * b3 * b4 * c1 * c2 * c5 - 16 * b0 * b4 * b5 * c1 * c2 * c3 + 16 * b1 * b2 * b3 * c0 * c4 * c5 -
            16 * b1 * b2 * b5 * c0 * c3 * c4 - 16 * b1 * b3 * b5 * c0 * c1 * c5 - 16 * b1 * b3 * b5 * c0 * c2 * c4 +
            16 * b1 * b4 * b5 * c0 * c2 * c3 - 16 * b2 * b3 * b4 * c0 * c1 * c5 + 16 * b2 * b3 * b5 * c0 * c1 * c4 +
            16 * b2 * b3 * b5 * c0 * c2 * c3 + 16 * a0 * a3 * a4 * d0 * d4 * d5 - 32 * a0 * a3 * b0 * c4 * d4 * d5 +
            24 * a0 * a3 * b0 * c5 * d3 * d5 - 24 * a0 * a3 * b3 * c5 * d0 * d5 + 16 * a0 * a3 * b4 * c0 * d4 * d5 +
            16 * a0 * a3 * b4 * c4 * d0 * d5 + 16 * a0 * a3 * b4 * c5 * d0 * d4 - 16 * a0 * a4 * a5 * d0 * d3 * d4 +
            16 * a0 * a4 * b3 * c0 * d4 * d5 + 16 * a0 * a4 * b3 * c4 * d0 * d5 + 16 * a0 * a4 * b3 * c5 * d0 * d4 -
            16 * a0 * a4 * b5 * c0 * d3 * d4 - 16 * a0 * a4 * b5 * c3 * d0 * d4 - 16 * a0 * a4 * b5 * c4 * d0 * d3 -
            24 * a0 * a5 * b0 * c3 * d3 * d5 + 32 * a0 * a5 * b0 * c4 * d3 * d4 - 16 * a0 * a5 * b4 * c0 * d3 * d4 -
            16 * a0 * a5 * b4 * c3 * d0 * d4 - 16 * a0 * a5 * b4 * c4 * d0 * d3 + 24 * a0 * a5 * b5 * c3 * d0 * d3 +
            24 * a0 * b0 * b3 * c3 * c5 * d5 - 32 * a0 * b0 * b3 * c4 * c5 * d4 + 32 * a0 * b0 * b5 * c3 * c4 * d4 -
            24 * a0 * b0 * b5 * c3 * c5 * d3 + 16 * a0 * b3 * b4 * c0 * c4 * d5 + 16 * a0 * b3 * b4 * c0 * c5 * d4 +
            16 * a0 * b3 * b4 * c4 * c5 * d0 - 16 * a0 * b4 * b5 * c0 * c3 * d4 - 16 * a0 * b4 * b5 * c0 * c4 * d3 -
            16 * a0 * b4 * b5 * c3 * c4 * d0 - 64 * a1 * a2 * b1 * c5 * d2 * d5 + 64 * a1 * a2 * b2 * c5 * d1 * d5 +
            64 * a1 * a5 * b1 * c2 * d2 * d5 - 64 * a1 * a5 * b5 * c2 * d1 * d2 - 64 * a1 * b1 * b2 * c2 * c5 * d5 +
            64 * a1 * b1 * b5 * c2 * c5 * d2 - 64 * a2 * a5 * b2 * c1 * d1 * d5 + 64 * a2 * a5 * b5 * c1 * d1 * d2 +
            64 * a2 * b1 * b2 * c1 * c5 * d5 - 64 * a2 * b2 * b5 * c1 * c5 * d1 + 16 * a3 * a4 * b0 * c0 * d4 * d5 +
            16 * a3 * a4 * b0 * c4 * d0 * d5 + 16 * a3 * a4 * b0 * c5 * d0 * d4 - 32 * a3 * a4 * b4 * c0 * d0 * d5 +
            24 * a3 * a5 * b3 * c0 * d0 * d5 - 24 * a3 * a5 * b5 * c0 * d0 * d3 - 24 * a3 * b0 * b3 * c0 * c5 * d5 +
            16 * a3 * b0 * b4 * c0 * c4 * d5 + 16 * a3 * b0 * b4 * c0 * c5 * d4 + 16 * a3 * b0 * b4 * c4 * c5 * d0 +
            24 * a3 * b3 * b5 * c0 * c5 * d0 - 16 * a4 * a5 * b0 * c0 * d3 * d4 - 16 * a4 * a5 * b0 * c3 * d0 * d4 -
            16 * a4 * a5 * b0 * c4 * d0 * d3 + 32 * a4 * a5 * b4 * c0 * d0 * d3 + 16 * a4 * b0 * b3 * c0 * c4 * d5 +
            16 * a4 * b0 * b3 * c0 * c5 * d4 + 16 * a4 * b0 * b3 * c4 * c5 * d0 - 16 * a4 * b0 * b5 * c0 * c3 * d4 -
            16 * a4 * b0 * b5 * c0 * c4 * d3 - 16 * a4 * b0 * b5 * c3 * c4 * d0 - 32 * a4 * b3 * b4 * c0 * c5 * d0 +
            32 * a4 * b4 * b5 * c0 * c3 * d0 - 16 * a5 * b0 * b4 * c0 * c3 * d4 - 16 * a5 * b0 * b4 * c0 * c4 * d3 -
            16 * a5 * b0 * b4 * c3 * c4 * d0 + 24 * a5 * b0 * b5 * c0 * c3 * d3 - 64 * a5 * b1 * b5 * c1 * c2 * d2 +
            64 * a5 * b2 * b5 * c1 * c2 * d1 - 24 * a5 * b3 * b5 * c0 * c3 * d0 + 16 * b0 * b3 * b4 * c0 * c4 * c5 -
            16 * b0 * b4 * b5 * c0 * c3 * c4 - 16 * a0 * a1 * b5 * c5 * d1 * d5 + 16 * a0 * a2 * a5 * d1 * d4 * d5 -
            16 * a0 * a2 * b2 * c5 * d3 * d5 + 16 * a0 * a2 * b3 * c5 * d2 * d5 - 32 * a0 * a2 * b4 * c5 * d1 * d5 +
            16 * a0 * a2 * b5 * c1 * d4 * d5 + 16 * a0 * a2 * b5 * c4 * d1 * d5 + 16 * a0 * a2 * b5 * c5 * d1 * d4 +
            16 * a0 * a3 * b2 * c5 * d2 * d5 - 16 * a0 * a3 * b5 * c2 * d2 * d5 + 16 * a0 * a4 * a5 * d1 * d2 * d5 -
            32 * a0 * a4 * b2 * c5 * d1 * d5 + 16 * a0 * a4 * b5 * c1 * d2 * d5 + 16 * a0 * a4 * b5 * c2 * d1 * d5 +
            16 * a0 * a4 * b5 * c5 * d1 * d2 - 16 * a0 * a5 * b1 * c5 * d1 * d5 + 16 * a0 * a5 * b2 * c1 * d4 * d5 +
            16 * a0 * a5 * b2 * c4 * d1 * d5 + 16 * a0 * a5 * b2 * c5 * d1 * d4 - 16 * a0 * a5 * b3 * c2 * d2 * d5 +
            16 * a0 * a5 * b4 * c1 * d2 * d5 + 16 * a0 * a5 * b4 * c2 * d1 * d5 + 16 * a0 * a5 * b4 * c5 * d1 * d2 +
            16 * a0 * a5 * b5 * c1 * d1 * d5 - 32 * a0 * a5 * b5 * c1 * d2 * d4 - 32 * a0 * a5 * b5 * c2 * d1 * d4 +
            16 * a0 * a5 * b5 * c2 * d2 * d3 - 32 * a0 * a5 * b5 * c4 * d1 * d2 - 16 * a0 * b1 * b5 * c1 * c5 * d5 +
            16 * a0 * b2 * b3 * c2 * c5 * d5 - 32 * a0 * b2 * b4 * c1 * c5 * d5 + 16 * a0 * b2 * b5 * c1 * c4 * d5 +
            16 * a0 * b2 * b5 * c1 * c5 * d4 + 16 * a0 * b2 * b5 * c4 * c5 * d1 - 16 * a0 * b3 * b5 * c2 * c5 * d2 +
            16 * a0 * b4 * b5 * c1 * c2 * d5 + 16 * a0 * b4 * b5 * c1 * c5 * d2 + 16 * a0 * b4 * b5 * c2 * c5 * d1 -
            16 * a1 * a2 * a5 * d0 * d4 * d5 + 32 * a1 * a2 * b4 * c5 * d0 * d5 - 16 * a1 * a2 * b5 * c0 * d4 * d5 -
            16 * a1 * a2 * b5 * c4 * d0 * d5 - 16 * a1 * a2 * b5 * c5 * d0 * d4 - 16 * a1 * a4 * a5 * d0 * d2 * d5 +
            32 * a1 * a4 * b2 * c5 * d0 * d5 - 16 * a1 * a4 * b5 * c0 * d2 * d5 - 16 * a1 * a4 * b5 * c2 * d0 * d5 -
            16 * a1 * a4 * b5 * c5 * d0 * d2 - 16 * a1 * a5 * b0 * c5 * d1 * d5 - 16 * a1 * a5 * b1 * c5 * d0 * d5 -
            16 * a1 * a5 * b2 * c0 * d4 * d5 - 16 * a1 * a5 * b2 * c4 * d0 * d5 - 16 * a1 * a5 * b2 * c5 * d0 * d4 -
            16 * a1 * a5 * b4 * c0 * d2 * d5 - 16 * a1 * a5 * b4 * c2 * d0 * d5 - 16 * a1 * a5 * b4 * c5 * d0 * d2 +
            16 * a1 * a5 * b5 * c0 * d1 * d5 + 32 * a1 * a5 * b5 * c0 * d2 * d4 + 16 * a1 * a5 * b5 * c1 * d0 * d5 +
            32 * a1 * a5 * b5 * c2 * d0 * d4 + 32 * a1 * a5 * b5 * c4 * d0 * d2 + 16 * a1 * a5 * b5 * c5 * d0 * d1 -
            16 * a1 * b0 * b5 * c1 * c5 * d5 - 16 * a1 * b1 * b5 * c0 * c5 * d5 + 32 * a1 * b2 * b4 * c0 * c5 * d5 -
            16 * a1 * b2 * b5 * c0 * c4 * d5 - 16 * a1 * b2 * b5 * c0 * c5 * d4 - 16 * a1 * b2 * b5 * c4 * c5 * d0 -
            16 * a1 * b4 * b5 * c0 * c2 * d5 - 16 * a1 * b4 * b5 * c0 * c5 * d2 - 16 * a1 * b4 * b5 * c2 * c5 * d0 +
            16 * a2 * a3 * b0 * c5 * d2 * d5 - 16 * a2 * a3 * b2 * c5 * d0 * d5 - 32 * a2 * a4 * b0 * c5 * d1 * d5 +
            32 * a2 * a4 * b1 * c5 * d0 * d5 + 16 * a2 * a5 * b0 * c1 * d4 * d5 + 16 * a2 * a5 * b0 * c4 * d1 * d5 +
            16 * a2 * a5 * b0 * c5 * d1 * d4 - 16 * a2 * a5 * b1 * c0 * d4 * d5 - 16 * a2 * a5 * b1 * c4 * d0 * d5 -
            16 * a2 * a5 * b1 * c5 * d0 * d4 + 16 * a2 * a5 * b2 * c0 * d3 * d5 + 16 * a2 * a5 * b2 * c3 * d0 * d5 +
            16 * a2 * a5 * b2 * c5 * d0 * d3 - 16 * a2 * a5 * b5 * c0 * d2 * d3 - 16 * a2 * a5 * b5 * c2 * d0 * d3 -
            16 * a2 * a5 * b5 * c3 * d0 * d2 - 16 * a2 * b0 * b2 * c3 * c5 * d5 + 16 * a2 * b0 * b3 * c2 * c5 * d5 -
            32 * a2 * b0 * b4 * c1 * c5 * d5 + 16 * a2 * b0 * b5 * c1 * c4 * d5 + 16 * a2 * b0 * b5 * c1 * c5 * d4 +
            16 * a2 * b0 * b5 * c4 * c5 * d1 + 32 * a2 * b1 * b4 * c0 * c5 * d5 - 16 * a2 * b1 * b5 * c0 * c4 * d5 -
            16 * a2 * b1 * b5 * c0 * c5 * d4 - 16 * a2 * b1 * b5 * c4 * c5 * d0 - 16 * a2 * b2 * b3 * c0 * c5 * d5 +
            16 * a2 * b2 * b5 * c0 * c3 * d5 + 16 * a2 * b2 * b5 * c0 * c5 * d3 + 16 * a2 * b2 * b5 * c3 * c5 * d0 -
            16 * a3 * a5 * b0 * c2 * d2 * d5 + 16 * a3 * a5 * b5 * c2 * d0 * d2 + 16 * a3 * b0 * b2 * c2 * c5 * d5 -
            16 * a3 * b0 * b5 * c2 * c5 * d2 + 16 * a4 * a5 * b0 * c1 * d2 * d5 + 16 * a4 * a5 * b0 * c2 * d1 * d5 +
            16 * a4 * a5 * b0 * c5 * d1 * d2 - 16 * a4 * a5 * b1 * c0 * d2 * d5 - 16 * a4 * a5 * b1 * c2 * d0 * d5 -
            16 * a4 * a5 * b1 * c5 * d0 * d2 - 32 * a4 * b0 * b2 * c1 * c5 * d5 + 16 * a4 * b0 * b5 * c1 * c2 * d5 +
            16 * a4 * b0 * b5 * c1 * c5 * d2 + 16 * a4 * b0 * b5 * c2 * c5 * d1 + 32 * a4 * b1 * b2 * c0 * c5 * d5 -
            16 * a4 * b1 * b5 * c0 * c2 * d5 - 16 * a4 * b1 * b5 * c0 * c5 * d2 - 16 * a4 * b1 * b5 * c2 * c5 * d0 -
            16 * a5 * b0 * b1 * c1 * c5 * d5 + 16 * a5 * b0 * b2 * c1 * c4 * d5 + 16 * a5 * b0 * b2 * c1 * c5 * d4 +
            16 * a5 * b0 * b2 * c4 * c5 * d1 - 16 * a5 * b0 * b3 * c2 * c5 * d2 + 16 * a5 * b0 * b4 * c1 * c2 * d5 +
            16 * a5 * b0 * b4 * c1 * c5 * d2 + 16 * a5 * b0 * b4 * c2 * c5 * d1 - 32 * a5 * b0 * b5 * c1 * c2 * d4 -
            32 * a5 * b0 * b5 * c1 * c4 * d2 + 16 * a5 * b0 * b5 * c1 * c5 * d1 + 16 * a5 * b0 * b5 * c2 * c3 * d2 -
            32 * a5 * b0 * b5 * c2 * c4 * d1 - 16 * a5 * b1 * b2 * c0 * c4 * d5 - 16 * a5 * b1 * b2 * c0 * c5 * d4 -
            16 * a5 * b1 * b2 * c4 * c5 * d0 - 16 * a5 * b1 * b4 * c0 * c2 * d5 - 16 * a5 * b1 * b4 * c0 * c5 * d2 -
            16 * a5 * b1 * b4 * c2 * c5 * d0 + 16 * a5 * b1 * b5 * c0 * c1 * d5 + 32 * a5 * b1 * b5 * c0 * c2 * d4 +
            32 * a5 * b1 * b5 * c0 * c4 * d2 + 16 * a5 * b1 * b5 * c0 * c5 * d1 + 16 * a5 * b1 * b5 * c1 * c5 * d0 +
            32 * a5 * b1 * b5 * c2 * c4 * d0 - 16 * a5 * b2 * b5 * c0 * c2 * d3 - 16 * a5 * b2 * b5 * c0 * c3 * d2 -
            16 * a5 * b2 * b5 * c2 * c3 * d0 + 16 * a5 * b3 * b5 * c0 * c2 * d2 + 16 * b0 * b2 * b5 * c1 * c4 * c5 +
            16 * b0 * b4 * b5 * c1 * c2 * c5 - 16 * b1 * b2 * b5 * c0 * c4 * c5 - 16 * b1 * b4 * b5 * c0 * c2 * c5 +
            12 * a0 * a3 * b5 * c5 * d0 * d5 + 16 * a0 * a4 * b0 * c5 * d4 * d5 - 16 * a0 * a4 * b4 * c5 * d0 * d5 -
            16 * a0 * a5 * b0 * c4 * d4 * d5 + 12 * a0 * a5 * b0 * c5 * d3 * d5 + 12 * a0 * a5 * b3 * c5 * d0 * d5 -
            12 * a0 * a5 * b5 * c0 * d3 * d5 - 12 * a0 * a5 * b5 * c3 * d0 * d5 + 16 * a0 * a5 * b5 * c4 * d0 * d4 -
            12 * a0 * a5 * b5 * c5 * d0 * d3 + 16 * a0 * b0 * b4 * c4 * c5 * d5 + 12 * a0 * b0 * b5 * c3 * c5 * d5 -
            16 * a0 * b0 * b5 * c4 * c5 * d4 + 12 * a0 * b3 * b5 * c0 * c5 * d5 - 16 * a1 * a2 * a3 * d3 * d4 * d5 -
            16 * a1 * a2 * b3 * c3 * d4 * d5 - 16 * a1 * a2 * b3 * c4 * d3 * d5 - 16 * a1 * a2 * b3 * c5 * d3 * d4 +
            32 * a1 * a2 * b4 * c3 * d3 * d5 + 16 * a1 * a3 * a5 * d2 * d3 * d4 + 16 * a1 * a3 * b1 * c5 * d3 * d5 -
            16 * a1 * a3 * b2 * c3 * d4 * d5 - 16 * a1 * a3 * b2 * c4 * d3 * d5 - 16 * a1 * a3 * b2 * c5 * d3 * d4 -
            16 * a1 * a3 * b3 * c5 * d1 * d5 + 16 * a1 * a3 * b5 * c2 * d3 * d4 + 16 * a1 * a3 * b5 * c3 * d2 * d4 +
            16 * a1 * a3 * b5 * c4 * d2 * d3 + 32 * a1 * a4 * b2 * c3 * d3 * d5 - 32 * a1 * a4 * b5 * c3 * d2 * d3 -
            16 * a1 * a5 * b1 * c3 * d3 * d5 + 16 * a1 * a5 * b3 * c2 * d3 * d4 + 16 * a1 * a5 * b3 * c3 * d2 * d4 +
            16 * a1 * a5 * b3 * c4 * d2 * d3 - 32 * a1 * a5 * b4 * c3 * d2 * d3 + 16 * a1 * a5 * b5 * c3 * d1 * d3 +
            16 * a1 * b1 * b3 * c3 * c5 * d5 - 16 * a1 * b1 * b5 * c3 * c5 * d3 - 16 * a1 * b2 * b3 * c3 * c4 * d5 -
            16 * a1 * b2 * b3 * c3 * c5 * d4 - 16 * a1 * b2 * b3 * c4 * c5 * d3 + 32 * a1 * b2 * b4 * c3 * c5 * d3 +
            16 * a1 * b3 * b5 * c2 * c3 * d4 + 16 * a1 * b3 * b5 * c2 * c4 * d3 + 16 * a1 * b3 * b5 * c3 * c4 * d2 -
            32 * a1 * b4 * b5 * c2 * c3 * d3 - 16 * a2 * a3 * a4 * d1 * d3 * d5 - 16 * a2 * a3 * b1 * c3 * d4 * d5 -
            16 * a2 * a3 * b1 * c4 * d3 * d5 - 16 * a2 * a3 * b1 * c5 * d3 * d4 - 16 * a2 * a3 * b2 * c3 * d3 * d5 +
            64 * a2 * a3 * b2 * c4 * d3 * d4 + 32 * a2 * a3 * b3 * c1 * d4 * d5 + 16 * a2 * a3 * b3 * c2 * d3 * d5 +
            16 * a2 * a3 * b3 * c3 * d2 * d5 + 32 * a2 * a3 * b3 * c4 * d1 * d5 - 64 * a2 * a3 * b3 * c4 * d2 * d4 +
            32 * a2 * a3 * b3 * c5 * d1 * d4 + 16 * a2 * a3 * b3 * c5 * d2 * d3 - 16 * a2 * a3 * b4 * c1 * d3 * d5 -
            16 * a2 * a3 * b4 * c3 * d1 * d5 - 16 * a2 * a3 * b4 * c5 * d1 * d3 - 16 * a2 * a3 * b5 * c3 * d2 * d3 +
            32 * a2 * a4 * b1 * c3 * d3 * d5 - 64 * a2 * a4 * b2 * c3 * d3 * d4 - 16 * a2 * a4 * b3 * c1 * d3 * d5 -
            16 * a2 * a4 * b3 * c3 * d1 * d5 - 16 * a2 * a4 * b3 * c5 * d1 * d3 + 64 * a2 * a4 * b4 * c3 * d2 * d3 -
            16 * a2 * a5 * b3 * c3 * d2 * d3 - 16 * a2 * b1 * b3 * c3 * c4 * d5 - 16 * a2 * b1 * b3 * c3 * c5 * d4 -
            16 * a2 * b1 * b3 * c4 * c5 * d3 + 32 * a2 * b1 * b4 * c3 * c5 * d3 + 64 * a2 * b2 * b3 * c3 * c4 * d4 -
            16 * a2 * b2 * b3 * c3 * c5 * d3 - 64 * a2 * b2 * b4 * c3 * c4 * d3 - 16 * a2 * b3 * b4 * c1 * c3 * d5 -
            16 * a2 * b3 * b4 * c1 * c5 * d3 - 16 * a2 * b3 * b4 * c3 * c5 * d1 - 16 * a2 * b3 * b5 * c2 * c3 * d3 +
            16 * a3 * a4 * a5 * d1 * d2 * d3 - 16 * a3 * a4 * b2 * c1 * d3 * d5 - 16 * a3 * a4 * b2 * c3 * d1 * d5 -
            16 * a3 * a4 * b2 * c5 * d1 * d3 + 64 * a3 * a4 * b3 * c2 * d2 * d4 - 64 * a3 * a4 * b4 * c2 * d2 * d3 +
            16 * a3 * a4 * b5 * c1 * d2 * d3 + 16 * a3 * a4 * b5 * c2 * d1 * d3 + 16 * a3 * a4 * b5 * c3 * d1 * d2 +
            12 * a3 * a5 * b0 * c5 * d0 * d5 + 16 * a3 * a5 * b1 * c2 * d3 * d4 + 16 * a3 * a5 * b1 * c3 * d2 * d4 +
            16 * a3 * a5 * b1 * c4 * d2 * d3 - 16 * a3 * a5 * b2 * c3 * d2 * d3 + 16 * a3 * a5 * b3 * c1 * d1 * d5 -
            32 * a3 * a5 * b3 * c1 * d2 * d4 - 32 * a3 * a5 * b3 * c2 * d1 * d4 + 16 * a3 * a5 * b3 * c2 * d2 * d3 -
            32 * a3 * a5 * b3 * c4 * d1 * d2 + 16 * a3 * a5 * b4 * c1 * d2 * d3 + 16 * a3 * a5 * b4 * c2 * d1 * d3 +
            16 * a3 * a5 * b4 * c3 * d1 * d2 - 12 * a3 * a5 * b5 * c0 * d0 * d5 - 16 * a3 * a5 * b5 * c1 * d1 * d3 +
            12 * a3 * b0 * b5 * c0 * c5 * d5 - 16 * a3 * b1 * b2 * c3 * c4 * d5 - 16 * a3 * b1 * b2 * c3 * c5 * d4 -
            16 * a3 * b1 * b2 * c4 * c5 * d3 - 16 * a3 * b1 * b3 * c1 * c5 * d5 + 16 * a3 * b1 * b5 * c2 * c3 * d4 +
            16 * a3 * b1 * b5 * c2 * c4 * d3 + 16 * a3 * b1 * b5 * c3 * c4 * d2 + 32 * a3 * b2 * b3 * c1 * c4 * d5 +
            32 * a3 * b2 * b3 * c1 * c5 * d4 + 16 * a3 * b2 * b3 * c2 * c3 * d5 - 64 * a3 * b2 * b3 * c2 * c4 * d4 +
            16 * a3 * b2 * b3 * c2 * c5 * d3 + 16 * a3 * b2 * b3 * c3 * c5 * d2 + 32 * a3 * b2 * b3 * c4 * c5 * d1 -
            16 * a3 * b2 * b4 * c1 * c3 * d5 - 16 * a3 * b2 * b4 * c1 * c5 * d3 - 16 * a3 * b2 * b4 * c3 * c5 * d1 -
            16 * a3 * b2 * b5 * c2 * c3 * d3 + 64 * a3 * b3 * b4 * c2 * c4 * d2 - 32 * a3 * b3 * b5 * c1 * c2 * d4 -
            32 * a3 * b3 * b5 * c1 * c4 * d2 + 16 * a3 * b3 * b5 * c1 * c5 * d1 + 16 * a3 * b3 * b5 * c2 * c3 * d2 -
            32 * a3 * b3 * b5 * c2 * c4 * d1 + 16 * a3 * b4 * b5 * c1 * c2 * d3 + 16 * a3 * b4 * b5 * c1 * c3 * d2 +
            16 * a3 * b4 * b5 * c2 * c3 * d1 - 32 * a4 * a5 * b1 * c3 * d2 * d3 + 16 * a4 * a5 * b3 * c1 * d2 * d3 +
            16 * a4 * a5 * b3 * c2 * d1 * d3 + 16 * a4 * a5 * b3 * c3 * d1 * d2 + 16 * a4 * a5 * b4 * c0 * d0 * d5 -
            16 * a4 * a5 * b5 * c0 * d0 * d4 - 16 * a4 * b0 * b4 * c0 * c5 * d5 + 32 * a4 * b1 * b2 * c3 * c5 * d3 -
            32 * a4 * b1 * b5 * c2 * c3 * d3 - 16 * a4 * b2 * b3 * c1 * c3 * d5 - 16 * a4 * b2 * b3 * c1 * c5 * d3 -
            16 * a4 * b2 * b3 * c3 * c5 * d1 + 64 * a4 * b2 * b4 * c2 * c3 * d3 - 64 * a4 * b3 * b4 * c2 * c3 * d2 +
            16 * a4 * b3 * b5 * c1 * c2 * d3 + 16 * a4 * b3 * b5 * c1 * c3 * d2 + 16 * a4 * b3 * b5 * c2 * c3 * d1 +
            16 * a4 * b4 * b5 * c0 * c5 * d0 + 12 * a5 * b0 * b3 * c0 * c5 * d5 - 12 * a5 * b0 * b5 * c0 * c3 * d5 +
            16 * a5 * b0 * b5 * c0 * c4 * d4 - 12 * a5 * b0 * b5 * c0 * c5 * d3 - 12 * a5 * b0 * b5 * c3 * c5 * d0 +
            16 * a5 * b1 * b3 * c2 * c3 * d4 + 16 * a5 * b1 * b3 * c2 * c4 * d3 + 16 * a5 * b1 * b3 * c3 * c4 * d2 -
            32 * a5 * b1 * b4 * c2 * c3 * d3 + 16 * a5 * b1 * b5 * c1 * c3 * d3 - 16 * a5 * b2 * b3 * c2 * c3 * d3 +
            16 * a5 * b3 * b4 * c1 * c2 * d3 + 16 * a5 * b3 * b4 * c1 * c3 * d2 + 16 * a5 * b3 * b4 * c2 * c3 * d1 -
            12 * a5 * b3 * b5 * c0 * c5 * d0 - 16 * a5 * b3 * b5 * c1 * c3 * d1 - 16 * a5 * b4 * b5 * c0 * c4 * d0 -
            16 * b1 * b2 * b3 * c3 * c4 * c5 + 16 * b1 * b3 * b5 * c2 * c3 * c4 - 16 * b2 * b3 * b4 * c1 * c3 * c5 +
            16 * b3 * b4 * b5 * c1 * c2 * c3 + 16 * a0 * a3 * b3 * c4 * d4 * d5 - 12 * a0 * a3 * b3 * c5 * d3 * d5 +
            12 * a0 * a3 * b5 * c3 * d3 * d5 - 16 * a0 * a3 * b5 * c4 * d3 * d4 - 16 * a0 * a4 * b4 * c3 * d3 * d5 +
            16 * a0 * a4 * b5 * c3 * d3 * d4 + 12 * a0 * a5 * b3 * c3 * d3 * d5 - 16 * a0 * a5 * b3 * c4 * d3 * d4 +
            16 * a0 * a5 * b4 * c3 * d3 * d4 - 16 * a0 * b3 * b5 * c3 * c4 * d4 + 12 * a0 * b3 * b5 * c3 * c5 * d3 +
            16 * a0 * b4 * b5 * c3 * c4 * d3 - 16 * a3 * a4 * b3 * c0 * d4 * d5 - 16 * a3 * a4 * b3 * c4 * d0 * d5 -
            16 * a3 * a4 * b3 * c5 * d0 * d4 + 16 * a3 * a4 * b4 * c0 * d3 * d5 + 16 * a3 * a4 * b4 * c3 * d0 * d5 +
            16 * a3 * a4 * b4 * c5 * d0 * d3 + 12 * a3 * a5 * b0 * c3 * d3 * d5 - 16 * a3 * a5 * b0 * c4 * d3 * d4 -
            12 * a3 * a5 * b3 * c0 * d3 * d5 - 12 * a3 * a5 * b3 * c3 * d0 * d5 + 16 * a3 * a5 * b3 * c4 * d0 * d4 -
            12 * a3 * a5 * b3 * c5 * d0 * d3 + 12 * a3 * a5 * b5 * c3 * d0 * d3 - 12 * a3 * b0 * b3 * c3 * c5 * d5 +
            16 * a3 * b0 * b3 * c4 * c5 * d4 - 16 * a3 * b0 * b5 * c3 * c4 * d4 + 12 * a3 * b0 * b5 * c3 * c5 * d3 -
            16 * a3 * b3 * b4 * c0 * c4 * d5 - 16 * a3 * b3 * b4 * c0 * c5 * d4 - 16 * a3 * b3 * b4 * c4 * c5 * d0 -
            12 * a3 * b3 * b5 * c0 * c3 * d5 + 16 * a3 * b3 * b5 * c0 * c4 * d4 - 12 * a3 * b3 * b5 * c0 * c5 * d3 -
            12 * a3 * b3 * b5 * c3 * c5 * d0 + 16 * a4 * a5 * b0 * c3 * d3 * d4 - 16 * a4 * a5 * b4 * c3 * d0 * d3 -
            16 * a4 * b0 * b4 * c3 * c5 * d3 + 16 * a4 * b0 * b5 * c3 * c4 * d3 + 16 * a4 * b3 * b4 * c0 * c3 * d5 +
            16 * a4 * b3 * b4 * c0 * c5 * d3 + 16 * a4 * b3 * b4 * c3 * c5 * d0 - 16 * a4 * b4 * b5 * c0 * c3 * d3 -
            16 * a5 * b0 * b3 * c3 * c4 * d4 + 12 * a5 * b0 * b3 * c3 * c5 * d3 + 16 * a5 * b0 * b4 * c3 * c4 * d3 +
            12 * a5 * b3 * b5 * c0 * c3 * d3 + 16 * a1 * a2 * a5 * d3 * d4 * d5 - 32 * a1 * a2 * b4 * c5 * d3 * d5 +
            16 * a1 * a2 * b5 * c3 * d4 * d5 + 16 * a1 * a2 * b5 * c4 * d3 * d5 + 16 * a1 * a2 * b5 * c5 * d3 * d4 +
            16 * a1 * a3 * b5 * c5 * d1 * d5 + 16 * a1 * a4 * a5 * d2 * d3 * d5 + 64 * a1 * a4 * b1 * c5 * d4 * d5 -
            32 * a1 * a4 * b2 * c5 * d3 * d5 - 64 * a1 * a4 * b4 * c5 * d1 * d5 + 16 * a1 * a4 * b5 * c2 * d3 * d5 +
            16 * a1 * a4 * b5 * c3 * d2 * d5 + 16 * a1 * a4 * b5 * c5 * d2 * d3 - 64 * a1 * a5 * b1 * c4 * d4 * d5 +
            16 * a1 * a5 * b1 * c5 * d3 * d5 + 16 * a1 * a5 * b2 * c3 * d4 * d5 + 16 * a1 * a5 * b2 * c4 * d3 * d5 +
            16 * a1 * a5 * b2 * c5 * d3 * d4 + 16 * a1 * a5 * b3 * c5 * d1 * d5 + 16 * a1 * a5 * b4 * c2 * d3 * d5 +
            16 * a1 * a5 * b4 * c3 * d2 * d5 + 16 * a1 * a5 * b4 * c5 * d2 * d3 - 16 * a1 * a5 * b5 * c1 * d3 * d5 -
            32 * a1 * a5 * b5 * c2 * d3 * d4 - 16 * a1 * a5 * b5 * c3 * d1 * d5 - 32 * a1 * a5 * b5 * c3 * d2 * d4 +
            64 * a1 * a5 * b5 * c4 * d1 * d4 - 32 * a1 * a5 * b5 * c4 * d2 * d3 - 16 * a1 * a5 * b5 * c5 * d1 * d3 +
            64 * a1 * b1 * b4 * c4 * c5 * d5 + 16 * a1 * b1 * b5 * c3 * c5 * d5 - 64 * a1 * b1 * b5 * c4 * c5 * d4 -
            32 * a1 * b2 * b4 * c3 * c5 * d5 + 16 * a1 * b2 * b5 * c3 * c4 * d5 + 16 * a1 * b2 * b5 * c3 * c5 * d4 +
            16 * a1 * b2 * b5 * c4 * c5 * d3 + 16 * a1 * b3 * b5 * c1 * c5 * d5 + 16 * a1 * b4 * b5 * c2 * c3 * d5 +
            16 * a1 * b4 * b5 * c2 * c5 * d3 + 16 * a1 * b4 * b5 * c3 * c5 * d2 - 16 * a2 * a3 * a5 * d1 * d4 * d5 +
            16 * a2 * a3 * b2 * c5 * d3 * d5 - 16 * a2 * a3 * b3 * c5 * d2 * d5 + 32 * a2 * a3 * b4 * c5 * d1 * d5 -
            16 * a2 * a3 * b5 * c1 * d4 * d5 - 16 * a2 * a3 * b5 * c4 * d1 * d5 - 16 * a2 * a3 * b5 * c5 * d1 * d4 -
            32 * a2 * a4 * b1 * c5 * d3 * d5 + 32 * a2 * a4 * b3 * c5 * d1 * d5 + 16 * a2 * a5 * b1 * c3 * d4 * d5 +
            16 * a2 * a5 * b1 * c4 * d3 * d5 + 16 * a2 * a5 * b1 * c5 * d3 * d4 - 16 * a2 * a5 * b2 * c3 * d3 * d5 -
            16 * a2 * a5 * b3 * c1 * d4 * d5 - 16 * a2 * a5 * b3 * c4 * d1 * d5 - 16 * a2 * a5 * b3 * c5 * d1 * d4 +
            16 * a2 * a5 * b5 * c3 * d2 * d3 - 32 * a2 * b1 * b4 * c3 * c5 * d5 + 16 * a2 * b1 * b5 * c3 * c4 * d5 +
            16 * a2 * b1 * b5 * c3 * c5 * d4 + 16 * a2 * b1 * b5 * c4 * c5 * d3 + 16 * a2 * b2 * b3 * c3 * c5 * d5 -
            16 * a2 * b2 * b5 * c3 * c5 * d3 + 32 * a2 * b3 * b4 * c1 * c5 * d5 - 16 * a2 * b3 * b5 * c1 * c4 * d5 -
            16 * a2 * b3 * b5 * c1 * c5 * d4 - 16 * a2 * b3 * b5 * c4 * c5 * d1 - 16 * a3 * a4 * a5 * d1 * d2 * d5 +
            32 * a3 * a4 * b2 * c5 * d1 * d5 - 16 * a3 * a4 * b5 * c1 * d2 * d5 - 16 * a3 * a4 * b5 * c2 * d1 * d5 -
            16 * a3 * a4 * b5 * c5 * d1 * d2 + 16 * a3 * a5 * b1 * c5 * d1 * d5 - 16 * a3 * a5 * b2 * c1 * d4 * d5 -
            16 * a3 * a5 * b2 * c4 * d1 * d5 - 16 * a3 * a5 * b2 * c5 * d1 * d4 + 16 * a3 * a5 * b3 * c2 * d2 * d5 -
            16 * a3 * a5 * b4 * c1 * d2 * d5 - 16 * a3 * a5 * b4 * c2 * d1 * d5 - 16 * a3 * a5 * b4 * c5 * d1 * d2 -
            16 * a3 * a5 * b5 * c1 * d1 * d5 + 32 * a3 * a5 * b5 * c1 * d2 * d4 + 32 * a3 * a5 * b5 * c2 * d1 * d4 -
            16 * a3 * a5 * b5 * c2 * d2 * d3 + 32 * a3 * a5 * b5 * c4 * d1 * d2 + 16 * a3 * b1 * b5 * c1 * c5 * d5 -
            16 * a3 * b2 * b3 * c2 * c5 * d5 + 32 * a3 * b2 * b4 * c1 * c5 * d5 - 16 * a3 * b2 * b5 * c1 * c4 * d5 -
            16 * a3 * b2 * b5 * c1 * c5 * d4 - 16 * a3 * b2 * b5 * c4 * c5 * d1 + 16 * a3 * b3 * b5 * c2 * c5 * d2 -
            16 * a3 * b4 * b5 * c1 * c2 * d5 - 16 * a3 * b4 * b5 * c1 * c5 * d2 - 16 * a3 * b4 * b5 * c2 * c5 * d1 +
            16 * a4 * a5 * b1 * c2 * d3 * d5 + 16 * a4 * a5 * b1 * c3 * d2 * d5 + 16 * a4 * a5 * b1 * c5 * d2 * d3 -
            16 * a4 * a5 * b3 * c1 * d2 * d5 - 16 * a4 * a5 * b3 * c2 * d1 * d5 - 16 * a4 * a5 * b3 * c5 * d1 * d2 +
            64 * a4 * a5 * b4 * c1 * d1 * d5 - 64 * a4 * a5 * b5 * c1 * d1 * d4 - 32 * a4 * b1 * b2 * c3 * c5 * d5 -
            64 * a4 * b1 * b4 * c1 * c5 * d5 + 16 * a4 * b1 * b5 * c2 * c3 * d5 + 16 * a4 * b1 * b5 * c2 * c5 * d3 +
            16 * a4 * b1 * b5 * c3 * c5 * d2 + 32 * a4 * b2 * b3 * c1 * c5 * d5 - 16 * a4 * b3 * b5 * c1 * c2 * d5 -
            16 * a4 * b3 * b5 * c1 * c5 * d2 - 16 * a4 * b3 * b5 * c2 * c5 * d1 + 64 * a4 * b4 * b5 * c1 * c5 * d1 +
            16 * a5 * b1 * b2 * c3 * c4 * d5 + 16 * a5 * b1 * b2 * c3 * c5 * d4 + 16 * a5 * b1 * b2 * c4 * c5 * d3 +
            16 * a5 * b1 * b3 * c1 * c5 * d5 + 16 * a5 * b1 * b4 * c2 * c3 * d5 + 16 * a5 * b1 * b4 * c2 * c5 * d3 +
            16 * a5 * b1 * b4 * c3 * c5 * d2 - 16 * a5 * b1 * b5 * c1 * c3 * d5 + 64 * a5 * b1 * b5 * c1 * c4 * d4 -
            16 * a5 * b1 * b5 * c1 * c5 * d3 - 32 * a5 * b1 * b5 * c2 * c3 * d4 - 32 * a5 * b1 * b5 * c2 * c4 * d3 -
            32 * a5 * b1 * b5 * c3 * c4 * d2 - 16 * a5 * b1 * b5 * c3 * c5 * d1 - 16 * a5 * b2 * b3 * c1 * c4 * d5 -
            16 * a5 * b2 * b3 * c1 * c5 * d4 - 16 * a5 * b2 * b3 * c4 * c5 * d1 + 16 * a5 * b2 * b5 * c2 * c3 * d3 -
            16 * a5 * b3 * b4 * c1 * c2 * d5 - 16 * a5 * b3 * b4 * c1 * c5 * d2 - 16 * a5 * b3 * b4 * c2 * c5 * d1 +
            32 * a5 * b3 * b5 * c1 * c2 * d4 + 32 * a5 * b3 * b5 * c1 * c4 * d2 - 16 * a5 * b3 * b5 * c1 * c5 * d1 -
            16 * a5 * b3 * b5 * c2 * c3 * d2 + 32 * a5 * b3 * b5 * c2 * c4 * d1 - 64 * a5 * b4 * b5 * c1 * c4 * d1 +
            16 * b1 * b2 * b5 * c3 * c4 * c5 + 16 * b1 * b4 * b5 * c2 * c3 * c5 - 16 * b2 * b3 * b5 * c1 * c4 * c5 -
            16 * b3 * b4 * b5 * c1 * c2 * c5 - 16 * a0 * a3 * b4 * c5 * d4 * d5 + 16 * a0 * a3 * b5 * c4 * d4 * d5 -
            12 * a0 * a3 * b5 * c5 * d3 * d5 - 16 * a0 * a4 * b3 * c5 * d4 * d5 + 16 * a0 * a4 * b4 * c5 * d3 * d5 +
            16 * a0 * a5 * b3 * c4 * d4 * d5 - 12 * a0 * a5 * b3 * c5 * d3 * d5 + 12 * a0 * a5 * b5 * c3 * d3 * d5 -
            16 * a0 * a5 * b5 * c4 * d3 * d4 - 16 * a0 * b3 * b4 * c4 * c5 * d5 - 12 * a0 * b3 * b5 * c3 * c5 * d5 +
            16 * a0 * b3 * b5 * c4 * c5 * d4 - 16 * a3 * a4 * b0 * c5 * d4 * d5 + 16 * a3 * a4 * b4 * c5 * d0 * d5 +
            16 * a3 * a5 * b0 * c4 * d4 * d5 - 12 * a3 * a5 * b0 * c5 * d3 * d5 - 12 * a3 * a5 * b3 * c5 * d0 * d5 +
            12 * a3 * a5 * b5 * c0 * d3 * d5 + 12 * a3 * a5 * b5 * c3 * d0 * d5 - 16 * a3 * a5 * b5 * c4 * d0 * d4 +
            12 * a3 * a5 * b5 * c5 * d0 * d3 - 16 * a3 * b0 * b4 * c4 * c5 * d5 - 12 * a3 * b0 * b5 * c3 * c5 * d5 +
            16 * a3 * b0 * b5 * c4 * c5 * d4 - 12 * a3 * b3 * b5 * c0 * c5 * d5 - 16 * a4 * a5 * b4 * c0 * d3 * d5 -
            16 * a4 * a5 * b4 * c3 * d0 * d5 - 16 * a4 * a5 * b4 * c5 * d0 * d3 + 16 * a4 * a5 * b5 * c0 * d3 * d4 +
            16 * a4 * a5 * b5 * c3 * d0 * d4 + 16 * a4 * a5 * b5 * c4 * d0 * d3 - 16 * a4 * b0 * b3 * c4 * c5 * d5 +
            16 * a4 * b0 * b4 * c3 * c5 * d5 + 16 * a4 * b3 * b4 * c0 * c5 * d5 - 16 * a4 * b4 * b5 * c0 * c3 * d5 -
            16 * a4 * b4 * b5 * c0 * c5 * d3 - 16 * a4 * b4 * b5 * c3 * c5 * d0 - 12 * a5 * b0 * b3 * c3 * c5 * d5 +
            16 * a5 * b0 * b3 * c4 * c5 * d4 - 16 * a5 * b0 * b5 * c3 * c4 * d4 + 12 * a5 * b0 * b5 * c3 * c5 * d3 +
            12 * a5 * b3 * b5 * c0 * c3 * d5 - 16 * a5 * b3 * b5 * c0 * c4 * d4 + 12 * a5 * b3 * b5 * c0 * c5 * d3 +
            12 * a5 * b3 * b5 * c3 * c5 * d0 + 16 * a5 * b4 * b5 * c0 * c3 * d4 + 16 * a5 * b4 * b5 * c0 * c4 * d3 +
            16 * a5 * b4 * b5 * c3 * c4 * d0 + 16 * a3 * a4 * b3 * c5 * d4 * d5 - 16 * a3 * a4 * b4 * c5 * d3 * d5 -
            16 * a3 * a5 * b3 * c4 * d4 * d5 + 12 * a3 * a5 * b3 * c5 * d3 * d5 - 12 * a3 * a5 * b5 * c3 * d3 * d5 +
            16 * a3 * a5 * b5 * c4 * d3 * d4 + 16 * a3 * b3 * b4 * c4 * c5 * d5 + 12 * a3 * b3 * b5 * c3 * c5 * d5 -
            16 * a3 * b3 * b5 * c4 * c5 * d4 + 16 * a4 * a5 * b4 * c3 * d3 * d5 - 16 * a4 * a5 * b5 * c3 * d3 * d4 -
            16 * a4 * b3 * b4 * c3 * c5 * d5 + 16 * a4 * b4 * b5 * c3 * c5 * d3 + 16 * a5 * b3 * b5 * c3 * c4 * d4 -
            12 * a5 * b3 * b5 * c3 * c5 * d3 - 16 * a5 * b4 * b5 * c3 * c4 * d3,
        3 * pow(a0, 2) * b0 * pow(d5, 3) - 3 * pow(a0, 2) * b0 * pow(d3, 3) - 4 * pow(a2, 2) * b0 * pow(d3, 3) +
            4 * pow(a1, 2) * b0 * pow(d5, 3) + 3 * pow(a3, 2) * b3 * pow(d0, 3) + 4 * pow(a4, 2) * b3 * pow(d0, 3) -
            3 * pow(a0, 2) * b3 * pow(d5, 3) + 3 * pow(a0, 2) * b5 * pow(d3, 3) + 3 * pow(a3, 2) * b0 * pow(d5, 3) -
            3 * pow(a3, 2) * b5 * pow(d0, 3) - 3 * pow(a5, 2) * b0 * pow(d3, 3) + 3 * pow(a5, 2) * b3 * pow(d0, 3) -
            4 * pow(a1, 2) * b3 * pow(d5, 3) - 4 * pow(a4, 2) * b5 * pow(d0, 3) + 4 * pow(a2, 2) * b5 * pow(d3, 3) -
            3 * pow(a5, 2) * b5 * pow(d0, 3) - 3 * pow(a3, 2) * b3 * pow(d5, 3) + 3 * pow(a5, 2) * b5 * pow(d3, 3) +
            3 * pow(b3, 3) * pow(c0, 2) * d0 + 4 * pow(b3, 3) * pow(c2, 2) * d0 - 3 * pow(b5, 3) * pow(c0, 2) * d0 -
            3 * pow(b0, 3) * pow(c3, 2) * d3 - 4 * pow(b5, 3) * pow(c1, 2) * d0 - 4 * pow(b0, 3) * pow(c4, 2) * d3 +
            3 * pow(b0, 3) * pow(c3, 2) * d5 - 3 * pow(b0, 3) * pow(c5, 2) * d3 - 3 * pow(b3, 3) * pow(c0, 2) * d5 +
            3 * pow(b3, 3) * pow(c5, 2) * d0 + 3 * pow(b5, 3) * pow(c0, 2) * d3 - 3 * pow(b5, 3) * pow(c3, 2) * d0 +
            4 * pow(b0, 3) * pow(c4, 2) * d5 + 4 * pow(b5, 3) * pow(c1, 2) * d3 + 3 * pow(b0, 3) * pow(c5, 2) * d5 -
            4 * pow(b3, 3) * pow(c2, 2) * d5 + 3 * pow(b5, 3) * pow(c3, 2) * d3 - 3 * pow(b3, 3) * pow(c5, 2) * d5 +
            8 * a0 * a1 * b1 * pow(d5, 3) - 8 * a0 * a2 * b2 * pow(d3, 3) - 6 * a0 * a3 * b0 * pow(d5, 3) +
            6 * a0 * a5 * b0 * pow(d3, 3) - 8 * a1 * a3 * b1 * pow(d5, 3) + 6 * a0 * a3 * b3 * pow(d5, 3) +
            8 * a3 * a4 * b4 * pow(d0, 3) - 6 * a3 * a5 * b3 * pow(d0, 3) + 8 * a2 * a5 * b2 * pow(d3, 3) -
            6 * a0 * a5 * b5 * pow(d3, 3) + 6 * a3 * a5 * b5 * pow(d0, 3) - 8 * a4 * a5 * b4 * pow(d0, 3) +
            8 * pow(b3, 3) * c0 * c2 * d2 - 8 * pow(b5, 3) * c0 * c1 * d1 - 6 * pow(b3, 3) * c0 * c5 * d0 +
            6 * pow(b5, 3) * c0 * c3 * d0 + 8 * pow(b5, 3) * c1 * c3 * d1 - 8 * pow(b0, 3) * c3 * c4 * d4 +
            6 * pow(b0, 3) * c3 * c5 * d3 - 6 * pow(b5, 3) * c0 * c3 * d3 - 8 * pow(b3, 3) * c2 * c5 * d2 -
            6 * pow(b0, 3) * c3 * c5 * d5 + 8 * pow(b0, 3) * c4 * c5 * d4 + 6 * pow(b3, 3) * c0 * c5 * d5 -
            4 * a0 * pow(b1, 2) * c0 * pow(d3, 2) + 4 * a0 * pow(b3, 2) * c0 * pow(d1, 2) -
            16 * a0 * pow(b1, 2) * c0 * pow(d4, 2) + 4 * a0 * pow(b2, 2) * c0 * pow(d3, 2) -
            4 * a0 * pow(b3, 2) * c0 * pow(d2, 2) + 16 * a0 * pow(b4, 2) * c0 * pow(d1, 2) +
            4 * a1 * pow(b0, 2) * c1 * pow(d3, 2) - 4 * a1 * pow(b3, 2) * c1 * pow(d0, 2) -
            9 * a0 * pow(b0, 2) * c3 * pow(d3, 2) - 4 * a0 * pow(b1, 2) * c0 * pow(d5, 2) +
            16 * a0 * pow(b2, 2) * c0 * pow(d4, 2) - 3 * a0 * pow(b3, 2) * c3 * pow(d0, 2) -
            16 * a0 * pow(b4, 2) * c0 * pow(d2, 2) + 4 * a0 * pow(b5, 2) * c0 * pow(d1, 2) +
            16 * a1 * pow(b0, 2) * c1 * pow(d4, 2) - 16 * a1 * pow(b4, 2) * c1 * pow(d0, 2) +
            3 * a3 * pow(b0, 2) * c0 * pow(d3, 2) + 9 * a3 * pow(b3, 2) * c0 * pow(d0, 2) -
            12 * a0 * pow(b0, 2) * c3 * pow(d4, 2) + 4 * a0 * pow(b2, 2) * c0 * pow(d5, 2) -
            4 * a0 * pow(b3, 2) * c0 * pow(d4, 2) + 4 * a0 * pow(b4, 2) * c0 * pow(d3, 2) -
            4 * a0 * pow(b4, 2) * c3 * pow(d0, 2) - 4 * a0 * pow(b5, 2) * c0 * pow(d2, 2) +
            4 * a1 * pow(b0, 2) * c1 * pow(d5, 2) + 16 * a1 * pow(b2, 2) * c1 * pow(d3, 2) -
            16 * a1 * pow(b3, 2) * c1 * pow(d2, 2) - 4 * a1 * pow(b5, 2) * c1 * pow(d0, 2) -
            4 * a2 * pow(b0, 2) * c2 * pow(d3, 2) + 4 * a2 * pow(b3, 2) * c2 * pow(d0, 2) +
            4 * a3 * pow(b0, 2) * c0 * pow(d4, 2) - 4 * a3 * pow(b0, 2) * c3 * pow(d1, 2) +
            4 * a3 * pow(b1, 2) * c3 * pow(d0, 2) + 12 * a3 * pow(b4, 2) * c0 * pow(d0, 2) -
            9 * a0 * pow(b0, 2) * c3 * pow(d5, 2) + 9 * a0 * pow(b0, 2) * c5 * pow(d3, 2) -
            12 * a0 * pow(b2, 2) * c3 * pow(d3, 2) - 6 * a0 * pow(b3, 2) * c0 * pow(d5, 2) -
            4 * a0 * pow(b3, 2) * c3 * pow(d2, 2) + 3 * a0 * pow(b3, 2) * c5 * pow(d0, 2) +
            6 * a0 * pow(b5, 2) * c0 * pow(d3, 2) - 3 * a0 * pow(b5, 2) * c3 * pow(d0, 2) +
            64 * a1 * pow(b2, 2) * c1 * pow(d4, 2) - 64 * a1 * pow(b4, 2) * c1 * pow(d2, 2) -
            16 * a2 * pow(b0, 2) * c2 * pow(d4, 2) - 16 * a2 * pow(b1, 2) * c2 * pow(d3, 2) +
            16 * a2 * pow(b3, 2) * c2 * pow(d1, 2) + 16 * a2 * pow(b4, 2) * c2 * pow(d0, 2) +
            3 * a3 * pow(b0, 2) * c0 * pow(d5, 2) + 4 * a3 * pow(b0, 2) * c3 * pow(d2, 2) +
            4 * a3 * pow(b2, 2) * c0 * pow(d3, 2) - 4 * a3 * pow(b2, 2) * c3 * pow(d0, 2) +
            12 * a3 * pow(b3, 2) * c0 * pow(d2, 2) + 9 * a3 * pow(b5, 2) * c0 * pow(d0, 2) -
            3 * a5 * pow(b0, 2) * c0 * pow(d3, 2) - 9 * a5 * pow(b3, 2) * c0 * pow(d0, 2) +
            12 * a0 * pow(b0, 2) * c5 * pow(d4, 2) - 8 * a0 * pow(b1, 2) * c3 * pow(d5, 2) +
            4 * a0 * pow(b1, 2) * c5 * pow(d3, 2) - 16 * a0 * pow(b2, 2) * c3 * pow(d4, 2) -
            4 * a0 * pow(b3, 2) * c5 * pow(d1, 2) - 4 * a0 * pow(b4, 2) * c0 * pow(d5, 2) +
            16 * a0 * pow(b4, 2) * c3 * pow(d2, 2) + 4 * a0 * pow(b4, 2) * c5 * pow(d0, 2) +
            4 * a0 * pow(b5, 2) * c0 * pow(d4, 2) - 8 * a0 * pow(b5, 2) * c3 * pow(d1, 2) +
            16 * a1 * pow(b2, 2) * c1 * pow(d5, 2) - 16 * a1 * pow(b5, 2) * c1 * pow(d2, 2) -
            4 * a2 * pow(b0, 2) * c2 * pow(d5, 2) - 64 * a2 * pow(b1, 2) * c2 * pow(d4, 2) +
            64 * a2 * pow(b4, 2) * c2 * pow(d1, 2) + 4 * a2 * pow(b5, 2) * c2 * pow(d0, 2) +
            4 * a3 * pow(b0, 2) * c5 * pow(d1, 2) + 8 * a3 * pow(b1, 2) * c0 * pow(d5, 2) +
            16 * a3 * pow(b1, 2) * c3 * pow(d2, 2) - 4 * a3 * pow(b1, 2) * c5 * pow(d0, 2) -
            16 * a3 * pow(b2, 2) * c0 * pow(d4, 2) - 16 * a3 * pow(b2, 2) * c3 * pow(d1, 2) +
            16 * a3 * pow(b4, 2) * c0 * pow(d2, 2) + 8 * a3 * pow(b5, 2) * c0 * pow(d1, 2) -
            16 * a4 * pow(b0, 2) * c4 * pow(d1, 2) + 16 * a4 * pow(b1, 2) * c4 * pow(d0, 2) -
            4 * a5 * pow(b0, 2) * c0 * pow(d4, 2) + 4 * a5 * pow(b0, 2) * c3 * pow(d1, 2) +
            4 * a5 * pow(b1, 2) * c0 * pow(d3, 2) - 4 * a5 * pow(b1, 2) * c3 * pow(d0, 2) -
            4 * a5 * pow(b3, 2) * c0 * pow(d1, 2) - 12 * a5 * pow(b4, 2) * c0 * pow(d0, 2) +
            9 * a0 * pow(b0, 2) * c5 * pow(d5, 2) + 16 * a0 * pow(b1, 2) * c5 * pow(d4, 2) -
            4 * a0 * pow(b2, 2) * c3 * pow(d5, 2) + 8 * a0 * pow(b2, 2) * c5 * pow(d3, 2) +
            8 * a0 * pow(b3, 2) * c5 * pow(d2, 2) - 16 * a0 * pow(b4, 2) * c5 * pow(d1, 2) +
            4 * a0 * pow(b5, 2) * c3 * pow(d2, 2) + 3 * a0 * pow(b5, 2) * c5 * pow(d0, 2) -
            4 * a1 * pow(b3, 2) * c1 * pow(d5, 2) + 4 * a1 * pow(b5, 2) * c1 * pow(d3, 2) -
            16 * a2 * pow(b1, 2) * c2 * pow(d5, 2) + 16 * a2 * pow(b5, 2) * c2 * pow(d1, 2) +
            4 * a3 * pow(b0, 2) * c3 * pow(d4, 2) - 4 * a3 * pow(b0, 2) * c5 * pow(d2, 2) -
            4 * a3 * pow(b2, 2) * c0 * pow(d5, 2) + 4 * a3 * pow(b2, 2) * c5 * pow(d0, 2) -
            4 * a3 * pow(b4, 2) * c3 * pow(d0, 2) + 4 * a3 * pow(b5, 2) * c0 * pow(d2, 2) +
            16 * a4 * pow(b0, 2) * c4 * pow(d2, 2) - 16 * a4 * pow(b2, 2) * c4 * pow(d0, 2) -
            3 * a5 * pow(b0, 2) * c0 * pow(d5, 2) - 4 * a5 * pow(b0, 2) * c3 * pow(d2, 2) +
            16 * a5 * pow(b1, 2) * c0 * pow(d4, 2) - 8 * a5 * pow(b2, 2) * c0 * pow(d3, 2) +
            4 * a5 * pow(b2, 2) * c3 * pow(d0, 2) - 8 * a5 * pow(b3, 2) * c0 * pow(d2, 2) -
            16 * a5 * pow(b4, 2) * c0 * pow(d1, 2) - 9 * a5 * pow(b5, 2) * c0 * pow(d0, 2) +
            12 * a0 * pow(b1, 2) * c5 * pow(d5, 2) - 3 * a0 * pow(b3, 2) * c3 * pow(d5, 2) -
            9 * a0 * pow(b5, 2) * c3 * pow(d3, 2) + 4 * a0 * pow(b5, 2) * c5 * pow(d1, 2) -
            16 * a1 * pow(b4, 2) * c1 * pow(d5, 2) + 16 * a1 * pow(b5, 2) * c1 * pow(d4, 2) -
            16 * a2 * pow(b3, 2) * c2 * pow(d4, 2) + 16 * a2 * pow(b4, 2) * c2 * pow(d3, 2) +
            6 * a3 * pow(b0, 2) * c3 * pow(d5, 2) - 3 * a3 * pow(b0, 2) * c5 * pow(d3, 2) -
            16 * a3 * pow(b1, 2) * c5 * pow(d2, 2) + 16 * a3 * pow(b2, 2) * c5 * pow(d1, 2) +
            9 * a3 * pow(b3, 2) * c0 * pow(d5, 2) - 9 * a3 * pow(b3, 2) * c5 * pow(d0, 2) +
            3 * a3 * pow(b5, 2) * c0 * pow(d3, 2) - 6 * a3 * pow(b5, 2) * c3 * pow(d0, 2) -
            4 * a4 * pow(b0, 2) * c4 * pow(d3, 2) + 64 * a4 * pow(b1, 2) * c4 * pow(d2, 2) -
            64 * a4 * pow(b2, 2) * c4 * pow(d1, 2) + 4 * a4 * pow(b3, 2) * c4 * pow(d0, 2) +
            9 * a5 * pow(b0, 2) * c3 * pow(d3, 2) - 4 * a5 * pow(b0, 2) * c5 * pow(d1, 2) -
            4 * a5 * pow(b1, 2) * c0 * pow(d5, 2) - 16 * a5 * pow(b1, 2) * c3 * pow(d2, 2) +
            4 * a5 * pow(b1, 2) * c5 * pow(d0, 2) + 16 * a5 * pow(b2, 2) * c3 * pow(d1, 2) +
            3 * a5 * pow(b3, 2) * c3 * pow(d0, 2) - 12 * a5 * pow(b5, 2) * c0 * pow(d1, 2) +
            4 * a0 * pow(b3, 2) * c5 * pow(d4, 2) + 4 * a0 * pow(b4, 2) * c3 * pow(d5, 2) -
            4 * a0 * pow(b4, 2) * c5 * pow(d3, 2) - 4 * a0 * pow(b5, 2) * c3 * pow(d4, 2) -
            4 * a2 * pow(b3, 2) * c2 * pow(d5, 2) + 4 * a2 * pow(b5, 2) * c2 * pow(d3, 2) -
            8 * a3 * pow(b0, 2) * c5 * pow(d4, 2) + 4 * a3 * pow(b1, 2) * c3 * pow(d5, 2) +
            16 * a3 * pow(b2, 2) * c3 * pow(d4, 2) + 4 * a3 * pow(b4, 2) * c0 * pow(d5, 2) -
            16 * a3 * pow(b4, 2) * c3 * pow(d2, 2) - 8 * a3 * pow(b4, 2) * c5 * pow(d0, 2) -
            4 * a3 * pow(b5, 2) * c0 * pow(d4, 2) - 4 * a3 * pow(b5, 2) * c3 * pow(d1, 2) +
            8 * a5 * pow(b0, 2) * c3 * pow(d4, 2) + 4 * a5 * pow(b0, 2) * c5 * pow(d2, 2) -
            4 * a5 * pow(b2, 2) * c5 * pow(d0, 2) + 4 * a5 * pow(b3, 2) * c0 * pow(d4, 2) -
            4 * a5 * pow(b4, 2) * c0 * pow(d3, 2) + 8 * a5 * pow(b4, 2) * c3 * pow(d0, 2) +
            9 * a0 * pow(b3, 2) * c5 * pow(d5, 2) + 3 * a0 * pow(b5, 2) * c5 * pow(d3, 2) -
            9 * a3 * pow(b0, 2) * c5 * pow(d5, 2) + 4 * a3 * pow(b2, 2) * c3 * pow(d5, 2) -
            4 * a3 * pow(b2, 2) * c5 * pow(d3, 2) - 12 * a3 * pow(b3, 2) * c5 * pow(d2, 2) -
            4 * a3 * pow(b5, 2) * c3 * pow(d2, 2) - 3 * a3 * pow(b5, 2) * c5 * pow(d0, 2) +
            4 * a4 * pow(b0, 2) * c4 * pow(d5, 2) - 16 * a4 * pow(b2, 2) * c4 * pow(d3, 2) +
            16 * a4 * pow(b3, 2) * c4 * pow(d2, 2) - 4 * a4 * pow(b5, 2) * c4 * pow(d0, 2) +
            3 * a5 * pow(b0, 2) * c3 * pow(d5, 2) - 6 * a5 * pow(b0, 2) * c5 * pow(d3, 2) +
            16 * a5 * pow(b1, 2) * c5 * pow(d2, 2) + 12 * a5 * pow(b2, 2) * c3 * pow(d3, 2) -
            16 * a5 * pow(b2, 2) * c5 * pow(d1, 2) - 3 * a5 * pow(b3, 2) * c0 * pow(d5, 2) +
            4 * a5 * pow(b3, 2) * c3 * pow(d2, 2) + 6 * a5 * pow(b3, 2) * c5 * pow(d0, 2) -
            9 * a5 * pow(b5, 2) * c0 * pow(d3, 2) + 9 * a5 * pow(b5, 2) * c3 * pow(d0, 2) -
            12 * a3 * pow(b1, 2) * c5 * pow(d5, 2) - 4 * a3 * pow(b5, 2) * c5 * pow(d1, 2) +
            16 * a4 * pow(b1, 2) * c4 * pow(d5, 2) - 16 * a4 * pow(b5, 2) * c4 * pow(d1, 2) -
            4 * a5 * pow(b0, 2) * c5 * pow(d4, 2) + 4 * a5 * pow(b1, 2) * c3 * pow(d5, 2) -
            4 * a5 * pow(b1, 2) * c5 * pow(d3, 2) + 4 * a5 * pow(b3, 2) * c5 * pow(d1, 2) +
            4 * a5 * pow(b4, 2) * c5 * pow(d0, 2) + 12 * a5 * pow(b5, 2) * c3 * pow(d1, 2) -
            4 * a3 * pow(b4, 2) * c3 * pow(d5, 2) + 4 * a3 * pow(b5, 2) * c3 * pow(d4, 2) -
            16 * a5 * pow(b1, 2) * c5 * pow(d4, 2) - 4 * a5 * pow(b2, 2) * c5 * pow(d3, 2) +
            4 * a5 * pow(b3, 2) * c5 * pow(d2, 2) + 16 * a5 * pow(b4, 2) * c5 * pow(d1, 2) -
            9 * a3 * pow(b3, 2) * c5 * pow(d5, 2) - 3 * a3 * pow(b5, 2) * c5 * pow(d3, 2) +
            4 * a4 * pow(b3, 2) * c4 * pow(d5, 2) - 4 * a4 * pow(b5, 2) * c4 * pow(d3, 2) +
            3 * a5 * pow(b3, 2) * c3 * pow(d5, 2) + 9 * a5 * pow(b5, 2) * c3 * pow(d3, 2) -
            4 * a5 * pow(b3, 2) * c5 * pow(d4, 2) + 4 * a5 * pow(b4, 2) * c5 * pow(d3, 2) -
            4 * b0 * pow(b1, 2) * pow(c3, 2) * d0 + 4 * b0 * pow(b3, 2) * pow(c1, 2) * d0 -
            4 * pow(a1, 2) * b0 * d0 * pow(d3, 2) + 4 * pow(a3, 2) * b0 * d0 * pow(d1, 2) -
            16 * b0 * pow(b1, 2) * pow(c4, 2) * d0 + 4 * b0 * pow(b2, 2) * pow(c3, 2) * d0 -
            4 * b0 * pow(b3, 2) * pow(c2, 2) * d0 + 16 * b0 * pow(b4, 2) * pow(c1, 2) * d0 -
            4 * b1 * pow(b3, 2) * pow(c0, 2) * d1 + 4 * pow(a0, 2) * b1 * d1 * pow(d3, 2) -
            16 * pow(a1, 2) * b0 * d0 * pow(d4, 2) + 4 * pow(a2, 2) * b0 * d0 * pow(d3, 2) -
            4 * pow(a3, 2) * b0 * d0 * pow(d2, 2) - 4 * pow(a3, 2) * b1 * pow(d0, 2) * d1 +
            16 * pow(a4, 2) * b0 * d0 * pow(d1, 2) + 4 * pow(b0, 2) * b1 * pow(c3, 2) * d1 -
            4 * b0 * pow(b1, 2) * pow(c5, 2) * d0 + 16 * b0 * pow(b2, 2) * pow(c4, 2) * d0 -
            3 * b0 * pow(b3, 2) * pow(c0, 2) * d3 - 16 * b0 * pow(b4, 2) * pow(c2, 2) * d0 +
            4 * b0 * pow(b5, 2) * pow(c1, 2) * d0 - 16 * b1 * pow(b4, 2) * pow(c0, 2) * d1 +
            16 * pow(a0, 2) * b1 * d1 * pow(d4, 2) + 3 * pow(a0, 2) * b3 * d0 * pow(d3, 2) -
            4 * pow(a1, 2) * b0 * d0 * pow(d5, 2) + 16 * pow(a2, 2) * b0 * d0 * pow(d4, 2) -
            3 * pow(a3, 2) * b0 * pow(d0, 2) * d3 - 16 * pow(a4, 2) * b0 * d0 * pow(d2, 2) -
            16 * pow(a4, 2) * b1 * pow(d0, 2) * d1 + 4 * pow(a5, 2) * b0 * d0 * pow(d1, 2) +
            16 * pow(b0, 2) * b1 * pow(c4, 2) * d1 + 3 * pow(b0, 2) * b3 * pow(c3, 2) * d0 +
            4 * b0 * pow(b2, 2) * pow(c5, 2) * d0 - 4 * b0 * pow(b3, 2) * pow(c4, 2) * d0 -
            4 * b0 * pow(b4, 2) * pow(c0, 2) * d3 + 4 * b0 * pow(b4, 2) * pow(c3, 2) * d0 -
            4 * b0 * pow(b5, 2) * pow(c2, 2) * d0 + 16 * b1 * pow(b2, 2) * pow(c3, 2) * d1 -
            16 * b1 * pow(b3, 2) * pow(c2, 2) * d1 - 4 * b1 * pow(b5, 2) * pow(c0, 2) * d1 +
            4 * b2 * pow(b3, 2) * pow(c0, 2) * d2 + 12 * b3 * pow(b4, 2) * pow(c0, 2) * d0 -
            12 * pow(a0, 2) * b0 * d3 * pow(d4, 2) + 4 * pow(a0, 2) * b1 * d1 * pow(d5, 2) -
            4 * pow(a0, 2) * b2 * d2 * pow(d3, 2) + 4 * pow(a0, 2) * b3 * d0 * pow(d4, 2) -
            4 * pow(a0, 2) * b3 * pow(d1, 2) * d3 + 4 * pow(a1, 2) * b3 * pow(d0, 2) * d3 +
            4 * pow(a2, 2) * b0 * d0 * pow(d5, 2) + 16 * pow(a2, 2) * b1 * d1 * pow(d3, 2) -
            4 * pow(a3, 2) * b0 * d0 * pow(d4, 2) - 16 * pow(a3, 2) * b1 * d1 * pow(d2, 2) +
            4 * pow(a3, 2) * b2 * pow(d0, 2) * d2 + 4 * pow(a4, 2) * b0 * d0 * pow(d3, 2) -
            4 * pow(a4, 2) * b0 * pow(d0, 2) * d3 - 4 * pow(a5, 2) * b0 * d0 * pow(d2, 2) -
            4 * pow(a5, 2) * b1 * pow(d0, 2) * d1 + 4 * pow(b0, 2) * b1 * pow(c5, 2) * d1 -
            4 * pow(b0, 2) * b2 * pow(c3, 2) * d2 - 4 * pow(b0, 2) * b3 * pow(c1, 2) * d3 +
            4 * pow(b0, 2) * b3 * pow(c4, 2) * d0 + 4 * pow(b1, 2) * b3 * pow(c0, 2) * d3 -
            12 * b0 * pow(b2, 2) * pow(c3, 2) * d3 + 3 * b0 * pow(b3, 2) * pow(c0, 2) * d5 -
            4 * b0 * pow(b3, 2) * pow(c2, 2) * d3 - 6 * b0 * pow(b3, 2) * pow(c5, 2) * d0 -
            3 * b0 * pow(b5, 2) * pow(c0, 2) * d3 + 6 * b0 * pow(b5, 2) * pow(c3, 2) * d0 +
            64 * b1 * pow(b2, 2) * pow(c4, 2) * d1 - 64 * b1 * pow(b4, 2) * pow(c2, 2) * d1 +
            16 * b2 * pow(b3, 2) * pow(c1, 2) * d2 + 16 * b2 * pow(b4, 2) * pow(c0, 2) * d2 +
            9 * b3 * pow(b5, 2) * pow(c0, 2) * d0 - 9 * pow(a0, 2) * b0 * d3 * pow(d5, 2) +
            9 * pow(a0, 2) * b0 * pow(d3, 2) * d5 - 16 * pow(a0, 2) * b2 * d2 * pow(d4, 2) +
            3 * pow(a0, 2) * b3 * d0 * pow(d5, 2) + 4 * pow(a0, 2) * b3 * pow(d2, 2) * d3 -
            3 * pow(a0, 2) * b5 * d0 * pow(d3, 2) - 16 * pow(a1, 2) * b2 * d2 * pow(d3, 2) +
            64 * pow(a2, 2) * b1 * d1 * pow(d4, 2) + 4 * pow(a2, 2) * b3 * d0 * pow(d3, 2) -
            4 * pow(a2, 2) * b3 * pow(d0, 2) * d3 - 6 * pow(a3, 2) * b0 * d0 * pow(d5, 2) +
            3 * pow(a3, 2) * b0 * pow(d0, 2) * d5 - 4 * pow(a3, 2) * b0 * pow(d2, 2) * d3 +
            16 * pow(a3, 2) * b2 * pow(d1, 2) * d2 + 12 * pow(a3, 2) * b3 * d0 * pow(d2, 2) -
            64 * pow(a4, 2) * b1 * d1 * pow(d2, 2) + 16 * pow(a4, 2) * b2 * pow(d0, 2) * d2 +
            6 * pow(a5, 2) * b0 * d0 * pow(d3, 2) - 3 * pow(a5, 2) * b0 * pow(d0, 2) * d3 -
            16 * pow(b0, 2) * b2 * pow(c4, 2) * d2 + 4 * pow(b0, 2) * b3 * pow(c2, 2) * d3 +
            3 * pow(b0, 2) * b3 * pow(c5, 2) * d0 - 3 * pow(b0, 2) * b5 * pow(c3, 2) * d0 -
            16 * pow(b1, 2) * b2 * pow(c3, 2) * d2 - 4 * pow(b2, 2) * b3 * pow(c0, 2) * d3 +
            4 * pow(b2, 2) * b3 * pow(c3, 2) * d0 - 9 * pow(b3, 2) * b5 * pow(c0, 2) * d0 +
            4 * b0 * pow(b1, 2) * pow(c3, 2) * d5 - 8 * b0 * pow(b1, 2) * pow(c5, 2) * d3 -
            16 * b0 * pow(b2, 2) * pow(c4, 2) * d3 - 4 * b0 * pow(b3, 2) * pow(c1, 2) * d5 +
            4 * b0 * pow(b4, 2) * pow(c0, 2) * d5 + 16 * b0 * pow(b4, 2) * pow(c2, 2) * d3 -
            4 * b0 * pow(b4, 2) * pow(c5, 2) * d0 - 8 * b0 * pow(b5, 2) * pow(c1, 2) * d3 +
            4 * b0 * pow(b5, 2) * pow(c4, 2) * d0 + 16 * b1 * pow(b2, 2) * pow(c5, 2) * d1 -
            16 * b1 * pow(b5, 2) * pow(c2, 2) * d1 + 64 * b2 * pow(b4, 2) * pow(c1, 2) * d2 +
            4 * b2 * pow(b5, 2) * pow(c0, 2) * d2 + 16 * b3 * pow(b4, 2) * pow(c2, 2) * d0 +
            8 * b3 * pow(b5, 2) * pow(c1, 2) * d0 + 12 * pow(a0, 2) * b0 * pow(d4, 2) * d5 -
            4 * pow(a0, 2) * b2 * d2 * pow(d5, 2) + 4 * pow(a0, 2) * b3 * pow(d1, 2) * d5 -
            16 * pow(a0, 2) * b4 * pow(d1, 2) * d4 - 4 * pow(a0, 2) * b5 * d0 * pow(d4, 2) +
            4 * pow(a0, 2) * b5 * pow(d1, 2) * d3 - 8 * pow(a1, 2) * b0 * d3 * pow(d5, 2) +
            4 * pow(a1, 2) * b0 * pow(d3, 2) * d5 - 64 * pow(a1, 2) * b2 * d2 * pow(d4, 2) +
            8 * pow(a1, 2) * b3 * d0 * pow(d5, 2) - 4 * pow(a1, 2) * b3 * pow(d0, 2) * d5 +
            16 * pow(a1, 2) * b3 * pow(d2, 2) * d3 + 16 * pow(a1, 2) * b4 * pow(d0, 2) * d4 +
            4 * pow(a1, 2) * b5 * d0 * pow(d3, 2) - 4 * pow(a1, 2) * b5 * pow(d0, 2) * d3 -
            16 * pow(a2, 2) * b0 * d3 * pow(d4, 2) + 16 * pow(a2, 2) * b1 * d1 * pow(d5, 2) -
            16 * pow(a2, 2) * b3 * d0 * pow(d4, 2) - 16 * pow(a2, 2) * b3 * pow(d1, 2) * d3 -
            4 * pow(a3, 2) * b0 * pow(d1, 2) * d5 - 4 * pow(a3, 2) * b5 * d0 * pow(d1, 2) -
            4 * pow(a4, 2) * b0 * d0 * pow(d5, 2) + 4 * pow(a4, 2) * b0 * pow(d0, 2) * d5 +
            16 * pow(a4, 2) * b0 * pow(d2, 2) * d3 + 64 * pow(a4, 2) * b2 * pow(d1, 2) * d2 +
            16 * pow(a4, 2) * b3 * d0 * pow(d2, 2) + 4 * pow(a5, 2) * b0 * d0 * pow(d4, 2) -
            8 * pow(a5, 2) * b0 * pow(d1, 2) * d3 - 16 * pow(a5, 2) * b1 * d1 * pow(d2, 2) +
            4 * pow(a5, 2) * b2 * pow(d0, 2) * d2 + 8 * pow(a5, 2) * b3 * d0 * pow(d1, 2) -
            4 * pow(b0, 2) * b2 * pow(c5, 2) * d2 + 4 * pow(b0, 2) * b3 * pow(c1, 2) * d5 -
            16 * pow(b0, 2) * b4 * pow(c1, 2) * d4 + 4 * pow(b0, 2) * b5 * pow(c1, 2) * d3 -
            4 * pow(b0, 2) * b5 * pow(c4, 2) * d0 - 64 * pow(b1, 2) * b2 * pow(c4, 2) * d2 -
            4 * pow(b1, 2) * b3 * pow(c0, 2) * d5 + 16 * pow(b1, 2) * b3 * pow(c2, 2) * d3 +
            8 * pow(b1, 2) * b3 * pow(c5, 2) * d0 + 16 * pow(b1, 2) * b4 * pow(c0, 2) * d4 -
            4 * pow(b1, 2) * b5 * pow(c0, 2) * d3 + 4 * pow(b1, 2) * b5 * pow(c3, 2) * d0 -
            16 * pow(b2, 2) * b3 * pow(c1, 2) * d3 - 16 * pow(b2, 2) * b3 * pow(c4, 2) * d0 -
            4 * pow(b3, 2) * b5 * pow(c1, 2) * d0 - 12 * pow(b4, 2) * b5 * pow(c0, 2) * d0 +
            16 * b0 * pow(b1, 2) * pow(c4, 2) * d5 + 8 * b0 * pow(b2, 2) * pow(c3, 2) * d5 -
            4 * b0 * pow(b2, 2) * pow(c5, 2) * d3 + 8 * b0 * pow(b3, 2) * pow(c2, 2) * d5 -
            16 * b0 * pow(b4, 2) * pow(c1, 2) * d5 + 3 * b0 * pow(b5, 2) * pow(c0, 2) * d5 +
            4 * b0 * pow(b5, 2) * pow(c2, 2) * d3 - 4 * b1 * pow(b3, 2) * pow(c5, 2) * d1 +
            4 * b1 * pow(b5, 2) * pow(c3, 2) * d1 + 16 * b2 * pow(b5, 2) * pow(c1, 2) * d2 -
            4 * b3 * pow(b4, 2) * pow(c0, 2) * d3 + 4 * b3 * pow(b5, 2) * pow(c2, 2) * d0 +
            4 * pow(a0, 2) * b3 * d3 * pow(d4, 2) - 4 * pow(a0, 2) * b3 * pow(d2, 2) * d5 +
            16 * pow(a0, 2) * b4 * pow(d2, 2) * d4 - 3 * pow(a0, 2) * b5 * d0 * pow(d5, 2) -
            4 * pow(a0, 2) * b5 * pow(d2, 2) * d3 + 16 * pow(a1, 2) * b0 * pow(d4, 2) * d5 -
            16 * pow(a1, 2) * b2 * d2 * pow(d5, 2) + 16 * pow(a1, 2) * b5 * d0 * pow(d4, 2) -
            4 * pow(a2, 2) * b0 * d3 * pow(d5, 2) + 8 * pow(a2, 2) * b0 * pow(d3, 2) * d5 -
            4 * pow(a2, 2) * b3 * d0 * pow(d5, 2) + 4 * pow(a2, 2) * b3 * pow(d0, 2) * d5 -
            16 * pow(a2, 2) * b4 * pow(d0, 2) * d4 - 8 * pow(a2, 2) * b5 * d0 * pow(d3, 2) +
            4 * pow(a2, 2) * b5 * pow(d0, 2) * d3 + 8 * pow(a3, 2) * b0 * pow(d2, 2) * d5 -
            4 * pow(a3, 2) * b1 * d1 * pow(d5, 2) - 8 * pow(a3, 2) * b5 * d0 * pow(d2, 2) -
            16 * pow(a4, 2) * b0 * pow(d1, 2) * d5 - 4 * pow(a4, 2) * b3 * pow(d0, 2) * d3 -
            16 * pow(a4, 2) * b5 * d0 * pow(d1, 2) + 3 * pow(a5, 2) * b0 * pow(d0, 2) * d5 +
            4 * pow(a5, 2) * b0 * pow(d2, 2) * d3 + 4 * pow(a5, 2) * b1 * d1 * pow(d3, 2) +
            16 * pow(a5, 2) * b2 * pow(d1, 2) * d2 + 4 * pow(a5, 2) * b3 * d0 * pow(d2, 2) -
            4 * pow(b0, 2) * b3 * pow(c2, 2) * d5 + 4 * pow(b0, 2) * b3 * pow(c4, 2) * d3 +
            16 * pow(b0, 2) * b4 * pow(c2, 2) * d4 - 4 * pow(b0, 2) * b5 * pow(c2, 2) * d3 -
            3 * pow(b0, 2) * b5 * pow(c5, 2) * d0 - 16 * pow(b1, 2) * b2 * pow(c5, 2) * d2 +
            16 * pow(b1, 2) * b5 * pow(c4, 2) * d0 + 4 * pow(b2, 2) * b3 * pow(c0, 2) * d5 -
            4 * pow(b2, 2) * b3 * pow(c5, 2) * d0 - 16 * pow(b2, 2) * b4 * pow(c0, 2) * d4 +
            4 * pow(b2, 2) * b5 * pow(c0, 2) * d3 - 8 * pow(b2, 2) * b5 * pow(c3, 2) * d0 -
            8 * pow(b3, 2) * b5 * pow(c2, 2) * d0 - 16 * pow(b4, 2) * b5 * pow(c1, 2) * d0 +
            12 * b0 * pow(b1, 2) * pow(c5, 2) * d5 - 3 * b0 * pow(b3, 2) * pow(c5, 2) * d3 +
            4 * b0 * pow(b5, 2) * pow(c1, 2) * d5 - 9 * b0 * pow(b5, 2) * pow(c3, 2) * d3 -
            16 * b1 * pow(b4, 2) * pow(c5, 2) * d1 + 16 * b1 * pow(b5, 2) * pow(c4, 2) * d1 -
            16 * b2 * pow(b3, 2) * pow(c4, 2) * d2 + 16 * b2 * pow(b4, 2) * pow(c3, 2) * d2 -
            6 * b3 * pow(b5, 2) * pow(c0, 2) * d3 + 3 * b3 * pow(b5, 2) * pow(c3, 2) * d0 +
            6 * pow(a0, 2) * b3 * d3 * pow(d5, 2) - 3 * pow(a0, 2) * b3 * pow(d3, 2) * d5 -
            4 * pow(a0, 2) * b4 * pow(d3, 2) * d4 - 4 * pow(a0, 2) * b5 * pow(d1, 2) * d5 -
            16 * pow(a1, 2) * b3 * pow(d2, 2) * d5 + 64 * pow(a1, 2) * b4 * pow(d2, 2) * d4 -
            4 * pow(a1, 2) * b5 * d0 * pow(d5, 2) + 4 * pow(a1, 2) * b5 * pow(d0, 2) * d5 -
            16 * pow(a1, 2) * b5 * pow(d2, 2) * d3 + 16 * pow(a2, 2) * b3 * pow(d1, 2) * d5 -
            64 * pow(a2, 2) * b4 * pow(d1, 2) * d4 + 16 * pow(a2, 2) * b5 * pow(d1, 2) * d3 -
            3 * pow(a3, 2) * b0 * d3 * pow(d5, 2) - 16 * pow(a3, 2) * b2 * d2 * pow(d4, 2) +
            9 * pow(a3, 2) * b3 * d0 * pow(d5, 2) - 9 * pow(a3, 2) * b3 * pow(d0, 2) * d5 +
            4 * pow(a3, 2) * b4 * pow(d0, 2) * d4 + 3 * pow(a3, 2) * b5 * pow(d0, 2) * d3 -
            16 * pow(a4, 2) * b1 * d1 * pow(d5, 2) + 16 * pow(a4, 2) * b2 * d2 * pow(d3, 2) +
            4 * pow(a5, 2) * b0 * pow(d1, 2) * d5 + 16 * pow(a5, 2) * b1 * d1 * pow(d4, 2) +
            3 * pow(a5, 2) * b3 * d0 * pow(d3, 2) - 6 * pow(a5, 2) * b3 * pow(d0, 2) * d3 -
            12 * pow(a5, 2) * b5 * d0 * pow(d1, 2) - 3 * pow(b0, 2) * b3 * pow(c3, 2) * d5 +
            6 * pow(b0, 2) * b3 * pow(c5, 2) * d3 - 4 * pow(b0, 2) * b4 * pow(c3, 2) * d4 -
            4 * pow(b0, 2) * b5 * pow(c1, 2) * d5 + 9 * pow(b0, 2) * b5 * pow(c3, 2) * d3 -
            16 * pow(b1, 2) * b3 * pow(c2, 2) * d5 + 64 * pow(b1, 2) * b4 * pow(c2, 2) * d4 +
            4 * pow(b1, 2) * b5 * pow(c0, 2) * d5 - 16 * pow(b1, 2) * b5 * pow(c2, 2) * d3 -
            4 * pow(b1, 2) * b5 * pow(c5, 2) * d0 + 16 * pow(b2, 2) * b3 * pow(c1, 2) * d5 -
            64 * pow(b2, 2) * b4 * pow(c1, 2) * d4 + 16 * pow(b2, 2) * b5 * pow(c1, 2) * d3 +
            4 * pow(b3, 2) * b4 * pow(c0, 2) * d4 + 3 * pow(b3, 2) * b5 * pow(c0, 2) * d3 +
            4 * b0 * pow(b3, 2) * pow(c4, 2) * d5 - 4 * b0 * pow(b4, 2) * pow(c3, 2) * d5 +
            4 * b0 * pow(b4, 2) * pow(c5, 2) * d3 - 4 * b0 * pow(b5, 2) * pow(c4, 2) * d3 -
            4 * b2 * pow(b3, 2) * pow(c5, 2) * d2 + 4 * b2 * pow(b5, 2) * pow(c3, 2) * d2 -
            8 * b3 * pow(b4, 2) * pow(c0, 2) * d5 - 16 * b3 * pow(b4, 2) * pow(c2, 2) * d3 +
            4 * b3 * pow(b4, 2) * pow(c5, 2) * d0 - 4 * b3 * pow(b5, 2) * pow(c1, 2) * d3 -
            4 * b3 * pow(b5, 2) * pow(c4, 2) * d0 - 8 * pow(a0, 2) * b3 * pow(d4, 2) * d5 +
            8 * pow(a0, 2) * b5 * d3 * pow(d4, 2) + 4 * pow(a0, 2) * b5 * pow(d2, 2) * d5 +
            4 * pow(a1, 2) * b3 * d3 * pow(d5, 2) + 16 * pow(a2, 2) * b3 * d3 * pow(d4, 2) -
            4 * pow(a2, 2) * b5 * pow(d0, 2) * d5 + 4 * pow(a3, 2) * b0 * pow(d4, 2) * d5 -
            4 * pow(a3, 2) * b2 * d2 * pow(d5, 2) + 4 * pow(a3, 2) * b5 * d0 * pow(d4, 2) +
            4 * pow(a4, 2) * b0 * d3 * pow(d5, 2) - 4 * pow(a4, 2) * b0 * pow(d3, 2) * d5 +
            4 * pow(a4, 2) * b3 * d0 * pow(d5, 2) - 8 * pow(a4, 2) * b3 * pow(d0, 2) * d5 -
            16 * pow(a4, 2) * b3 * pow(d2, 2) * d3 - 4 * pow(a4, 2) * b5 * d0 * pow(d3, 2) +
            8 * pow(a4, 2) * b5 * pow(d0, 2) * d3 - 4 * pow(a5, 2) * b0 * d3 * pow(d4, 2) +
            4 * pow(a5, 2) * b2 * d2 * pow(d3, 2) - 4 * pow(a5, 2) * b3 * d0 * pow(d4, 2) -
            4 * pow(a5, 2) * b3 * pow(d1, 2) * d3 - 8 * pow(b0, 2) * b3 * pow(c4, 2) * d5 +
            4 * pow(b0, 2) * b5 * pow(c2, 2) * d5 + 8 * pow(b0, 2) * b5 * pow(c4, 2) * d3 +
            4 * pow(b1, 2) * b3 * pow(c5, 2) * d3 + 16 * pow(b2, 2) * b3 * pow(c4, 2) * d3 -
            4 * pow(b2, 2) * b5 * pow(c0, 2) * d5 + 4 * pow(b3, 2) * b5 * pow(c4, 2) * d0 +
            8 * pow(b4, 2) * b5 * pow(c0, 2) * d3 - 4 * pow(b4, 2) * b5 * pow(c3, 2) * d0 +
            9 * b0 * pow(b3, 2) * pow(c5, 2) * d5 + 3 * b0 * pow(b5, 2) * pow(c3, 2) * d5 -
            3 * b3 * pow(b5, 2) * pow(c0, 2) * d5 - 4 * b3 * pow(b5, 2) * pow(c2, 2) * d3 -
            4 * b4 * pow(b5, 2) * pow(c0, 2) * d4 + 4 * pow(a0, 2) * b4 * d4 * pow(d5, 2) +
            3 * pow(a0, 2) * b5 * d3 * pow(d5, 2) - 6 * pow(a0, 2) * b5 * pow(d3, 2) * d5 +
            16 * pow(a1, 2) * b5 * pow(d2, 2) * d5 + 4 * pow(a2, 2) * b3 * d3 * pow(d5, 2) -
            4 * pow(a2, 2) * b3 * pow(d3, 2) * d5 - 16 * pow(a2, 2) * b4 * pow(d3, 2) * d4 -
            16 * pow(a2, 2) * b5 * pow(d1, 2) * d5 - 12 * pow(a3, 2) * b3 * pow(d2, 2) * d5 +
            16 * pow(a3, 2) * b4 * pow(d2, 2) * d4 - 3 * pow(a3, 2) * b5 * d0 * pow(d5, 2) +
            6 * pow(a3, 2) * b5 * pow(d0, 2) * d5 + 4 * pow(a3, 2) * b5 * pow(d2, 2) * d3 +
            3 * pow(a5, 2) * b0 * pow(d3, 2) * d5 - 3 * pow(a5, 2) * b3 * pow(d0, 2) * d5 -
            4 * pow(a5, 2) * b3 * pow(d2, 2) * d3 - 4 * pow(a5, 2) * b4 * pow(d0, 2) * d4 -
            9 * pow(a5, 2) * b5 * d0 * pow(d3, 2) + 9 * pow(a5, 2) * b5 * pow(d0, 2) * d3 -
            9 * pow(b0, 2) * b3 * pow(c5, 2) * d5 + 4 * pow(b0, 2) * b4 * pow(c5, 2) * d4 -
            6 * pow(b0, 2) * b5 * pow(c3, 2) * d5 + 3 * pow(b0, 2) * b5 * pow(c5, 2) * d3 +
            16 * pow(b1, 2) * b5 * pow(c2, 2) * d5 - 4 * pow(b2, 2) * b3 * pow(c3, 2) * d5 +
            4 * pow(b2, 2) * b3 * pow(c5, 2) * d3 - 16 * pow(b2, 2) * b4 * pow(c3, 2) * d4 -
            16 * pow(b2, 2) * b5 * pow(c1, 2) * d5 + 12 * pow(b2, 2) * b5 * pow(c3, 2) * d3 +
            16 * pow(b3, 2) * b4 * pow(c2, 2) * d4 + 6 * pow(b3, 2) * b5 * pow(c0, 2) * d5 +
            4 * pow(b3, 2) * b5 * pow(c2, 2) * d3 - 3 * pow(b3, 2) * b5 * pow(c5, 2) * d0 -
            4 * b3 * pow(b5, 2) * pow(c1, 2) * d5 - 16 * b4 * pow(b5, 2) * pow(c1, 2) * d4 -
            4 * pow(a0, 2) * b5 * pow(d4, 2) * d5 + 16 * pow(a1, 2) * b4 * d4 * pow(d5, 2) +
            4 * pow(a1, 2) * b5 * d3 * pow(d5, 2) - 4 * pow(a1, 2) * b5 * pow(d3, 2) * d5 +
            4 * pow(a3, 2) * b5 * pow(d1, 2) * d5 + 4 * pow(a4, 2) * b5 * pow(d0, 2) * d5 -
            4 * pow(a5, 2) * b3 * pow(d1, 2) * d5 - 16 * pow(a5, 2) * b4 * pow(d1, 2) * d4 +
            12 * pow(a5, 2) * b5 * pow(d1, 2) * d3 - 4 * pow(b0, 2) * b5 * pow(c4, 2) * d5 -
            12 * pow(b1, 2) * b3 * pow(c5, 2) * d5 + 16 * pow(b1, 2) * b4 * pow(c5, 2) * d4 -
            4 * pow(b1, 2) * b5 * pow(c3, 2) * d5 + 4 * pow(b1, 2) * b5 * pow(c5, 2) * d3 +
            4 * pow(b3, 2) * b5 * pow(c1, 2) * d5 + 4 * pow(b4, 2) * b5 * pow(c0, 2) * d5 -
            4 * b3 * pow(b4, 2) * pow(c5, 2) * d3 + 4 * b3 * pow(b5, 2) * pow(c4, 2) * d3 -
            16 * pow(a1, 2) * b5 * pow(d4, 2) * d5 - 4 * pow(a2, 2) * b5 * pow(d3, 2) * d5 +
            4 * pow(a3, 2) * b5 * pow(d2, 2) * d5 - 4 * pow(a4, 2) * b3 * d3 * pow(d5, 2) +
            16 * pow(a4, 2) * b5 * pow(d1, 2) * d5 + 4 * pow(a5, 2) * b3 * d3 * pow(d4, 2) -
            16 * pow(b1, 2) * b5 * pow(c4, 2) * d5 - 4 * pow(b2, 2) * b5 * pow(c3, 2) * d5 +
            4 * pow(b3, 2) * b5 * pow(c2, 2) * d5 + 16 * pow(b4, 2) * b5 * pow(c1, 2) * d5 -
            3 * b3 * pow(b5, 2) * pow(c3, 2) * d5 - 4 * b4 * pow(b5, 2) * pow(c3, 2) * d4 +
            4 * pow(a3, 2) * b4 * d4 * pow(d5, 2) + 3 * pow(a3, 2) * b5 * d3 * pow(d5, 2) -
            3 * pow(a5, 2) * b3 * pow(d3, 2) * d5 - 4 * pow(a5, 2) * b4 * pow(d3, 2) * d4 +
            4 * pow(b3, 2) * b4 * pow(c5, 2) * d4 + 3 * pow(b3, 2) * b5 * pow(c5, 2) * d3 -
            4 * pow(a3, 2) * b5 * pow(d4, 2) * d5 + 4 * pow(a4, 2) * b5 * pow(d3, 2) * d5 -
            4 * pow(b3, 2) * b5 * pow(c4, 2) * d5 + 4 * pow(b4, 2) * b5 * pow(c3, 2) * d5 +
            8 * a0 * a1 * b0 * d1 * pow(d3, 2) - 8 * a0 * a1 * b1 * d0 * pow(d3, 2) +
            8 * a0 * b0 * b1 * c1 * pow(d3, 2) - 8 * a1 * b0 * b1 * c0 * pow(d3, 2) +
            32 * a0 * a1 * b0 * d1 * pow(d4, 2) - 32 * a0 * a1 * b1 * d0 * pow(d4, 2) +
            6 * a0 * a3 * b0 * d0 * pow(d3, 2) + 32 * a0 * b0 * b1 * c1 * pow(d4, 2) +
            6 * a0 * b0 * b3 * c0 * pow(d3, 2) - 32 * a1 * b0 * b1 * c0 * pow(d4, 2) +
            8 * a0 * a1 * b0 * d1 * pow(d5, 2) - 8 * a0 * a1 * b1 * d0 * pow(d5, 2) -
            8 * a0 * a2 * b0 * d2 * pow(d3, 2) + 8 * a0 * a2 * b2 * d0 * pow(d3, 2) +
            8 * a0 * a3 * b0 * d0 * pow(d4, 2) - 8 * a0 * a3 * b0 * pow(d1, 2) * d3 +
            8 * a0 * a3 * b3 * d0 * pow(d1, 2) + 8 * a0 * b0 * b1 * c1 * pow(d5, 2) -
            8 * a0 * b0 * b2 * c2 * pow(d3, 2) + 8 * a0 * b0 * b3 * c0 * pow(d4, 2) -
            8 * a0 * b0 * b3 * c3 * pow(d1, 2) - 8 * a1 * b0 * b1 * c0 * pow(d5, 2) +
            8 * a2 * b0 * b2 * c0 * pow(d3, 2) + 8 * a3 * b0 * b3 * c0 * pow(d1, 2) -
            32 * a0 * a2 * b0 * d2 * pow(d4, 2) + 32 * a0 * a2 * b2 * d0 * pow(d4, 2) +
            6 * a0 * a3 * b0 * d0 * pow(d5, 2) + 8 * a0 * a3 * b0 * pow(d2, 2) * d3 -
            8 * a0 * a3 * b3 * d0 * pow(d2, 2) - 6 * a0 * a5 * b0 * d0 * pow(d3, 2) -
            32 * a0 * b0 * b2 * c2 * pow(d4, 2) + 6 * a0 * b0 * b3 * c0 * pow(d5, 2) +
            8 * a0 * b0 * b3 * c3 * pow(d2, 2) - 6 * a0 * b0 * b5 * c0 * pow(d3, 2) +
            8 * a1 * a3 * b1 * pow(d0, 2) * d3 - 8 * a1 * a3 * b3 * pow(d0, 2) * d1 +
            8 * a1 * b1 * b3 * c3 * pow(d0, 2) + 32 * a2 * b0 * b2 * c0 * pow(d4, 2) -
            8 * a3 * b0 * b3 * c0 * pow(d2, 2) - 8 * a3 * b1 * b3 * c1 * pow(d0, 2) -
            8 * a0 * a2 * b0 * d2 * pow(d5, 2) + 8 * a0 * a2 * b2 * d0 * pow(d5, 2) +
            8 * a0 * a3 * b0 * pow(d1, 2) * d5 - 6 * a0 * a3 * b3 * pow(d0, 2) * d3 -
            8 * a0 * a3 * b5 * d0 * pow(d1, 2) - 32 * a0 * a4 * b0 * pow(d1, 2) * d4 +
            32 * a0 * a4 * b4 * d0 * pow(d1, 2) - 8 * a0 * a5 * b0 * d0 * pow(d4, 2) +
            8 * a0 * a5 * b0 * pow(d1, 2) * d3 - 8 * a0 * a5 * b3 * d0 * pow(d1, 2) -
            8 * a0 * b0 * b2 * c2 * pow(d5, 2) + 8 * a0 * b0 * b3 * c5 * pow(d1, 2) -
            32 * a0 * b0 * b4 * c4 * pow(d1, 2) - 8 * a0 * b0 * b5 * c0 * pow(d4, 2) +
            8 * a0 * b0 * b5 * c3 * pow(d1, 2) - 8 * a0 * b3 * b5 * c0 * pow(d1, 2) -
            32 * a1 * a2 * b1 * d2 * pow(d3, 2) + 32 * a1 * a2 * b2 * d1 * pow(d3, 2) -
            32 * a1 * b1 * b2 * c2 * pow(d3, 2) + 8 * a2 * b0 * b2 * c0 * pow(d5, 2) +
            32 * a2 * b1 * b2 * c1 * pow(d3, 2) - 8 * a3 * a5 * b0 * d0 * pow(d1, 2) -
            6 * a3 * b0 * b3 * c3 * pow(d0, 2) - 8 * a3 * b0 * b5 * c0 * pow(d1, 2) +
            32 * a4 * b0 * b4 * c0 * pow(d1, 2) - 8 * a5 * b0 * b3 * c0 * pow(d1, 2) -
            16 * a0 * a1 * b1 * d3 * pow(d5, 2) + 8 * a0 * a1 * b1 * pow(d3, 2) * d5 +
            16 * a0 * a1 * b4 * d2 * pow(d3, 2) - 8 * a0 * a1 * b5 * d1 * pow(d3, 2) +
            8 * a0 * a2 * b3 * d2 * pow(d3, 2) + 8 * a0 * a3 * b0 * d3 * pow(d4, 2) -
            8 * a0 * a3 * b0 * pow(d2, 2) * d5 + 8 * a0 * a3 * b2 * d2 * pow(d3, 2) -
            8 * a0 * a3 * b3 * d0 * pow(d4, 2) + 8 * a0 * a3 * b5 * d0 * pow(d2, 2) +
            32 * a0 * a4 * b0 * pow(d2, 2) * d4 + 16 * a0 * a4 * b1 * d2 * pow(d3, 2) -
            32 * a0 * a4 * b4 * d0 * pow(d2, 2) - 6 * a0 * a5 * b0 * d0 * pow(d5, 2) -
            8 * a0 * a5 * b0 * pow(d2, 2) * d3 - 8 * a0 * a5 * b1 * d1 * pow(d3, 2) +
            8 * a0 * a5 * b3 * d0 * pow(d2, 2) + 8 * a0 * b0 * b3 * c3 * pow(d4, 2) -
            8 * a0 * b0 * b3 * c5 * pow(d2, 2) + 32 * a0 * b0 * b4 * c4 * pow(d2, 2) -
            6 * a0 * b0 * b5 * c0 * pow(d5, 2) - 8 * a0 * b0 * b5 * c3 * pow(d2, 2) +
            16 * a0 * b1 * b4 * c2 * pow(d3, 2) - 8 * a0 * b1 * b5 * c1 * pow(d3, 2) +
            8 * a0 * b2 * b3 * c2 * pow(d3, 2) + 8 * a0 * b3 * b5 * c0 * pow(d2, 2) -
            128 * a1 * a2 * b1 * d2 * pow(d4, 2) + 128 * a1 * a2 * b2 * d1 * pow(d4, 2) -
            16 * a1 * a2 * b3 * pow(d0, 2) * d4 - 16 * a1 * a2 * b4 * d0 * pow(d3, 2) +
            16 * a1 * a2 * b4 * pow(d0, 2) * d3 + 16 * a1 * a3 * b1 * d0 * pow(d5, 2) -
            8 * a1 * a3 * b1 * pow(d0, 2) * d5 + 32 * a1 * a3 * b1 * pow(d2, 2) * d3 -
            16 * a1 * a3 * b2 * pow(d0, 2) * d4 - 32 * a1 * a3 * b3 * d1 * pow(d2, 2) +
            8 * a1 * a3 * b5 * pow(d0, 2) * d1 + 16 * a1 * a4 * b0 * d2 * pow(d3, 2) +
            32 * a1 * a4 * b1 * pow(d0, 2) * d4 - 16 * a1 * a4 * b2 * d0 * pow(d3, 2) +
            16 * a1 * a4 * b2 * pow(d0, 2) * d3 - 32 * a1 * a4 * b4 * pow(d0, 2) * d1 -
            8 * a1 * a5 * b0 * d1 * pow(d3, 2) + 8 * a1 * a5 * b1 * d0 * pow(d3, 2) -
            8 * a1 * a5 * b1 * pow(d0, 2) * d3 + 8 * a1 * a5 * b3 * pow(d0, 2) * d1 -
            16 * a1 * b0 * b1 * c3 * pow(d5, 2) + 8 * a1 * b0 * b1 * c5 * pow(d3, 2) +
            16 * a1 * b0 * b4 * c2 * pow(d3, 2) - 8 * a1 * b0 * b5 * c1 * pow(d3, 2) -
            128 * a1 * b1 * b2 * c2 * pow(d4, 2) + 16 * a1 * b1 * b3 * c0 * pow(d5, 2) +
            32 * a1 * b1 * b3 * c3 * pow(d2, 2) - 8 * a1 * b1 * b3 * c5 * pow(d0, 2) +
            32 * a1 * b1 * b4 * c4 * pow(d0, 2) + 8 * a1 * b1 * b5 * c0 * pow(d3, 2) -
            8 * a1 * b1 * b5 * c3 * pow(d0, 2) - 16 * a1 * b2 * b3 * c4 * pow(d0, 2) -
            16 * a1 * b2 * b4 * c0 * pow(d3, 2) + 16 * a1 * b2 * b4 * c3 * pow(d0, 2) +
            8 * a1 * b3 * b5 * c1 * pow(d0, 2) + 8 * a2 * a3 * b0 * d2 * pow(d3, 2) -
            16 * a2 * a3 * b1 * pow(d0, 2) * d4 + 8 * a2 * a3 * b2 * d0 * pow(d3, 2) -
            8 * a2 * a3 * b2 * pow(d0, 2) * d3 + 8 * a2 * a3 * b3 * pow(d0, 2) * d2 -
            16 * a2 * a4 * b1 * d0 * pow(d3, 2) + 16 * a2 * a4 * b1 * pow(d0, 2) * d3 -
            24 * a2 * b0 * b2 * c3 * pow(d3, 2) + 8 * a2 * b0 * b3 * c2 * pow(d3, 2) +
            128 * a2 * b1 * b2 * c1 * pow(d4, 2) - 16 * a2 * b1 * b3 * c4 * pow(d0, 2) -
            16 * a2 * b1 * b4 * c0 * pow(d3, 2) + 16 * a2 * b1 * b4 * c3 * pow(d0, 2) +
            8 * a2 * b2 * b3 * c0 * pow(d3, 2) - 8 * a2 * b2 * b3 * c3 * pow(d0, 2) +
            8 * a3 * a5 * b0 * d0 * pow(d2, 2) + 8 * a3 * a5 * b1 * pow(d0, 2) * d1 +
            8 * a3 * b0 * b2 * c2 * pow(d3, 2) - 8 * a3 * b0 * b3 * c0 * pow(d4, 2) +
            8 * a3 * b0 * b5 * c0 * pow(d2, 2) - 16 * a3 * b1 * b2 * c4 * pow(d0, 2) -
            32 * a3 * b1 * b3 * c1 * pow(d2, 2) + 8 * a3 * b1 * b5 * c1 * pow(d0, 2) +
            8 * a3 * b2 * b3 * c2 * pow(d0, 2) + 16 * a4 * b0 * b1 * c2 * pow(d3, 2) -
            32 * a4 * b0 * b4 * c0 * pow(d2, 2) - 16 * a4 * b1 * b2 * c0 * pow(d3, 2) +
            16 * a4 * b1 * b2 * c3 * pow(d0, 2) - 32 * a4 * b1 * b4 * c1 * pow(d0, 2) -
            8 * a5 * b0 * b1 * c1 * pow(d3, 2) + 8 * a5 * b0 * b3 * c0 * pow(d2, 2) +
            8 * a5 * b1 * b3 * c1 * pow(d0, 2) + 32 * a0 * a1 * b1 * pow(d4, 2) * d5 -
            32 * a0 * a1 * b5 * d1 * pow(d4, 2) - 32 * a0 * a2 * b2 * d3 * pow(d4, 2) +
            32 * a0 * a2 * b3 * d2 * pow(d4, 2) + 12 * a0 * a3 * b0 * d3 * pow(d5, 2) -
            6 * a0 * a3 * b0 * pow(d3, 2) * d5 + 32 * a0 * a3 * b2 * d2 * pow(d4, 2) -
            12 * a0 * a3 * b3 * d0 * pow(d5, 2) + 6 * a0 * a3 * b3 * pow(d0, 2) * d5 -
            8 * a0 * a3 * b3 * pow(d2, 2) * d3 - 8 * a0 * a3 * b4 * pow(d0, 2) * d4 -
            6 * a0 * a3 * b5 * d0 * pow(d3, 2) + 6 * a0 * a3 * b5 * pow(d0, 2) * d3 -
            8 * a0 * a4 * b0 * pow(d3, 2) * d4 - 8 * a0 * a4 * b3 * pow(d0, 2) * d4 +
            8 * a0 * a4 * b4 * d0 * pow(d3, 2) - 8 * a0 * a4 * b4 * pow(d0, 2) * d3 -
            8 * a0 * a5 * b0 * pow(d1, 2) * d5 - 32 * a0 * a5 * b1 * d1 * pow(d4, 2) -
            6 * a0 * a5 * b3 * d0 * pow(d3, 2) + 6 * a0 * a5 * b3 * pow(d0, 2) * d3 +
            8 * a0 * a5 * b5 * d0 * pow(d1, 2) + 12 * a0 * b0 * b3 * c3 * pow(d5, 2) -
            6 * a0 * b0 * b3 * c5 * pow(d3, 2) - 8 * a0 * b0 * b4 * c4 * pow(d3, 2) +
            18 * a0 * b0 * b5 * c3 * pow(d3, 2) - 8 * a0 * b0 * b5 * c5 * pow(d1, 2) -
            32 * a0 * b1 * b5 * c1 * pow(d4, 2) + 32 * a0 * b2 * b3 * c2 * pow(d4, 2) -
            8 * a0 * b3 * b4 * c4 * pow(d0, 2) - 6 * a0 * b3 * b5 * c0 * pow(d3, 2) +
            6 * a0 * b3 * b5 * c3 * pow(d0, 2) - 32 * a1 * a2 * b1 * d2 * pow(d5, 2) +
            32 * a1 * a2 * b2 * d1 * pow(d5, 2) - 32 * a1 * a5 * b0 * d1 * pow(d4, 2) +
            32 * a1 * a5 * b1 * d0 * pow(d4, 2) + 32 * a1 * b0 * b1 * c5 * pow(d4, 2) -
            32 * a1 * b0 * b5 * c1 * pow(d4, 2) - 32 * a1 * b1 * b2 * c2 * pow(d5, 2) +
            32 * a1 * b1 * b5 * c0 * pow(d4, 2) + 32 * a2 * a3 * b0 * d2 * pow(d4, 2) -
            32 * a2 * a3 * b2 * d0 * pow(d4, 2) - 32 * a2 * a3 * b2 * pow(d1, 2) * d3 +
            32 * a2 * a3 * b3 * pow(d1, 2) * d2 - 32 * a2 * b0 * b2 * c3 * pow(d4, 2) +
            32 * a2 * b0 * b3 * c2 * pow(d4, 2) + 32 * a2 * b1 * b2 * c1 * pow(d5, 2) -
            32 * a2 * b2 * b3 * c0 * pow(d4, 2) - 32 * a2 * b2 * b3 * c3 * pow(d1, 2) -
            8 * a3 * a4 * b0 * pow(d0, 2) * d4 - 6 * a3 * a5 * b0 * d0 * pow(d3, 2) +
            6 * a3 * a5 * b0 * pow(d0, 2) * d3 + 32 * a3 * b0 * b2 * c2 * pow(d4, 2) -
            12 * a3 * b0 * b3 * c0 * pow(d5, 2) - 8 * a3 * b0 * b3 * c3 * pow(d2, 2) +
            6 * a3 * b0 * b3 * c5 * pow(d0, 2) - 8 * a3 * b0 * b4 * c4 * pow(d0, 2) -
            6 * a3 * b0 * b5 * c0 * pow(d3, 2) + 6 * a3 * b0 * b5 * c3 * pow(d0, 2) +
            32 * a3 * b2 * b3 * c2 * pow(d1, 2) - 18 * a3 * b3 * b5 * c0 * pow(d0, 2) -
            8 * a4 * b0 * b3 * c4 * pow(d0, 2) + 8 * a4 * b0 * b4 * c0 * pow(d3, 2) -
            8 * a4 * b0 * b4 * c3 * pow(d0, 2) + 24 * a4 * b3 * b4 * c0 * pow(d0, 2) -
            32 * a5 * b0 * b1 * c1 * pow(d4, 2) - 6 * a5 * b0 * b3 * c0 * pow(d3, 2) +
            6 * a5 * b0 * b3 * c3 * pow(d0, 2) + 8 * a5 * b0 * b5 * c0 * pow(d1, 2) -
            8 * a0 * a1 * b5 * d1 * pow(d5, 2) - 8 * a0 * a2 * b2 * d3 * pow(d5, 2) +
            16 * a0 * a2 * b2 * pow(d3, 2) * d5 + 8 * a0 * a2 * b3 * d2 * pow(d5, 2) -
            16 * a0 * a2 * b4 * d1 * pow(d5, 2) - 16 * a0 * a3 * b0 * pow(d4, 2) * d5 +
            8 * a0 * a3 * b2 * d2 * pow(d5, 2) - 8 * a0 * a3 * b3 * pow(d1, 2) * d5 +
            8 * a0 * a3 * b5 * pow(d1, 2) * d3 - 16 * a0 * a4 * b2 * d1 * pow(d5, 2) +
            16 * a0 * a5 * b0 * d3 * pow(d4, 2) + 8 * a0 * a5 * b0 * pow(d2, 2) * d5 -
            8 * a0 * a5 * b1 * d1 * pow(d5, 2) + 8 * a0 * a5 * b3 * pow(d1, 2) * d3 -
            8 * a0 * a5 * b5 * d0 * pow(d2, 2) - 16 * a0 * b0 * b3 * c5 * pow(d4, 2) +
            16 * a0 * b0 * b5 * c3 * pow(d4, 2) + 8 * a0 * b0 * b5 * c5 * pow(d2, 2) -
            8 * a0 * b1 * b5 * c1 * pow(d5, 2) + 8 * a0 * b2 * b3 * c2 * pow(d5, 2) -
            16 * a0 * b2 * b4 * c1 * pow(d5, 2) + 8 * a0 * b3 * b5 * c3 * pow(d1, 2) +
            16 * a1 * a2 * b4 * d0 * pow(d5, 2) - 16 * a1 * a2 * b4 * pow(d0, 2) * d5 +
            16 * a1 * a2 * b5 * pow(d0, 2) * d4 - 32 * a1 * a3 * b1 * pow(d2, 2) * d5 +
            32 * a1 * a3 * b5 * d1 * pow(d2, 2) + 128 * a1 * a4 * b1 * pow(d2, 2) * d4 +
            16 * a1 * a4 * b2 * d0 * pow(d5, 2) - 16 * a1 * a4 * b2 * pow(d0, 2) * d5 -
            128 * a1 * a4 * b4 * d1 * pow(d2, 2) - 8 * a1 * a5 * b0 * d1 * pow(d5, 2) -
            8 * a1 * a5 * b1 * d0 * pow(d5, 2) + 8 * a1 * a5 * b1 * pow(d0, 2) * d5 -
            32 * a1 * a5 * b1 * pow(d2, 2) * d3 + 16 * a1 * a5 * b2 * pow(d0, 2) * d4 +
            32 * a1 * a5 * b3 * d1 * pow(d2, 2) - 8 * a1 * a5 * b5 * pow(d0, 2) * d1 +
            24 * a1 * b0 * b1 * c5 * pow(d5, 2) - 8 * a1 * b0 * b5 * c1 * pow(d5, 2) -
            32 * a1 * b1 * b3 * c5 * pow(d2, 2) + 128 * a1 * b1 * b4 * c4 * pow(d2, 2) -
            8 * a1 * b1 * b5 * c0 * pow(d5, 2) - 32 * a1 * b1 * b5 * c3 * pow(d2, 2) +
            8 * a1 * b1 * b5 * c5 * pow(d0, 2) + 16 * a1 * b2 * b4 * c0 * pow(d5, 2) -
            16 * a1 * b2 * b4 * c5 * pow(d0, 2) + 16 * a1 * b2 * b5 * c4 * pow(d0, 2) +
            32 * a1 * b3 * b5 * c1 * pow(d2, 2) + 8 * a2 * a3 * b0 * d2 * pow(d5, 2) -
            8 * a2 * a3 * b2 * d0 * pow(d5, 2) + 8 * a2 * a3 * b2 * pow(d0, 2) * d5 -
            8 * a2 * a3 * b5 * pow(d0, 2) * d2 - 16 * a2 * a4 * b0 * d1 * pow(d5, 2) +
            16 * a2 * a4 * b1 * d0 * pow(d5, 2) - 16 * a2 * a4 * b1 * pow(d0, 2) * d5 -
            32 * a2 * a4 * b2 * pow(d0, 2) * d4 + 32 * a2 * a4 * b4 * pow(d0, 2) * d2 +
            16 * a2 * a5 * b1 * pow(d0, 2) * d4 - 16 * a2 * a5 * b2 * d0 * pow(d3, 2) +
            8 * a2 * a5 * b2 * pow(d0, 2) * d3 - 8 * a2 * a5 * b3 * pow(d0, 2) * d2 -
            8 * a2 * b0 * b2 * c3 * pow(d5, 2) + 16 * a2 * b0 * b2 * c5 * pow(d3, 2) +
            8 * a2 * b0 * b3 * c2 * pow(d5, 2) - 16 * a2 * b0 * b4 * c1 * pow(d5, 2) +
            16 * a2 * b1 * b4 * c0 * pow(d5, 2) - 16 * a2 * b1 * b4 * c5 * pow(d0, 2) +
            16 * a2 * b1 * b5 * c4 * pow(d0, 2) - 8 * a2 * b2 * b3 * c0 * pow(d5, 2) +
            8 * a2 * b2 * b3 * c5 * pow(d0, 2) - 32 * a2 * b2 * b4 * c4 * pow(d0, 2) -
            16 * a2 * b2 * b5 * c0 * pow(d3, 2) + 8 * a2 * b2 * b5 * c3 * pow(d0, 2) -
            8 * a2 * b3 * b5 * c2 * pow(d0, 2) + 8 * a3 * a5 * b0 * pow(d1, 2) * d3 +
            32 * a3 * a5 * b1 * d1 * pow(d2, 2) - 8 * a3 * a5 * b2 * pow(d0, 2) * d2 -
            8 * a3 * a5 * b3 * d0 * pow(d1, 2) + 8 * a3 * b0 * b2 * c2 * pow(d5, 2) -
            8 * a3 * b0 * b3 * c5 * pow(d1, 2) + 8 * a3 * b0 * b5 * c3 * pow(d1, 2) +
            32 * a3 * b1 * b5 * c1 * pow(d2, 2) - 8 * a3 * b2 * b5 * c2 * pow(d0, 2) -
            8 * a3 * b3 * b5 * c0 * pow(d1, 2) - 16 * a4 * b0 * b2 * c1 * pow(d5, 2) +
            16 * a4 * b1 * b2 * c0 * pow(d5, 2) - 16 * a4 * b1 * b2 * c5 * pow(d0, 2) -
            128 * a4 * b1 * b4 * c1 * pow(d2, 2) + 32 * a4 * b2 * b4 * c2 * pow(d0, 2) -
            8 * a5 * b0 * b1 * c1 * pow(d5, 2) + 8 * a5 * b0 * b3 * c3 * pow(d1, 2) -
            8 * a5 * b0 * b5 * c0 * pow(d2, 2) + 16 * a5 * b1 * b2 * c4 * pow(d0, 2) +
            32 * a5 * b1 * b3 * c1 * pow(d2, 2) - 8 * a5 * b1 * b5 * c1 * pow(d0, 2) -
            8 * a5 * b2 * b3 * c2 * pow(d0, 2) + 16 * a0 * a3 * b3 * pow(d2, 2) * d5 -
            32 * a0 * a3 * b4 * pow(d2, 2) * d4 + 6 * a0 * a3 * b5 * d0 * pow(d5, 2) -
            6 * a0 * a3 * b5 * pow(d0, 2) * d5 + 8 * a0 * a4 * b0 * d4 * pow(d5, 2) -
            32 * a0 * a4 * b3 * pow(d2, 2) * d4 - 8 * a0 * a4 * b4 * d0 * pow(d5, 2) +
            8 * a0 * a4 * b4 * pow(d0, 2) * d5 + 32 * a0 * a4 * b4 * pow(d2, 2) * d3 +
            8 * a0 * a4 * b5 * pow(d0, 2) * d4 + 6 * a0 * a5 * b0 * d3 * pow(d5, 2) -
            12 * a0 * a5 * b0 * pow(d3, 2) * d5 + 6 * a0 * a5 * b3 * d0 * pow(d5, 2) -
            6 * a0 * a5 * b3 * pow(d0, 2) * d5 + 8 * a0 * a5 * b4 * pow(d0, 2) * d4 +
            12 * a0 * a5 * b5 * d0 * pow(d3, 2) - 6 * a0 * a5 * b5 * pow(d0, 2) * d3 -
            18 * a0 * b0 * b3 * c5 * pow(d5, 2) + 8 * a0 * b0 * b4 * c4 * pow(d5, 2) +
            6 * a0 * b0 * b5 * c3 * pow(d5, 2) - 12 * a0 * b0 * b5 * c5 * pow(d3, 2) -
            32 * a0 * b3 * b4 * c4 * pow(d2, 2) + 6 * a0 * b3 * b5 * c0 * pow(d5, 2) -
            6 * a0 * b3 * b5 * c5 * pow(d0, 2) + 8 * a0 * b4 * b5 * c4 * pow(d0, 2) +
            8 * a1 * a3 * b1 * d3 * pow(d5, 2) - 8 * a1 * a3 * b3 * d1 * pow(d5, 2) +
            8 * a1 * b1 * b3 * c3 * pow(d5, 2) + 32 * a2 * a3 * b2 * pow(d1, 2) * d5 -
            32 * a2 * a3 * b5 * pow(d1, 2) * d2 - 128 * a2 * a4 * b2 * pow(d1, 2) * d4 +
            128 * a2 * a4 * b4 * pow(d1, 2) * d2 + 32 * a2 * a5 * b2 * pow(d1, 2) * d3 -
            32 * a2 * a5 * b3 * pow(d1, 2) * d2 + 32 * a2 * b2 * b3 * c5 * pow(d1, 2) -
            128 * a2 * b2 * b4 * c4 * pow(d1, 2) + 32 * a2 * b2 * b5 * c3 * pow(d1, 2) -
            32 * a2 * b3 * b5 * c2 * pow(d1, 2) - 32 * a3 * a4 * b0 * pow(d2, 2) * d4 +
            32 * a3 * a4 * b4 * d0 * pow(d2, 2) + 6 * a3 * a5 * b0 * d0 * pow(d5, 2) -
            6 * a3 * a5 * b0 * pow(d0, 2) * d5 - 32 * a3 * a5 * b2 * pow(d1, 2) * d2 -
            16 * a3 * a5 * b3 * d0 * pow(d2, 2) + 16 * a3 * b0 * b3 * c5 * pow(d2, 2) -
            32 * a3 * b0 * b4 * c4 * pow(d2, 2) + 6 * a3 * b0 * b5 * c0 * pow(d5, 2) -
            6 * a3 * b0 * b5 * c5 * pow(d0, 2) - 8 * a3 * b1 * b3 * c1 * pow(d5, 2) -
            32 * a3 * b2 * b5 * c2 * pow(d1, 2) - 16 * a3 * b3 * b5 * c0 * pow(d2, 2) +
            8 * a4 * a5 * b0 * pow(d0, 2) * d4 - 32 * a4 * b0 * b3 * c4 * pow(d2, 2) -
            8 * a4 * b0 * b4 * c0 * pow(d5, 2) + 32 * a4 * b0 * b4 * c3 * pow(d2, 2) +
            8 * a4 * b0 * b4 * c5 * pow(d0, 2) + 8 * a4 * b0 * b5 * c4 * pow(d0, 2) +
            128 * a4 * b2 * b4 * c2 * pow(d1, 2) + 32 * a4 * b3 * b4 * c0 * pow(d2, 2) -
            24 * a4 * b4 * b5 * c0 * pow(d0, 2) + 6 * a5 * b0 * b3 * c0 * pow(d5, 2) -
            6 * a5 * b0 * b3 * c5 * pow(d0, 2) + 8 * a5 * b0 * b4 * c4 * pow(d0, 2) +
            12 * a5 * b0 * b5 * c0 * pow(d3, 2) - 6 * a5 * b0 * b5 * c3 * pow(d0, 2) -
            32 * a5 * b2 * b3 * c2 * pow(d1, 2) + 18 * a5 * b3 * b5 * c0 * pow(d0, 2) -
            6 * a0 * a3 * b3 * d3 * pow(d5, 2) - 32 * a0 * a4 * b4 * pow(d1, 2) * d5 +
            32 * a0 * a4 * b5 * pow(d1, 2) * d4 - 8 * a0 * a5 * b0 * pow(d4, 2) * d5 +
            32 * a0 * a5 * b4 * pow(d1, 2) * d4 + 8 * a0 * a5 * b5 * d0 * pow(d4, 2) -
            16 * a0 * a5 * b5 * pow(d1, 2) * d3 - 8 * a0 * b0 * b5 * c5 * pow(d4, 2) +
            32 * a0 * b4 * b5 * c4 * pow(d1, 2) + 32 * a1 * a5 * b1 * pow(d2, 2) * d5 -
            32 * a1 * a5 * b5 * d1 * pow(d2, 2) + 32 * a1 * b1 * b5 * c5 * pow(d2, 2) +
            32 * a2 * a3 * b2 * d3 * pow(d4, 2) - 32 * a2 * a3 * b3 * d2 * pow(d4, 2) -
            8 * a2 * a5 * b2 * pow(d0, 2) * d5 + 8 * a2 * a5 * b5 * pow(d0, 2) * d2 +
            32 * a2 * b2 * b3 * c3 * pow(d4, 2) - 8 * a2 * b2 * b5 * c5 * pow(d0, 2) +
            8 * a3 * a4 * b3 * pow(d0, 2) * d4 - 8 * a3 * a4 * b4 * pow(d0, 2) * d3 +
            6 * a3 * a5 * b3 * pow(d0, 2) * d3 + 16 * a3 * a5 * b5 * d0 * pow(d1, 2) -
            6 * a3 * b0 * b3 * c3 * pow(d5, 2) - 32 * a3 * b2 * b3 * c2 * pow(d4, 2) +
            8 * a3 * b3 * b4 * c4 * pow(d0, 2) + 6 * a3 * b3 * b5 * c3 * pow(d0, 2) +
            32 * a4 * a5 * b0 * pow(d1, 2) * d4 - 32 * a4 * a5 * b4 * d0 * pow(d1, 2) -
            32 * a4 * b0 * b4 * c5 * pow(d1, 2) + 32 * a4 * b0 * b5 * c4 * pow(d1, 2) -
            8 * a4 * b3 * b4 * c3 * pow(d0, 2) - 32 * a4 * b4 * b5 * c0 * pow(d1, 2) +
            32 * a5 * b0 * b4 * c4 * pow(d1, 2) + 8 * a5 * b0 * b5 * c0 * pow(d4, 2) -
            16 * a5 * b0 * b5 * c3 * pow(d1, 2) - 32 * a5 * b1 * b5 * c1 * pow(d2, 2) +
            8 * a5 * b2 * b5 * c2 * pow(d0, 2) + 16 * a5 * b3 * b5 * c0 * pow(d1, 2) +
            8 * a0 * a3 * b3 * pow(d4, 2) * d5 - 8 * a0 * a3 * b5 * d3 * pow(d4, 2) -
            8 * a0 * a3 * b5 * pow(d2, 2) * d5 - 8 * a0 * a5 * b3 * d3 * pow(d4, 2) -
            8 * a0 * a5 * b3 * pow(d2, 2) * d5 + 6 * a0 * a5 * b5 * pow(d0, 2) * d5 +
            8 * a0 * a5 * b5 * pow(d2, 2) * d3 - 8 * a0 * b3 * b5 * c3 * pow(d4, 2) -
            8 * a0 * b3 * b5 * c5 * pow(d2, 2) - 16 * a1 * a2 * b4 * d3 * pow(d5, 2) +
            16 * a1 * a2 * b4 * pow(d3, 2) * d5 + 8 * a1 * a3 * b5 * d1 * pow(d5, 2) +
            32 * a1 * a4 * b1 * d4 * pow(d5, 2) - 16 * a1 * a4 * b2 * d3 * pow(d5, 2) +
            16 * a1 * a4 * b2 * pow(d3, 2) * d5 - 32 * a1 * a4 * b4 * d1 * pow(d5, 2) -
            16 * a1 * a4 * b5 * d2 * pow(d3, 2) + 8 * a1 * a5 * b1 * d3 * pow(d5, 2) -
            8 * a1 * a5 * b1 * pow(d3, 2) * d5 + 8 * a1 * a5 * b3 * d1 * pow(d5, 2) -
            16 * a1 * a5 * b4 * d2 * pow(d3, 2) + 8 * a1 * a5 * b5 * d1 * pow(d3, 2) -
            24 * a1 * b1 * b3 * c5 * pow(d5, 2) + 32 * a1 * b1 * b4 * c4 * pow(d5, 2) +
            8 * a1 * b1 * b5 * c3 * pow(d5, 2) - 8 * a1 * b1 * b5 * c5 * pow(d3, 2) -
            16 * a1 * b2 * b4 * c3 * pow(d5, 2) + 16 * a1 * b2 * b4 * c5 * pow(d3, 2) +
            8 * a1 * b3 * b5 * c1 * pow(d5, 2) - 16 * a1 * b4 * b5 * c2 * pow(d3, 2) +
            8 * a2 * a3 * b2 * d3 * pow(d5, 2) - 8 * a2 * a3 * b2 * pow(d3, 2) * d5 -
            8 * a2 * a3 * b3 * d2 * pow(d5, 2) + 16 * a2 * a3 * b4 * d1 * pow(d5, 2) -
            8 * a2 * a3 * b5 * d2 * pow(d3, 2) - 16 * a2 * a4 * b1 * d3 * pow(d5, 2) +
            16 * a2 * a4 * b1 * pow(d3, 2) * d5 - 32 * a2 * a4 * b2 * pow(d3, 2) * d4 +
            16 * a2 * a4 * b3 * d1 * pow(d5, 2) + 32 * a2 * a4 * b4 * d2 * pow(d3, 2) -
            32 * a2 * a5 * b2 * pow(d1, 2) * d5 - 8 * a2 * a5 * b3 * d2 * pow(d3, 2) +
            32 * a2 * a5 * b5 * pow(d1, 2) * d2 - 16 * a2 * b1 * b4 * c3 * pow(d5, 2) +
            16 * a2 * b1 * b4 * c5 * pow(d3, 2) + 8 * a2 * b2 * b3 * c3 * pow(d5, 2) -
            8 * a2 * b2 * b3 * c5 * pow(d3, 2) - 32 * a2 * b2 * b4 * c4 * pow(d3, 2) +
            24 * a2 * b2 * b5 * c3 * pow(d3, 2) - 32 * a2 * b2 * b5 * c5 * pow(d1, 2) +
            16 * a2 * b3 * b4 * c1 * pow(d5, 2) - 8 * a2 * b3 * b5 * c2 * pow(d3, 2) +
            16 * a3 * a4 * b2 * d1 * pow(d5, 2) - 8 * a3 * a5 * b0 * d3 * pow(d4, 2) -
            8 * a3 * a5 * b0 * pow(d2, 2) * d5 + 8 * a3 * a5 * b1 * d1 * pow(d5, 2) -
            8 * a3 * a5 * b2 * d2 * pow(d3, 2) + 8 * a3 * a5 * b3 * d0 * pow(d4, 2) +
            8 * a3 * a5 * b5 * d0 * pow(d2, 2) + 8 * a3 * b0 * b3 * c5 * pow(d4, 2) -
            8 * a3 * b0 * b5 * c3 * pow(d4, 2) - 8 * a3 * b0 * b5 * c5 * pow(d2, 2) +
            8 * a3 * b1 * b5 * c1 * pow(d5, 2) - 8 * a3 * b2 * b3 * c2 * pow(d5, 2) +
            16 * a3 * b2 * b4 * c1 * pow(d5, 2) - 8 * a3 * b2 * b5 * c2 * pow(d3, 2) +
            8 * a3 * b3 * b5 * c0 * pow(d4, 2) - 16 * a4 * a5 * b1 * d2 * pow(d3, 2) -
            16 * a4 * b1 * b2 * c3 * pow(d5, 2) + 16 * a4 * b1 * b2 * c5 * pow(d3, 2) -
            32 * a4 * b1 * b4 * c1 * pow(d5, 2) - 16 * a4 * b1 * b5 * c2 * pow(d3, 2) +
            16 * a4 * b2 * b3 * c1 * pow(d5, 2) + 32 * a4 * b2 * b4 * c2 * pow(d3, 2) -
            8 * a5 * b0 * b3 * c3 * pow(d4, 2) - 8 * a5 * b0 * b3 * c5 * pow(d2, 2) +
            8 * a5 * b0 * b5 * c3 * pow(d2, 2) + 6 * a5 * b0 * b5 * c5 * pow(d0, 2) +
            8 * a5 * b1 * b3 * c1 * pow(d5, 2) - 16 * a5 * b1 * b4 * c2 * pow(d3, 2) +
            8 * a5 * b1 * b5 * c1 * pow(d3, 2) - 8 * a5 * b2 * b3 * c2 * pow(d3, 2) +
            32 * a5 * b2 * b5 * c2 * pow(d1, 2) + 8 * a5 * b3 * b5 * c0 * pow(d2, 2) -
            8 * a0 * a3 * b4 * d4 * pow(d5, 2) - 6 * a0 * a3 * b5 * d3 * pow(d5, 2) +
            6 * a0 * a3 * b5 * pow(d3, 2) * d5 - 8 * a0 * a4 * b3 * d4 * pow(d5, 2) +
            8 * a0 * a4 * b4 * d3 * pow(d5, 2) - 8 * a0 * a4 * b4 * pow(d3, 2) * d5 +
            8 * a0 * a4 * b5 * pow(d3, 2) * d4 - 6 * a0 * a5 * b3 * d3 * pow(d5, 2) +
            6 * a0 * a5 * b3 * pow(d3, 2) * d5 + 8 * a0 * a5 * b4 * pow(d3, 2) * d4 +
            8 * a0 * a5 * b5 * pow(d1, 2) * d5 - 8 * a0 * b3 * b4 * c4 * pow(d5, 2) -
            6 * a0 * b3 * b5 * c3 * pow(d5, 2) + 6 * a0 * b3 * b5 * c5 * pow(d3, 2) +
            8 * a0 * b4 * b5 * c4 * pow(d3, 2) - 32 * a1 * a5 * b1 * pow(d4, 2) * d5 +
            32 * a1 * a5 * b5 * d1 * pow(d4, 2) - 32 * a1 * b1 * b5 * c5 * pow(d4, 2) -
            8 * a3 * a4 * b0 * d4 * pow(d5, 2) + 32 * a3 * a4 * b3 * pow(d2, 2) * d4 +
            8 * a3 * a4 * b4 * d0 * pow(d5, 2) - 16 * a3 * a4 * b4 * pow(d0, 2) * d5 -
            32 * a3 * a4 * b4 * pow(d2, 2) * d3 - 6 * a3 * a5 * b0 * d3 * pow(d5, 2) +
            6 * a3 * a5 * b0 * pow(d3, 2) * d5 - 6 * a3 * a5 * b3 * d0 * pow(d5, 2) +
            12 * a3 * a5 * b3 * pow(d0, 2) * d5 + 8 * a3 * a5 * b3 * pow(d2, 2) * d3 +
            6 * a3 * a5 * b5 * d0 * pow(d3, 2) - 12 * a3 * a5 * b5 * pow(d0, 2) * d3 +
            18 * a3 * b0 * b3 * c5 * pow(d5, 2) - 8 * a3 * b0 * b4 * c4 * pow(d5, 2) -
            6 * a3 * b0 * b5 * c3 * pow(d5, 2) + 6 * a3 * b0 * b5 * c5 * pow(d3, 2) +
            32 * a3 * b3 * b4 * c4 * pow(d2, 2) - 6 * a3 * b3 * b5 * c0 * pow(d5, 2) +
            8 * a3 * b3 * b5 * c3 * pow(d2, 2) + 12 * a3 * b3 * b5 * c5 * pow(d0, 2) +
            8 * a4 * a5 * b0 * pow(d3, 2) * d4 - 8 * a4 * a5 * b4 * d0 * pow(d3, 2) +
            16 * a4 * a5 * b4 * pow(d0, 2) * d3 - 8 * a4 * b0 * b3 * c4 * pow(d5, 2) +
            8 * a4 * b0 * b4 * c3 * pow(d5, 2) - 8 * a4 * b0 * b4 * c5 * pow(d3, 2) +
            8 * a4 * b0 * b5 * c4 * pow(d3, 2) + 8 * a4 * b3 * b4 * c0 * pow(d5, 2) -
            32 * a4 * b3 * b4 * c3 * pow(d2, 2) - 16 * a4 * b3 * b4 * c5 * pow(d0, 2) -
            8 * a4 * b4 * b5 * c0 * pow(d3, 2) + 16 * a4 * b4 * b5 * c3 * pow(d0, 2) -
            6 * a5 * b0 * b3 * c3 * pow(d5, 2) + 6 * a5 * b0 * b3 * c5 * pow(d3, 2) +
            8 * a5 * b0 * b4 * c4 * pow(d3, 2) - 18 * a5 * b0 * b5 * c3 * pow(d3, 2) +
            8 * a5 * b0 * b5 * c5 * pow(d1, 2) + 32 * a5 * b1 * b5 * c1 * pow(d4, 2) +
            6 * a5 * b3 * b5 * c0 * pow(d3, 2) - 12 * a5 * b3 * b5 * c3 * pow(d0, 2) +
            8 * a0 * a3 * b5 * pow(d4, 2) * d5 + 8 * a0 * a5 * b3 * pow(d4, 2) * d5 -
            8 * a0 * a5 * b5 * d3 * pow(d4, 2) + 8 * a0 * b3 * b5 * c5 * pow(d4, 2) -
            8 * a2 * a5 * b2 * pow(d3, 2) * d5 + 8 * a2 * a5 * b5 * d2 * pow(d3, 2) -
            8 * a2 * b2 * b5 * c5 * pow(d3, 2) + 8 * a3 * a5 * b0 * pow(d4, 2) * d5 +
            8 * a3 * a5 * b3 * pow(d1, 2) * d5 - 8 * a3 * a5 * b5 * d0 * pow(d4, 2) -
            8 * a3 * a5 * b5 * pow(d1, 2) * d3 + 8 * a3 * b0 * b5 * c5 * pow(d4, 2) +
            8 * a3 * b3 * b5 * c5 * pow(d1, 2) + 8 * a5 * b0 * b3 * c5 * pow(d4, 2) -
            8 * a5 * b0 * b5 * c3 * pow(d4, 2) + 8 * a5 * b2 * b5 * c2 * pow(d3, 2) -
            8 * a5 * b3 * b5 * c0 * pow(d4, 2) - 8 * a5 * b3 * b5 * c3 * pow(d1, 2) +
            6 * a0 * a5 * b5 * pow(d3, 2) * d5 + 8 * a3 * a5 * b3 * pow(d2, 2) * d5 -
            6 * a3 * a5 * b5 * pow(d0, 2) * d5 - 8 * a3 * a5 * b5 * pow(d2, 2) * d3 +
            8 * a3 * b3 * b5 * c5 * pow(d2, 2) + 8 * a4 * a5 * b4 * pow(d0, 2) * d5 -
            8 * a4 * a5 * b5 * pow(d0, 2) * d4 + 8 * a4 * b4 * b5 * c5 * pow(d0, 2) +
            6 * a5 * b0 * b5 * c5 * pow(d3, 2) - 8 * a5 * b3 * b5 * c3 * pow(d2, 2) -
            6 * a5 * b3 * b5 * c5 * pow(d0, 2) - 8 * a5 * b4 * b5 * c4 * pow(d0, 2) +
            8 * a3 * a4 * b3 * d4 * pow(d5, 2) - 8 * a3 * a4 * b4 * d3 * pow(d5, 2) +
            6 * a3 * a5 * b3 * d3 * pow(d5, 2) - 8 * a3 * a5 * b5 * pow(d1, 2) * d5 +
            8 * a3 * b3 * b4 * c4 * pow(d5, 2) + 6 * a3 * b3 * b5 * c3 * pow(d5, 2) +
            32 * a4 * a5 * b4 * pow(d1, 2) * d5 - 32 * a4 * a5 * b5 * pow(d1, 2) * d4 -
            8 * a4 * b3 * b4 * c3 * pow(d5, 2) + 32 * a4 * b4 * b5 * c5 * pow(d1, 2) -
            8 * a5 * b3 * b5 * c5 * pow(d1, 2) - 32 * a5 * b4 * b5 * c4 * pow(d1, 2) -
            8 * a3 * a5 * b3 * pow(d4, 2) * d5 + 8 * a3 * a5 * b5 * d3 * pow(d4, 2) -
            8 * a3 * b3 * b5 * c5 * pow(d4, 2) + 8 * a5 * b3 * b5 * c3 * pow(d4, 2) -
            6 * a3 * a5 * b5 * pow(d3, 2) * d5 + 8 * a4 * a5 * b4 * pow(d3, 2) * d5 -
            8 * a4 * a5 * b5 * pow(d3, 2) * d4 + 8 * a4 * b4 * b5 * c5 * pow(d3, 2) -
            6 * a5 * b3 * b5 * c5 * pow(d3, 2) - 8 * a5 * b4 * b5 * c4 * pow(d3, 2) -
            8 * b0 * b3 * b5 * pow(c1, 2) * d0 + 16 * b0 * b1 * b4 * pow(c3, 2) * d2 -
            8 * b0 * b1 * b5 * pow(c3, 2) * d1 + 8 * b0 * b2 * b3 * pow(c3, 2) * d2 +
            8 * b0 * b3 * b5 * pow(c2, 2) * d0 - 16 * b1 * b2 * b3 * pow(c0, 2) * d4 +
            16 * b1 * b2 * b4 * pow(c0, 2) * d3 - 16 * b1 * b2 * b4 * pow(c3, 2) * d0 +
            8 * b1 * b3 * b5 * pow(c0, 2) * d1 - 32 * b0 * b1 * b5 * pow(c4, 2) * d1 +
            32 * b0 * b2 * b3 * pow(c4, 2) * d2 - 8 * b0 * b3 * b4 * pow(c0, 2) * d4 +
            6 * b0 * b3 * b5 * pow(c0, 2) * d3 - 6 * b0 * b3 * b5 * pow(c3, 2) * d0 -
            8 * b0 * b1 * b5 * pow(c5, 2) * d1 + 8 * b0 * b2 * b3 * pow(c5, 2) * d2 -
            16 * b0 * b2 * b4 * pow(c5, 2) * d1 + 8 * b0 * b3 * b5 * pow(c1, 2) * d3 -
            16 * b1 * b2 * b4 * pow(c0, 2) * d5 + 16 * b1 * b2 * b4 * pow(c5, 2) * d0 +
            16 * b1 * b2 * b5 * pow(c0, 2) * d4 + 32 * b1 * b3 * b5 * pow(c2, 2) * d1 -
            8 * b2 * b3 * b5 * pow(c0, 2) * d2 - 32 * b0 * b3 * b4 * pow(c2, 2) * d4 -
            6 * b0 * b3 * b5 * pow(c0, 2) * d5 + 6 * b0 * b3 * b5 * pow(c5, 2) * d0 +
            8 * b0 * b4 * b5 * pow(c0, 2) * d4 - 32 * b2 * b3 * b5 * pow(c1, 2) * d2 +
            32 * b0 * b4 * b5 * pow(c1, 2) * d4 - 8 * b0 * b3 * b5 * pow(c2, 2) * d5 -
            8 * b0 * b3 * b5 * pow(c4, 2) * d3 + 16 * b1 * b2 * b4 * pow(c3, 2) * d5 -
            16 * b1 * b2 * b4 * pow(c5, 2) * d3 + 8 * b1 * b3 * b5 * pow(c5, 2) * d1 -
            16 * b1 * b4 * b5 * pow(c3, 2) * d2 + 16 * b2 * b3 * b4 * pow(c5, 2) * d1 -
            8 * b2 * b3 * b5 * pow(c3, 2) * d2 - 8 * b0 * b3 * b4 * pow(c5, 2) * d4 +
            6 * b0 * b3 * b5 * pow(c3, 2) * d5 - 6 * b0 * b3 * b5 * pow(c5, 2) * d3 +
            8 * b0 * b4 * b5 * pow(c3, 2) * d4 + 8 * b0 * b3 * b5 * pow(c4, 2) * d5 +
            8 * a0 * pow(b3, 2) * c1 * d0 * d1 - 8 * a1 * pow(b3, 2) * c0 * d0 * d1 +
            8 * b0 * pow(b3, 2) * c0 * c1 * d1 - 8 * b1 * pow(b3, 2) * c0 * c1 * d0 -
            6 * a0 * pow(b3, 2) * c0 * d0 * d3 + 32 * a0 * pow(b4, 2) * c1 * d0 * d1 -
            32 * a1 * pow(b4, 2) * c0 * d0 * d1 - 6 * b0 * pow(b3, 2) * c0 * c3 * d0 +
            32 * b0 * pow(b4, 2) * c0 * c1 * d1 - 32 * b1 * pow(b4, 2) * c0 * c1 * d0 -
            8 * a0 * pow(b1, 2) * c3 * d0 * d3 - 8 * a0 * pow(b3, 2) * c2 * d0 * d2 -
            8 * a0 * pow(b4, 2) * c0 * d0 * d3 + 8 * a0 * pow(b5, 2) * c1 * d0 * d1 -
            8 * a1 * pow(b5, 2) * c0 * d0 * d1 + 8 * a2 * pow(b3, 2) * c0 * d0 * d2 +
            8 * a3 * pow(b1, 2) * c0 * d0 * d3 - 8 * b0 * pow(b1, 2) * c0 * c3 * d3 -
            8 * b0 * pow(b3, 2) * c0 * c2 * d2 - 8 * b0 * pow(b4, 2) * c0 * c3 * d0 +
            8 * b0 * pow(b5, 2) * c0 * c1 * d1 - 8 * b1 * pow(b5, 2) * c0 * c1 * d0 +
            8 * b2 * pow(b3, 2) * c0 * c2 * d0 + 8 * pow(b1, 2) * b3 * c0 * c3 * d0 +
            8 * a0 * pow(b2, 2) * c3 * d0 * d3 + 6 * a0 * pow(b3, 2) * c0 * d0 * d5 -
            32 * a0 * pow(b4, 2) * c2 * d0 * d2 - 6 * a0 * pow(b5, 2) * c0 * d0 * d3 +
            8 * a1 * pow(b0, 2) * c3 * d1 * d3 + 32 * a2 * pow(b4, 2) * c0 * d0 * d2 -
            8 * a3 * pow(b0, 2) * c1 * d1 * d3 - 8 * a3 * pow(b2, 2) * c0 * d0 * d3 +
            8 * b0 * pow(b2, 2) * c0 * c3 * d3 + 6 * b0 * pow(b3, 2) * c0 * c5 * d0 -
            32 * b0 * pow(b4, 2) * c0 * c2 * d2 - 6 * b0 * pow(b5, 2) * c0 * c3 * d0 +
            32 * b2 * pow(b4, 2) * c0 * c2 * d0 + 8 * pow(b0, 2) * b1 * c1 * c3 * d3 -
            8 * pow(b0, 2) * b3 * c1 * c3 * d1 - 8 * pow(b2, 2) * b3 * c0 * c3 * d0 +
            8 * a0 * pow(b1, 2) * c0 * d3 * d5 + 8 * a0 * pow(b1, 2) * c3 * d0 * d5 -
            32 * a0 * pow(b1, 2) * c4 * d0 * d4 + 8 * a0 * pow(b1, 2) * c5 * d0 * d3 +
            8 * a0 * pow(b4, 2) * c0 * d0 * d5 - 8 * a0 * pow(b5, 2) * c2 * d0 * d2 -
            32 * a1 * pow(b3, 2) * c2 * d1 * d2 + 32 * a2 * pow(b3, 2) * c1 * d1 * d2 +
            8 * a2 * pow(b5, 2) * c0 * d0 * d2 + 6 * a3 * pow(b0, 2) * c3 * d0 * d3 -
            8 * a3 * pow(b1, 2) * c0 * d0 * d5 + 32 * a4 * pow(b1, 2) * c0 * d0 * d4 -
            8 * a5 * pow(b1, 2) * c0 * d0 * d3 + 8 * b0 * pow(b1, 2) * c0 * c3 * d5 -
            32 * b0 * pow(b1, 2) * c0 * c4 * d4 + 8 * b0 * pow(b1, 2) * c0 * c5 * d3 +
            8 * b0 * pow(b1, 2) * c3 * c5 * d0 + 8 * b0 * pow(b4, 2) * c0 * c5 * d0 -
            8 * b0 * pow(b5, 2) * c0 * c2 * d2 - 32 * b1 * pow(b3, 2) * c1 * c2 * d2 +
            32 * b2 * pow(b3, 2) * c1 * c2 * d1 + 8 * b2 * pow(b5, 2) * c0 * c2 * d0 +
            6 * pow(b0, 2) * b3 * c0 * c3 * d3 - 8 * pow(b1, 2) * b3 * c0 * c5 * d0 +
            32 * pow(b1, 2) * b4 * c0 * c4 * d0 - 8 * pow(b1, 2) * b5 * c0 * c3 * d0 -
            8 * a0 * pow(b2, 2) * c0 * d3 * d5 - 8 * a0 * pow(b2, 2) * c3 * d0 * d5 +
            32 * a0 * pow(b2, 2) * c4 * d0 * d4 - 8 * a0 * pow(b2, 2) * c5 * d0 * d3 -
            8 * a0 * pow(b3, 2) * c1 * d1 * d5 + 16 * a0 * pow(b3, 2) * c1 * d2 * d4 +
            16 * a0 * pow(b3, 2) * c2 * d1 * d4 - 8 * a0 * pow(b3, 2) * c2 * d2 * d3 +
            16 * a0 * pow(b3, 2) * c4 * d1 * d2 + 8 * a0 * pow(b4, 2) * c3 * d0 * d3 +
            6 * a0 * pow(b5, 2) * c0 * d0 * d5 - 16 * a0 * pow(b5, 2) * c1 * d1 * d3 -
            8 * a1 * pow(b0, 2) * c1 * d3 * d5 - 8 * a1 * pow(b0, 2) * c3 * d1 * d5 +
            32 * a1 * pow(b0, 2) * c4 * d1 * d4 - 8 * a1 * pow(b0, 2) * c5 * d1 * d3 +
            32 * a1 * pow(b2, 2) * c3 * d1 * d3 + 8 * a1 * pow(b3, 2) * c0 * d1 * d5 +
            8 * a1 * pow(b3, 2) * c1 * d0 * d5 + 8 * a1 * pow(b3, 2) * c5 * d0 * d1 -
            128 * a1 * pow(b4, 2) * c2 * d1 * d2 - 8 * a2 * pow(b0, 2) * c3 * d2 * d3 -
            16 * a2 * pow(b3, 2) * c0 * d1 * d4 - 8 * a2 * pow(b3, 2) * c0 * d2 * d3 -
            16 * a2 * pow(b3, 2) * c1 * d0 * d4 - 8 * a2 * pow(b3, 2) * c2 * d0 * d3 -
            8 * a2 * pow(b3, 2) * c3 * d0 * d2 - 16 * a2 * pow(b3, 2) * c4 * d0 * d1 +
            128 * a2 * pow(b4, 2) * c1 * d1 * d2 + 8 * a3 * pow(b0, 2) * c1 * d1 * d5 -
            16 * a3 * pow(b0, 2) * c1 * d2 * d4 - 16 * a3 * pow(b0, 2) * c2 * d1 * d4 +
            8 * a3 * pow(b0, 2) * c2 * d2 * d3 - 16 * a3 * pow(b0, 2) * c4 * d1 * d2 +
            8 * a3 * pow(b2, 2) * c0 * d0 * d5 - 32 * a3 * pow(b2, 2) * c1 * d1 * d3 +
            24 * a3 * pow(b3, 2) * c2 * d0 * d2 - 8 * a3 * pow(b4, 2) * c0 * d0 * d3 +
            16 * a3 * pow(b5, 2) * c1 * d0 * d1 - 32 * a4 * pow(b0, 2) * c1 * d1 * d4 +
            16 * a4 * pow(b0, 2) * c1 * d2 * d3 + 16 * a4 * pow(b0, 2) * c2 * d1 * d3 +
            16 * a4 * pow(b0, 2) * c3 * d1 * d2 - 32 * a4 * pow(b2, 2) * c0 * d0 * d4 +
            8 * a5 * pow(b0, 2) * c1 * d1 * d3 + 8 * a5 * pow(b2, 2) * c0 * d0 * d3 -
            8 * a5 * pow(b3, 2) * c1 * d0 * d1 - 8 * b0 * pow(b2, 2) * c0 * c3 * d5 +
            32 * b0 * pow(b2, 2) * c0 * c4 * d4 - 8 * b0 * pow(b2, 2) * c0 * c5 * d3 -
            8 * b0 * pow(b2, 2) * c3 * c5 * d0 + 16 * b0 * pow(b3, 2) * c1 * c2 * d4 +
            16 * b0 * pow(b3, 2) * c1 * c4 * d2 - 8 * b0 * pow(b3, 2) * c1 * c5 * d1 -
            8 * b0 * pow(b3, 2) * c2 * c3 * d2 + 16 * b0 * pow(b3, 2) * c2 * c4 * d1 +
            8 * b0 * pow(b4, 2) * c0 * c3 * d3 + 6 * b0 * pow(b5, 2) * c0 * c5 * d0 -
            16 * b0 * pow(b5, 2) * c1 * c3 * d1 + 32 * b1 * pow(b2, 2) * c1 * c3 * d3 +
            8 * b1 * pow(b3, 2) * c0 * c1 * d5 + 8 * b1 * pow(b3, 2) * c0 * c5 * d1 +
            8 * b1 * pow(b3, 2) * c1 * c5 * d0 - 128 * b1 * pow(b4, 2) * c1 * c2 * d2 -
            16 * b2 * pow(b3, 2) * c0 * c1 * d4 - 8 * b2 * pow(b3, 2) * c0 * c2 * d3 -
            8 * b2 * pow(b3, 2) * c0 * c3 * d2 - 16 * b2 * pow(b3, 2) * c0 * c4 * d1 -
            16 * b2 * pow(b3, 2) * c1 * c4 * d0 - 8 * b2 * pow(b3, 2) * c2 * c3 * d0 +
            128 * b2 * pow(b4, 2) * c1 * c2 * d1 - 8 * b3 * pow(b4, 2) * c0 * c3 * d0 +
            16 * b3 * pow(b5, 2) * c0 * c1 * d1 - 8 * pow(b0, 2) * b1 * c1 * c3 * d5 +
            32 * pow(b0, 2) * b1 * c1 * c4 * d4 - 8 * pow(b0, 2) * b1 * c1 * c5 * d3 -
            8 * pow(b0, 2) * b1 * c3 * c5 * d1 - 8 * pow(b0, 2) * b2 * c2 * c3 * d3 -
            16 * pow(b0, 2) * b3 * c1 * c2 * d4 - 16 * pow(b0, 2) * b3 * c1 * c4 * d2 +
            8 * pow(b0, 2) * b3 * c1 * c5 * d1 + 8 * pow(b0, 2) * b3 * c2 * c3 * d2 -
            16 * pow(b0, 2) * b3 * c2 * c4 * d1 + 16 * pow(b0, 2) * b4 * c1 * c2 * d3 +
            16 * pow(b0, 2) * b4 * c1 * c3 * d2 - 32 * pow(b0, 2) * b4 * c1 * c4 * d1 +
            16 * pow(b0, 2) * b4 * c2 * c3 * d1 + 8 * pow(b0, 2) * b5 * c1 * c3 * d1 +
            8 * pow(b2, 2) * b3 * c0 * c5 * d0 - 32 * pow(b2, 2) * b3 * c1 * c3 * d1 -
            32 * pow(b2, 2) * b4 * c0 * c4 * d0 + 8 * pow(b2, 2) * b5 * c0 * c3 * d0 -
            8 * pow(b3, 2) * b5 * c0 * c1 * d1 + 18 * a0 * pow(b0, 2) * c3 * d3 * d5 -
            24 * a0 * pow(b0, 2) * c4 * d3 * d4 - 8 * a0 * pow(b1, 2) * c5 * d0 * d5 +
            6 * a0 * pow(b3, 2) * c0 * d3 * d5 + 6 * a0 * pow(b3, 2) * c3 * d0 * d5 -
            8 * a0 * pow(b3, 2) * c4 * d0 * d4 + 6 * a0 * pow(b3, 2) * c5 * d0 * d3 -
            32 * a0 * pow(b4, 2) * c1 * d1 * d5 + 32 * a0 * pow(b4, 2) * c2 * d2 * d3 +
            12 * a0 * pow(b5, 2) * c3 * d0 * d3 + 32 * a1 * pow(b4, 2) * c0 * d1 * d5 +
            32 * a1 * pow(b4, 2) * c1 * d0 * d5 + 32 * a1 * pow(b4, 2) * c5 * d0 * d1 -
            32 * a1 * pow(b5, 2) * c2 * d1 * d2 - 32 * a2 * pow(b1, 2) * c3 * d2 * d3 -
            32 * a2 * pow(b4, 2) * c0 * d2 * d3 - 32 * a2 * pow(b4, 2) * c2 * d0 * d3 -
            32 * a2 * pow(b4, 2) * c3 * d0 * d2 + 32 * a2 * pow(b5, 2) * c1 * d1 * d2 -
            6 * a3 * pow(b0, 2) * c0 * d3 * d5 - 6 * a3 * pow(b0, 2) * c3 * d0 * d5 +
            8 * a3 * pow(b0, 2) * c4 * d0 * d4 - 6 * a3 * pow(b0, 2) * c5 * d0 * d3 +
            32 * a3 * pow(b1, 2) * c2 * d2 * d3 + 8 * a3 * pow(b2, 2) * c3 * d0 * d3 -
            18 * a3 * pow(b3, 2) * c0 * d0 * d5 + 32 * a3 * pow(b4, 2) * c2 * d0 * d2 -
            12 * a3 * pow(b5, 2) * c0 * d0 * d3 + 8 * a4 * pow(b0, 2) * c0 * d3 * d4 +
            8 * a4 * pow(b0, 2) * c3 * d0 * d4 + 8 * a4 * pow(b0, 2) * c4 * d0 * d3 +
            8 * a4 * pow(b3, 2) * c0 * d0 * d4 - 6 * a5 * pow(b0, 2) * c3 * d0 * d3 +
            8 * a5 * pow(b1, 2) * c0 * d0 * d5 + 6 * a5 * pow(b3, 2) * c0 * d0 * d3 -
            32 * a5 * pow(b4, 2) * c1 * d0 * d1 - 8 * b0 * pow(b1, 2) * c0 * c5 * d5 +
            6 * b0 * pow(b3, 2) * c0 * c3 * d5 - 8 * b0 * pow(b3, 2) * c0 * c4 * d4 +
            6 * b0 * pow(b3, 2) * c0 * c5 * d3 + 6 * b0 * pow(b3, 2) * c3 * c5 * d0 -
            32 * b0 * pow(b4, 2) * c1 * c5 * d1 + 32 * b0 * pow(b4, 2) * c2 * c3 * d2 +
            12 * b0 * pow(b5, 2) * c0 * c3 * d3 + 32 * b1 * pow(b4, 2) * c0 * c1 * d5 +
            32 * b1 * pow(b4, 2) * c0 * c5 * d1 + 32 * b1 * pow(b4, 2) * c1 * c5 * d0 -
            32 * b1 * pow(b5, 2) * c1 * c2 * d2 - 32 * b2 * pow(b4, 2) * c0 * c2 * d3 -
            32 * b2 * pow(b4, 2) * c0 * c3 * d2 - 32 * b2 * pow(b4, 2) * c2 * c3 * d0 +
            32 * b2 * pow(b5, 2) * c1 * c2 * d1 + 32 * b3 * pow(b4, 2) * c0 * c2 * d2 -
            12 * b3 * pow(b5, 2) * c0 * c3 * d0 - 6 * pow(b0, 2) * b3 * c0 * c3 * d5 +
            8 * pow(b0, 2) * b3 * c0 * c4 * d4 - 6 * pow(b0, 2) * b3 * c0 * c5 * d3 -
            6 * pow(b0, 2) * b3 * c3 * c5 * d0 + 8 * pow(b0, 2) * b4 * c0 * c3 * d4 +
            8 * pow(b0, 2) * b4 * c0 * c4 * d3 + 8 * pow(b0, 2) * b4 * c3 * c4 * d0 -
            6 * pow(b0, 2) * b5 * c0 * c3 * d3 - 32 * pow(b1, 2) * b2 * c2 * c3 * d3 +
            32 * pow(b1, 2) * b3 * c2 * c3 * d2 + 8 * pow(b1, 2) * b5 * c0 * c5 * d0 +
            8 * pow(b2, 2) * b3 * c0 * c3 * d3 + 8 * pow(b3, 2) * b4 * c0 * c4 * d0 +
            6 * pow(b3, 2) * b5 * c0 * c3 * d0 - 32 * pow(b4, 2) * b5 * c0 * c1 * d1 +
            8 * a0 * pow(b1, 2) * c3 * d3 * d5 + 8 * a0 * pow(b2, 2) * c5 * d0 * d5 +
            16 * a0 * pow(b3, 2) * c2 * d2 * d5 + 8 * a0 * pow(b5, 2) * c1 * d1 * d5 -
            16 * a0 * pow(b5, 2) * c1 * d2 * d4 - 16 * a0 * pow(b5, 2) * c2 * d1 * d4 +
            8 * a0 * pow(b5, 2) * c2 * d2 * d3 - 16 * a0 * pow(b5, 2) * c4 * d1 * d2 +
            8 * a1 * pow(b0, 2) * c5 * d1 * d5 - 32 * a1 * pow(b2, 2) * c1 * d3 * d5 -
            32 * a1 * pow(b2, 2) * c3 * d1 * d5 + 128 * a1 * pow(b2, 2) * c4 * d1 * d4 -
            32 * a1 * pow(b2, 2) * c5 * d1 * d3 + 8 * a1 * pow(b5, 2) * c0 * d1 * d5 +
            16 * a1 * pow(b5, 2) * c0 * d2 * d4 + 8 * a1 * pow(b5, 2) * c1 * d0 * d5 +
            16 * a1 * pow(b5, 2) * c2 * d0 * d4 + 16 * a1 * pow(b5, 2) * c4 * d0 * d2 +
            8 * a1 * pow(b5, 2) * c5 * d0 * d1 + 8 * a2 * pow(b0, 2) * c2 * d3 * d5 +
            8 * a2 * pow(b0, 2) * c3 * d2 * d5 - 32 * a2 * pow(b0, 2) * c4 * d2 * d4 +
            8 * a2 * pow(b0, 2) * c5 * d2 * d3 - 8 * a2 * pow(b5, 2) * c0 * d2 * d3 -
            8 * a2 * pow(b5, 2) * c2 * d0 * d3 - 8 * a2 * pow(b5, 2) * c3 * d0 * d2 -
            8 * a3 * pow(b0, 2) * c2 * d2 * d5 - 8 * a3 * pow(b1, 2) * c0 * d3 * d5 -
            8 * a3 * pow(b1, 2) * c3 * d0 * d5 - 8 * a3 * pow(b1, 2) * c5 * d0 * d3 +
            32 * a3 * pow(b2, 2) * c1 * d1 * d5 - 16 * a3 * pow(b4, 2) * c0 * d0 * d5 +
            8 * a3 * pow(b5, 2) * c2 * d0 * d2 - 16 * a4 * pow(b0, 2) * c1 * d2 * d5 -
            16 * a4 * pow(b0, 2) * c2 * d1 * d5 + 32 * a4 * pow(b0, 2) * c2 * d2 * d4 -
            16 * a4 * pow(b0, 2) * c5 * d1 * d2 - 128 * a4 * pow(b2, 2) * c1 * d1 * d4 -
            8 * a5 * pow(b0, 2) * c1 * d1 * d5 + 16 * a5 * pow(b0, 2) * c1 * d2 * d4 +
            16 * a5 * pow(b0, 2) * c2 * d1 * d4 - 8 * a5 * pow(b0, 2) * c2 * d2 * d3 +
            16 * a5 * pow(b0, 2) * c4 * d1 * d2 + 8 * a5 * pow(b1, 2) * c3 * d0 * d3 -
            8 * a5 * pow(b2, 2) * c0 * d0 * d5 + 32 * a5 * pow(b2, 2) * c1 * d1 * d3 -
            16 * a5 * pow(b3, 2) * c2 * d0 * d2 + 16 * a5 * pow(b4, 2) * c0 * d0 * d3 -
            24 * a5 * pow(b5, 2) * c1 * d0 * d1 + 8 * b0 * pow(b1, 2) * c3 * c5 * d3 +
            8 * b0 * pow(b2, 2) * c0 * c5 * d5 + 16 * b0 * pow(b3, 2) * c2 * c5 * d2 -
            16 * b0 * pow(b5, 2) * c1 * c2 * d4 - 16 * b0 * pow(b5, 2) * c1 * c4 * d2 +
            8 * b0 * pow(b5, 2) * c1 * c5 * d1 + 8 * b0 * pow(b5, 2) * c2 * c3 * d2 -
            16 * b0 * pow(b5, 2) * c2 * c4 * d1 - 32 * b1 * pow(b2, 2) * c1 * c3 * d5 +
            128 * b1 * pow(b2, 2) * c1 * c4 * d4 - 32 * b1 * pow(b2, 2) * c1 * c5 * d3 -
            32 * b1 * pow(b2, 2) * c3 * c5 * d1 + 8 * b1 * pow(b5, 2) * c0 * c1 * d5 +
            16 * b1 * pow(b5, 2) * c0 * c2 * d4 + 16 * b1 * pow(b5, 2) * c0 * c4 * d2 +
            8 * b1 * pow(b5, 2) * c0 * c5 * d1 + 8 * b1 * pow(b5, 2) * c1 * c5 * d0 +
            16 * b1 * pow(b5, 2) * c2 * c4 * d0 - 8 * b2 * pow(b5, 2) * c0 * c2 * d3 -
            8 * b2 * pow(b5, 2) * c0 * c3 * d2 - 8 * b2 * pow(b5, 2) * c2 * c3 * d0 -
            16 * b3 * pow(b4, 2) * c0 * c5 * d0 + 8 * b3 * pow(b5, 2) * c0 * c2 * d2 +
            8 * pow(b0, 2) * b1 * c1 * c5 * d5 + 8 * pow(b0, 2) * b2 * c2 * c3 * d5 -
            32 * pow(b0, 2) * b2 * c2 * c4 * d4 + 8 * pow(b0, 2) * b2 * c2 * c5 * d3 +
            8 * pow(b0, 2) * b2 * c3 * c5 * d2 - 8 * pow(b0, 2) * b3 * c2 * c5 * d2 -
            16 * pow(b0, 2) * b4 * c1 * c2 * d5 - 16 * pow(b0, 2) * b4 * c1 * c5 * d2 +
            32 * pow(b0, 2) * b4 * c2 * c4 * d2 - 16 * pow(b0, 2) * b4 * c2 * c5 * d1 +
            16 * pow(b0, 2) * b5 * c1 * c2 * d4 + 16 * pow(b0, 2) * b5 * c1 * c4 * d2 -
            8 * pow(b0, 2) * b5 * c1 * c5 * d1 - 8 * pow(b0, 2) * b5 * c2 * c3 * d2 +
            16 * pow(b0, 2) * b5 * c2 * c4 * d1 - 8 * pow(b1, 2) * b3 * c0 * c3 * d5 -
            8 * pow(b1, 2) * b3 * c0 * c5 * d3 - 8 * pow(b1, 2) * b3 * c3 * c5 * d0 +
            8 * pow(b1, 2) * b5 * c0 * c3 * d3 + 32 * pow(b2, 2) * b3 * c1 * c5 * d1 -
            128 * pow(b2, 2) * b4 * c1 * c4 * d1 - 8 * pow(b2, 2) * b5 * c0 * c5 * d0 +
            32 * pow(b2, 2) * b5 * c1 * c3 * d1 - 16 * pow(b3, 2) * b5 * c0 * c2 * d2 +
            16 * pow(b4, 2) * b5 * c0 * c3 * d0 + 24 * a0 * pow(b0, 2) * c4 * d4 * d5 -
            18 * a0 * pow(b0, 2) * c5 * d3 * d5 + 16 * a0 * pow(b2, 2) * c3 * d3 * d5 -
            32 * a0 * pow(b2, 2) * c4 * d3 * d4 - 12 * a0 * pow(b3, 2) * c5 * d0 * d5 -
            6 * a0 * pow(b5, 2) * c0 * d3 * d5 - 6 * a0 * pow(b5, 2) * c3 * d0 * d5 +
            8 * a0 * pow(b5, 2) * c4 * d0 * d4 - 6 * a0 * pow(b5, 2) * c5 * d0 * d3 +
            8 * a1 * pow(b5, 2) * c3 * d1 * d3 + 32 * a2 * pow(b1, 2) * c2 * d3 * d5 +
            32 * a2 * pow(b1, 2) * c3 * d2 * d5 - 128 * a2 * pow(b1, 2) * c4 * d2 * d4 +
            32 * a2 * pow(b1, 2) * c5 * d2 * d3 + 6 * a3 * pow(b0, 2) * c5 * d0 * d5 -
            32 * a3 * pow(b1, 2) * c2 * d2 * d5 - 32 * a3 * pow(b2, 2) * c4 * d0 * d4 -
            6 * a3 * pow(b5, 2) * c0 * d0 * d5 - 8 * a3 * pow(b5, 2) * c1 * d1 * d3 -
            8 * a4 * pow(b0, 2) * c0 * d4 * d5 - 8 * a4 * pow(b0, 2) * c4 * d0 * d5 -
            8 * a4 * pow(b0, 2) * c5 * d0 * d4 + 128 * a4 * pow(b1, 2) * c2 * d2 * d4 +
            32 * a4 * pow(b2, 2) * c0 * d3 * d4 + 32 * a4 * pow(b2, 2) * c3 * d0 * d4 +
            32 * a4 * pow(b2, 2) * c4 * d0 * d3 - 8 * a4 * pow(b5, 2) * c0 * d0 * d4 +
            6 * a5 * pow(b0, 2) * c0 * d3 * d5 + 6 * a5 * pow(b0, 2) * c3 * d0 * d5 -
            8 * a5 * pow(b0, 2) * c4 * d0 * d4 + 6 * a5 * pow(b0, 2) * c5 * d0 * d3 -
            32 * a5 * pow(b1, 2) * c2 * d2 * d3 - 16 * a5 * pow(b2, 2) * c3 * d0 * d3 +
            12 * a5 * pow(b3, 2) * c0 * d0 * d5 + 18 * a5 * pow(b5, 2) * c0 * d0 * d3 -
            32 * b0 * pow(b2, 2) * c3 * c4 * d4 + 16 * b0 * pow(b2, 2) * c3 * c5 * d3 -
            12 * b0 * pow(b3, 2) * c0 * c5 * d5 - 6 * b0 * pow(b5, 2) * c0 * c3 * d5 +
            8 * b0 * pow(b5, 2) * c0 * c4 * d4 - 6 * b0 * pow(b5, 2) * c0 * c5 * d3 -
            6 * b0 * pow(b5, 2) * c3 * c5 * d0 + 8 * b1 * pow(b5, 2) * c1 * c3 * d3 -
            6 * b3 * pow(b5, 2) * c0 * c5 * d0 - 8 * b3 * pow(b5, 2) * c1 * c3 * d1 -
            8 * b4 * pow(b5, 2) * c0 * c4 * d0 + 6 * pow(b0, 2) * b3 * c0 * c5 * d5 -
            8 * pow(b0, 2) * b4 * c0 * c4 * d5 - 8 * pow(b0, 2) * b4 * c0 * c5 * d4 -
            8 * pow(b0, 2) * b4 * c4 * c5 * d0 + 6 * pow(b0, 2) * b5 * c0 * c3 * d5 -
            8 * pow(b0, 2) * b5 * c0 * c4 * d4 + 6 * pow(b0, 2) * b5 * c0 * c5 * d3 +
            6 * pow(b0, 2) * b5 * c3 * c5 * d0 + 32 * pow(b1, 2) * b2 * c2 * c3 * d5 -
            128 * pow(b1, 2) * b2 * c2 * c4 * d4 + 32 * pow(b1, 2) * b2 * c2 * c5 * d3 +
            32 * pow(b1, 2) * b2 * c3 * c5 * d2 - 32 * pow(b1, 2) * b3 * c2 * c5 * d2 +
            128 * pow(b1, 2) * b4 * c2 * c4 * d2 - 32 * pow(b1, 2) * b5 * c2 * c3 * d2 -
            32 * pow(b2, 2) * b3 * c0 * c4 * d4 + 32 * pow(b2, 2) * b4 * c0 * c3 * d4 +
            32 * pow(b2, 2) * b4 * c0 * c4 * d3 + 32 * pow(b2, 2) * b4 * c3 * c4 * d0 -
            16 * pow(b2, 2) * b5 * c0 * c3 * d3 + 12 * pow(b3, 2) * b5 * c0 * c5 * d0 +
            32 * a0 * pow(b1, 2) * c4 * d4 * d5 - 16 * a0 * pow(b1, 2) * c5 * d3 * d5 -
            8 * a0 * pow(b4, 2) * c5 * d0 * d5 + 32 * a1 * pow(b2, 2) * c5 * d1 * d5 -
            8 * a2 * pow(b0, 2) * c5 * d2 * d5 + 32 * a2 * pow(b4, 2) * c3 * d2 * d3 -
            6 * a3 * pow(b0, 2) * c3 * d3 * d5 + 8 * a3 * pow(b0, 2) * c4 * d3 * d4 +
            16 * a3 * pow(b1, 2) * c5 * d0 * d5 - 32 * a3 * pow(b4, 2) * c2 * d2 * d3 +
            6 * a3 * pow(b5, 2) * c3 * d0 * d3 - 8 * a4 * pow(b0, 2) * c3 * d3 * d4 -
            32 * a4 * pow(b1, 2) * c0 * d4 * d5 - 32 * a4 * pow(b1, 2) * c4 * d0 * d5 -
            32 * a4 * pow(b1, 2) * c5 * d0 * d4 + 8 * a5 * pow(b0, 2) * c2 * d2 * d5 +
            32 * a5 * pow(b1, 2) * c4 * d0 * d4 - 32 * a5 * pow(b2, 2) * c1 * d1 * d5 +
            8 * a5 * pow(b4, 2) * c0 * d0 * d5 - 16 * b0 * pow(b1, 2) * c3 * c5 * d5 +
            32 * b0 * pow(b1, 2) * c4 * c5 * d4 - 8 * b0 * pow(b4, 2) * c0 * c5 * d5 +
            32 * b1 * pow(b2, 2) * c1 * c5 * d5 + 32 * b2 * pow(b4, 2) * c2 * c3 * d3 -
            32 * b3 * pow(b4, 2) * c2 * c3 * d2 + 6 * b3 * pow(b5, 2) * c0 * c3 * d3 -
            8 * pow(b0, 2) * b2 * c2 * c5 * d5 + 8 * pow(b0, 2) * b3 * c3 * c4 * d4 -
            6 * pow(b0, 2) * b3 * c3 * c5 * d3 - 8 * pow(b0, 2) * b4 * c3 * c4 * d3 +
            8 * pow(b0, 2) * b5 * c2 * c5 * d2 + 16 * pow(b1, 2) * b3 * c0 * c5 * d5 -
            32 * pow(b1, 2) * b4 * c0 * c4 * d5 - 32 * pow(b1, 2) * b4 * c0 * c5 * d4 -
            32 * pow(b1, 2) * b4 * c4 * c5 * d0 + 32 * pow(b1, 2) * b5 * c0 * c4 * d4 -
            32 * pow(b2, 2) * b5 * c1 * c5 * d1 + 8 * pow(b4, 2) * b5 * c0 * c5 * d0 -
            8 * a0 * pow(b2, 2) * c5 * d3 * d5 - 8 * a0 * pow(b4, 2) * c3 * d3 * d5 -
            8 * a1 * pow(b3, 2) * c5 * d1 * d5 - 8 * a1 * pow(b5, 2) * c1 * d3 * d5 -
            16 * a1 * pow(b5, 2) * c2 * d3 * d4 - 8 * a1 * pow(b5, 2) * c3 * d1 * d5 -
            16 * a1 * pow(b5, 2) * c3 * d2 * d4 + 32 * a1 * pow(b5, 2) * c4 * d1 * d4 -
            16 * a1 * pow(b5, 2) * c4 * d2 * d3 - 8 * a1 * pow(b5, 2) * c5 * d1 * d3 -
            32 * a2 * pow(b1, 2) * c5 * d2 * d5 + 16 * a2 * pow(b3, 2) * c1 * d4 * d5 +
            8 * a2 * pow(b3, 2) * c2 * d3 * d5 + 8 * a2 * pow(b3, 2) * c3 * d2 * d5 +
            16 * a2 * pow(b3, 2) * c4 * d1 * d5 - 32 * a2 * pow(b3, 2) * c4 * d2 * d4 +
            16 * a2 * pow(b3, 2) * c5 * d1 * d4 + 8 * a2 * pow(b3, 2) * c5 * d2 * d3 +
            8 * a2 * pow(b5, 2) * c3 * d2 * d3 - 8 * a3 * pow(b2, 2) * c5 * d0 * d5 -
            24 * a3 * pow(b3, 2) * c2 * d2 * d5 + 8 * a3 * pow(b4, 2) * c0 * d3 * d5 +
            8 * a3 * pow(b4, 2) * c3 * d0 * d5 + 8 * a3 * pow(b4, 2) * c5 * d0 * d3 -
            8 * a3 * pow(b5, 2) * c1 * d1 * d5 + 16 * a3 * pow(b5, 2) * c1 * d2 * d4 +
            16 * a3 * pow(b5, 2) * c2 * d1 * d4 - 8 * a3 * pow(b5, 2) * c2 * d2 * d3 +
            16 * a3 * pow(b5, 2) * c4 * d1 * d2 + 32 * a4 * pow(b3, 2) * c2 * d2 * d4 -
            32 * a4 * pow(b5, 2) * c1 * d1 * d4 - 6 * a5 * pow(b0, 2) * c5 * d0 * d5 +
            32 * a5 * pow(b1, 2) * c2 * d2 * d5 + 8 * a5 * pow(b2, 2) * c0 * d3 * d5 +
            8 * a5 * pow(b2, 2) * c3 * d0 * d5 + 8 * a5 * pow(b2, 2) * c5 * d0 * d3 +
            8 * a5 * pow(b3, 2) * c1 * d1 * d5 - 16 * a5 * pow(b3, 2) * c1 * d2 * d4 -
            16 * a5 * pow(b3, 2) * c2 * d1 * d4 + 8 * a5 * pow(b3, 2) * c2 * d2 * d3 -
            16 * a5 * pow(b3, 2) * c4 * d1 * d2 - 8 * a5 * pow(b4, 2) * c3 * d0 * d3 +
            24 * a5 * pow(b5, 2) * c1 * d1 * d3 - 8 * b0 * pow(b2, 2) * c3 * c5 * d5 -
            8 * b0 * pow(b4, 2) * c3 * c5 * d3 - 8 * b1 * pow(b3, 2) * c1 * c5 * d5 -
            8 * b1 * pow(b5, 2) * c1 * c3 * d5 + 32 * b1 * pow(b5, 2) * c1 * c4 * d4 -
            8 * b1 * pow(b5, 2) * c1 * c5 * d3 - 16 * b1 * pow(b5, 2) * c2 * c3 * d4 -
            16 * b1 * pow(b5, 2) * c2 * c4 * d3 - 16 * b1 * pow(b5, 2) * c3 * c4 * d2 -
            8 * b1 * pow(b5, 2) * c3 * c5 * d1 + 16 * b2 * pow(b3, 2) * c1 * c4 * d5 +
            16 * b2 * pow(b3, 2) * c1 * c5 * d4 + 8 * b2 * pow(b3, 2) * c2 * c3 * d5 -
            32 * b2 * pow(b3, 2) * c2 * c4 * d4 + 8 * b2 * pow(b3, 2) * c2 * c5 * d3 +
            8 * b2 * pow(b3, 2) * c3 * c5 * d2 + 16 * b2 * pow(b3, 2) * c4 * c5 * d1 +
            8 * b2 * pow(b5, 2) * c2 * c3 * d3 + 8 * b3 * pow(b4, 2) * c0 * c3 * d5 +
            8 * b3 * pow(b4, 2) * c0 * c5 * d3 + 8 * b3 * pow(b4, 2) * c3 * c5 * d0 +
            16 * b3 * pow(b5, 2) * c1 * c2 * d4 + 16 * b3 * pow(b5, 2) * c1 * c4 * d2 -
            8 * b3 * pow(b5, 2) * c1 * c5 * d1 - 8 * b3 * pow(b5, 2) * c2 * c3 * d2 +
            16 * b3 * pow(b5, 2) * c2 * c4 * d1 - 32 * b4 * pow(b5, 2) * c1 * c4 * d1 -
            6 * pow(b0, 2) * b5 * c0 * c5 * d5 - 32 * pow(b1, 2) * b2 * c2 * c5 * d5 +
            32 * pow(b1, 2) * b5 * c2 * c5 * d2 - 8 * pow(b2, 2) * b3 * c0 * c5 * d5 +
            8 * pow(b2, 2) * b5 * c0 * c3 * d5 + 8 * pow(b2, 2) * b5 * c0 * c5 * d3 +
            8 * pow(b2, 2) * b5 * c3 * c5 * d0 + 32 * pow(b3, 2) * b4 * c2 * c4 * d2 -
            16 * pow(b3, 2) * b5 * c1 * c2 * d4 - 16 * pow(b3, 2) * b5 * c1 * c4 * d2 +
            8 * pow(b3, 2) * b5 * c1 * c5 * d1 + 8 * pow(b3, 2) * b5 * c2 * c3 * d2 -
            16 * pow(b3, 2) * b5 * c2 * c4 * d1 - 8 * pow(b4, 2) * b5 * c0 * c3 * d3 +
            8 * a0 * pow(b3, 2) * c4 * d4 * d5 - 6 * a0 * pow(b3, 2) * c5 * d3 * d5 +
            6 * a0 * pow(b5, 2) * c3 * d3 * d5 - 8 * a0 * pow(b5, 2) * c4 * d3 * d4 -
            32 * a1 * pow(b4, 2) * c5 * d1 * d5 - 16 * a3 * pow(b0, 2) * c4 * d4 * d5 +
            12 * a3 * pow(b0, 2) * c5 * d3 * d5 - 8 * a3 * pow(b2, 2) * c3 * d3 * d5 +
            32 * a3 * pow(b2, 2) * c4 * d3 * d4 + 18 * a3 * pow(b3, 2) * c5 * d0 * d5 +
            6 * a3 * pow(b5, 2) * c0 * d3 * d5 + 6 * a3 * pow(b5, 2) * c3 * d0 * d5 -
            8 * a3 * pow(b5, 2) * c4 * d0 * d4 + 6 * a3 * pow(b5, 2) * c5 * d0 * d3 -
            32 * a4 * pow(b2, 2) * c3 * d3 * d4 - 8 * a4 * pow(b3, 2) * c0 * d4 * d5 -
            8 * a4 * pow(b3, 2) * c4 * d0 * d5 - 8 * a4 * pow(b3, 2) * c5 * d0 * d4 +
            8 * a4 * pow(b5, 2) * c0 * d3 * d4 + 8 * a4 * pow(b5, 2) * c3 * d0 * d4 +
            8 * a4 * pow(b5, 2) * c4 * d0 * d3 - 12 * a5 * pow(b0, 2) * c3 * d3 * d5 +
            16 * a5 * pow(b0, 2) * c4 * d3 * d4 - 8 * a5 * pow(b1, 2) * c5 * d0 * d5 -
            6 * a5 * pow(b3, 2) * c0 * d3 * d5 - 6 * a5 * pow(b3, 2) * c3 * d0 * d5 +
            8 * a5 * pow(b3, 2) * c4 * d0 * d4 - 6 * a5 * pow(b3, 2) * c5 * d0 * d3 +
            32 * a5 * pow(b4, 2) * c1 * d1 * d5 - 18 * a5 * pow(b5, 2) * c3 * d0 * d3 -
            6 * b0 * pow(b3, 2) * c3 * c5 * d5 + 8 * b0 * pow(b3, 2) * c4 * c5 * d4 -
            8 * b0 * pow(b5, 2) * c3 * c4 * d4 + 6 * b0 * pow(b5, 2) * c3 * c5 * d3 -
            32 * b1 * pow(b4, 2) * c1 * c5 * d5 + 6 * b3 * pow(b5, 2) * c0 * c3 * d5 -
            8 * b3 * pow(b5, 2) * c0 * c4 * d4 + 6 * b3 * pow(b5, 2) * c0 * c5 * d3 +
            6 * b3 * pow(b5, 2) * c3 * c5 * d0 + 8 * b4 * pow(b5, 2) * c0 * c3 * d4 +
            8 * b4 * pow(b5, 2) * c0 * c4 * d3 + 8 * b4 * pow(b5, 2) * c3 * c4 * d0 +
            12 * pow(b0, 2) * b3 * c3 * c5 * d5 - 16 * pow(b0, 2) * b3 * c4 * c5 * d4 +
            16 * pow(b0, 2) * b5 * c3 * c4 * d4 - 12 * pow(b0, 2) * b5 * c3 * c5 * d3 -
            8 * pow(b1, 2) * b5 * c0 * c5 * d5 + 32 * pow(b2, 2) * b3 * c3 * c4 * d4 -
            8 * pow(b2, 2) * b3 * c3 * c5 * d3 - 32 * pow(b2, 2) * b4 * c3 * c4 * d3 -
            8 * pow(b3, 2) * b4 * c0 * c4 * d5 - 8 * pow(b3, 2) * b4 * c0 * c5 * d4 -
            8 * pow(b3, 2) * b4 * c4 * c5 * d0 - 6 * pow(b3, 2) * b5 * c0 * c3 * d5 +
            8 * pow(b3, 2) * b5 * c0 * c4 * d4 - 6 * pow(b3, 2) * b5 * c0 * c5 * d3 -
            6 * pow(b3, 2) * b5 * c3 * c5 * d0 + 32 * pow(b4, 2) * b5 * c1 * c5 * d1 +
            8 * a0 * pow(b4, 2) * c5 * d3 * d5 - 8 * a2 * pow(b3, 2) * c5 * d2 * d5 +
            8 * a3 * pow(b1, 2) * c5 * d3 * d5 + 8 * a3 * pow(b4, 2) * c5 * d0 * d5 -
            8 * a5 * pow(b1, 2) * c3 * d3 * d5 + 8 * a5 * pow(b3, 2) * c2 * d2 * d5 -
            8 * a5 * pow(b4, 2) * c0 * d3 * d5 - 8 * a5 * pow(b4, 2) * c3 * d0 * d5 -
            8 * a5 * pow(b4, 2) * c5 * d0 * d3 + 8 * b0 * pow(b4, 2) * c3 * c5 * d5 -
            8 * b2 * pow(b3, 2) * c2 * c5 * d5 + 8 * b3 * pow(b4, 2) * c0 * c5 * d5 +
            8 * pow(b1, 2) * b3 * c3 * c5 * d5 - 8 * pow(b1, 2) * b5 * c3 * c5 * d3 +
            8 * pow(b3, 2) * b5 * c2 * c5 * d2 - 8 * pow(b4, 2) * b5 * c0 * c3 * d5 -
            8 * pow(b4, 2) * b5 * c0 * c5 * d3 - 8 * pow(b4, 2) * b5 * c3 * c5 * d0 +
            8 * a3 * pow(b2, 2) * c5 * d3 * d5 + 8 * a4 * pow(b0, 2) * c5 * d4 * d5 -
            8 * a5 * pow(b0, 2) * c4 * d4 * d5 + 6 * a5 * pow(b0, 2) * c5 * d3 * d5 -
            8 * a5 * pow(b2, 2) * c3 * d3 * d5 - 6 * a5 * pow(b3, 2) * c5 * d0 * d5 +
            8 * pow(b0, 2) * b4 * c4 * c5 * d5 + 6 * pow(b0, 2) * b5 * c3 * c5 * d5 -
            8 * pow(b0, 2) * b5 * c4 * c5 * d4 + 8 * pow(b2, 2) * b3 * c3 * c5 * d5 -
            8 * pow(b2, 2) * b5 * c3 * c5 * d3 - 6 * pow(b3, 2) * b5 * c0 * c5 * d5 -
            6 * a3 * pow(b5, 2) * c3 * d3 * d5 + 8 * a3 * pow(b5, 2) * c4 * d3 * d4 +
            32 * a4 * pow(b1, 2) * c5 * d4 * d5 - 8 * a4 * pow(b5, 2) * c3 * d3 * d4 -
            32 * a5 * pow(b1, 2) * c4 * d4 * d5 + 8 * a5 * pow(b1, 2) * c5 * d3 * d5 +
            8 * b3 * pow(b5, 2) * c3 * c4 * d4 - 6 * b3 * pow(b5, 2) * c3 * c5 * d3 -
            8 * b4 * pow(b5, 2) * c3 * c4 * d3 + 32 * pow(b1, 2) * b4 * c4 * c5 * d5 +
            8 * pow(b1, 2) * b5 * c3 * c5 * d5 - 32 * pow(b1, 2) * b5 * c4 * c5 * d4 -
            8 * a3 * pow(b4, 2) * c5 * d3 * d5 + 8 * a5 * pow(b4, 2) * c3 * d3 * d5 -
            8 * b3 * pow(b4, 2) * c3 * c5 * d5 + 8 * pow(b4, 2) * b5 * c3 * c5 * d3 +
            8 * a4 * pow(b3, 2) * c5 * d4 * d5 - 8 * a5 * pow(b3, 2) * c4 * d4 * d5 +
            6 * a5 * pow(b3, 2) * c5 * d3 * d5 + 8 * pow(b3, 2) * b4 * c4 * c5 * d5 +
            6 * pow(b3, 2) * b5 * c3 * c5 * d5 - 8 * pow(b3, 2) * b5 * c4 * c5 * d4 +
            8 * pow(a1, 2) * b0 * d0 * d3 * d5 - 8 * pow(a0, 2) * b1 * d1 * d3 * d5 -
            16 * pow(a0, 2) * b3 * d1 * d2 * d4 + 16 * pow(a0, 2) * b4 * d1 * d2 * d3 -
            8 * pow(a2, 2) * b0 * d0 * d3 * d5 + 16 * pow(a3, 2) * b0 * d1 * d2 * d4 +
            8 * pow(a3, 2) * b1 * d0 * d1 * d5 - 16 * pow(a3, 2) * b2 * d0 * d1 * d4 -
            8 * pow(a3, 2) * b2 * d0 * d2 * d3 - 6 * pow(a0, 2) * b3 * d0 * d3 * d5 +
            8 * pow(a0, 2) * b4 * d0 * d3 * d4 + 6 * pow(a3, 2) * b0 * d0 * d3 * d5 +
            32 * pow(a4, 2) * b1 * d0 * d1 * d5 - 32 * pow(a4, 2) * b2 * d0 * d2 * d3 +
            8 * pow(a0, 2) * b2 * d2 * d3 * d5 - 16 * pow(a0, 2) * b4 * d1 * d2 * d5 +
            16 * pow(a0, 2) * b5 * d1 * d2 * d4 - 8 * pow(a1, 2) * b3 * d0 * d3 * d5 -
            32 * pow(a2, 2) * b1 * d1 * d3 * d5 - 16 * pow(a5, 2) * b0 * d1 * d2 * d4 +
            8 * pow(a5, 2) * b1 * d0 * d1 * d5 + 16 * pow(a5, 2) * b1 * d0 * d2 * d4 -
            8 * pow(a5, 2) * b2 * d0 * d2 * d3 - 8 * pow(a0, 2) * b4 * d0 * d4 * d5 +
            6 * pow(a0, 2) * b5 * d0 * d3 * d5 + 32 * pow(a1, 2) * b2 * d2 * d3 * d5 +
            32 * pow(a2, 2) * b4 * d0 * d3 * d4 - 6 * pow(a5, 2) * b0 * d0 * d3 * d5 -
            32 * pow(a1, 2) * b4 * d0 * d4 * d5 + 8 * pow(a2, 2) * b5 * d0 * d3 * d5 +
            16 * pow(a3, 2) * b2 * d1 * d4 * d5 + 8 * pow(a3, 2) * b2 * d2 * d3 * d5 -
            16 * pow(a3, 2) * b5 * d1 * d2 * d4 + 8 * pow(a4, 2) * b3 * d0 * d3 * d5 -
            8 * pow(a5, 2) * b1 * d1 * d3 * d5 - 16 * pow(a5, 2) * b1 * d2 * d3 * d4 +
            16 * pow(a5, 2) * b3 * d1 * d2 * d4 - 8 * pow(a3, 2) * b4 * d0 * d4 * d5 -
            6 * pow(a3, 2) * b5 * d0 * d3 * d5 + 6 * pow(a5, 2) * b3 * d0 * d3 * d5 +
            8 * pow(a5, 2) * b4 * d0 * d3 * d4 - 8 * pow(a4, 2) * b5 * d0 * d3 * d5 + 16 * a0 * b0 * b1 * c3 * d1 * d3 -
            16 * a0 * b0 * b3 * c1 * d1 * d3 - 16 * a1 * b0 * b1 * c3 * d0 * d3 + 16 * a1 * b1 * b3 * c0 * d0 * d3 +
            16 * a3 * b0 * b3 * c1 * d0 * d1 - 16 * a3 * b1 * b3 * c0 * d0 * d1 + 12 * a0 * b0 * b3 * c3 * d0 * d3 -
            12 * a3 * b0 * b3 * c0 * d0 * d3 - 16 * a0 * a1 * b0 * d1 * d3 * d5 + 16 * a0 * a1 * b1 * d0 * d3 * d5 +
            16 * a0 * a1 * b3 * d0 * d2 * d4 - 16 * a0 * a1 * b4 * d0 * d2 * d3 + 16 * a0 * a2 * b3 * d0 * d1 * d4 -
            16 * a0 * a2 * b4 * d0 * d1 * d3 - 32 * a0 * a3 * b0 * d1 * d2 * d4 + 16 * a0 * a3 * b1 * d0 * d2 * d4 +
            16 * a0 * a3 * b2 * d0 * d1 * d4 + 32 * a0 * a4 * b0 * d1 * d2 * d3 - 16 * a0 * a4 * b1 * d0 * d2 * d3 -
            16 * a0 * a4 * b2 * d0 * d1 * d3 - 16 * a0 * b0 * b1 * c1 * d3 * d5 - 16 * a0 * b0 * b1 * c3 * d1 * d5 +
            64 * a0 * b0 * b1 * c4 * d1 * d4 - 16 * a0 * b0 * b1 * c5 * d1 * d3 - 16 * a0 * b0 * b2 * c3 * d2 * d3 +
            16 * a0 * b0 * b3 * c1 * d1 * d5 - 32 * a0 * b0 * b3 * c1 * d2 * d4 - 32 * a0 * b0 * b3 * c2 * d1 * d4 +
            16 * a0 * b0 * b3 * c2 * d2 * d3 - 32 * a0 * b0 * b3 * c4 * d1 * d2 - 64 * a0 * b0 * b4 * c1 * d1 * d4 +
            32 * a0 * b0 * b4 * c1 * d2 * d3 + 32 * a0 * b0 * b4 * c2 * d1 * d3 + 32 * a0 * b0 * b4 * c3 * d1 * d2 +
            16 * a0 * b0 * b5 * c1 * d1 * d3 + 16 * a0 * b1 * b3 * c0 * d2 * d4 + 16 * a0 * b1 * b3 * c2 * d0 * d4 +
            16 * a0 * b1 * b3 * c4 * d0 * d2 - 16 * a0 * b1 * b4 * c0 * d2 * d3 - 16 * a0 * b1 * b4 * c2 * d0 * d3 -
            16 * a0 * b1 * b4 * c3 * d0 * d2 + 16 * a0 * b2 * b3 * c0 * d1 * d4 + 16 * a0 * b2 * b3 * c1 * d0 * d4 +
            16 * a0 * b2 * b3 * c4 * d0 * d1 - 16 * a0 * b2 * b4 * c0 * d1 * d3 - 16 * a0 * b2 * b4 * c1 * d0 * d3 -
            16 * a0 * b2 * b4 * c3 * d0 * d1 - 16 * a0 * b3 * b5 * c1 * d0 * d1 + 16 * a1 * a3 * b0 * d0 * d2 * d4 -
            16 * a1 * a4 * b0 * d0 * d2 * d3 + 16 * a1 * b0 * b1 * c0 * d3 * d5 + 16 * a1 * b0 * b1 * c3 * d0 * d5 -
            64 * a1 * b0 * b1 * c4 * d0 * d4 + 16 * a1 * b0 * b1 * c5 * d0 * d3 + 16 * a1 * b0 * b3 * c0 * d2 * d4 +
            16 * a1 * b0 * b3 * c2 * d0 * d4 + 16 * a1 * b0 * b3 * c4 * d0 * d2 - 16 * a1 * b0 * b4 * c0 * d2 * d3 -
            16 * a1 * b0 * b4 * c2 * d0 * d3 - 16 * a1 * b0 * b4 * c3 * d0 * d2 - 16 * a1 * b1 * b3 * c0 * d0 * d5 +
            64 * a1 * b1 * b4 * c0 * d0 * d4 - 16 * a1 * b1 * b5 * c0 * d0 * d3 - 32 * a1 * b2 * b3 * c0 * d0 * d4 +
            32 * a1 * b2 * b4 * c0 * d0 * d3 + 16 * a1 * b3 * b5 * c0 * d0 * d1 + 16 * a2 * a3 * b0 * d0 * d1 * d4 -
            16 * a2 * a4 * b0 * d0 * d1 * d3 + 16 * a2 * b0 * b2 * c3 * d0 * d3 + 16 * a2 * b0 * b3 * c0 * d1 * d4 +
            16 * a2 * b0 * b3 * c1 * d0 * d4 + 16 * a2 * b0 * b3 * c4 * d0 * d1 - 16 * a2 * b0 * b4 * c0 * d1 * d3 -
            16 * a2 * b0 * b4 * c1 * d0 * d3 - 16 * a2 * b0 * b4 * c3 * d0 * d1 - 32 * a2 * b1 * b3 * c0 * d0 * d4 +
            32 * a2 * b1 * b4 * c0 * d0 * d3 - 16 * a2 * b2 * b3 * c0 * d0 * d3 + 16 * a3 * b0 * b1 * c0 * d2 * d4 +
            16 * a3 * b0 * b1 * c2 * d0 * d4 + 16 * a3 * b0 * b1 * c4 * d0 * d2 + 16 * a3 * b0 * b2 * c0 * d1 * d4 +
            16 * a3 * b0 * b2 * c1 * d0 * d4 + 16 * a3 * b0 * b2 * c4 * d0 * d1 - 16 * a3 * b0 * b3 * c2 * d0 * d2 -
            16 * a3 * b0 * b5 * c1 * d0 * d1 - 32 * a3 * b1 * b2 * c0 * d0 * d4 + 16 * a3 * b1 * b5 * c0 * d0 * d1 +
            16 * a3 * b2 * b3 * c0 * d0 * d2 - 16 * a4 * b0 * b1 * c0 * d2 * d3 - 16 * a4 * b0 * b1 * c2 * d0 * d3 -
            16 * a4 * b0 * b1 * c3 * d0 * d2 - 16 * a4 * b0 * b2 * c0 * d1 * d3 - 16 * a4 * b0 * b2 * c1 * d0 * d3 -
            16 * a4 * b0 * b2 * c3 * d0 * d1 + 64 * a4 * b0 * b4 * c1 * d0 * d1 + 32 * a4 * b1 * b2 * c0 * d0 * d3 -
            64 * a4 * b1 * b4 * c0 * d0 * d1 - 16 * a5 * b0 * b3 * c1 * d0 * d1 + 16 * a5 * b1 * b3 * c0 * d0 * d1 +
            16 * b0 * b1 * b3 * c0 * c2 * d4 + 16 * b0 * b1 * b3 * c0 * c4 * d2 + 16 * b0 * b1 * b3 * c2 * c4 * d0 -
            16 * b0 * b1 * b4 * c0 * c2 * d3 - 16 * b0 * b1 * b4 * c0 * c3 * d2 - 16 * b0 * b1 * b4 * c2 * c3 * d0 +
            16 * b0 * b2 * b3 * c0 * c1 * d4 + 16 * b0 * b2 * b3 * c0 * c4 * d1 + 16 * b0 * b2 * b3 * c1 * c4 * d0 -
            16 * b0 * b2 * b4 * c0 * c1 * d3 - 16 * b0 * b2 * b4 * c0 * c3 * d1 - 16 * b0 * b2 * b4 * c1 * c3 * d0 -
            16 * b0 * b3 * b5 * c0 * c1 * d1 - 32 * b1 * b2 * b3 * c0 * c4 * d0 + 32 * b1 * b2 * b4 * c0 * c3 * d0 +
            16 * b1 * b3 * b5 * c0 * c1 * d0 - 12 * a0 * a3 * b0 * d0 * d3 * d5 + 16 * a0 * a4 * b0 * d0 * d3 * d4 -
            12 * a0 * b0 * b3 * c0 * d3 * d5 - 12 * a0 * b0 * b3 * c3 * d0 * d5 + 16 * a0 * b0 * b3 * c4 * d0 * d4 -
            12 * a0 * b0 * b3 * c5 * d0 * d3 + 16 * a0 * b0 * b4 * c0 * d3 * d4 + 16 * a0 * b0 * b4 * c3 * d0 * d4 +
            16 * a0 * b0 * b4 * c4 * d0 * d3 - 12 * a0 * b0 * b5 * c3 * d0 * d3 - 16 * a0 * b3 * b4 * c0 * d0 * d4 +
            12 * a0 * b3 * b5 * c0 * d0 * d3 + 12 * a3 * b0 * b3 * c0 * d0 * d5 - 16 * a3 * b0 * b4 * c0 * d0 * d4 +
            12 * a3 * b0 * b5 * c0 * d0 * d3 - 16 * a4 * b0 * b3 * c0 * d0 * d4 - 16 * a4 * b0 * b4 * c0 * d0 * d3 +
            12 * a5 * b0 * b3 * c0 * d0 * d3 - 16 * b0 * b3 * b4 * c0 * c4 * d0 + 12 * b0 * b3 * b5 * c0 * c3 * d0 +
            16 * a0 * a1 * b4 * d0 * d2 * d5 - 16 * a0 * a1 * b5 * d0 * d2 * d4 + 16 * a0 * a2 * b0 * d2 * d3 * d5 -
            16 * a0 * a2 * b2 * d0 * d3 * d5 + 16 * a0 * a2 * b4 * d0 * d1 * d5 - 16 * a0 * a2 * b5 * d0 * d1 * d4 -
            32 * a0 * a4 * b0 * d1 * d2 * d5 + 16 * a0 * a4 * b1 * d0 * d2 * d5 + 16 * a0 * a4 * b2 * d0 * d1 * d5 +
            32 * a0 * a5 * b0 * d1 * d2 * d4 - 16 * a0 * a5 * b1 * d0 * d2 * d4 - 16 * a0 * a5 * b2 * d0 * d1 * d4 +
            16 * a0 * b0 * b1 * c5 * d1 * d5 + 16 * a0 * b0 * b2 * c2 * d3 * d5 + 16 * a0 * b0 * b2 * c3 * d2 * d5 -
            64 * a0 * b0 * b2 * c4 * d2 * d4 + 16 * a0 * b0 * b2 * c5 * d2 * d3 - 16 * a0 * b0 * b3 * c2 * d2 * d5 -
            32 * a0 * b0 * b4 * c1 * d2 * d5 - 32 * a0 * b0 * b4 * c2 * d1 * d5 + 64 * a0 * b0 * b4 * c2 * d2 * d4 -
            32 * a0 * b0 * b4 * c5 * d1 * d2 - 16 * a0 * b0 * b5 * c1 * d1 * d5 + 32 * a0 * b0 * b5 * c1 * d2 * d4 +
            32 * a0 * b0 * b5 * c2 * d1 * d4 - 16 * a0 * b0 * b5 * c2 * d2 * d3 + 32 * a0 * b0 * b5 * c4 * d1 * d2 +
            16 * a0 * b1 * b4 * c0 * d2 * d5 + 16 * a0 * b1 * b4 * c2 * d0 * d5 + 16 * a0 * b1 * b4 * c5 * d0 * d2 -
            16 * a0 * b1 * b5 * c0 * d2 * d4 - 16 * a0 * b1 * b5 * c2 * d0 * d4 - 16 * a0 * b1 * b5 * c4 * d0 * d2 +
            16 * a0 * b2 * b4 * c0 * d1 * d5 + 16 * a0 * b2 * b4 * c1 * d0 * d5 + 16 * a0 * b2 * b4 * c5 * d0 * d1 -
            16 * a0 * b2 * b5 * c0 * d1 * d4 - 16 * a0 * b2 * b5 * c1 * d0 * d4 - 16 * a0 * b2 * b5 * c4 * d0 * d1 +
            16 * a0 * b3 * b5 * c2 * d0 * d2 + 16 * a1 * a4 * b0 * d0 * d2 * d5 - 16 * a1 * a5 * b0 * d0 * d2 * d4 -
            16 * a1 * b0 * b1 * c5 * d0 * d5 + 16 * a1 * b0 * b4 * c0 * d2 * d5 + 16 * a1 * b0 * b4 * c2 * d0 * d5 +
            16 * a1 * b0 * b4 * c5 * d0 * d2 - 16 * a1 * b0 * b5 * c0 * d2 * d4 - 16 * a1 * b0 * b5 * c2 * d0 * d4 -
            16 * a1 * b0 * b5 * c4 * d0 * d2 - 64 * a1 * b1 * b2 * c3 * d2 * d3 + 64 * a1 * b1 * b3 * c2 * d2 * d3 +
            16 * a1 * b1 * b5 * c0 * d0 * d5 - 32 * a1 * b2 * b4 * c0 * d0 * d5 + 32 * a1 * b2 * b5 * c0 * d0 * d4 +
            16 * a2 * a4 * b0 * d0 * d1 * d5 - 16 * a2 * a5 * b0 * d0 * d1 * d4 - 16 * a2 * b0 * b2 * c0 * d3 * d5 -
            16 * a2 * b0 * b2 * c3 * d0 * d5 + 64 * a2 * b0 * b2 * c4 * d0 * d4 - 16 * a2 * b0 * b2 * c5 * d0 * d3 +
            16 * a2 * b0 * b4 * c0 * d1 * d5 + 16 * a2 * b0 * b4 * c1 * d0 * d5 + 16 * a2 * b0 * b4 * c5 * d0 * d1 -
            16 * a2 * b0 * b5 * c0 * d1 * d4 - 16 * a2 * b0 * b5 * c1 * d0 * d4 - 16 * a2 * b0 * b5 * c4 * d0 * d1 +
            64 * a2 * b1 * b2 * c3 * d1 * d3 - 32 * a2 * b1 * b4 * c0 * d0 * d5 + 32 * a2 * b1 * b5 * c0 * d0 * d4 +
            16 * a2 * b2 * b3 * c0 * d0 * d5 - 64 * a2 * b2 * b3 * c1 * d1 * d3 - 64 * a2 * b2 * b4 * c0 * d0 * d4 +
            16 * a2 * b2 * b5 * c0 * d0 * d3 - 16 * a2 * b3 * b5 * c0 * d0 * d2 + 16 * a3 * b0 * b5 * c2 * d0 * d2 -
            64 * a3 * b1 * b3 * c2 * d1 * d2 + 64 * a3 * b2 * b3 * c1 * d1 * d2 - 16 * a3 * b2 * b5 * c0 * d0 * d2 +
            16 * a4 * b0 * b1 * c0 * d2 * d5 + 16 * a4 * b0 * b1 * c2 * d0 * d5 + 16 * a4 * b0 * b1 * c5 * d0 * d2 +
            16 * a4 * b0 * b2 * c0 * d1 * d5 + 16 * a4 * b0 * b2 * c1 * d0 * d5 + 16 * a4 * b0 * b2 * c5 * d0 * d1 -
            64 * a4 * b0 * b4 * c2 * d0 * d2 - 32 * a4 * b1 * b2 * c0 * d0 * d5 + 64 * a4 * b2 * b4 * c0 * d0 * d2 -
            16 * a5 * b0 * b1 * c0 * d2 * d4 - 16 * a5 * b0 * b1 * c2 * d0 * d4 - 16 * a5 * b0 * b1 * c4 * d0 * d2 -
            16 * a5 * b0 * b2 * c0 * d1 * d4 - 16 * a5 * b0 * b2 * c1 * d0 * d4 - 16 * a5 * b0 * b2 * c4 * d0 * d1 +
            16 * a5 * b0 * b3 * c2 * d0 * d2 + 16 * a5 * b0 * b5 * c1 * d0 * d1 + 32 * a5 * b1 * b2 * c0 * d0 * d4 -
            16 * a5 * b1 * b5 * c0 * d0 * d1 - 16 * a5 * b2 * b3 * c0 * d0 * d2 + 16 * b0 * b1 * b4 * c0 * c2 * d5 +
            16 * b0 * b1 * b4 * c0 * c5 * d2 + 16 * b0 * b1 * b4 * c2 * c5 * d0 - 16 * b0 * b1 * b5 * c0 * c2 * d4 -
            16 * b0 * b1 * b5 * c0 * c4 * d2 - 16 * b0 * b1 * b5 * c2 * c4 * d0 + 16 * b0 * b2 * b4 * c0 * c1 * d5 +
            16 * b0 * b2 * b4 * c0 * c5 * d1 + 16 * b0 * b2 * b4 * c1 * c5 * d0 - 16 * b0 * b2 * b5 * c0 * c1 * d4 -
            16 * b0 * b2 * b5 * c0 * c4 * d1 - 16 * b0 * b2 * b5 * c1 * c4 * d0 + 16 * b0 * b3 * b5 * c0 * c2 * d2 -
            32 * b1 * b2 * b4 * c0 * c5 * d0 + 32 * b1 * b2 * b5 * c0 * c4 * d0 - 16 * b2 * b3 * b5 * c0 * c2 * d0 -
            16 * a0 * a1 * b3 * d2 * d3 * d4 - 16 * a0 * a3 * b1 * d2 * d3 * d4 + 32 * a0 * a3 * b3 * d1 * d2 * d4 -
            16 * a0 * a3 * b4 * d1 * d2 * d3 - 16 * a0 * a4 * b0 * d0 * d4 * d5 - 16 * a0 * a4 * b3 * d1 * d2 * d3 +
            12 * a0 * a5 * b0 * d0 * d3 * d5 + 12 * a0 * b0 * b3 * c5 * d0 * d5 - 16 * a0 * b0 * b4 * c0 * d4 * d5 -
            16 * a0 * b0 * b4 * c4 * d0 * d5 - 16 * a0 * b0 * b4 * c5 * d0 * d4 + 12 * a0 * b0 * b5 * c0 * d3 * d5 +
            12 * a0 * b0 * b5 * c3 * d0 * d5 - 16 * a0 * b0 * b5 * c4 * d0 * d4 + 12 * a0 * b0 * b5 * c5 * d0 * d3 -
            16 * a0 * b1 * b3 * c2 * d3 * d4 - 16 * a0 * b1 * b3 * c3 * d2 * d4 - 16 * a0 * b1 * b3 * c4 * d2 * d3 +
            32 * a0 * b1 * b4 * c3 * d2 * d3 - 16 * a0 * b1 * b5 * c3 * d1 * d3 + 16 * a0 * b2 * b3 * c3 * d2 * d3 -
            16 * a0 * b3 * b4 * c1 * d2 * d3 - 16 * a0 * b3 * b4 * c2 * d1 * d3 - 16 * a0 * b3 * b4 * c3 * d1 * d2 -
            12 * a0 * b3 * b5 * c0 * d0 * d5 + 16 * a0 * b3 * b5 * c1 * d1 * d3 + 16 * a0 * b4 * b5 * c0 * d0 * d4 +
            16 * a1 * a2 * b3 * d0 * d3 * d4 - 16 * a1 * a3 * b0 * d2 * d3 * d4 - 16 * a1 * a3 * b1 * d0 * d3 * d5 +
            16 * a1 * a3 * b2 * d0 * d3 * d4 + 16 * a1 * a3 * b3 * d0 * d1 * d5 + 16 * a1 * b0 * b1 * c3 * d3 * d5 -
            16 * a1 * b0 * b3 * c2 * d3 * d4 - 16 * a1 * b0 * b3 * c3 * d2 * d4 - 16 * a1 * b0 * b3 * c4 * d2 * d3 +
            32 * a1 * b0 * b4 * c3 * d2 * d3 - 16 * a1 * b0 * b5 * c3 * d1 * d3 - 16 * a1 * b1 * b3 * c0 * d3 * d5 -
            16 * a1 * b1 * b3 * c3 * d0 * d5 - 16 * a1 * b1 * b3 * c5 * d0 * d3 + 16 * a1 * b1 * b5 * c3 * d0 * d3 +
            16 * a1 * b2 * b3 * c0 * d3 * d4 + 16 * a1 * b2 * b3 * c3 * d0 * d4 + 16 * a1 * b2 * b3 * c4 * d0 * d3 -
            32 * a1 * b2 * b4 * c3 * d0 * d3 + 16 * a2 * a3 * b1 * d0 * d3 * d4 - 32 * a2 * a3 * b3 * d0 * d1 * d4 -
            16 * a2 * a3 * b3 * d0 * d2 * d3 + 16 * a2 * a3 * b4 * d0 * d1 * d3 + 16 * a2 * a4 * b3 * d0 * d1 * d3 +
            16 * a2 * b0 * b3 * c3 * d2 * d3 + 16 * a2 * b1 * b3 * c0 * d3 * d4 + 16 * a2 * b1 * b3 * c3 * d0 * d4 +
            16 * a2 * b1 * b3 * c4 * d0 * d3 - 32 * a2 * b1 * b4 * c3 * d0 * d3 + 16 * a2 * b2 * b3 * c3 * d0 * d3 +
            16 * a2 * b3 * b4 * c0 * d1 * d3 + 16 * a2 * b3 * b4 * c1 * d0 * d3 + 16 * a2 * b3 * b4 * c3 * d0 * d1 -
            16 * a3 * a4 * b0 * d1 * d2 * d3 + 16 * a3 * a4 * b2 * d0 * d1 * d3 - 16 * a3 * b0 * b1 * c2 * d3 * d4 -
            16 * a3 * b0 * b1 * c3 * d2 * d4 - 16 * a3 * b0 * b1 * c4 * d2 * d3 + 16 * a3 * b0 * b2 * c3 * d2 * d3 -
            16 * a3 * b0 * b3 * c1 * d1 * d5 + 32 * a3 * b0 * b3 * c1 * d2 * d4 + 32 * a3 * b0 * b3 * c2 * d1 * d4 -
            16 * a3 * b0 * b3 * c2 * d2 * d3 + 32 * a3 * b0 * b3 * c4 * d1 * d2 - 16 * a3 * b0 * b4 * c1 * d2 * d3 -
            16 * a3 * b0 * b4 * c2 * d1 * d3 - 16 * a3 * b0 * b4 * c3 * d1 * d2 - 12 * a3 * b0 * b5 * c0 * d0 * d5 +
            16 * a3 * b0 * b5 * c1 * d1 * d3 + 16 * a3 * b1 * b2 * c0 * d3 * d4 + 16 * a3 * b1 * b2 * c3 * d0 * d4 +
            16 * a3 * b1 * b2 * c4 * d0 * d3 + 16 * a3 * b1 * b3 * c0 * d1 * d5 + 16 * a3 * b1 * b3 * c1 * d0 * d5 +
            16 * a3 * b1 * b3 * c5 * d0 * d1 - 32 * a3 * b2 * b3 * c0 * d1 * d4 - 16 * a3 * b2 * b3 * c0 * d2 * d3 -
            32 * a3 * b2 * b3 * c1 * d0 * d4 - 16 * a3 * b2 * b3 * c2 * d0 * d3 - 16 * a3 * b2 * b3 * c3 * d0 * d2 -
            32 * a3 * b2 * b3 * c4 * d0 * d1 + 16 * a3 * b2 * b4 * c0 * d1 * d3 + 16 * a3 * b2 * b4 * c1 * d0 * d3 +
            16 * a3 * b2 * b4 * c3 * d0 * d1 - 16 * a3 * b3 * b5 * c1 * d0 * d1 + 32 * a4 * b0 * b1 * c3 * d2 * d3 -
            16 * a4 * b0 * b3 * c1 * d2 * d3 - 16 * a4 * b0 * b3 * c2 * d1 * d3 - 16 * a4 * b0 * b3 * c3 * d1 * d2 +
            16 * a4 * b0 * b4 * c0 * d0 * d5 + 16 * a4 * b0 * b5 * c0 * d0 * d4 - 32 * a4 * b1 * b2 * c3 * d0 * d3 +
            16 * a4 * b2 * b3 * c0 * d1 * d3 + 16 * a4 * b2 * b3 * c1 * d0 * d3 + 16 * a4 * b2 * b3 * c3 * d0 * d1 -
            16 * a5 * b0 * b1 * c3 * d1 * d3 - 12 * a5 * b0 * b3 * c0 * d0 * d5 + 16 * a5 * b0 * b3 * c1 * d1 * d3 +
            16 * a5 * b0 * b4 * c0 * d0 * d4 - 12 * a5 * b0 * b5 * c0 * d0 * d3 - 16 * b0 * b1 * b3 * c2 * c3 * d4 -
            16 * b0 * b1 * b3 * c2 * c4 * d3 - 16 * b0 * b1 * b3 * c3 * c4 * d2 + 32 * b0 * b1 * b4 * c2 * c3 * d3 -
            16 * b0 * b1 * b5 * c1 * c3 * d3 + 16 * b0 * b2 * b3 * c2 * c3 * d3 - 16 * b0 * b3 * b4 * c1 * c2 * d3 -
            16 * b0 * b3 * b4 * c1 * c3 * d2 - 16 * b0 * b3 * b4 * c2 * c3 * d1 - 12 * b0 * b3 * b5 * c0 * c5 * d0 +
            16 * b0 * b3 * b5 * c1 * c3 * d1 + 16 * b0 * b4 * b5 * c0 * c4 * d0 + 16 * b1 * b2 * b3 * c0 * c3 * d4 +
            16 * b1 * b2 * b3 * c0 * c4 * d3 + 16 * b1 * b2 * b3 * c3 * c4 * d0 - 32 * b1 * b2 * b4 * c0 * c3 * d3 +
            16 * b2 * b3 * b4 * c0 * c1 * d3 + 16 * b2 * b3 * b4 * c0 * c3 * d1 + 16 * b2 * b3 * b4 * c1 * c3 * d0 +
            12 * a0 * a3 * b3 * d0 * d3 * d5 - 16 * a0 * b0 * b2 * c5 * d2 * d5 - 12 * a0 * b0 * b3 * c3 * d3 * d5 +
            16 * a0 * b0 * b3 * c4 * d3 * d4 - 16 * a0 * b0 * b4 * c3 * d3 * d4 + 16 * a0 * b0 * b5 * c2 * d2 * d5 -
            12 * a0 * b3 * b5 * c3 * d0 * d3 + 64 * a1 * a2 * b1 * d2 * d3 * d5 - 64 * a1 * a2 * b2 * d1 * d3 * d5 +
            64 * a1 * b1 * b2 * c2 * d3 * d5 + 64 * a1 * b1 * b2 * c3 * d2 * d5 - 256 * a1 * b1 * b2 * c4 * d2 * d4 +
            64 * a1 * b1 * b2 * c5 * d2 * d3 - 64 * a1 * b1 * b3 * c2 * d2 * d5 + 256 * a1 * b1 * b4 * c2 * d2 * d4 -
            64 * a1 * b1 * b5 * c2 * d2 * d3 + 64 * a1 * b3 * b5 * c2 * d1 * d2 + 16 * a2 * b0 * b2 * c5 * d0 * d5 -
            64 * a2 * b1 * b2 * c1 * d3 * d5 - 64 * a2 * b1 * b2 * c3 * d1 * d5 + 256 * a2 * b1 * b2 * c4 * d1 * d4 -
            64 * a2 * b1 * b2 * c5 * d1 * d3 + 64 * a2 * b2 * b3 * c1 * d1 * d5 - 256 * a2 * b2 * b4 * c1 * d1 * d4 -
            16 * a2 * b2 * b5 * c0 * d0 * d5 + 64 * a2 * b2 * b5 * c1 * d1 * d3 - 64 * a2 * b3 * b5 * c1 * d1 * d2 +
            12 * a3 * b0 * b3 * c0 * d3 * d5 + 12 * a3 * b0 * b3 * c3 * d0 * d5 - 16 * a3 * b0 * b3 * c4 * d0 * d4 +
            12 * a3 * b0 * b3 * c5 * d0 * d3 - 12 * a3 * b0 * b5 * c3 * d0 * d3 + 64 * a3 * b1 * b5 * c2 * d1 * d2 -
            64 * a3 * b2 * b5 * c1 * d1 * d2 + 16 * a3 * b3 * b4 * c0 * d0 * d4 + 12 * a3 * b3 * b5 * c0 * d0 * d3 +
            16 * a4 * b0 * b4 * c3 * d0 * d3 - 256 * a4 * b1 * b4 * c2 * d1 * d2 + 256 * a4 * b2 * b4 * c1 * d1 * d2 -
            16 * a4 * b3 * b4 * c0 * d0 * d3 - 12 * a5 * b0 * b3 * c3 * d0 * d3 - 16 * a5 * b0 * b5 * c2 * d0 * d2 +
            64 * a5 * b1 * b3 * c2 * d1 * d2 - 64 * a5 * b2 * b3 * c1 * d1 * d2 + 16 * a5 * b2 * b5 * c0 * d0 * d2 -
            12 * b0 * b3 * b5 * c0 * c3 * d3 + 64 * b1 * b3 * b5 * c1 * c2 * d2 - 64 * b2 * b3 * b5 * c1 * c2 * d1 -
            16 * a0 * a1 * b4 * d2 * d3 * d5 + 16 * a0 * a1 * b5 * d1 * d3 * d5 + 16 * a0 * a1 * b5 * d2 * d3 * d4 -
            16 * a0 * a2 * b3 * d1 * d4 * d5 - 16 * a0 * a2 * b3 * d2 * d3 * d5 + 16 * a0 * a2 * b4 * d1 * d3 * d5 -
            16 * a0 * a3 * b2 * d1 * d4 * d5 - 16 * a0 * a3 * b2 * d2 * d3 * d5 + 16 * a0 * a3 * b4 * d1 * d2 * d5 -
            16 * a0 * a4 * b1 * d2 * d3 * d5 + 16 * a0 * a4 * b2 * d1 * d3 * d5 + 16 * a0 * a4 * b3 * d1 * d2 * d5 -
            16 * a0 * a4 * b5 * d1 * d2 * d3 + 16 * a0 * a5 * b1 * d1 * d3 * d5 + 16 * a0 * a5 * b1 * d2 * d3 * d4 -
            16 * a0 * a5 * b4 * d1 * d2 * d3 - 12 * a0 * b0 * b5 * c5 * d0 * d5 - 16 * a0 * b1 * b4 * c2 * d3 * d5 -
            16 * a0 * b1 * b4 * c3 * d2 * d5 - 16 * a0 * b1 * b4 * c5 * d2 * d3 + 16 * a0 * b1 * b5 * c1 * d3 * d5 +
            16 * a0 * b1 * b5 * c2 * d3 * d4 + 16 * a0 * b1 * b5 * c3 * d1 * d5 + 16 * a0 * b1 * b5 * c3 * d2 * d4 -
            64 * a0 * b1 * b5 * c4 * d1 * d4 + 16 * a0 * b1 * b5 * c4 * d2 * d3 + 16 * a0 * b1 * b5 * c5 * d1 * d3 -
            16 * a0 * b2 * b3 * c1 * d4 * d5 - 16 * a0 * b2 * b3 * c2 * d3 * d5 - 16 * a0 * b2 * b3 * c3 * d2 * d5 -
            16 * a0 * b2 * b3 * c4 * d1 * d5 + 64 * a0 * b2 * b3 * c4 * d2 * d4 - 16 * a0 * b2 * b3 * c5 * d1 * d4 -
            16 * a0 * b2 * b3 * c5 * d2 * d3 + 16 * a0 * b2 * b4 * c1 * d3 * d5 + 16 * a0 * b2 * b4 * c3 * d1 * d5 +
            16 * a0 * b2 * b4 * c5 * d1 * d3 + 16 * a0 * b3 * b4 * c1 * d2 * d5 + 16 * a0 * b3 * b4 * c2 * d1 * d5 -
            64 * a0 * b3 * b4 * c2 * d2 * d4 + 16 * a0 * b3 * b4 * c5 * d1 * d2 + 64 * a0 * b4 * b5 * c1 * d1 * d4 -
            16 * a0 * b4 * b5 * c1 * d2 * d3 - 16 * a0 * b4 * b5 * c2 * d1 * d3 - 16 * a0 * b4 * b5 * c3 * d1 * d2 +
            16 * a1 * a2 * b3 * d0 * d4 * d5 - 16 * a1 * a2 * b5 * d0 * d3 * d4 + 16 * a1 * a3 * b2 * d0 * d4 * d5 -
            16 * a1 * a3 * b5 * d0 * d1 * d5 - 16 * a1 * a3 * b5 * d0 * d2 * d4 - 16 * a1 * a4 * b0 * d2 * d3 * d5 -
            64 * a1 * a4 * b1 * d0 * d4 * d5 + 64 * a1 * a4 * b4 * d0 * d1 * d5 + 16 * a1 * a4 * b5 * d0 * d2 * d3 +
            16 * a1 * a5 * b0 * d1 * d3 * d5 + 16 * a1 * a5 * b0 * d2 * d3 * d4 - 16 * a1 * a5 * b2 * d0 * d3 * d4 -
            16 * a1 * a5 * b3 * d0 * d1 * d5 - 16 * a1 * a5 * b3 * d0 * d2 * d4 + 16 * a1 * a5 * b4 * d0 * d2 * d3 +
            64 * a1 * b0 * b1 * c4 * d4 * d5 - 32 * a1 * b0 * b1 * c5 * d3 * d5 - 16 * a1 * b0 * b4 * c2 * d3 * d5 -
            16 * a1 * b0 * b4 * c3 * d2 * d5 - 16 * a1 * b0 * b4 * c5 * d2 * d3 + 16 * a1 * b0 * b5 * c1 * d3 * d5 +
            16 * a1 * b0 * b5 * c2 * d3 * d4 + 16 * a1 * b0 * b5 * c3 * d1 * d5 + 16 * a1 * b0 * b5 * c3 * d2 * d4 -
            64 * a1 * b0 * b5 * c4 * d1 * d4 + 16 * a1 * b0 * b5 * c4 * d2 * d3 + 16 * a1 * b0 * b5 * c5 * d1 * d3 +
            32 * a1 * b1 * b3 * c5 * d0 * d5 - 64 * a1 * b1 * b4 * c0 * d4 * d5 - 64 * a1 * b1 * b4 * c4 * d0 * d5 -
            64 * a1 * b1 * b4 * c5 * d0 * d4 + 64 * a1 * b1 * b5 * c4 * d0 * d4 + 16 * a1 * b2 * b3 * c0 * d4 * d5 +
            16 * a1 * b2 * b3 * c4 * d0 * d5 + 16 * a1 * b2 * b3 * c5 * d0 * d4 - 16 * a1 * b2 * b5 * c0 * d3 * d4 -
            16 * a1 * b2 * b5 * c3 * d0 * d4 - 16 * a1 * b2 * b5 * c4 * d0 * d3 - 16 * a1 * b3 * b5 * c0 * d1 * d5 -
            16 * a1 * b3 * b5 * c0 * d2 * d4 - 16 * a1 * b3 * b5 * c1 * d0 * d5 - 16 * a1 * b3 * b5 * c2 * d0 * d4 -
            16 * a1 * b3 * b5 * c4 * d0 * d2 - 16 * a1 * b3 * b5 * c5 * d0 * d1 + 16 * a1 * b4 * b5 * c0 * d2 * d3 +
            16 * a1 * b4 * b5 * c2 * d0 * d3 + 16 * a1 * b4 * b5 * c3 * d0 * d2 - 16 * a2 * a3 * b0 * d1 * d4 * d5 -
            16 * a2 * a3 * b0 * d2 * d3 * d5 + 16 * a2 * a3 * b1 * d0 * d4 * d5 - 16 * a2 * a3 * b4 * d0 * d1 * d5 +
            16 * a2 * a3 * b5 * d0 * d1 * d4 + 16 * a2 * a3 * b5 * d0 * d2 * d3 + 16 * a2 * a4 * b0 * d1 * d3 * d5 +
            64 * a2 * a4 * b2 * d0 * d3 * d4 - 16 * a2 * a4 * b3 * d0 * d1 * d5 - 64 * a2 * a4 * b4 * d0 * d2 * d3 -
            16 * a2 * a5 * b1 * d0 * d3 * d4 + 16 * a2 * a5 * b3 * d0 * d1 * d4 + 16 * a2 * a5 * b3 * d0 * d2 * d3 +
            32 * a2 * b0 * b2 * c3 * d3 * d5 - 64 * a2 * b0 * b2 * c4 * d3 * d4 - 16 * a2 * b0 * b3 * c1 * d4 * d5 -
            16 * a2 * b0 * b3 * c2 * d3 * d5 - 16 * a2 * b0 * b3 * c3 * d2 * d5 - 16 * a2 * b0 * b3 * c4 * d1 * d5 +
            64 * a2 * b0 * b3 * c4 * d2 * d4 - 16 * a2 * b0 * b3 * c5 * d1 * d4 - 16 * a2 * b0 * b3 * c5 * d2 * d3 +
            16 * a2 * b0 * b4 * c1 * d3 * d5 + 16 * a2 * b0 * b4 * c3 * d1 * d5 + 16 * a2 * b0 * b4 * c5 * d1 * d3 +
            16 * a2 * b1 * b3 * c0 * d4 * d5 + 16 * a2 * b1 * b3 * c4 * d0 * d5 + 16 * a2 * b1 * b3 * c5 * d0 * d4 -
            16 * a2 * b1 * b5 * c0 * d3 * d4 - 16 * a2 * b1 * b5 * c3 * d0 * d4 - 16 * a2 * b1 * b5 * c4 * d0 * d3 -
            64 * a2 * b2 * b3 * c4 * d0 * d4 + 64 * a2 * b2 * b4 * c0 * d3 * d4 + 64 * a2 * b2 * b4 * c3 * d0 * d4 +
            64 * a2 * b2 * b4 * c4 * d0 * d3 - 32 * a2 * b2 * b5 * c3 * d0 * d3 - 16 * a2 * b3 * b4 * c0 * d1 * d5 -
            16 * a2 * b3 * b4 * c1 * d0 * d5 - 16 * a2 * b3 * b4 * c5 * d0 * d1 + 16 * a2 * b3 * b5 * c0 * d1 * d4 +
            16 * a2 * b3 * b5 * c0 * d2 * d3 + 16 * a2 * b3 * b5 * c1 * d0 * d4 + 16 * a2 * b3 * b5 * c2 * d0 * d3 +
            16 * a2 * b3 * b5 * c3 * d0 * d2 + 16 * a2 * b3 * b5 * c4 * d0 * d1 + 16 * a3 * a4 * b0 * d1 * d2 * d5 -
            16 * a3 * a4 * b2 * d0 * d1 * d5 - 16 * a3 * a5 * b1 * d0 * d1 * d5 - 16 * a3 * a5 * b1 * d0 * d2 * d4 +
            16 * a3 * a5 * b2 * d0 * d1 * d4 + 16 * a3 * a5 * b2 * d0 * d2 * d3 - 16 * a3 * b0 * b2 * c1 * d4 * d5 -
            16 * a3 * b0 * b2 * c2 * d3 * d5 - 16 * a3 * b0 * b2 * c3 * d2 * d5 - 16 * a3 * b0 * b2 * c4 * d1 * d5 +
            64 * a3 * b0 * b2 * c4 * d2 * d4 - 16 * a3 * b0 * b2 * c5 * d1 * d4 - 16 * a3 * b0 * b2 * c5 * d2 * d3 +
            32 * a3 * b0 * b3 * c2 * d2 * d5 + 16 * a3 * b0 * b4 * c1 * d2 * d5 + 16 * a3 * b0 * b4 * c2 * d1 * d5 -
            64 * a3 * b0 * b4 * c2 * d2 * d4 + 16 * a3 * b0 * b4 * c5 * d1 * d2 + 16 * a3 * b1 * b2 * c0 * d4 * d5 +
            16 * a3 * b1 * b2 * c4 * d0 * d5 + 16 * a3 * b1 * b2 * c5 * d0 * d4 - 16 * a3 * b1 * b5 * c0 * d1 * d5 -
            16 * a3 * b1 * b5 * c0 * d2 * d4 - 16 * a3 * b1 * b5 * c1 * d0 * d5 - 16 * a3 * b1 * b5 * c2 * d0 * d4 -
            16 * a3 * b1 * b5 * c4 * d0 * d2 - 16 * a3 * b1 * b5 * c5 * d0 * d1 - 16 * a3 * b2 * b4 * c0 * d1 * d5 -
            16 * a3 * b2 * b4 * c1 * d0 * d5 - 16 * a3 * b2 * b4 * c5 * d0 * d1 + 16 * a3 * b2 * b5 * c0 * d1 * d4 +
            16 * a3 * b2 * b5 * c0 * d2 * d3 + 16 * a3 * b2 * b5 * c1 * d0 * d4 + 16 * a3 * b2 * b5 * c2 * d0 * d3 +
            16 * a3 * b2 * b5 * c3 * d0 * d2 + 16 * a3 * b2 * b5 * c4 * d0 * d1 - 32 * a3 * b3 * b5 * c2 * d0 * d2 -
            16 * a4 * a5 * b0 * d1 * d2 * d3 + 16 * a4 * a5 * b1 * d0 * d2 * d3 - 16 * a4 * b0 * b1 * c2 * d3 * d5 -
            16 * a4 * b0 * b1 * c3 * d2 * d5 - 16 * a4 * b0 * b1 * c5 * d2 * d3 + 16 * a4 * b0 * b2 * c1 * d3 * d5 +
            16 * a4 * b0 * b2 * c3 * d1 * d5 + 16 * a4 * b0 * b2 * c5 * d1 * d3 + 16 * a4 * b0 * b3 * c1 * d2 * d5 +
            16 * a4 * b0 * b3 * c2 * d1 * d5 - 64 * a4 * b0 * b3 * c2 * d2 * d4 + 16 * a4 * b0 * b3 * c5 * d1 * d2 -
            64 * a4 * b0 * b4 * c1 * d1 * d5 + 64 * a4 * b0 * b4 * c2 * d2 * d3 + 64 * a4 * b0 * b5 * c1 * d1 * d4 -
            16 * a4 * b0 * b5 * c1 * d2 * d3 - 16 * a4 * b0 * b5 * c2 * d1 * d3 - 16 * a4 * b0 * b5 * c3 * d1 * d2 +
            64 * a4 * b1 * b4 * c0 * d1 * d5 + 64 * a4 * b1 * b4 * c1 * d0 * d5 + 64 * a4 * b1 * b4 * c5 * d0 * d1 +
            16 * a4 * b1 * b5 * c0 * d2 * d3 + 16 * a4 * b1 * b5 * c2 * d0 * d3 + 16 * a4 * b1 * b5 * c3 * d0 * d2 -
            16 * a4 * b2 * b3 * c0 * d1 * d5 - 16 * a4 * b2 * b3 * c1 * d0 * d5 - 16 * a4 * b2 * b3 * c5 * d0 * d1 -
            64 * a4 * b2 * b4 * c0 * d2 * d3 - 64 * a4 * b2 * b4 * c2 * d0 * d3 - 64 * a4 * b2 * b4 * c3 * d0 * d2 +
            64 * a4 * b3 * b4 * c2 * d0 * d2 - 64 * a4 * b4 * b5 * c1 * d0 * d1 + 16 * a5 * b0 * b1 * c1 * d3 * d5 +
            16 * a5 * b0 * b1 * c2 * d3 * d4 + 16 * a5 * b0 * b1 * c3 * d1 * d5 + 16 * a5 * b0 * b1 * c3 * d2 * d4 -
            64 * a5 * b0 * b1 * c4 * d1 * d4 + 16 * a5 * b0 * b1 * c4 * d2 * d3 + 16 * a5 * b0 * b1 * c5 * d1 * d3 +
            64 * a5 * b0 * b4 * c1 * d1 * d4 - 16 * a5 * b0 * b4 * c1 * d2 * d3 - 16 * a5 * b0 * b4 * c2 * d1 * d3 -
            16 * a5 * b0 * b4 * c3 * d1 * d2 + 12 * a5 * b0 * b5 * c0 * d0 * d5 - 32 * a5 * b0 * b5 * c1 * d1 * d3 -
            16 * a5 * b1 * b2 * c0 * d3 * d4 - 16 * a5 * b1 * b2 * c3 * d0 * d4 - 16 * a5 * b1 * b2 * c4 * d0 * d3 -
            16 * a5 * b1 * b3 * c0 * d1 * d5 - 16 * a5 * b1 * b3 * c0 * d2 * d4 - 16 * a5 * b1 * b3 * c1 * d0 * d5 -
            16 * a5 * b1 * b3 * c2 * d0 * d4 - 16 * a5 * b1 * b3 * c4 * d0 * d2 - 16 * a5 * b1 * b3 * c5 * d0 * d1 +
            16 * a5 * b1 * b4 * c0 * d2 * d3 + 16 * a5 * b1 * b4 * c2 * d0 * d3 + 16 * a5 * b1 * b4 * c3 * d0 * d2 +
            16 * a5 * b2 * b3 * c0 * d1 * d4 + 16 * a5 * b2 * b3 * c0 * d2 * d3 + 16 * a5 * b2 * b3 * c1 * d0 * d4 +
            16 * a5 * b2 * b3 * c2 * d0 * d3 + 16 * a5 * b2 * b3 * c3 * d0 * d2 + 16 * a5 * b2 * b3 * c4 * d0 * d1 +
            32 * a5 * b3 * b5 * c1 * d0 * d1 - 16 * b0 * b1 * b4 * c2 * c3 * d5 - 16 * b0 * b1 * b4 * c2 * c5 * d3 -
            16 * b0 * b1 * b4 * c3 * c5 * d2 + 16 * b0 * b1 * b5 * c1 * c3 * d5 - 64 * b0 * b1 * b5 * c1 * c4 * d4 +
            16 * b0 * b1 * b5 * c1 * c5 * d3 + 16 * b0 * b1 * b5 * c2 * c3 * d4 + 16 * b0 * b1 * b5 * c2 * c4 * d3 +
            16 * b0 * b1 * b5 * c3 * c4 * d2 + 16 * b0 * b1 * b5 * c3 * c5 * d1 - 16 * b0 * b2 * b3 * c1 * c4 * d5 -
            16 * b0 * b2 * b3 * c1 * c5 * d4 - 16 * b0 * b2 * b3 * c2 * c3 * d5 + 64 * b0 * b2 * b3 * c2 * c4 * d4 -
            16 * b0 * b2 * b3 * c2 * c5 * d3 - 16 * b0 * b2 * b3 * c3 * c5 * d2 - 16 * b0 * b2 * b3 * c4 * c5 * d1 +
            16 * b0 * b2 * b4 * c1 * c3 * d5 + 16 * b0 * b2 * b4 * c1 * c5 * d3 + 16 * b0 * b2 * b4 * c3 * c5 * d1 +
            16 * b0 * b3 * b4 * c1 * c2 * d5 + 16 * b0 * b3 * b4 * c1 * c5 * d2 - 64 * b0 * b3 * b4 * c2 * c4 * d2 +
            16 * b0 * b3 * b4 * c2 * c5 * d1 - 16 * b0 * b4 * b5 * c1 * c2 * d3 - 16 * b0 * b4 * b5 * c1 * c3 * d2 +
            64 * b0 * b4 * b5 * c1 * c4 * d1 - 16 * b0 * b4 * b5 * c2 * c3 * d1 + 16 * b1 * b2 * b3 * c0 * c4 * d5 +
            16 * b1 * b2 * b3 * c0 * c5 * d4 + 16 * b1 * b2 * b3 * c4 * c5 * d0 - 16 * b1 * b2 * b5 * c0 * c3 * d4 -
            16 * b1 * b2 * b5 * c0 * c4 * d3 - 16 * b1 * b2 * b5 * c3 * c4 * d0 - 16 * b1 * b3 * b5 * c0 * c1 * d5 -
            16 * b1 * b3 * b5 * c0 * c2 * d4 - 16 * b1 * b3 * b5 * c0 * c4 * d2 - 16 * b1 * b3 * b5 * c0 * c5 * d1 -
            16 * b1 * b3 * b5 * c1 * c5 * d0 - 16 * b1 * b3 * b5 * c2 * c4 * d0 + 16 * b1 * b4 * b5 * c0 * c2 * d3 +
            16 * b1 * b4 * b5 * c0 * c3 * d2 + 16 * b1 * b4 * b5 * c2 * c3 * d0 - 16 * b2 * b3 * b4 * c0 * c1 * d5 -
            16 * b2 * b3 * b4 * c0 * c5 * d1 - 16 * b2 * b3 * b4 * c1 * c5 * d0 + 16 * b2 * b3 * b5 * c0 * c1 * d4 +
            16 * b2 * b3 * b5 * c0 * c2 * d3 + 16 * b2 * b3 * b5 * c0 * c3 * d2 + 16 * b2 * b3 * b5 * c0 * c4 * d1 +
            16 * b2 * b3 * b5 * c1 * c4 * d0 + 16 * b2 * b3 * b5 * c2 * c3 * d0 + 16 * a0 * a3 * b4 * d0 * d4 * d5 +
            16 * a0 * a4 * b3 * d0 * d4 * d5 - 16 * a0 * a4 * b5 * d0 * d3 * d4 - 16 * a0 * a5 * b4 * d0 * d3 * d4 -
            32 * a0 * b0 * b3 * c4 * d4 * d5 + 24 * a0 * b0 * b3 * c5 * d3 * d5 - 24 * a0 * b0 * b5 * c3 * d3 * d5 +
            32 * a0 * b0 * b5 * c4 * d3 * d4 + 16 * a0 * b3 * b4 * c0 * d4 * d5 + 16 * a0 * b3 * b4 * c4 * d0 * d5 +
            16 * a0 * b3 * b4 * c5 * d0 * d4 - 16 * a0 * b4 * b5 * c0 * d3 * d4 - 16 * a0 * b4 * b5 * c3 * d0 * d4 -
            16 * a0 * b4 * b5 * c4 * d0 * d3 - 64 * a1 * b1 * b2 * c5 * d2 * d5 + 64 * a1 * b1 * b5 * c2 * d2 * d5 +
            64 * a2 * b1 * b2 * c5 * d1 * d5 - 64 * a2 * b2 * b5 * c1 * d1 * d5 + 16 * a3 * a4 * b0 * d0 * d4 * d5 -
            24 * a3 * b0 * b3 * c5 * d0 * d5 + 16 * a3 * b0 * b4 * c0 * d4 * d5 + 16 * a3 * b0 * b4 * c4 * d0 * d5 +
            16 * a3 * b0 * b4 * c5 * d0 * d4 + 24 * a3 * b3 * b5 * c0 * d0 * d5 - 16 * a4 * a5 * b0 * d0 * d3 * d4 +
            16 * a4 * b0 * b3 * c0 * d4 * d5 + 16 * a4 * b0 * b3 * c4 * d0 * d5 + 16 * a4 * b0 * b3 * c5 * d0 * d4 -
            16 * a4 * b0 * b5 * c0 * d3 * d4 - 16 * a4 * b0 * b5 * c3 * d0 * d4 - 16 * a4 * b0 * b5 * c4 * d0 * d3 -
            32 * a4 * b3 * b4 * c0 * d0 * d5 + 32 * a4 * b4 * b5 * c0 * d0 * d3 - 16 * a5 * b0 * b4 * c0 * d3 * d4 -
            16 * a5 * b0 * b4 * c3 * d0 * d4 - 16 * a5 * b0 * b4 * c4 * d0 * d3 + 24 * a5 * b0 * b5 * c3 * d0 * d3 -
            64 * a5 * b1 * b5 * c2 * d1 * d2 + 64 * a5 * b2 * b5 * c1 * d1 * d2 - 24 * a5 * b3 * b5 * c0 * d0 * d3 +
            16 * b0 * b3 * b4 * c0 * c4 * d5 + 16 * b0 * b3 * b4 * c0 * c5 * d4 + 16 * b0 * b3 * b4 * c4 * c5 * d0 -
            16 * b0 * b4 * b5 * c0 * c3 * d4 - 16 * b0 * b4 * b5 * c0 * c4 * d3 - 16 * b0 * b4 * b5 * c3 * c4 * d0 +
            16 * a0 * a2 * b5 * d1 * d4 * d5 + 16 * a0 * a4 * b5 * d1 * d2 * d5 + 16 * a0 * a5 * b2 * d1 * d4 * d5 +
            16 * a0 * a5 * b4 * d1 * d2 * d5 - 32 * a0 * a5 * b5 * d1 * d2 * d4 - 16 * a0 * b1 * b5 * c5 * d1 * d5 +
            16 * a0 * b2 * b3 * c5 * d2 * d5 - 32 * a0 * b2 * b4 * c5 * d1 * d5 + 16 * a0 * b2 * b5 * c1 * d4 * d5 +
            16 * a0 * b2 * b5 * c4 * d1 * d5 + 16 * a0 * b2 * b5 * c5 * d1 * d4 - 16 * a0 * b3 * b5 * c2 * d2 * d5 +
            16 * a0 * b4 * b5 * c1 * d2 * d5 + 16 * a0 * b4 * b5 * c2 * d1 * d5 + 16 * a0 * b4 * b5 * c5 * d1 * d2 -
            16 * a1 * a2 * b5 * d0 * d4 * d5 - 16 * a1 * a4 * b5 * d0 * d2 * d5 - 16 * a1 * a5 * b2 * d0 * d4 * d5 -
            16 * a1 * a5 * b4 * d0 * d2 * d5 + 16 * a1 * a5 * b5 * d0 * d1 * d5 + 32 * a1 * a5 * b5 * d0 * d2 * d4 -
            16 * a1 * b0 * b5 * c5 * d1 * d5 - 16 * a1 * b1 * b5 * c5 * d0 * d5 + 32 * a1 * b2 * b4 * c5 * d0 * d5 -
            16 * a1 * b2 * b5 * c0 * d4 * d5 - 16 * a1 * b2 * b5 * c4 * d0 * d5 - 16 * a1 * b2 * b5 * c5 * d0 * d4 -
            16 * a1 * b4 * b5 * c0 * d2 * d5 - 16 * a1 * b4 * b5 * c2 * d0 * d5 - 16 * a1 * b4 * b5 * c5 * d0 * d2 +
            16 * a2 * a5 * b0 * d1 * d4 * d5 - 16 * a2 * a5 * b1 * d0 * d4 * d5 + 16 * a2 * a5 * b2 * d0 * d3 * d5 -
            16 * a2 * a5 * b5 * d0 * d2 * d3 - 16 * a2 * b0 * b2 * c5 * d3 * d5 + 16 * a2 * b0 * b3 * c5 * d2 * d5 -
            32 * a2 * b0 * b4 * c5 * d1 * d5 + 16 * a2 * b0 * b5 * c1 * d4 * d5 + 16 * a2 * b0 * b5 * c4 * d1 * d5 +
            16 * a2 * b0 * b5 * c5 * d1 * d4 + 32 * a2 * b1 * b4 * c5 * d0 * d5 - 16 * a2 * b1 * b5 * c0 * d4 * d5 -
            16 * a2 * b1 * b5 * c4 * d0 * d5 - 16 * a2 * b1 * b5 * c5 * d0 * d4 - 16 * a2 * b2 * b3 * c5 * d0 * d5 +
            16 * a2 * b2 * b5 * c0 * d3 * d5 + 16 * a2 * b2 * b5 * c3 * d0 * d5 + 16 * a2 * b2 * b5 * c5 * d0 * d3 +
            16 * a3 * b0 * b2 * c5 * d2 * d5 - 16 * a3 * b0 * b5 * c2 * d2 * d5 + 16 * a4 * a5 * b0 * d1 * d2 * d5 -
            16 * a4 * a5 * b1 * d0 * d2 * d5 - 32 * a4 * b0 * b2 * c5 * d1 * d5 + 16 * a4 * b0 * b5 * c1 * d2 * d5 +
            16 * a4 * b0 * b5 * c2 * d1 * d5 + 16 * a4 * b0 * b5 * c5 * d1 * d2 + 32 * a4 * b1 * b2 * c5 * d0 * d5 -
            16 * a4 * b1 * b5 * c0 * d2 * d5 - 16 * a4 * b1 * b5 * c2 * d0 * d5 - 16 * a4 * b1 * b5 * c5 * d0 * d2 -
            16 * a5 * b0 * b1 * c5 * d1 * d5 + 16 * a5 * b0 * b2 * c1 * d4 * d5 + 16 * a5 * b0 * b2 * c4 * d1 * d5 +
            16 * a5 * b0 * b2 * c5 * d1 * d4 - 16 * a5 * b0 * b3 * c2 * d2 * d5 + 16 * a5 * b0 * b4 * c1 * d2 * d5 +
            16 * a5 * b0 * b4 * c2 * d1 * d5 + 16 * a5 * b0 * b4 * c5 * d1 * d2 + 16 * a5 * b0 * b5 * c1 * d1 * d5 -
            32 * a5 * b0 * b5 * c1 * d2 * d4 - 32 * a5 * b0 * b5 * c2 * d1 * d4 + 16 * a5 * b0 * b5 * c2 * d2 * d3 -
            32 * a5 * b0 * b5 * c4 * d1 * d2 - 16 * a5 * b1 * b2 * c0 * d4 * d5 - 16 * a5 * b1 * b2 * c4 * d0 * d5 -
            16 * a5 * b1 * b2 * c5 * d0 * d4 - 16 * a5 * b1 * b4 * c0 * d2 * d5 - 16 * a5 * b1 * b4 * c2 * d0 * d5 -
            16 * a5 * b1 * b4 * c5 * d0 * d2 + 16 * a5 * b1 * b5 * c0 * d1 * d5 + 32 * a5 * b1 * b5 * c0 * d2 * d4 +
            16 * a5 * b1 * b5 * c1 * d0 * d5 + 32 * a5 * b1 * b5 * c2 * d0 * d4 + 32 * a5 * b1 * b5 * c4 * d0 * d2 +
            16 * a5 * b1 * b5 * c5 * d0 * d1 - 16 * a5 * b2 * b5 * c0 * d2 * d3 - 16 * a5 * b2 * b5 * c2 * d0 * d3 -
            16 * a5 * b2 * b5 * c3 * d0 * d2 + 16 * a5 * b3 * b5 * c2 * d0 * d2 - 16 * b0 * b1 * b5 * c1 * c5 * d5 +
            16 * b0 * b2 * b3 * c2 * c5 * d5 - 32 * b0 * b2 * b4 * c1 * c5 * d5 + 16 * b0 * b2 * b5 * c1 * c4 * d5 +
            16 * b0 * b2 * b5 * c1 * c5 * d4 + 16 * b0 * b2 * b5 * c4 * c5 * d1 - 16 * b0 * b3 * b5 * c2 * c5 * d2 +
            16 * b0 * b4 * b5 * c1 * c2 * d5 + 16 * b0 * b4 * b5 * c1 * c5 * d2 + 16 * b0 * b4 * b5 * c2 * c5 * d1 +
            32 * b1 * b2 * b4 * c0 * c5 * d5 - 16 * b1 * b2 * b5 * c0 * c4 * d5 - 16 * b1 * b2 * b5 * c0 * c5 * d4 -
            16 * b1 * b2 * b5 * c4 * c5 * d0 - 16 * b1 * b4 * b5 * c0 * c2 * d5 - 16 * b1 * b4 * b5 * c0 * c5 * d2 -
            16 * b1 * b4 * b5 * c2 * c5 * d0 - 12 * a0 * a5 * b5 * d0 * d3 * d5 + 16 * a0 * b0 * b4 * c5 * d4 * d5 -
            16 * a0 * b0 * b5 * c4 * d4 * d5 + 12 * a0 * b0 * b5 * c5 * d3 * d5 + 12 * a0 * b3 * b5 * c5 * d0 * d5 -
            16 * a1 * a2 * b3 * d3 * d4 * d5 - 16 * a1 * a3 * b2 * d3 * d4 * d5 + 16 * a1 * a3 * b5 * d2 * d3 * d4 +
            16 * a1 * a5 * b3 * d2 * d3 * d4 + 16 * a1 * b1 * b3 * c5 * d3 * d5 - 16 * a1 * b1 * b5 * c3 * d3 * d5 -
            16 * a1 * b2 * b3 * c3 * d4 * d5 - 16 * a1 * b2 * b3 * c4 * d3 * d5 - 16 * a1 * b2 * b3 * c5 * d3 * d4 +
            32 * a1 * b2 * b4 * c3 * d3 * d5 + 16 * a1 * b3 * b5 * c2 * d3 * d4 + 16 * a1 * b3 * b5 * c3 * d2 * d4 +
            16 * a1 * b3 * b5 * c4 * d2 * d3 - 32 * a1 * b4 * b5 * c3 * d2 * d3 - 16 * a2 * a3 * b1 * d3 * d4 * d5 +
            32 * a2 * a3 * b3 * d1 * d4 * d5 + 16 * a2 * a3 * b3 * d2 * d3 * d5 - 16 * a2 * a3 * b4 * d1 * d3 * d5 -
            16 * a2 * a4 * b3 * d1 * d3 * d5 - 16 * a2 * b1 * b3 * c3 * d4 * d5 - 16 * a2 * b1 * b3 * c4 * d3 * d5 -
            16 * a2 * b1 * b3 * c5 * d3 * d4 + 32 * a2 * b1 * b4 * c3 * d3 * d5 - 16 * a2 * b2 * b3 * c3 * d3 * d5 +
            64 * a2 * b2 * b3 * c4 * d3 * d4 - 64 * a2 * b2 * b4 * c3 * d3 * d4 - 16 * a2 * b3 * b4 * c1 * d3 * d5 -
            16 * a2 * b3 * b4 * c3 * d1 * d5 - 16 * a2 * b3 * b4 * c5 * d1 * d3 - 16 * a2 * b3 * b5 * c3 * d2 * d3 -
            16 * a3 * a4 * b2 * d1 * d3 * d5 + 16 * a3 * a4 * b5 * d1 * d2 * d3 + 16 * a3 * a5 * b1 * d2 * d3 * d4 -
            32 * a3 * a5 * b3 * d1 * d2 * d4 + 16 * a3 * a5 * b4 * d1 * d2 * d3 + 12 * a3 * b0 * b5 * c5 * d0 * d5 -
            16 * a3 * b1 * b2 * c3 * d4 * d5 - 16 * a3 * b1 * b2 * c4 * d3 * d5 - 16 * a3 * b1 * b2 * c5 * d3 * d4 -
            16 * a3 * b1 * b3 * c5 * d1 * d5 + 16 * a3 * b1 * b5 * c2 * d3 * d4 + 16 * a3 * b1 * b5 * c3 * d2 * d4 +
            16 * a3 * b1 * b5 * c4 * d2 * d3 + 32 * a3 * b2 * b3 * c1 * d4 * d5 + 16 * a3 * b2 * b3 * c2 * d3 * d5 +
            16 * a3 * b2 * b3 * c3 * d2 * d5 + 32 * a3 * b2 * b3 * c4 * d1 * d5 - 64 * a3 * b2 * b3 * c4 * d2 * d4 +
            32 * a3 * b2 * b3 * c5 * d1 * d4 + 16 * a3 * b2 * b3 * c5 * d2 * d3 - 16 * a3 * b2 * b4 * c1 * d3 * d5 -
            16 * a3 * b2 * b4 * c3 * d1 * d5 - 16 * a3 * b2 * b4 * c5 * d1 * d3 - 16 * a3 * b2 * b5 * c3 * d2 * d3 +
            64 * a3 * b3 * b4 * c2 * d2 * d4 + 16 * a3 * b3 * b5 * c1 * d1 * d5 - 32 * a3 * b3 * b5 * c1 * d2 * d4 -
            32 * a3 * b3 * b5 * c2 * d1 * d4 + 16 * a3 * b3 * b5 * c2 * d2 * d3 - 32 * a3 * b3 * b5 * c4 * d1 * d2 +
            16 * a3 * b4 * b5 * c1 * d2 * d3 + 16 * a3 * b4 * b5 * c2 * d1 * d3 + 16 * a3 * b4 * b5 * c3 * d1 * d2 +
            16 * a4 * a5 * b3 * d1 * d2 * d3 - 16 * a4 * b0 * b4 * c5 * d0 * d5 + 32 * a4 * b1 * b2 * c3 * d3 * d5 -
            32 * a4 * b1 * b5 * c3 * d2 * d3 - 16 * a4 * b2 * b3 * c1 * d3 * d5 - 16 * a4 * b2 * b3 * c3 * d1 * d5 -
            16 * a4 * b2 * b3 * c5 * d1 * d3 + 64 * a4 * b2 * b4 * c3 * d2 * d3 - 64 * a4 * b3 * b4 * c2 * d2 * d3 +
            16 * a4 * b3 * b5 * c1 * d2 * d3 + 16 * a4 * b3 * b5 * c2 * d1 * d3 + 16 * a4 * b3 * b5 * c3 * d1 * d2 +
            16 * a4 * b4 * b5 * c0 * d0 * d5 + 12 * a5 * b0 * b3 * c5 * d0 * d5 - 12 * a5 * b0 * b5 * c0 * d3 * d5 -
            12 * a5 * b0 * b5 * c3 * d0 * d5 + 16 * a5 * b0 * b5 * c4 * d0 * d4 - 12 * a5 * b0 * b5 * c5 * d0 * d3 +
            16 * a5 * b1 * b3 * c2 * d3 * d4 + 16 * a5 * b1 * b3 * c3 * d2 * d4 + 16 * a5 * b1 * b3 * c4 * d2 * d3 -
            32 * a5 * b1 * b4 * c3 * d2 * d3 + 16 * a5 * b1 * b5 * c3 * d1 * d3 - 16 * a5 * b2 * b3 * c3 * d2 * d3 +
            16 * a5 * b3 * b4 * c1 * d2 * d3 + 16 * a5 * b3 * b4 * c2 * d1 * d3 + 16 * a5 * b3 * b4 * c3 * d1 * d2 -
            12 * a5 * b3 * b5 * c0 * d0 * d5 - 16 * a5 * b3 * b5 * c1 * d1 * d3 - 16 * a5 * b4 * b5 * c0 * d0 * d4 +
            12 * b0 * b3 * b5 * c0 * c5 * d5 - 16 * b1 * b2 * b3 * c3 * c4 * d5 - 16 * b1 * b2 * b3 * c3 * c5 * d4 -
            16 * b1 * b2 * b3 * c4 * c5 * d3 + 32 * b1 * b2 * b4 * c3 * c5 * d3 + 16 * b1 * b3 * b5 * c2 * c3 * d4 +
            16 * b1 * b3 * b5 * c2 * c4 * d3 + 16 * b1 * b3 * b5 * c3 * c4 * d2 - 32 * b1 * b4 * b5 * c2 * c3 * d3 -
            16 * b2 * b3 * b4 * c1 * c3 * d5 - 16 * b2 * b3 * b4 * c1 * c5 * d3 - 16 * b2 * b3 * b4 * c3 * c5 * d1 -
            16 * b2 * b3 * b5 * c2 * c3 * d3 + 16 * b3 * b4 * b5 * c1 * c2 * d3 + 16 * b3 * b4 * b5 * c1 * c3 * d2 +
            16 * b3 * b4 * b5 * c2 * c3 * d1 + 12 * a0 * b3 * b5 * c3 * d3 * d5 - 16 * a0 * b3 * b5 * c4 * d3 * d4 +
            16 * a0 * b4 * b5 * c3 * d3 * d4 - 16 * a3 * a4 * b3 * d0 * d4 * d5 + 16 * a3 * a4 * b4 * d0 * d3 * d5 -
            12 * a3 * a5 * b3 * d0 * d3 * d5 + 16 * a3 * b0 * b3 * c4 * d4 * d5 - 12 * a3 * b0 * b3 * c5 * d3 * d5 +
            12 * a3 * b0 * b5 * c3 * d3 * d5 - 16 * a3 * b0 * b5 * c4 * d3 * d4 - 16 * a3 * b3 * b4 * c0 * d4 * d5 -
            16 * a3 * b3 * b4 * c4 * d0 * d5 - 16 * a3 * b3 * b4 * c5 * d0 * d4 - 12 * a3 * b3 * b5 * c0 * d3 * d5 -
            12 * a3 * b3 * b5 * c3 * d0 * d5 + 16 * a3 * b3 * b5 * c4 * d0 * d4 - 12 * a3 * b3 * b5 * c5 * d0 * d3 -
            16 * a4 * b0 * b4 * c3 * d3 * d5 + 16 * a4 * b0 * b5 * c3 * d3 * d4 + 16 * a4 * b3 * b4 * c0 * d3 * d5 +
            16 * a4 * b3 * b4 * c3 * d0 * d5 + 16 * a4 * b3 * b4 * c5 * d0 * d3 - 16 * a4 * b4 * b5 * c3 * d0 * d3 +
            12 * a5 * b0 * b3 * c3 * d3 * d5 - 16 * a5 * b0 * b3 * c4 * d3 * d4 + 16 * a5 * b0 * b4 * c3 * d3 * d4 +
            12 * a5 * b3 * b5 * c3 * d0 * d3 - 16 * b0 * b3 * b5 * c3 * c4 * d4 + 12 * b0 * b3 * b5 * c3 * c5 * d3 +
            16 * b0 * b4 * b5 * c3 * c4 * d3 + 16 * a1 * a2 * b5 * d3 * d4 * d5 + 16 * a1 * a4 * b5 * d2 * d3 * d5 +
            16 * a1 * a5 * b2 * d3 * d4 * d5 + 16 * a1 * a5 * b4 * d2 * d3 * d5 - 16 * a1 * a5 * b5 * d1 * d3 * d5 -
            32 * a1 * a5 * b5 * d2 * d3 * d4 + 64 * a1 * b1 * b4 * c5 * d4 * d5 - 64 * a1 * b1 * b5 * c4 * d4 * d5 +
            16 * a1 * b1 * b5 * c5 * d3 * d5 - 32 * a1 * b2 * b4 * c5 * d3 * d5 + 16 * a1 * b2 * b5 * c3 * d4 * d5 +
            16 * a1 * b2 * b5 * c4 * d3 * d5 + 16 * a1 * b2 * b5 * c5 * d3 * d4 + 16 * a1 * b3 * b5 * c5 * d1 * d5 +
            16 * a1 * b4 * b5 * c2 * d3 * d5 + 16 * a1 * b4 * b5 * c3 * d2 * d5 + 16 * a1 * b4 * b5 * c5 * d2 * d3 -
            16 * a2 * a3 * b5 * d1 * d4 * d5 + 16 * a2 * a5 * b1 * d3 * d4 * d5 - 16 * a2 * a5 * b3 * d1 * d4 * d5 -
            32 * a2 * b1 * b4 * c5 * d3 * d5 + 16 * a2 * b1 * b5 * c3 * d4 * d5 + 16 * a2 * b1 * b5 * c4 * d3 * d5 +
            16 * a2 * b1 * b5 * c5 * d3 * d4 + 16 * a2 * b2 * b3 * c5 * d3 * d5 - 16 * a2 * b2 * b5 * c3 * d3 * d5 +
            32 * a2 * b3 * b4 * c5 * d1 * d5 - 16 * a2 * b3 * b5 * c1 * d4 * d5 - 16 * a2 * b3 * b5 * c4 * d1 * d5 -
            16 * a2 * b3 * b5 * c5 * d1 * d4 - 16 * a3 * a4 * b5 * d1 * d2 * d5 - 16 * a3 * a5 * b2 * d1 * d4 * d5 -
            16 * a3 * a5 * b4 * d1 * d2 * d5 + 32 * a3 * a5 * b5 * d1 * d2 * d4 + 16 * a3 * b1 * b5 * c5 * d1 * d5 -
            16 * a3 * b2 * b3 * c5 * d2 * d5 + 32 * a3 * b2 * b4 * c5 * d1 * d5 - 16 * a3 * b2 * b5 * c1 * d4 * d5 -
            16 * a3 * b2 * b5 * c4 * d1 * d5 - 16 * a3 * b2 * b5 * c5 * d1 * d4 + 16 * a3 * b3 * b5 * c2 * d2 * d5 -
            16 * a3 * b4 * b5 * c1 * d2 * d5 - 16 * a3 * b4 * b5 * c2 * d1 * d5 - 16 * a3 * b4 * b5 * c5 * d1 * d2 +
            16 * a4 * a5 * b1 * d2 * d3 * d5 - 16 * a4 * a5 * b3 * d1 * d2 * d5 - 32 * a4 * b1 * b2 * c5 * d3 * d5 -
            64 * a4 * b1 * b4 * c5 * d1 * d5 + 16 * a4 * b1 * b5 * c2 * d3 * d5 + 16 * a4 * b1 * b5 * c3 * d2 * d5 +
            16 * a4 * b1 * b5 * c5 * d2 * d3 + 32 * a4 * b2 * b3 * c5 * d1 * d5 - 16 * a4 * b3 * b5 * c1 * d2 * d5 -
            16 * a4 * b3 * b5 * c2 * d1 * d5 - 16 * a4 * b3 * b5 * c5 * d1 * d2 + 64 * a4 * b4 * b5 * c1 * d1 * d5 +
            16 * a5 * b1 * b2 * c3 * d4 * d5 + 16 * a5 * b1 * b2 * c4 * d3 * d5 + 16 * a5 * b1 * b2 * c5 * d3 * d4 +
            16 * a5 * b1 * b3 * c5 * d1 * d5 + 16 * a5 * b1 * b4 * c2 * d3 * d5 + 16 * a5 * b1 * b4 * c3 * d2 * d5 +
            16 * a5 * b1 * b4 * c5 * d2 * d3 - 16 * a5 * b1 * b5 * c1 * d3 * d5 - 32 * a5 * b1 * b5 * c2 * d3 * d4 -
            16 * a5 * b1 * b5 * c3 * d1 * d5 - 32 * a5 * b1 * b5 * c3 * d2 * d4 + 64 * a5 * b1 * b5 * c4 * d1 * d4 -
            32 * a5 * b1 * b5 * c4 * d2 * d3 - 16 * a5 * b1 * b5 * c5 * d1 * d3 - 16 * a5 * b2 * b3 * c1 * d4 * d5 -
            16 * a5 * b2 * b3 * c4 * d1 * d5 - 16 * a5 * b2 * b3 * c5 * d1 * d4 + 16 * a5 * b2 * b5 * c3 * d2 * d3 -
            16 * a5 * b3 * b4 * c1 * d2 * d5 - 16 * a5 * b3 * b4 * c2 * d1 * d5 - 16 * a5 * b3 * b4 * c5 * d1 * d2 -
            16 * a5 * b3 * b5 * c1 * d1 * d5 + 32 * a5 * b3 * b5 * c1 * d2 * d4 + 32 * a5 * b3 * b5 * c2 * d1 * d4 -
            16 * a5 * b3 * b5 * c2 * d2 * d3 + 32 * a5 * b3 * b5 * c4 * d1 * d2 - 64 * a5 * b4 * b5 * c1 * d1 * d4 -
            32 * b1 * b2 * b4 * c3 * c5 * d5 + 16 * b1 * b2 * b5 * c3 * c4 * d5 + 16 * b1 * b2 * b5 * c3 * c5 * d4 +
            16 * b1 * b2 * b5 * c4 * c5 * d3 + 16 * b1 * b3 * b5 * c1 * c5 * d5 + 16 * b1 * b4 * b5 * c2 * c3 * d5 +
            16 * b1 * b4 * b5 * c2 * c5 * d3 + 16 * b1 * b4 * b5 * c3 * c5 * d2 + 32 * b2 * b3 * b4 * c1 * c5 * d5 -
            16 * b2 * b3 * b5 * c1 * c4 * d5 - 16 * b2 * b3 * b5 * c1 * c5 * d4 - 16 * b2 * b3 * b5 * c4 * c5 * d1 -
            16 * b3 * b4 * b5 * c1 * c2 * d5 - 16 * b3 * b4 * b5 * c1 * c5 * d2 - 16 * b3 * b4 * b5 * c2 * c5 * d1 -
            16 * a0 * b3 * b4 * c5 * d4 * d5 + 16 * a0 * b3 * b5 * c4 * d4 * d5 - 12 * a0 * b3 * b5 * c5 * d3 * d5 +
            12 * a3 * a5 * b5 * d0 * d3 * d5 - 16 * a3 * b0 * b4 * c5 * d4 * d5 + 16 * a3 * b0 * b5 * c4 * d4 * d5 -
            12 * a3 * b0 * b5 * c5 * d3 * d5 - 12 * a3 * b3 * b5 * c5 * d0 * d5 - 16 * a4 * a5 * b4 * d0 * d3 * d5 +
            16 * a4 * a5 * b5 * d0 * d3 * d4 - 16 * a4 * b0 * b3 * c5 * d4 * d5 + 16 * a4 * b0 * b4 * c5 * d3 * d5 +
            16 * a4 * b3 * b4 * c5 * d0 * d5 - 16 * a4 * b4 * b5 * c0 * d3 * d5 - 16 * a4 * b4 * b5 * c3 * d0 * d5 -
            16 * a4 * b4 * b5 * c5 * d0 * d3 + 16 * a5 * b0 * b3 * c4 * d4 * d5 - 12 * a5 * b0 * b3 * c5 * d3 * d5 +
            12 * a5 * b0 * b5 * c3 * d3 * d5 - 16 * a5 * b0 * b5 * c4 * d3 * d4 + 12 * a5 * b3 * b5 * c0 * d3 * d5 +
            12 * a5 * b3 * b5 * c3 * d0 * d5 - 16 * a5 * b3 * b5 * c4 * d0 * d4 + 12 * a5 * b3 * b5 * c5 * d0 * d3 +
            16 * a5 * b4 * b5 * c0 * d3 * d4 + 16 * a5 * b4 * b5 * c3 * d0 * d4 + 16 * a5 * b4 * b5 * c4 * d0 * d3 -
            16 * b0 * b3 * b4 * c4 * c5 * d5 - 12 * b0 * b3 * b5 * c3 * c5 * d5 + 16 * b0 * b3 * b5 * c4 * c5 * d4 +
            16 * a3 * b3 * b4 * c5 * d4 * d5 - 16 * a3 * b3 * b5 * c4 * d4 * d5 + 12 * a3 * b3 * b5 * c5 * d3 * d5 -
            16 * a4 * b3 * b4 * c5 * d3 * d5 + 16 * a4 * b4 * b5 * c3 * d3 * d5 - 12 * a5 * b3 * b5 * c3 * d3 * d5 +
            16 * a5 * b3 * b5 * c4 * d3 * d4 - 16 * a5 * b4 * b5 * c3 * d3 * d4,
        3 * a0 * pow(b0, 2) * pow(d5, 3) - 3 * a0 * pow(b0, 2) * pow(d3, 3) - 4 * a0 * pow(b2, 2) * pow(d3, 3) +
            4 * a0 * pow(b1, 2) * pow(d5, 3) + 3 * a3 * pow(b3, 2) * pow(d0, 3) + 4 * a3 * pow(b4, 2) * pow(d0, 3) +
            3 * a0 * pow(b3, 2) * pow(d5, 3) - 3 * a0 * pow(b5, 2) * pow(d3, 3) - 3 * a3 * pow(b0, 2) * pow(d5, 3) +
            3 * a3 * pow(b5, 2) * pow(d0, 3) + 3 * a5 * pow(b0, 2) * pow(d3, 3) - 3 * a5 * pow(b3, 2) * pow(d0, 3) -
            4 * a3 * pow(b1, 2) * pow(d5, 3) - 4 * a5 * pow(b4, 2) * pow(d0, 3) + 4 * a5 * pow(b2, 2) * pow(d3, 3) -
            3 * a5 * pow(b5, 2) * pow(d0, 3) - 3 * a3 * pow(b3, 2) * pow(d5, 3) + 3 * a5 * pow(b5, 2) * pow(d3, 3) +
            3 * pow(b3, 3) * c0 * pow(d0, 2) + 4 * pow(b3, 3) * c0 * pow(d2, 2) - 3 * pow(b5, 3) * c0 * pow(d0, 2) -
            3 * pow(b0, 3) * c3 * pow(d3, 2) - 4 * pow(b5, 3) * c0 * pow(d1, 2) - 4 * pow(b0, 3) * c3 * pow(d4, 2) -
            3 * pow(b0, 3) * c3 * pow(d5, 2) + 3 * pow(b0, 3) * c5 * pow(d3, 2) + 3 * pow(b3, 3) * c0 * pow(d5, 2) -
            3 * pow(b3, 3) * c5 * pow(d0, 2) - 3 * pow(b5, 3) * c0 * pow(d3, 2) + 3 * pow(b5, 3) * c3 * pow(d0, 2) +
            4 * pow(b0, 3) * c5 * pow(d4, 2) + 4 * pow(b5, 3) * c3 * pow(d1, 2) + 3 * pow(b0, 3) * c5 * pow(d5, 2) -
            4 * pow(b3, 3) * c5 * pow(d2, 2) + 3 * pow(b5, 3) * c3 * pow(d3, 2) - 3 * pow(b3, 3) * c5 * pow(d5, 2) +
            8 * a1 * b0 * b1 * pow(d5, 3) - 8 * a2 * b0 * b2 * pow(d3, 3) - 6 * a0 * b0 * b3 * pow(d5, 3) +
            6 * a0 * b0 * b5 * pow(d3, 3) - 8 * a1 * b1 * b3 * pow(d5, 3) + 6 * a3 * b0 * b3 * pow(d5, 3) -
            6 * a3 * b3 * b5 * pow(d0, 3) + 8 * a4 * b3 * b4 * pow(d0, 3) + 8 * a2 * b2 * b5 * pow(d3, 3) -
            8 * a4 * b4 * b5 * pow(d0, 3) - 6 * a5 * b0 * b5 * pow(d3, 3) + 6 * a5 * b3 * b5 * pow(d0, 3) +
            8 * pow(b3, 3) * c2 * d0 * d2 - 8 * pow(b5, 3) * c1 * d0 * d1 - 6 * pow(b3, 3) * c0 * d0 * d5 +
            6 * pow(b5, 3) * c0 * d0 * d3 + 8 * pow(b5, 3) * c1 * d1 * d3 + 6 * pow(b0, 3) * c3 * d3 * d5 -
            8 * pow(b0, 3) * c4 * d3 * d4 - 6 * pow(b5, 3) * c3 * d0 * d3 - 8 * pow(b3, 3) * c2 * d2 * d5 +
            8 * pow(b0, 3) * c4 * d4 * d5 - 6 * pow(b0, 3) * c5 * d3 * d5 + 6 * pow(b3, 3) * c5 * d0 * d5 -
            4 * a0 * pow(b1, 2) * d0 * pow(d3, 2) + 4 * a0 * pow(b3, 2) * d0 * pow(d1, 2) -
            4 * b0 * pow(b1, 2) * c0 * pow(d3, 2) + 4 * b0 * pow(b3, 2) * c0 * pow(d1, 2) -
            16 * a0 * pow(b1, 2) * d0 * pow(d4, 2) + 4 * a0 * pow(b2, 2) * d0 * pow(d3, 2) -
            4 * a0 * pow(b3, 2) * d0 * pow(d2, 2) + 16 * a0 * pow(b4, 2) * d0 * pow(d1, 2) +
            4 * a1 * pow(b0, 2) * d1 * pow(d3, 2) - 4 * a1 * pow(b3, 2) * pow(d0, 2) * d1 -
            16 * b0 * pow(b1, 2) * c0 * pow(d4, 2) + 4 * b0 * pow(b2, 2) * c0 * pow(d3, 2) -
            4 * b0 * pow(b3, 2) * c0 * pow(d2, 2) + 16 * b0 * pow(b4, 2) * c0 * pow(d1, 2) -
            4 * b1 * pow(b3, 2) * c1 * pow(d0, 2) + 4 * pow(b0, 2) * b1 * c1 * pow(d3, 2) -
            4 * a0 * pow(b1, 2) * d0 * pow(d5, 2) + 16 * a0 * pow(b2, 2) * d0 * pow(d4, 2) -
            3 * a0 * pow(b3, 2) * pow(d0, 2) * d3 - 16 * a0 * pow(b4, 2) * d0 * pow(d2, 2) +
            4 * a0 * pow(b5, 2) * d0 * pow(d1, 2) + 16 * a1 * pow(b0, 2) * d1 * pow(d4, 2) -
            16 * a1 * pow(b4, 2) * pow(d0, 2) * d1 + 3 * a3 * pow(b0, 2) * d0 * pow(d3, 2) -
            4 * b0 * pow(b1, 2) * c0 * pow(d5, 2) + 16 * b0 * pow(b2, 2) * c0 * pow(d4, 2) -
            3 * b0 * pow(b3, 2) * c3 * pow(d0, 2) - 16 * b0 * pow(b4, 2) * c0 * pow(d2, 2) +
            4 * b0 * pow(b5, 2) * c0 * pow(d1, 2) - 16 * b1 * pow(b4, 2) * c1 * pow(d0, 2) +
            16 * pow(b0, 2) * b1 * c1 * pow(d4, 2) + 3 * pow(b0, 2) * b3 * c0 * pow(d3, 2) -
            12 * a0 * pow(b0, 2) * d3 * pow(d4, 2) + 4 * a0 * pow(b2, 2) * d0 * pow(d5, 2) -
            4 * a0 * pow(b3, 2) * d0 * pow(d4, 2) + 4 * a0 * pow(b4, 2) * d0 * pow(d3, 2) -
            4 * a0 * pow(b4, 2) * pow(d0, 2) * d3 - 4 * a0 * pow(b5, 2) * d0 * pow(d2, 2) +
            4 * a1 * pow(b0, 2) * d1 * pow(d5, 2) + 16 * a1 * pow(b2, 2) * d1 * pow(d3, 2) -
            16 * a1 * pow(b3, 2) * d1 * pow(d2, 2) - 4 * a1 * pow(b5, 2) * pow(d0, 2) * d1 -
            4 * a2 * pow(b0, 2) * d2 * pow(d3, 2) + 4 * a2 * pow(b3, 2) * pow(d0, 2) * d2 +
            4 * a3 * pow(b0, 2) * d0 * pow(d4, 2) - 4 * a3 * pow(b0, 2) * pow(d1, 2) * d3 +
            4 * a3 * pow(b1, 2) * pow(d0, 2) * d3 + 4 * b0 * pow(b2, 2) * c0 * pow(d5, 2) -
            4 * b0 * pow(b3, 2) * c0 * pow(d4, 2) + 4 * b0 * pow(b4, 2) * c0 * pow(d3, 2) -
            4 * b0 * pow(b4, 2) * c3 * pow(d0, 2) - 4 * b0 * pow(b5, 2) * c0 * pow(d2, 2) +
            16 * b1 * pow(b2, 2) * c1 * pow(d3, 2) - 16 * b1 * pow(b3, 2) * c1 * pow(d2, 2) -
            4 * b1 * pow(b5, 2) * c1 * pow(d0, 2) + 4 * b2 * pow(b3, 2) * c2 * pow(d0, 2) +
            12 * b3 * pow(b4, 2) * c0 * pow(d0, 2) + 4 * pow(b0, 2) * b1 * c1 * pow(d5, 2) -
            4 * pow(b0, 2) * b2 * c2 * pow(d3, 2) + 4 * pow(b0, 2) * b3 * c0 * pow(d4, 2) -
            4 * pow(b0, 2) * b3 * c3 * pow(d1, 2) + 4 * pow(b1, 2) * b3 * c3 * pow(d0, 2) -
            9 * a0 * pow(b0, 2) * d3 * pow(d5, 2) + 9 * a0 * pow(b0, 2) * pow(d3, 2) * d5 -
            6 * a0 * pow(b3, 2) * d0 * pow(d5, 2) + 3 * a0 * pow(b3, 2) * pow(d0, 2) * d5 -
            4 * a0 * pow(b3, 2) * pow(d2, 2) * d3 + 6 * a0 * pow(b5, 2) * d0 * pow(d3, 2) -
            3 * a0 * pow(b5, 2) * pow(d0, 2) * d3 + 64 * a1 * pow(b2, 2) * d1 * pow(d4, 2) -
            64 * a1 * pow(b4, 2) * d1 * pow(d2, 2) - 16 * a2 * pow(b0, 2) * d2 * pow(d4, 2) -
            16 * a2 * pow(b1, 2) * d2 * pow(d3, 2) + 16 * a2 * pow(b3, 2) * pow(d1, 2) * d2 +
            16 * a2 * pow(b4, 2) * pow(d0, 2) * d2 + 3 * a3 * pow(b0, 2) * d0 * pow(d5, 2) +
            4 * a3 * pow(b0, 2) * pow(d2, 2) * d3 + 4 * a3 * pow(b2, 2) * d0 * pow(d3, 2) -
            4 * a3 * pow(b2, 2) * pow(d0, 2) * d3 + 12 * a3 * pow(b3, 2) * d0 * pow(d2, 2) -
            3 * a5 * pow(b0, 2) * d0 * pow(d3, 2) - 12 * b0 * pow(b2, 2) * c3 * pow(d3, 2) -
            6 * b0 * pow(b3, 2) * c0 * pow(d5, 2) - 4 * b0 * pow(b3, 2) * c3 * pow(d2, 2) +
            3 * b0 * pow(b3, 2) * c5 * pow(d0, 2) + 6 * b0 * pow(b5, 2) * c0 * pow(d3, 2) -
            3 * b0 * pow(b5, 2) * c3 * pow(d0, 2) + 64 * b1 * pow(b2, 2) * c1 * pow(d4, 2) -
            64 * b1 * pow(b4, 2) * c1 * pow(d2, 2) + 16 * b2 * pow(b3, 2) * c2 * pow(d1, 2) +
            16 * b2 * pow(b4, 2) * c2 * pow(d0, 2) + 9 * b3 * pow(b5, 2) * c0 * pow(d0, 2) -
            16 * pow(b0, 2) * b2 * c2 * pow(d4, 2) + 3 * pow(b0, 2) * b3 * c0 * pow(d5, 2) +
            4 * pow(b0, 2) * b3 * c3 * pow(d2, 2) - 3 * pow(b0, 2) * b5 * c0 * pow(d3, 2) -
            16 * pow(b1, 2) * b2 * c2 * pow(d3, 2) + 4 * pow(b2, 2) * b3 * c0 * pow(d3, 2) -
            4 * pow(b2, 2) * b3 * c3 * pow(d0, 2) - 9 * pow(b3, 2) * b5 * c0 * pow(d0, 2) +
            12 * a0 * pow(b0, 2) * pow(d4, 2) * d5 - 8 * a0 * pow(b1, 2) * d3 * pow(d5, 2) +
            4 * a0 * pow(b1, 2) * pow(d3, 2) * d5 - 16 * a0 * pow(b2, 2) * d3 * pow(d4, 2) -
            4 * a0 * pow(b3, 2) * pow(d1, 2) * d5 - 4 * a0 * pow(b4, 2) * d0 * pow(d5, 2) +
            4 * a0 * pow(b4, 2) * pow(d0, 2) * d5 + 16 * a0 * pow(b4, 2) * pow(d2, 2) * d3 +
            4 * a0 * pow(b5, 2) * d0 * pow(d4, 2) - 8 * a0 * pow(b5, 2) * pow(d1, 2) * d3 +
            16 * a1 * pow(b2, 2) * d1 * pow(d5, 2) - 16 * a1 * pow(b5, 2) * d1 * pow(d2, 2) -
            4 * a2 * pow(b0, 2) * d2 * pow(d5, 2) - 64 * a2 * pow(b1, 2) * d2 * pow(d4, 2) +
            64 * a2 * pow(b4, 2) * pow(d1, 2) * d2 + 4 * a2 * pow(b5, 2) * pow(d0, 2) * d2 +
            4 * a3 * pow(b0, 2) * pow(d1, 2) * d5 + 8 * a3 * pow(b1, 2) * d0 * pow(d5, 2) -
            4 * a3 * pow(b1, 2) * pow(d0, 2) * d5 + 16 * a3 * pow(b1, 2) * pow(d2, 2) * d3 -
            16 * a3 * pow(b2, 2) * d0 * pow(d4, 2) - 16 * a3 * pow(b2, 2) * pow(d1, 2) * d3 +
            16 * a3 * pow(b4, 2) * d0 * pow(d2, 2) + 8 * a3 * pow(b5, 2) * d0 * pow(d1, 2) -
            16 * a4 * pow(b0, 2) * pow(d1, 2) * d4 + 16 * a4 * pow(b1, 2) * pow(d0, 2) * d4 -
            4 * a5 * pow(b0, 2) * d0 * pow(d4, 2) + 4 * a5 * pow(b0, 2) * pow(d1, 2) * d3 +
            4 * a5 * pow(b1, 2) * d0 * pow(d3, 2) - 4 * a5 * pow(b1, 2) * pow(d0, 2) * d3 -
            4 * a5 * pow(b3, 2) * d0 * pow(d1, 2) - 8 * b0 * pow(b1, 2) * c3 * pow(d5, 2) +
            4 * b0 * pow(b1, 2) * c5 * pow(d3, 2) - 16 * b0 * pow(b2, 2) * c3 * pow(d4, 2) -
            4 * b0 * pow(b3, 2) * c5 * pow(d1, 2) - 4 * b0 * pow(b4, 2) * c0 * pow(d5, 2) +
            16 * b0 * pow(b4, 2) * c3 * pow(d2, 2) + 4 * b0 * pow(b4, 2) * c5 * pow(d0, 2) +
            4 * b0 * pow(b5, 2) * c0 * pow(d4, 2) - 8 * b0 * pow(b5, 2) * c3 * pow(d1, 2) +
            16 * b1 * pow(b2, 2) * c1 * pow(d5, 2) - 16 * b1 * pow(b5, 2) * c1 * pow(d2, 2) +
            64 * b2 * pow(b4, 2) * c2 * pow(d1, 2) + 4 * b2 * pow(b5, 2) * c2 * pow(d0, 2) +
            16 * b3 * pow(b4, 2) * c0 * pow(d2, 2) + 8 * b3 * pow(b5, 2) * c0 * pow(d1, 2) -
            4 * pow(b0, 2) * b2 * c2 * pow(d5, 2) + 4 * pow(b0, 2) * b3 * c5 * pow(d1, 2) -
            16 * pow(b0, 2) * b4 * c4 * pow(d1, 2) - 4 * pow(b0, 2) * b5 * c0 * pow(d4, 2) +
            4 * pow(b0, 2) * b5 * c3 * pow(d1, 2) - 64 * pow(b1, 2) * b2 * c2 * pow(d4, 2) +
            8 * pow(b1, 2) * b3 * c0 * pow(d5, 2) + 16 * pow(b1, 2) * b3 * c3 * pow(d2, 2) -
            4 * pow(b1, 2) * b3 * c5 * pow(d0, 2) + 16 * pow(b1, 2) * b4 * c4 * pow(d0, 2) +
            4 * pow(b1, 2) * b5 * c0 * pow(d3, 2) - 4 * pow(b1, 2) * b5 * c3 * pow(d0, 2) -
            16 * pow(b2, 2) * b3 * c0 * pow(d4, 2) - 16 * pow(b2, 2) * b3 * c3 * pow(d1, 2) -
            4 * pow(b3, 2) * b5 * c0 * pow(d1, 2) - 12 * pow(b4, 2) * b5 * c0 * pow(d0, 2) +
            16 * a0 * pow(b1, 2) * pow(d4, 2) * d5 - 4 * a0 * pow(b2, 2) * d3 * pow(d5, 2) +
            8 * a0 * pow(b2, 2) * pow(d3, 2) * d5 + 8 * a0 * pow(b3, 2) * pow(d2, 2) * d5 -
            16 * a0 * pow(b4, 2) * pow(d1, 2) * d5 + 3 * a0 * pow(b5, 2) * pow(d0, 2) * d5 +
            4 * a0 * pow(b5, 2) * pow(d2, 2) * d3 - 4 * a1 * pow(b3, 2) * d1 * pow(d5, 2) +
            4 * a1 * pow(b5, 2) * d1 * pow(d3, 2) - 16 * a2 * pow(b1, 2) * d2 * pow(d5, 2) +
            16 * a2 * pow(b5, 2) * pow(d1, 2) * d2 + 4 * a3 * pow(b0, 2) * d3 * pow(d4, 2) -
            4 * a3 * pow(b0, 2) * pow(d2, 2) * d5 - 4 * a3 * pow(b2, 2) * d0 * pow(d5, 2) +
            4 * a3 * pow(b2, 2) * pow(d0, 2) * d5 - 4 * a3 * pow(b4, 2) * pow(d0, 2) * d3 +
            4 * a3 * pow(b5, 2) * d0 * pow(d2, 2) + 16 * a4 * pow(b0, 2) * pow(d2, 2) * d4 -
            16 * a4 * pow(b2, 2) * pow(d0, 2) * d4 - 3 * a5 * pow(b0, 2) * d0 * pow(d5, 2) -
            4 * a5 * pow(b0, 2) * pow(d2, 2) * d3 + 16 * a5 * pow(b1, 2) * d0 * pow(d4, 2) -
            8 * a5 * pow(b2, 2) * d0 * pow(d3, 2) + 4 * a5 * pow(b2, 2) * pow(d0, 2) * d3 -
            8 * a5 * pow(b3, 2) * d0 * pow(d2, 2) - 16 * a5 * pow(b4, 2) * d0 * pow(d1, 2) +
            16 * b0 * pow(b1, 2) * c5 * pow(d4, 2) - 4 * b0 * pow(b2, 2) * c3 * pow(d5, 2) +
            8 * b0 * pow(b2, 2) * c5 * pow(d3, 2) + 8 * b0 * pow(b3, 2) * c5 * pow(d2, 2) -
            16 * b0 * pow(b4, 2) * c5 * pow(d1, 2) + 4 * b0 * pow(b5, 2) * c3 * pow(d2, 2) +
            3 * b0 * pow(b5, 2) * c5 * pow(d0, 2) - 4 * b1 * pow(b3, 2) * c1 * pow(d5, 2) +
            4 * b1 * pow(b5, 2) * c1 * pow(d3, 2) + 16 * b2 * pow(b5, 2) * c2 * pow(d1, 2) -
            4 * b3 * pow(b4, 2) * c3 * pow(d0, 2) + 4 * b3 * pow(b5, 2) * c0 * pow(d2, 2) +
            4 * pow(b0, 2) * b3 * c3 * pow(d4, 2) - 4 * pow(b0, 2) * b3 * c5 * pow(d2, 2) +
            16 * pow(b0, 2) * b4 * c4 * pow(d2, 2) - 3 * pow(b0, 2) * b5 * c0 * pow(d5, 2) -
            4 * pow(b0, 2) * b5 * c3 * pow(d2, 2) - 16 * pow(b1, 2) * b2 * c2 * pow(d5, 2) +
            16 * pow(b1, 2) * b5 * c0 * pow(d4, 2) - 4 * pow(b2, 2) * b3 * c0 * pow(d5, 2) +
            4 * pow(b2, 2) * b3 * c5 * pow(d0, 2) - 16 * pow(b2, 2) * b4 * c4 * pow(d0, 2) -
            8 * pow(b2, 2) * b5 * c0 * pow(d3, 2) + 4 * pow(b2, 2) * b5 * c3 * pow(d0, 2) -
            8 * pow(b3, 2) * b5 * c0 * pow(d2, 2) - 16 * pow(b4, 2) * b5 * c0 * pow(d1, 2) -
            3 * a0 * pow(b3, 2) * d3 * pow(d5, 2) + 4 * a0 * pow(b5, 2) * pow(d1, 2) * d5 -
            16 * a1 * pow(b4, 2) * d1 * pow(d5, 2) + 16 * a1 * pow(b5, 2) * d1 * pow(d4, 2) -
            16 * a2 * pow(b3, 2) * d2 * pow(d4, 2) + 16 * a2 * pow(b4, 2) * d2 * pow(d3, 2) +
            6 * a3 * pow(b0, 2) * d3 * pow(d5, 2) - 3 * a3 * pow(b0, 2) * pow(d3, 2) * d5 -
            16 * a3 * pow(b1, 2) * pow(d2, 2) * d5 + 16 * a3 * pow(b2, 2) * pow(d1, 2) * d5 +
            9 * a3 * pow(b3, 2) * d0 * pow(d5, 2) - 9 * a3 * pow(b3, 2) * pow(d0, 2) * d5 +
            3 * a3 * pow(b5, 2) * d0 * pow(d3, 2) - 6 * a3 * pow(b5, 2) * pow(d0, 2) * d3 -
            4 * a4 * pow(b0, 2) * pow(d3, 2) * d4 + 64 * a4 * pow(b1, 2) * pow(d2, 2) * d4 -
            64 * a4 * pow(b2, 2) * pow(d1, 2) * d4 + 4 * a4 * pow(b3, 2) * pow(d0, 2) * d4 -
            4 * a5 * pow(b0, 2) * pow(d1, 2) * d5 - 4 * a5 * pow(b1, 2) * d0 * pow(d5, 2) +
            4 * a5 * pow(b1, 2) * pow(d0, 2) * d5 - 16 * a5 * pow(b1, 2) * pow(d2, 2) * d3 +
            16 * a5 * pow(b2, 2) * pow(d1, 2) * d3 + 3 * a5 * pow(b3, 2) * pow(d0, 2) * d3 -
            12 * a5 * pow(b5, 2) * d0 * pow(d1, 2) + 12 * b0 * pow(b1, 2) * c5 * pow(d5, 2) -
            3 * b0 * pow(b3, 2) * c3 * pow(d5, 2) - 9 * b0 * pow(b5, 2) * c3 * pow(d3, 2) +
            4 * b0 * pow(b5, 2) * c5 * pow(d1, 2) - 16 * b1 * pow(b4, 2) * c1 * pow(d5, 2) +
            16 * b1 * pow(b5, 2) * c1 * pow(d4, 2) - 16 * b2 * pow(b3, 2) * c2 * pow(d4, 2) +
            16 * b2 * pow(b4, 2) * c2 * pow(d3, 2) + 3 * b3 * pow(b5, 2) * c0 * pow(d3, 2) -
            6 * b3 * pow(b5, 2) * c3 * pow(d0, 2) + 6 * pow(b0, 2) * b3 * c3 * pow(d5, 2) -
            3 * pow(b0, 2) * b3 * c5 * pow(d3, 2) - 4 * pow(b0, 2) * b4 * c4 * pow(d3, 2) +
            9 * pow(b0, 2) * b5 * c3 * pow(d3, 2) - 4 * pow(b0, 2) * b5 * c5 * pow(d1, 2) -
            16 * pow(b1, 2) * b3 * c5 * pow(d2, 2) + 64 * pow(b1, 2) * b4 * c4 * pow(d2, 2) -
            4 * pow(b1, 2) * b5 * c0 * pow(d5, 2) - 16 * pow(b1, 2) * b5 * c3 * pow(d2, 2) +
            4 * pow(b1, 2) * b5 * c5 * pow(d0, 2) + 16 * pow(b2, 2) * b3 * c5 * pow(d1, 2) -
            64 * pow(b2, 2) * b4 * c4 * pow(d1, 2) + 16 * pow(b2, 2) * b5 * c3 * pow(d1, 2) +
            4 * pow(b3, 2) * b4 * c4 * pow(d0, 2) + 3 * pow(b3, 2) * b5 * c3 * pow(d0, 2) +
            4 * a0 * pow(b3, 2) * pow(d4, 2) * d5 + 4 * a0 * pow(b4, 2) * d3 * pow(d5, 2) -
            4 * a0 * pow(b4, 2) * pow(d3, 2) * d5 - 4 * a0 * pow(b5, 2) * d3 * pow(d4, 2) -
            4 * a2 * pow(b3, 2) * d2 * pow(d5, 2) + 4 * a2 * pow(b5, 2) * d2 * pow(d3, 2) -
            8 * a3 * pow(b0, 2) * pow(d4, 2) * d5 + 4 * a3 * pow(b1, 2) * d3 * pow(d5, 2) +
            16 * a3 * pow(b2, 2) * d3 * pow(d4, 2) + 4 * a3 * pow(b4, 2) * d0 * pow(d5, 2) -
            8 * a3 * pow(b4, 2) * pow(d0, 2) * d5 - 16 * a3 * pow(b4, 2) * pow(d2, 2) * d3 -
            4 * a3 * pow(b5, 2) * d0 * pow(d4, 2) - 4 * a3 * pow(b5, 2) * pow(d1, 2) * d3 +
            8 * a5 * pow(b0, 2) * d3 * pow(d4, 2) + 4 * a5 * pow(b0, 2) * pow(d2, 2) * d5 -
            4 * a5 * pow(b2, 2) * pow(d0, 2) * d5 + 4 * a5 * pow(b3, 2) * d0 * pow(d4, 2) -
            4 * a5 * pow(b4, 2) * d0 * pow(d3, 2) + 8 * a5 * pow(b4, 2) * pow(d0, 2) * d3 +
            4 * b0 * pow(b3, 2) * c5 * pow(d4, 2) + 4 * b0 * pow(b4, 2) * c3 * pow(d5, 2) -
            4 * b0 * pow(b4, 2) * c5 * pow(d3, 2) - 4 * b0 * pow(b5, 2) * c3 * pow(d4, 2) -
            4 * b2 * pow(b3, 2) * c2 * pow(d5, 2) + 4 * b2 * pow(b5, 2) * c2 * pow(d3, 2) +
            4 * b3 * pow(b4, 2) * c0 * pow(d5, 2) - 16 * b3 * pow(b4, 2) * c3 * pow(d2, 2) -
            8 * b3 * pow(b4, 2) * c5 * pow(d0, 2) - 4 * b3 * pow(b5, 2) * c0 * pow(d4, 2) -
            4 * b3 * pow(b5, 2) * c3 * pow(d1, 2) - 8 * pow(b0, 2) * b3 * c5 * pow(d4, 2) +
            8 * pow(b0, 2) * b5 * c3 * pow(d4, 2) + 4 * pow(b0, 2) * b5 * c5 * pow(d2, 2) +
            4 * pow(b1, 2) * b3 * c3 * pow(d5, 2) + 16 * pow(b2, 2) * b3 * c3 * pow(d4, 2) -
            4 * pow(b2, 2) * b5 * c5 * pow(d0, 2) + 4 * pow(b3, 2) * b5 * c0 * pow(d4, 2) -
            4 * pow(b4, 2) * b5 * c0 * pow(d3, 2) + 8 * pow(b4, 2) * b5 * c3 * pow(d0, 2) +
            3 * a0 * pow(b5, 2) * pow(d3, 2) * d5 + 4 * a3 * pow(b2, 2) * d3 * pow(d5, 2) -
            4 * a3 * pow(b2, 2) * pow(d3, 2) * d5 - 12 * a3 * pow(b3, 2) * pow(d2, 2) * d5 -
            3 * a3 * pow(b5, 2) * pow(d0, 2) * d5 - 4 * a3 * pow(b5, 2) * pow(d2, 2) * d3 +
            4 * a4 * pow(b0, 2) * d4 * pow(d5, 2) - 16 * a4 * pow(b2, 2) * pow(d3, 2) * d4 +
            16 * a4 * pow(b3, 2) * pow(d2, 2) * d4 - 4 * a4 * pow(b5, 2) * pow(d0, 2) * d4 +
            3 * a5 * pow(b0, 2) * d3 * pow(d5, 2) - 6 * a5 * pow(b0, 2) * pow(d3, 2) * d5 +
            16 * a5 * pow(b1, 2) * pow(d2, 2) * d5 - 16 * a5 * pow(b2, 2) * pow(d1, 2) * d5 -
            3 * a5 * pow(b3, 2) * d0 * pow(d5, 2) + 6 * a5 * pow(b3, 2) * pow(d0, 2) * d5 +
            4 * a5 * pow(b3, 2) * pow(d2, 2) * d3 - 9 * a5 * pow(b5, 2) * d0 * pow(d3, 2) +
            9 * a5 * pow(b5, 2) * pow(d0, 2) * d3 + 9 * b0 * pow(b3, 2) * c5 * pow(d5, 2) +
            3 * b0 * pow(b5, 2) * c5 * pow(d3, 2) - 4 * b3 * pow(b5, 2) * c3 * pow(d2, 2) -
            3 * b3 * pow(b5, 2) * c5 * pow(d0, 2) - 4 * b4 * pow(b5, 2) * c4 * pow(d0, 2) -
            9 * pow(b0, 2) * b3 * c5 * pow(d5, 2) + 4 * pow(b0, 2) * b4 * c4 * pow(d5, 2) +
            3 * pow(b0, 2) * b5 * c3 * pow(d5, 2) - 6 * pow(b0, 2) * b5 * c5 * pow(d3, 2) +
            16 * pow(b1, 2) * b5 * c5 * pow(d2, 2) + 4 * pow(b2, 2) * b3 * c3 * pow(d5, 2) -
            4 * pow(b2, 2) * b3 * c5 * pow(d3, 2) - 16 * pow(b2, 2) * b4 * c4 * pow(d3, 2) +
            12 * pow(b2, 2) * b5 * c3 * pow(d3, 2) - 16 * pow(b2, 2) * b5 * c5 * pow(d1, 2) +
            16 * pow(b3, 2) * b4 * c4 * pow(d2, 2) - 3 * pow(b3, 2) * b5 * c0 * pow(d5, 2) +
            4 * pow(b3, 2) * b5 * c3 * pow(d2, 2) + 6 * pow(b3, 2) * b5 * c5 * pow(d0, 2) -
            4 * a3 * pow(b5, 2) * pow(d1, 2) * d5 + 16 * a4 * pow(b1, 2) * d4 * pow(d5, 2) -
            16 * a4 * pow(b5, 2) * pow(d1, 2) * d4 - 4 * a5 * pow(b0, 2) * pow(d4, 2) * d5 +
            4 * a5 * pow(b1, 2) * d3 * pow(d5, 2) - 4 * a5 * pow(b1, 2) * pow(d3, 2) * d5 +
            4 * a5 * pow(b3, 2) * pow(d1, 2) * d5 + 4 * a5 * pow(b4, 2) * pow(d0, 2) * d5 +
            12 * a5 * pow(b5, 2) * pow(d1, 2) * d3 - 4 * b3 * pow(b5, 2) * c5 * pow(d1, 2) -
            16 * b4 * pow(b5, 2) * c4 * pow(d1, 2) - 4 * pow(b0, 2) * b5 * c5 * pow(d4, 2) -
            12 * pow(b1, 2) * b3 * c5 * pow(d5, 2) + 16 * pow(b1, 2) * b4 * c4 * pow(d5, 2) +
            4 * pow(b1, 2) * b5 * c3 * pow(d5, 2) - 4 * pow(b1, 2) * b5 * c5 * pow(d3, 2) +
            4 * pow(b3, 2) * b5 * c5 * pow(d1, 2) + 4 * pow(b4, 2) * b5 * c5 * pow(d0, 2) -
            4 * a3 * pow(b4, 2) * d3 * pow(d5, 2) + 4 * a3 * pow(b5, 2) * d3 * pow(d4, 2) -
            16 * a5 * pow(b1, 2) * pow(d4, 2) * d5 - 4 * a5 * pow(b2, 2) * pow(d3, 2) * d5 +
            4 * a5 * pow(b3, 2) * pow(d2, 2) * d5 + 16 * a5 * pow(b4, 2) * pow(d1, 2) * d5 -
            4 * b3 * pow(b4, 2) * c3 * pow(d5, 2) + 4 * b3 * pow(b5, 2) * c3 * pow(d4, 2) -
            16 * pow(b1, 2) * b5 * c5 * pow(d4, 2) - 4 * pow(b2, 2) * b5 * c5 * pow(d3, 2) +
            4 * pow(b3, 2) * b5 * c5 * pow(d2, 2) + 16 * pow(b4, 2) * b5 * c5 * pow(d1, 2) -
            3 * a3 * pow(b5, 2) * pow(d3, 2) * d5 + 4 * a4 * pow(b3, 2) * d4 * pow(d5, 2) -
            4 * a4 * pow(b5, 2) * pow(d3, 2) * d4 + 3 * a5 * pow(b3, 2) * d3 * pow(d5, 2) -
            3 * b3 * pow(b5, 2) * c5 * pow(d3, 2) - 4 * b4 * pow(b5, 2) * c4 * pow(d3, 2) +
            4 * pow(b3, 2) * b4 * c4 * pow(d5, 2) + 3 * pow(b3, 2) * b5 * c3 * pow(d5, 2) -
            4 * a5 * pow(b3, 2) * pow(d4, 2) * d5 + 4 * a5 * pow(b4, 2) * pow(d3, 2) * d5 -
            4 * pow(b3, 2) * b5 * c5 * pow(d4, 2) + 4 * pow(b4, 2) * b5 * c5 * pow(d3, 2) +
            8 * a0 * b0 * b1 * d1 * pow(d3, 2) - 8 * a1 * b0 * b1 * d0 * pow(d3, 2) +
            32 * a0 * b0 * b1 * d1 * pow(d4, 2) + 6 * a0 * b0 * b3 * d0 * pow(d3, 2) -
            32 * a1 * b0 * b1 * d0 * pow(d4, 2) + 8 * a0 * b0 * b1 * d1 * pow(d5, 2) -
            8 * a0 * b0 * b2 * d2 * pow(d3, 2) + 8 * a0 * b0 * b3 * d0 * pow(d4, 2) -
            8 * a0 * b0 * b3 * pow(d1, 2) * d3 - 8 * a1 * b0 * b1 * d0 * pow(d5, 2) +
            8 * a2 * b0 * b2 * d0 * pow(d3, 2) + 8 * a3 * b0 * b3 * d0 * pow(d1, 2) -
            32 * a0 * b0 * b2 * d2 * pow(d4, 2) + 6 * a0 * b0 * b3 * d0 * pow(d5, 2) +
            8 * a0 * b0 * b3 * pow(d2, 2) * d3 - 6 * a0 * b0 * b5 * d0 * pow(d3, 2) +
            8 * a1 * b1 * b3 * pow(d0, 2) * d3 + 32 * a2 * b0 * b2 * d0 * pow(d4, 2) -
            8 * a3 * b0 * b3 * d0 * pow(d2, 2) - 8 * a3 * b1 * b3 * pow(d0, 2) * d1 -
            8 * a0 * b0 * b2 * d2 * pow(d5, 2) + 8 * a0 * b0 * b3 * pow(d1, 2) * d5 -
            32 * a0 * b0 * b4 * pow(d1, 2) * d4 - 8 * a0 * b0 * b5 * d0 * pow(d4, 2) +
            8 * a0 * b0 * b5 * pow(d1, 2) * d3 - 8 * a0 * b3 * b5 * d0 * pow(d1, 2) -
            32 * a1 * b1 * b2 * d2 * pow(d3, 2) + 8 * a2 * b0 * b2 * d0 * pow(d5, 2) +
            32 * a2 * b1 * b2 * d1 * pow(d3, 2) - 6 * a3 * b0 * b3 * pow(d0, 2) * d3 -
            8 * a3 * b0 * b5 * d0 * pow(d1, 2) + 32 * a4 * b0 * b4 * d0 * pow(d1, 2) -
            8 * a5 * b0 * b3 * d0 * pow(d1, 2) - 8 * b0 * b3 * b5 * c0 * pow(d1, 2) +
            8 * a0 * b0 * b3 * d3 * pow(d4, 2) - 8 * a0 * b0 * b3 * pow(d2, 2) * d5 +
            32 * a0 * b0 * b4 * pow(d2, 2) * d4 - 6 * a0 * b0 * b5 * d0 * pow(d5, 2) -
            8 * a0 * b0 * b5 * pow(d2, 2) * d3 + 16 * a0 * b1 * b4 * d2 * pow(d3, 2) -
            8 * a0 * b1 * b5 * d1 * pow(d3, 2) + 8 * a0 * b2 * b3 * d2 * pow(d3, 2) +
            8 * a0 * b3 * b5 * d0 * pow(d2, 2) - 16 * a1 * b0 * b1 * d3 * pow(d5, 2) +
            8 * a1 * b0 * b1 * pow(d3, 2) * d5 + 16 * a1 * b0 * b4 * d2 * pow(d3, 2) -
            8 * a1 * b0 * b5 * d1 * pow(d3, 2) - 128 * a1 * b1 * b2 * d2 * pow(d4, 2) +
            16 * a1 * b1 * b3 * d0 * pow(d5, 2) - 8 * a1 * b1 * b3 * pow(d0, 2) * d5 +
            32 * a1 * b1 * b3 * pow(d2, 2) * d3 + 32 * a1 * b1 * b4 * pow(d0, 2) * d4 +
            8 * a1 * b1 * b5 * d0 * pow(d3, 2) - 8 * a1 * b1 * b5 * pow(d0, 2) * d3 -
            16 * a1 * b2 * b3 * pow(d0, 2) * d4 - 16 * a1 * b2 * b4 * d0 * pow(d3, 2) +
            16 * a1 * b2 * b4 * pow(d0, 2) * d3 + 8 * a1 * b3 * b5 * pow(d0, 2) * d1 +
            8 * a2 * b0 * b3 * d2 * pow(d3, 2) + 128 * a2 * b1 * b2 * d1 * pow(d4, 2) -
            16 * a2 * b1 * b3 * pow(d0, 2) * d4 - 16 * a2 * b1 * b4 * d0 * pow(d3, 2) +
            16 * a2 * b1 * b4 * pow(d0, 2) * d3 + 8 * a2 * b2 * b3 * d0 * pow(d3, 2) -
            8 * a2 * b2 * b3 * pow(d0, 2) * d3 + 8 * a3 * b0 * b2 * d2 * pow(d3, 2) -
            8 * a3 * b0 * b3 * d0 * pow(d4, 2) + 8 * a3 * b0 * b5 * d0 * pow(d2, 2) -
            16 * a3 * b1 * b2 * pow(d0, 2) * d4 - 32 * a3 * b1 * b3 * d1 * pow(d2, 2) +
            8 * a3 * b1 * b5 * pow(d0, 2) * d1 + 8 * a3 * b2 * b3 * pow(d0, 2) * d2 +
            16 * a4 * b0 * b1 * d2 * pow(d3, 2) - 32 * a4 * b0 * b4 * d0 * pow(d2, 2) -
            16 * a4 * b1 * b2 * d0 * pow(d3, 2) + 16 * a4 * b1 * b2 * pow(d0, 2) * d3 -
            32 * a4 * b1 * b4 * pow(d0, 2) * d1 - 8 * a5 * b0 * b1 * d1 * pow(d3, 2) +
            8 * a5 * b0 * b3 * d0 * pow(d2, 2) + 8 * a5 * b1 * b3 * pow(d0, 2) * d1 +
            16 * b0 * b1 * b4 * c2 * pow(d3, 2) - 8 * b0 * b1 * b5 * c1 * pow(d3, 2) +
            8 * b0 * b2 * b3 * c2 * pow(d3, 2) + 8 * b0 * b3 * b5 * c0 * pow(d2, 2) -
            16 * b1 * b2 * b3 * c4 * pow(d0, 2) - 16 * b1 * b2 * b4 * c0 * pow(d3, 2) +
            16 * b1 * b2 * b4 * c3 * pow(d0, 2) + 8 * b1 * b3 * b5 * c1 * pow(d0, 2) +
            12 * a0 * b0 * b3 * d3 * pow(d5, 2) - 6 * a0 * b0 * b3 * pow(d3, 2) * d5 -
            8 * a0 * b0 * b4 * pow(d3, 2) * d4 - 8 * a0 * b0 * b5 * pow(d1, 2) * d5 -
            32 * a0 * b1 * b5 * d1 * pow(d4, 2) + 32 * a0 * b2 * b3 * d2 * pow(d4, 2) -
            8 * a0 * b3 * b4 * pow(d0, 2) * d4 - 6 * a0 * b3 * b5 * d0 * pow(d3, 2) +
            6 * a0 * b3 * b5 * pow(d0, 2) * d3 + 32 * a1 * b0 * b1 * pow(d4, 2) * d5 -
            32 * a1 * b0 * b5 * d1 * pow(d4, 2) - 32 * a1 * b1 * b2 * d2 * pow(d5, 2) +
            32 * a1 * b1 * b5 * d0 * pow(d4, 2) - 32 * a2 * b0 * b2 * d3 * pow(d4, 2) +
            32 * a2 * b0 * b3 * d2 * pow(d4, 2) + 32 * a2 * b1 * b2 * d1 * pow(d5, 2) -
            32 * a2 * b2 * b3 * d0 * pow(d4, 2) - 32 * a2 * b2 * b3 * pow(d1, 2) * d3 +
            32 * a3 * b0 * b2 * d2 * pow(d4, 2) - 12 * a3 * b0 * b3 * d0 * pow(d5, 2) +
            6 * a3 * b0 * b3 * pow(d0, 2) * d5 - 8 * a3 * b0 * b3 * pow(d2, 2) * d3 -
            8 * a3 * b0 * b4 * pow(d0, 2) * d4 - 6 * a3 * b0 * b5 * d0 * pow(d3, 2) +
            6 * a3 * b0 * b5 * pow(d0, 2) * d3 + 32 * a3 * b2 * b3 * pow(d1, 2) * d2 -
            8 * a4 * b0 * b3 * pow(d0, 2) * d4 + 8 * a4 * b0 * b4 * d0 * pow(d3, 2) -
            8 * a4 * b0 * b4 * pow(d0, 2) * d3 - 32 * a5 * b0 * b1 * d1 * pow(d4, 2) -
            6 * a5 * b0 * b3 * d0 * pow(d3, 2) + 6 * a5 * b0 * b3 * pow(d0, 2) * d3 +
            8 * a5 * b0 * b5 * d0 * pow(d1, 2) - 32 * b0 * b1 * b5 * c1 * pow(d4, 2) +
            32 * b0 * b2 * b3 * c2 * pow(d4, 2) - 8 * b0 * b3 * b4 * c4 * pow(d0, 2) -
            6 * b0 * b3 * b5 * c0 * pow(d3, 2) + 6 * b0 * b3 * b5 * c3 * pow(d0, 2) -
            16 * a0 * b0 * b3 * pow(d4, 2) * d5 + 16 * a0 * b0 * b5 * d3 * pow(d4, 2) +
            8 * a0 * b0 * b5 * pow(d2, 2) * d5 - 8 * a0 * b1 * b5 * d1 * pow(d5, 2) +
            8 * a0 * b2 * b3 * d2 * pow(d5, 2) - 16 * a0 * b2 * b4 * d1 * pow(d5, 2) +
            8 * a0 * b3 * b5 * pow(d1, 2) * d3 - 8 * a1 * b0 * b5 * d1 * pow(d5, 2) -
            32 * a1 * b1 * b3 * pow(d2, 2) * d5 + 128 * a1 * b1 * b4 * pow(d2, 2) * d4 -
            8 * a1 * b1 * b5 * d0 * pow(d5, 2) + 8 * a1 * b1 * b5 * pow(d0, 2) * d5 -
            32 * a1 * b1 * b5 * pow(d2, 2) * d3 + 16 * a1 * b2 * b4 * d0 * pow(d5, 2) -
            16 * a1 * b2 * b4 * pow(d0, 2) * d5 + 16 * a1 * b2 * b5 * pow(d0, 2) * d4 +
            32 * a1 * b3 * b5 * d1 * pow(d2, 2) - 8 * a2 * b0 * b2 * d3 * pow(d5, 2) +
            16 * a2 * b0 * b2 * pow(d3, 2) * d5 + 8 * a2 * b0 * b3 * d2 * pow(d5, 2) -
            16 * a2 * b0 * b4 * d1 * pow(d5, 2) + 16 * a2 * b1 * b4 * d0 * pow(d5, 2) -
            16 * a2 * b1 * b4 * pow(d0, 2) * d5 + 16 * a2 * b1 * b5 * pow(d0, 2) * d4 -
            8 * a2 * b2 * b3 * d0 * pow(d5, 2) + 8 * a2 * b2 * b3 * pow(d0, 2) * d5 -
            32 * a2 * b2 * b4 * pow(d0, 2) * d4 - 16 * a2 * b2 * b5 * d0 * pow(d3, 2) +
            8 * a2 * b2 * b5 * pow(d0, 2) * d3 - 8 * a2 * b3 * b5 * pow(d0, 2) * d2 +
            8 * a3 * b0 * b2 * d2 * pow(d5, 2) - 8 * a3 * b0 * b3 * pow(d1, 2) * d5 +
            8 * a3 * b0 * b5 * pow(d1, 2) * d3 + 32 * a3 * b1 * b5 * d1 * pow(d2, 2) -
            8 * a3 * b2 * b5 * pow(d0, 2) * d2 - 8 * a3 * b3 * b5 * d0 * pow(d1, 2) -
            16 * a4 * b0 * b2 * d1 * pow(d5, 2) + 16 * a4 * b1 * b2 * d0 * pow(d5, 2) -
            16 * a4 * b1 * b2 * pow(d0, 2) * d5 - 128 * a4 * b1 * b4 * d1 * pow(d2, 2) +
            32 * a4 * b2 * b4 * pow(d0, 2) * d2 - 8 * a5 * b0 * b1 * d1 * pow(d5, 2) +
            8 * a5 * b0 * b3 * pow(d1, 2) * d3 - 8 * a5 * b0 * b5 * d0 * pow(d2, 2) +
            16 * a5 * b1 * b2 * pow(d0, 2) * d4 + 32 * a5 * b1 * b3 * d1 * pow(d2, 2) -
            8 * a5 * b1 * b5 * pow(d0, 2) * d1 - 8 * a5 * b2 * b3 * pow(d0, 2) * d2 -
            8 * b0 * b1 * b5 * c1 * pow(d5, 2) + 8 * b0 * b2 * b3 * c2 * pow(d5, 2) -
            16 * b0 * b2 * b4 * c1 * pow(d5, 2) + 8 * b0 * b3 * b5 * c3 * pow(d1, 2) +
            16 * b1 * b2 * b4 * c0 * pow(d5, 2) - 16 * b1 * b2 * b4 * c5 * pow(d0, 2) +
            16 * b1 * b2 * b5 * c4 * pow(d0, 2) + 32 * b1 * b3 * b5 * c1 * pow(d2, 2) -
            8 * b2 * b3 * b5 * c2 * pow(d0, 2) + 8 * a0 * b0 * b4 * d4 * pow(d5, 2) +
            6 * a0 * b0 * b5 * d3 * pow(d5, 2) - 12 * a0 * b0 * b5 * pow(d3, 2) * d5 -
            32 * a0 * b3 * b4 * pow(d2, 2) * d4 + 6 * a0 * b3 * b5 * d0 * pow(d5, 2) -
            6 * a0 * b3 * b5 * pow(d0, 2) * d5 + 8 * a0 * b4 * b5 * pow(d0, 2) * d4 +
            8 * a1 * b1 * b3 * d3 * pow(d5, 2) + 32 * a2 * b2 * b3 * pow(d1, 2) * d5 -
            128 * a2 * b2 * b4 * pow(d1, 2) * d4 + 32 * a2 * b2 * b5 * pow(d1, 2) * d3 -
            32 * a2 * b3 * b5 * pow(d1, 2) * d2 + 16 * a3 * b0 * b3 * pow(d2, 2) * d5 -
            32 * a3 * b0 * b4 * pow(d2, 2) * d4 + 6 * a3 * b0 * b5 * d0 * pow(d5, 2) -
            6 * a3 * b0 * b5 * pow(d0, 2) * d5 - 8 * a3 * b1 * b3 * d1 * pow(d5, 2) -
            32 * a3 * b2 * b5 * pow(d1, 2) * d2 - 16 * a3 * b3 * b5 * d0 * pow(d2, 2) -
            32 * a4 * b0 * b3 * pow(d2, 2) * d4 - 8 * a4 * b0 * b4 * d0 * pow(d5, 2) +
            8 * a4 * b0 * b4 * pow(d0, 2) * d5 + 32 * a4 * b0 * b4 * pow(d2, 2) * d3 +
            8 * a4 * b0 * b5 * pow(d0, 2) * d4 + 128 * a4 * b2 * b4 * pow(d1, 2) * d2 +
            32 * a4 * b3 * b4 * d0 * pow(d2, 2) + 6 * a5 * b0 * b3 * d0 * pow(d5, 2) -
            6 * a5 * b0 * b3 * pow(d0, 2) * d5 + 8 * a5 * b0 * b4 * pow(d0, 2) * d4 +
            12 * a5 * b0 * b5 * d0 * pow(d3, 2) - 6 * a5 * b0 * b5 * pow(d0, 2) * d3 -
            32 * a5 * b2 * b3 * pow(d1, 2) * d2 - 32 * b0 * b3 * b4 * c4 * pow(d2, 2) +
            6 * b0 * b3 * b5 * c0 * pow(d5, 2) - 6 * b0 * b3 * b5 * c5 * pow(d0, 2) +
            8 * b0 * b4 * b5 * c4 * pow(d0, 2) - 32 * b2 * b3 * b5 * c2 * pow(d1, 2) -
            8 * a0 * b0 * b5 * pow(d4, 2) * d5 + 32 * a0 * b4 * b5 * pow(d1, 2) * d4 +
            32 * a1 * b1 * b5 * pow(d2, 2) * d5 + 32 * a2 * b2 * b3 * d3 * pow(d4, 2) -
            8 * a2 * b2 * b5 * pow(d0, 2) * d5 - 6 * a3 * b0 * b3 * d3 * pow(d5, 2) -
            32 * a3 * b2 * b3 * d2 * pow(d4, 2) + 8 * a3 * b3 * b4 * pow(d0, 2) * d4 +
            6 * a3 * b3 * b5 * pow(d0, 2) * d3 - 32 * a4 * b0 * b4 * pow(d1, 2) * d5 +
            32 * a4 * b0 * b5 * pow(d1, 2) * d4 - 8 * a4 * b3 * b4 * pow(d0, 2) * d3 -
            32 * a4 * b4 * b5 * d0 * pow(d1, 2) + 32 * a5 * b0 * b4 * pow(d1, 2) * d4 +
            8 * a5 * b0 * b5 * d0 * pow(d4, 2) - 16 * a5 * b0 * b5 * pow(d1, 2) * d3 -
            32 * a5 * b1 * b5 * d1 * pow(d2, 2) + 8 * a5 * b2 * b5 * pow(d0, 2) * d2 +
            16 * a5 * b3 * b5 * d0 * pow(d1, 2) + 32 * b0 * b4 * b5 * c4 * pow(d1, 2) -
            8 * a0 * b3 * b5 * d3 * pow(d4, 2) - 8 * a0 * b3 * b5 * pow(d2, 2) * d5 +
            32 * a1 * b1 * b4 * d4 * pow(d5, 2) + 8 * a1 * b1 * b5 * d3 * pow(d5, 2) -
            8 * a1 * b1 * b5 * pow(d3, 2) * d5 - 16 * a1 * b2 * b4 * d3 * pow(d5, 2) +
            16 * a1 * b2 * b4 * pow(d3, 2) * d5 + 8 * a1 * b3 * b5 * d1 * pow(d5, 2) -
            16 * a1 * b4 * b5 * d2 * pow(d3, 2) - 16 * a2 * b1 * b4 * d3 * pow(d5, 2) +
            16 * a2 * b1 * b4 * pow(d3, 2) * d5 + 8 * a2 * b2 * b3 * d3 * pow(d5, 2) -
            8 * a2 * b2 * b3 * pow(d3, 2) * d5 - 32 * a2 * b2 * b4 * pow(d3, 2) * d4 -
            32 * a2 * b2 * b5 * pow(d1, 2) * d5 + 16 * a2 * b3 * b4 * d1 * pow(d5, 2) -
            8 * a2 * b3 * b5 * d2 * pow(d3, 2) + 8 * a3 * b0 * b3 * pow(d4, 2) * d5 -
            8 * a3 * b0 * b5 * d3 * pow(d4, 2) - 8 * a3 * b0 * b5 * pow(d2, 2) * d5 +
            8 * a3 * b1 * b5 * d1 * pow(d5, 2) - 8 * a3 * b2 * b3 * d2 * pow(d5, 2) +
            16 * a3 * b2 * b4 * d1 * pow(d5, 2) - 8 * a3 * b2 * b5 * d2 * pow(d3, 2) +
            8 * a3 * b3 * b5 * d0 * pow(d4, 2) - 16 * a4 * b1 * b2 * d3 * pow(d5, 2) +
            16 * a4 * b1 * b2 * pow(d3, 2) * d5 - 32 * a4 * b1 * b4 * d1 * pow(d5, 2) -
            16 * a4 * b1 * b5 * d2 * pow(d3, 2) + 16 * a4 * b2 * b3 * d1 * pow(d5, 2) +
            32 * a4 * b2 * b4 * d2 * pow(d3, 2) - 8 * a5 * b0 * b3 * d3 * pow(d4, 2) -
            8 * a5 * b0 * b3 * pow(d2, 2) * d5 + 6 * a5 * b0 * b5 * pow(d0, 2) * d5 +
            8 * a5 * b0 * b5 * pow(d2, 2) * d3 + 8 * a5 * b1 * b3 * d1 * pow(d5, 2) -
            16 * a5 * b1 * b4 * d2 * pow(d3, 2) + 8 * a5 * b1 * b5 * d1 * pow(d3, 2) -
            8 * a5 * b2 * b3 * d2 * pow(d3, 2) + 32 * a5 * b2 * b5 * pow(d1, 2) * d2 +
            8 * a5 * b3 * b5 * d0 * pow(d2, 2) - 8 * b0 * b3 * b5 * c3 * pow(d4, 2) -
            8 * b0 * b3 * b5 * c5 * pow(d2, 2) - 16 * b1 * b2 * b4 * c3 * pow(d5, 2) +
            16 * b1 * b2 * b4 * c5 * pow(d3, 2) + 8 * b1 * b3 * b5 * c1 * pow(d5, 2) -
            16 * b1 * b4 * b5 * c2 * pow(d3, 2) + 16 * b2 * b3 * b4 * c1 * pow(d5, 2) -
            8 * b2 * b3 * b5 * c2 * pow(d3, 2) - 8 * a0 * b3 * b4 * d4 * pow(d5, 2) -
            6 * a0 * b3 * b5 * d3 * pow(d5, 2) + 6 * a0 * b3 * b5 * pow(d3, 2) * d5 +
            8 * a0 * b4 * b5 * pow(d3, 2) * d4 - 32 * a1 * b1 * b5 * pow(d4, 2) * d5 -
            8 * a3 * b0 * b4 * d4 * pow(d5, 2) - 6 * a3 * b0 * b5 * d3 * pow(d5, 2) +
            6 * a3 * b0 * b5 * pow(d3, 2) * d5 + 32 * a3 * b3 * b4 * pow(d2, 2) * d4 -
            6 * a3 * b3 * b5 * d0 * pow(d5, 2) + 12 * a3 * b3 * b5 * pow(d0, 2) * d5 +
            8 * a3 * b3 * b5 * pow(d2, 2) * d3 - 8 * a4 * b0 * b3 * d4 * pow(d5, 2) +
            8 * a4 * b0 * b4 * d3 * pow(d5, 2) - 8 * a4 * b0 * b4 * pow(d3, 2) * d5 +
            8 * a4 * b0 * b5 * pow(d3, 2) * d4 + 8 * a4 * b3 * b4 * d0 * pow(d5, 2) -
            16 * a4 * b3 * b4 * pow(d0, 2) * d5 - 32 * a4 * b3 * b4 * pow(d2, 2) * d3 -
            8 * a4 * b4 * b5 * d0 * pow(d3, 2) + 16 * a4 * b4 * b5 * pow(d0, 2) * d3 -
            6 * a5 * b0 * b3 * d3 * pow(d5, 2) + 6 * a5 * b0 * b3 * pow(d3, 2) * d5 +
            8 * a5 * b0 * b4 * pow(d3, 2) * d4 + 8 * a5 * b0 * b5 * pow(d1, 2) * d5 +
            32 * a5 * b1 * b5 * d1 * pow(d4, 2) + 6 * a5 * b3 * b5 * d0 * pow(d3, 2) -
            12 * a5 * b3 * b5 * pow(d0, 2) * d3 - 8 * b0 * b3 * b4 * c4 * pow(d5, 2) -
            6 * b0 * b3 * b5 * c3 * pow(d5, 2) + 6 * b0 * b3 * b5 * c5 * pow(d3, 2) +
            8 * b0 * b4 * b5 * c4 * pow(d3, 2) + 8 * a0 * b3 * b5 * pow(d4, 2) * d5 -
            8 * a2 * b2 * b5 * pow(d3, 2) * d5 + 8 * a3 * b0 * b5 * pow(d4, 2) * d5 +
            8 * a3 * b3 * b5 * pow(d1, 2) * d5 + 8 * a5 * b0 * b3 * pow(d4, 2) * d5 -
            8 * a5 * b0 * b5 * d3 * pow(d4, 2) + 8 * a5 * b2 * b5 * d2 * pow(d3, 2) -
            8 * a5 * b3 * b5 * d0 * pow(d4, 2) - 8 * a5 * b3 * b5 * pow(d1, 2) * d3 +
            8 * b0 * b3 * b5 * c5 * pow(d4, 2) + 8 * a3 * b3 * b5 * pow(d2, 2) * d5 +
            8 * a4 * b4 * b5 * pow(d0, 2) * d5 + 6 * a5 * b0 * b5 * pow(d3, 2) * d5 -
            6 * a5 * b3 * b5 * pow(d0, 2) * d5 - 8 * a5 * b3 * b5 * pow(d2, 2) * d3 -
            8 * a5 * b4 * b5 * pow(d0, 2) * d4 + 8 * a3 * b3 * b4 * d4 * pow(d5, 2) +
            6 * a3 * b3 * b5 * d3 * pow(d5, 2) - 8 * a4 * b3 * b4 * d3 * pow(d5, 2) +
            32 * a4 * b4 * b5 * pow(d1, 2) * d5 - 8 * a5 * b3 * b5 * pow(d1, 2) * d5 -
            32 * a5 * b4 * b5 * pow(d1, 2) * d4 - 8 * a3 * b3 * b5 * pow(d4, 2) * d5 +
            8 * a5 * b3 * b5 * d3 * pow(d4, 2) + 8 * a4 * b4 * b5 * pow(d3, 2) * d5 -
            6 * a5 * b3 * b5 * pow(d3, 2) * d5 - 8 * a5 * b4 * b5 * pow(d3, 2) * d4 +
            8 * b0 * pow(b3, 2) * c1 * d0 * d1 - 8 * b1 * pow(b3, 2) * c0 * d0 * d1 -
            6 * b0 * pow(b3, 2) * c0 * d0 * d3 + 32 * b0 * pow(b4, 2) * c1 * d0 * d1 -
            32 * b1 * pow(b4, 2) * c0 * d0 * d1 - 8 * b0 * pow(b1, 2) * c3 * d0 * d3 -
            8 * b0 * pow(b3, 2) * c2 * d0 * d2 - 8 * b0 * pow(b4, 2) * c0 * d0 * d3 +
            8 * b0 * pow(b5, 2) * c1 * d0 * d1 - 8 * b1 * pow(b5, 2) * c0 * d0 * d1 +
            8 * b2 * pow(b3, 2) * c0 * d0 * d2 + 8 * pow(b1, 2) * b3 * c0 * d0 * d3 +
            8 * b0 * pow(b2, 2) * c3 * d0 * d3 + 6 * b0 * pow(b3, 2) * c0 * d0 * d5 -
            32 * b0 * pow(b4, 2) * c2 * d0 * d2 - 6 * b0 * pow(b5, 2) * c0 * d0 * d3 +
            32 * b2 * pow(b4, 2) * c0 * d0 * d2 + 8 * pow(b0, 2) * b1 * c3 * d1 * d3 -
            8 * pow(b0, 2) * b3 * c1 * d1 * d3 - 8 * pow(b2, 2) * b3 * c0 * d0 * d3 +
            8 * a0 * pow(b1, 2) * d0 * d3 * d5 + 8 * b0 * pow(b1, 2) * c0 * d3 * d5 +
            8 * b0 * pow(b1, 2) * c3 * d0 * d5 - 32 * b0 * pow(b1, 2) * c4 * d0 * d4 +
            8 * b0 * pow(b1, 2) * c5 * d0 * d3 + 8 * b0 * pow(b4, 2) * c0 * d0 * d5 -
            8 * b0 * pow(b5, 2) * c2 * d0 * d2 - 32 * b1 * pow(b3, 2) * c2 * d1 * d2 +
            32 * b2 * pow(b3, 2) * c1 * d1 * d2 + 8 * b2 * pow(b5, 2) * c0 * d0 * d2 +
            6 * pow(b0, 2) * b3 * c3 * d0 * d3 - 8 * pow(b1, 2) * b3 * c0 * d0 * d5 +
            32 * pow(b1, 2) * b4 * c0 * d0 * d4 - 8 * pow(b1, 2) * b5 * c0 * d0 * d3 -
            8 * a0 * pow(b2, 2) * d0 * d3 * d5 + 16 * a0 * pow(b3, 2) * d1 * d2 * d4 -
            8 * a1 * pow(b0, 2) * d1 * d3 * d5 + 8 * a1 * pow(b3, 2) * d0 * d1 * d5 -
            16 * a2 * pow(b3, 2) * d0 * d1 * d4 - 8 * a2 * pow(b3, 2) * d0 * d2 * d3 -
            16 * a3 * pow(b0, 2) * d1 * d2 * d4 + 16 * a4 * pow(b0, 2) * d1 * d2 * d3 -
            8 * b0 * pow(b2, 2) * c0 * d3 * d5 - 8 * b0 * pow(b2, 2) * c3 * d0 * d5 +
            32 * b0 * pow(b2, 2) * c4 * d0 * d4 - 8 * b0 * pow(b2, 2) * c5 * d0 * d3 -
            8 * b0 * pow(b3, 2) * c1 * d1 * d5 + 16 * b0 * pow(b3, 2) * c1 * d2 * d4 +
            16 * b0 * pow(b3, 2) * c2 * d1 * d4 - 8 * b0 * pow(b3, 2) * c2 * d2 * d3 +
            16 * b0 * pow(b3, 2) * c4 * d1 * d2 + 8 * b0 * pow(b4, 2) * c3 * d0 * d3 +
            6 * b0 * pow(b5, 2) * c0 * d0 * d5 - 16 * b0 * pow(b5, 2) * c1 * d1 * d3 +
            32 * b1 * pow(b2, 2) * c3 * d1 * d3 + 8 * b1 * pow(b3, 2) * c0 * d1 * d5 +
            8 * b1 * pow(b3, 2) * c1 * d0 * d5 + 8 * b1 * pow(b3, 2) * c5 * d0 * d1 -
            128 * b1 * pow(b4, 2) * c2 * d1 * d2 - 16 * b2 * pow(b3, 2) * c0 * d1 * d4 -
            8 * b2 * pow(b3, 2) * c0 * d2 * d3 - 16 * b2 * pow(b3, 2) * c1 * d0 * d4 -
            8 * b2 * pow(b3, 2) * c2 * d0 * d3 - 8 * b2 * pow(b3, 2) * c3 * d0 * d2 -
            16 * b2 * pow(b3, 2) * c4 * d0 * d1 + 128 * b2 * pow(b4, 2) * c1 * d1 * d2 -
            8 * b3 * pow(b4, 2) * c0 * d0 * d3 + 16 * b3 * pow(b5, 2) * c1 * d0 * d1 -
            8 * pow(b0, 2) * b1 * c1 * d3 * d5 - 8 * pow(b0, 2) * b1 * c3 * d1 * d5 +
            32 * pow(b0, 2) * b1 * c4 * d1 * d4 - 8 * pow(b0, 2) * b1 * c5 * d1 * d3 -
            8 * pow(b0, 2) * b2 * c3 * d2 * d3 + 8 * pow(b0, 2) * b3 * c1 * d1 * d5 -
            16 * pow(b0, 2) * b3 * c1 * d2 * d4 - 16 * pow(b0, 2) * b3 * c2 * d1 * d4 +
            8 * pow(b0, 2) * b3 * c2 * d2 * d3 - 16 * pow(b0, 2) * b3 * c4 * d1 * d2 -
            32 * pow(b0, 2) * b4 * c1 * d1 * d4 + 16 * pow(b0, 2) * b4 * c1 * d2 * d3 +
            16 * pow(b0, 2) * b4 * c2 * d1 * d3 + 16 * pow(b0, 2) * b4 * c3 * d1 * d2 +
            8 * pow(b0, 2) * b5 * c1 * d1 * d3 + 8 * pow(b2, 2) * b3 * c0 * d0 * d5 -
            32 * pow(b2, 2) * b3 * c1 * d1 * d3 - 32 * pow(b2, 2) * b4 * c0 * d0 * d4 +
            8 * pow(b2, 2) * b5 * c0 * d0 * d3 - 8 * pow(b3, 2) * b5 * c1 * d0 * d1 +
            6 * a0 * pow(b3, 2) * d0 * d3 * d5 + 32 * a1 * pow(b4, 2) * d0 * d1 * d5 -
            32 * a2 * pow(b4, 2) * d0 * d2 * d3 - 6 * a3 * pow(b0, 2) * d0 * d3 * d5 +
            8 * a4 * pow(b0, 2) * d0 * d3 * d4 - 8 * b0 * pow(b1, 2) * c5 * d0 * d5 +
            6 * b0 * pow(b3, 2) * c0 * d3 * d5 + 6 * b0 * pow(b3, 2) * c3 * d0 * d5 -
            8 * b0 * pow(b3, 2) * c4 * d0 * d4 + 6 * b0 * pow(b3, 2) * c5 * d0 * d3 -
            32 * b0 * pow(b4, 2) * c1 * d1 * d5 + 32 * b0 * pow(b4, 2) * c2 * d2 * d3 +
            12 * b0 * pow(b5, 2) * c3 * d0 * d3 + 32 * b1 * pow(b4, 2) * c0 * d1 * d5 +
            32 * b1 * pow(b4, 2) * c1 * d0 * d5 + 32 * b1 * pow(b4, 2) * c5 * d0 * d1 -
            32 * b1 * pow(b5, 2) * c2 * d1 * d2 - 32 * b2 * pow(b4, 2) * c0 * d2 * d3 -
            32 * b2 * pow(b4, 2) * c2 * d0 * d3 - 32 * b2 * pow(b4, 2) * c3 * d0 * d2 +
            32 * b2 * pow(b5, 2) * c1 * d1 * d2 + 32 * b3 * pow(b4, 2) * c2 * d0 * d2 -
            12 * b3 * pow(b5, 2) * c0 * d0 * d3 - 6 * pow(b0, 2) * b3 * c0 * d3 * d5 -
            6 * pow(b0, 2) * b3 * c3 * d0 * d5 + 8 * pow(b0, 2) * b3 * c4 * d0 * d4 -
            6 * pow(b0, 2) * b3 * c5 * d0 * d3 + 8 * pow(b0, 2) * b4 * c0 * d3 * d4 +
            8 * pow(b0, 2) * b4 * c3 * d0 * d4 + 8 * pow(b0, 2) * b4 * c4 * d0 * d3 -
            6 * pow(b0, 2) * b5 * c3 * d0 * d3 - 32 * pow(b1, 2) * b2 * c3 * d2 * d3 +
            32 * pow(b1, 2) * b3 * c2 * d2 * d3 + 8 * pow(b1, 2) * b5 * c0 * d0 * d5 +
            8 * pow(b2, 2) * b3 * c3 * d0 * d3 + 8 * pow(b3, 2) * b4 * c0 * d0 * d4 +
            6 * pow(b3, 2) * b5 * c0 * d0 * d3 - 32 * pow(b4, 2) * b5 * c1 * d0 * d1 -
            16 * a0 * pow(b5, 2) * d1 * d2 * d4 - 32 * a1 * pow(b2, 2) * d1 * d3 * d5 +
            8 * a1 * pow(b5, 2) * d0 * d1 * d5 + 16 * a1 * pow(b5, 2) * d0 * d2 * d4 +
            8 * a2 * pow(b0, 2) * d2 * d3 * d5 - 8 * a2 * pow(b5, 2) * d0 * d2 * d3 -
            8 * a3 * pow(b1, 2) * d0 * d3 * d5 - 16 * a4 * pow(b0, 2) * d1 * d2 * d5 +
            16 * a5 * pow(b0, 2) * d1 * d2 * d4 + 8 * b0 * pow(b1, 2) * c3 * d3 * d5 +
            8 * b0 * pow(b2, 2) * c5 * d0 * d5 + 16 * b0 * pow(b3, 2) * c2 * d2 * d5 +
            8 * b0 * pow(b5, 2) * c1 * d1 * d5 - 16 * b0 * pow(b5, 2) * c1 * d2 * d4 -
            16 * b0 * pow(b5, 2) * c2 * d1 * d4 + 8 * b0 * pow(b5, 2) * c2 * d2 * d3 -
            16 * b0 * pow(b5, 2) * c4 * d1 * d2 - 32 * b1 * pow(b2, 2) * c1 * d3 * d5 -
            32 * b1 * pow(b2, 2) * c3 * d1 * d5 + 128 * b1 * pow(b2, 2) * c4 * d1 * d4 -
            32 * b1 * pow(b2, 2) * c5 * d1 * d3 + 8 * b1 * pow(b5, 2) * c0 * d1 * d5 +
            16 * b1 * pow(b5, 2) * c0 * d2 * d4 + 8 * b1 * pow(b5, 2) * c1 * d0 * d5 +
            16 * b1 * pow(b5, 2) * c2 * d0 * d4 + 16 * b1 * pow(b5, 2) * c4 * d0 * d2 +
            8 * b1 * pow(b5, 2) * c5 * d0 * d1 - 8 * b2 * pow(b5, 2) * c0 * d2 * d3 -
            8 * b2 * pow(b5, 2) * c2 * d0 * d3 - 8 * b2 * pow(b5, 2) * c3 * d0 * d2 -
            16 * b3 * pow(b4, 2) * c0 * d0 * d5 + 8 * b3 * pow(b5, 2) * c2 * d0 * d2 +
            8 * pow(b0, 2) * b1 * c5 * d1 * d5 + 8 * pow(b0, 2) * b2 * c2 * d3 * d5 +
            8 * pow(b0, 2) * b2 * c3 * d2 * d5 - 32 * pow(b0, 2) * b2 * c4 * d2 * d4 +
            8 * pow(b0, 2) * b2 * c5 * d2 * d3 - 8 * pow(b0, 2) * b3 * c2 * d2 * d5 -
            16 * pow(b0, 2) * b4 * c1 * d2 * d5 - 16 * pow(b0, 2) * b4 * c2 * d1 * d5 +
            32 * pow(b0, 2) * b4 * c2 * d2 * d4 - 16 * pow(b0, 2) * b4 * c5 * d1 * d2 -
            8 * pow(b0, 2) * b5 * c1 * d1 * d5 + 16 * pow(b0, 2) * b5 * c1 * d2 * d4 +
            16 * pow(b0, 2) * b5 * c2 * d1 * d4 - 8 * pow(b0, 2) * b5 * c2 * d2 * d3 +
            16 * pow(b0, 2) * b5 * c4 * d1 * d2 - 8 * pow(b1, 2) * b3 * c0 * d3 * d5 -
            8 * pow(b1, 2) * b3 * c3 * d0 * d5 - 8 * pow(b1, 2) * b3 * c5 * d0 * d3 +
            8 * pow(b1, 2) * b5 * c3 * d0 * d3 + 32 * pow(b2, 2) * b3 * c1 * d1 * d5 -
            128 * pow(b2, 2) * b4 * c1 * d1 * d4 - 8 * pow(b2, 2) * b5 * c0 * d0 * d5 +
            32 * pow(b2, 2) * b5 * c1 * d1 * d3 - 16 * pow(b3, 2) * b5 * c2 * d0 * d2 +
            16 * pow(b4, 2) * b5 * c0 * d0 * d3 - 6 * a0 * pow(b5, 2) * d0 * d3 * d5 +
            32 * a2 * pow(b1, 2) * d2 * d3 * d5 - 8 * a4 * pow(b0, 2) * d0 * d4 * d5 +
            32 * a4 * pow(b2, 2) * d0 * d3 * d4 + 6 * a5 * pow(b0, 2) * d0 * d3 * d5 +
            16 * b0 * pow(b2, 2) * c3 * d3 * d5 - 32 * b0 * pow(b2, 2) * c4 * d3 * d4 -
            12 * b0 * pow(b3, 2) * c5 * d0 * d5 - 6 * b0 * pow(b5, 2) * c0 * d3 * d5 -
            6 * b0 * pow(b5, 2) * c3 * d0 * d5 + 8 * b0 * pow(b5, 2) * c4 * d0 * d4 -
            6 * b0 * pow(b5, 2) * c5 * d0 * d3 + 8 * b1 * pow(b5, 2) * c3 * d1 * d3 -
            6 * b3 * pow(b5, 2) * c0 * d0 * d5 - 8 * b3 * pow(b5, 2) * c1 * d1 * d3 -
            8 * b4 * pow(b5, 2) * c0 * d0 * d4 + 6 * pow(b0, 2) * b3 * c5 * d0 * d5 -
            8 * pow(b0, 2) * b4 * c0 * d4 * d5 - 8 * pow(b0, 2) * b4 * c4 * d0 * d5 -
            8 * pow(b0, 2) * b4 * c5 * d0 * d4 + 6 * pow(b0, 2) * b5 * c0 * d3 * d5 +
            6 * pow(b0, 2) * b5 * c3 * d0 * d5 - 8 * pow(b0, 2) * b5 * c4 * d0 * d4 +
            6 * pow(b0, 2) * b5 * c5 * d0 * d3 + 32 * pow(b1, 2) * b2 * c2 * d3 * d5 +
            32 * pow(b1, 2) * b2 * c3 * d2 * d5 - 128 * pow(b1, 2) * b2 * c4 * d2 * d4 +
            32 * pow(b1, 2) * b2 * c5 * d2 * d3 - 32 * pow(b1, 2) * b3 * c2 * d2 * d5 +
            128 * pow(b1, 2) * b4 * c2 * d2 * d4 - 32 * pow(b1, 2) * b5 * c2 * d2 * d3 -
            32 * pow(b2, 2) * b3 * c4 * d0 * d4 + 32 * pow(b2, 2) * b4 * c0 * d3 * d4 +
            32 * pow(b2, 2) * b4 * c3 * d0 * d4 + 32 * pow(b2, 2) * b4 * c4 * d0 * d3 -
            16 * pow(b2, 2) * b5 * c3 * d0 * d3 + 12 * pow(b3, 2) * b5 * c0 * d0 * d5 -
            32 * a4 * pow(b1, 2) * d0 * d4 * d5 + 32 * b0 * pow(b1, 2) * c4 * d4 * d5 -
            16 * b0 * pow(b1, 2) * c5 * d3 * d5 - 8 * b0 * pow(b4, 2) * c5 * d0 * d5 +
            32 * b1 * pow(b2, 2) * c5 * d1 * d5 + 32 * b2 * pow(b4, 2) * c3 * d2 * d3 -
            32 * b3 * pow(b4, 2) * c2 * d2 * d3 + 6 * b3 * pow(b5, 2) * c3 * d0 * d3 -
            8 * pow(b0, 2) * b2 * c5 * d2 * d5 - 6 * pow(b0, 2) * b3 * c3 * d3 * d5 +
            8 * pow(b0, 2) * b3 * c4 * d3 * d4 - 8 * pow(b0, 2) * b4 * c3 * d3 * d4 +
            8 * pow(b0, 2) * b5 * c2 * d2 * d5 + 16 * pow(b1, 2) * b3 * c5 * d0 * d5 -
            32 * pow(b1, 2) * b4 * c0 * d4 * d5 - 32 * pow(b1, 2) * b4 * c4 * d0 * d5 -
            32 * pow(b1, 2) * b4 * c5 * d0 * d4 + 32 * pow(b1, 2) * b5 * c4 * d0 * d4 -
            32 * pow(b2, 2) * b5 * c1 * d1 * d5 + 8 * pow(b4, 2) * b5 * c0 * d0 * d5 -
            8 * a1 * pow(b5, 2) * d1 * d3 * d5 - 16 * a1 * pow(b5, 2) * d2 * d3 * d4 +
            16 * a2 * pow(b3, 2) * d1 * d4 * d5 + 8 * a2 * pow(b3, 2) * d2 * d3 * d5 +
            8 * a3 * pow(b4, 2) * d0 * d3 * d5 + 16 * a3 * pow(b5, 2) * d1 * d2 * d4 +
            8 * a5 * pow(b2, 2) * d0 * d3 * d5 - 16 * a5 * pow(b3, 2) * d1 * d2 * d4 -
            8 * b0 * pow(b2, 2) * c5 * d3 * d5 - 8 * b0 * pow(b4, 2) * c3 * d3 * d5 -
            8 * b1 * pow(b3, 2) * c5 * d1 * d5 - 8 * b1 * pow(b5, 2) * c1 * d3 * d5 -
            16 * b1 * pow(b5, 2) * c2 * d3 * d4 - 8 * b1 * pow(b5, 2) * c3 * d1 * d5 -
            16 * b1 * pow(b5, 2) * c3 * d2 * d4 + 32 * b1 * pow(b5, 2) * c4 * d1 * d4 -
            16 * b1 * pow(b5, 2) * c4 * d2 * d3 - 8 * b1 * pow(b5, 2) * c5 * d1 * d3 +
            16 * b2 * pow(b3, 2) * c1 * d4 * d5 + 8 * b2 * pow(b3, 2) * c2 * d3 * d5 +
            8 * b2 * pow(b3, 2) * c3 * d2 * d5 + 16 * b2 * pow(b3, 2) * c4 * d1 * d5 -
            32 * b2 * pow(b3, 2) * c4 * d2 * d4 + 16 * b2 * pow(b3, 2) * c5 * d1 * d4 +
            8 * b2 * pow(b3, 2) * c5 * d2 * d3 + 8 * b2 * pow(b5, 2) * c3 * d2 * d3 +
            8 * b3 * pow(b4, 2) * c0 * d3 * d5 + 8 * b3 * pow(b4, 2) * c3 * d0 * d5 +
            8 * b3 * pow(b4, 2) * c5 * d0 * d3 - 8 * b3 * pow(b5, 2) * c1 * d1 * d5 +
            16 * b3 * pow(b5, 2) * c1 * d2 * d4 + 16 * b3 * pow(b5, 2) * c2 * d1 * d4 -
            8 * b3 * pow(b5, 2) * c2 * d2 * d3 + 16 * b3 * pow(b5, 2) * c4 * d1 * d2 -
            32 * b4 * pow(b5, 2) * c1 * d1 * d4 - 6 * pow(b0, 2) * b5 * c5 * d0 * d5 -
            32 * pow(b1, 2) * b2 * c5 * d2 * d5 + 32 * pow(b1, 2) * b5 * c2 * d2 * d5 -
            8 * pow(b2, 2) * b3 * c5 * d0 * d5 + 8 * pow(b2, 2) * b5 * c0 * d3 * d5 +
            8 * pow(b2, 2) * b5 * c3 * d0 * d5 + 8 * pow(b2, 2) * b5 * c5 * d0 * d3 +
            32 * pow(b3, 2) * b4 * c2 * d2 * d4 + 8 * pow(b3, 2) * b5 * c1 * d1 * d5 -
            16 * pow(b3, 2) * b5 * c1 * d2 * d4 - 16 * pow(b3, 2) * b5 * c2 * d1 * d4 +
            8 * pow(b3, 2) * b5 * c2 * d2 * d3 - 16 * pow(b3, 2) * b5 * c4 * d1 * d2 -
            8 * pow(b4, 2) * b5 * c3 * d0 * d3 + 6 * a3 * pow(b5, 2) * d0 * d3 * d5 -
            8 * a4 * pow(b3, 2) * d0 * d4 * d5 + 8 * a4 * pow(b5, 2) * d0 * d3 * d4 -
            6 * a5 * pow(b3, 2) * d0 * d3 * d5 + 8 * b0 * pow(b3, 2) * c4 * d4 * d5 -
            6 * b0 * pow(b3, 2) * c5 * d3 * d5 + 6 * b0 * pow(b5, 2) * c3 * d3 * d5 -
            8 * b0 * pow(b5, 2) * c4 * d3 * d4 - 32 * b1 * pow(b4, 2) * c5 * d1 * d5 +
            6 * b3 * pow(b5, 2) * c0 * d3 * d5 + 6 * b3 * pow(b5, 2) * c3 * d0 * d5 -
            8 * b3 * pow(b5, 2) * c4 * d0 * d4 + 6 * b3 * pow(b5, 2) * c5 * d0 * d3 +
            8 * b4 * pow(b5, 2) * c0 * d3 * d4 + 8 * b4 * pow(b5, 2) * c3 * d0 * d4 +
            8 * b4 * pow(b5, 2) * c4 * d0 * d3 - 16 * pow(b0, 2) * b3 * c4 * d4 * d5 +
            12 * pow(b0, 2) * b3 * c5 * d3 * d5 - 12 * pow(b0, 2) * b5 * c3 * d3 * d5 +
            16 * pow(b0, 2) * b5 * c4 * d3 * d4 - 8 * pow(b1, 2) * b5 * c5 * d0 * d5 -
            8 * pow(b2, 2) * b3 * c3 * d3 * d5 + 32 * pow(b2, 2) * b3 * c4 * d3 * d4 -
            32 * pow(b2, 2) * b4 * c3 * d3 * d4 - 8 * pow(b3, 2) * b4 * c0 * d4 * d5 -
            8 * pow(b3, 2) * b4 * c4 * d0 * d5 - 8 * pow(b3, 2) * b4 * c5 * d0 * d4 -
            6 * pow(b3, 2) * b5 * c0 * d3 * d5 - 6 * pow(b3, 2) * b5 * c3 * d0 * d5 +
            8 * pow(b3, 2) * b5 * c4 * d0 * d4 - 6 * pow(b3, 2) * b5 * c5 * d0 * d3 +
            32 * pow(b4, 2) * b5 * c1 * d1 * d5 - 8 * a5 * pow(b4, 2) * d0 * d3 * d5 +
            8 * b0 * pow(b4, 2) * c5 * d3 * d5 - 8 * b2 * pow(b3, 2) * c5 * d2 * d5 +
            8 * b3 * pow(b4, 2) * c5 * d0 * d5 + 8 * pow(b1, 2) * b3 * c5 * d3 * d5 -
            8 * pow(b1, 2) * b5 * c3 * d3 * d5 + 8 * pow(b3, 2) * b5 * c2 * d2 * d5 -
            8 * pow(b4, 2) * b5 * c0 * d3 * d5 - 8 * pow(b4, 2) * b5 * c3 * d0 * d5 -
            8 * pow(b4, 2) * b5 * c5 * d0 * d3 + 8 * pow(b0, 2) * b4 * c5 * d4 * d5 -
            8 * pow(b0, 2) * b5 * c4 * d4 * d5 + 6 * pow(b0, 2) * b5 * c5 * d3 * d5 +
            8 * pow(b2, 2) * b3 * c5 * d3 * d5 - 8 * pow(b2, 2) * b5 * c3 * d3 * d5 -
            6 * pow(b3, 2) * b5 * c5 * d0 * d5 - 6 * b3 * pow(b5, 2) * c3 * d3 * d5 +
            8 * b3 * pow(b5, 2) * c4 * d3 * d4 - 8 * b4 * pow(b5, 2) * c3 * d3 * d4 +
            32 * pow(b1, 2) * b4 * c5 * d4 * d5 - 32 * pow(b1, 2) * b5 * c4 * d4 * d5 +
            8 * pow(b1, 2) * b5 * c5 * d3 * d5 - 8 * b3 * pow(b4, 2) * c5 * d3 * d5 +
            8 * pow(b4, 2) * b5 * c3 * d3 * d5 + 8 * pow(b3, 2) * b4 * c5 * d4 * d5 -
            8 * pow(b3, 2) * b5 * c4 * d4 * d5 + 6 * pow(b3, 2) * b5 * c5 * d3 * d5 - 16 * a0 * b0 * b1 * d1 * d3 * d5 -
            32 * a0 * b0 * b3 * d1 * d2 * d4 + 32 * a0 * b0 * b4 * d1 * d2 * d3 + 16 * a0 * b1 * b3 * d0 * d2 * d4 -
            16 * a0 * b1 * b4 * d0 * d2 * d3 + 16 * a0 * b2 * b3 * d0 * d1 * d4 - 16 * a0 * b2 * b4 * d0 * d1 * d3 +
            16 * a1 * b0 * b1 * d0 * d3 * d5 + 16 * a1 * b0 * b3 * d0 * d2 * d4 - 16 * a1 * b0 * b4 * d0 * d2 * d3 +
            16 * a2 * b0 * b3 * d0 * d1 * d4 - 16 * a2 * b0 * b4 * d0 * d1 * d3 + 16 * a3 * b0 * b1 * d0 * d2 * d4 +
            16 * a3 * b0 * b2 * d0 * d1 * d4 - 16 * a4 * b0 * b1 * d0 * d2 * d3 - 16 * a4 * b0 * b2 * d0 * d1 * d3 +
            16 * b0 * b1 * b3 * c0 * d2 * d4 + 16 * b0 * b1 * b3 * c2 * d0 * d4 + 16 * b0 * b1 * b3 * c4 * d0 * d2 -
            16 * b0 * b1 * b4 * c0 * d2 * d3 - 16 * b0 * b1 * b4 * c2 * d0 * d3 - 16 * b0 * b1 * b4 * c3 * d0 * d2 +
            16 * b0 * b2 * b3 * c0 * d1 * d4 + 16 * b0 * b2 * b3 * c1 * d0 * d4 + 16 * b0 * b2 * b3 * c4 * d0 * d1 -
            16 * b0 * b2 * b4 * c0 * d1 * d3 - 16 * b0 * b2 * b4 * c1 * d0 * d3 - 16 * b0 * b2 * b4 * c3 * d0 * d1 -
            16 * b0 * b3 * b5 * c1 * d0 * d1 - 32 * b1 * b2 * b3 * c0 * d0 * d4 + 32 * b1 * b2 * b4 * c0 * d0 * d3 +
            16 * b1 * b3 * b5 * c0 * d0 * d1 - 12 * a0 * b0 * b3 * d0 * d3 * d5 + 16 * a0 * b0 * b4 * d0 * d3 * d4 -
            16 * b0 * b3 * b4 * c0 * d0 * d4 + 12 * b0 * b3 * b5 * c0 * d0 * d3 + 16 * a0 * b0 * b2 * d2 * d3 * d5 -
            32 * a0 * b0 * b4 * d1 * d2 * d5 + 32 * a0 * b0 * b5 * d1 * d2 * d4 + 16 * a0 * b1 * b4 * d0 * d2 * d5 -
            16 * a0 * b1 * b5 * d0 * d2 * d4 + 16 * a0 * b2 * b4 * d0 * d1 * d5 - 16 * a0 * b2 * b5 * d0 * d1 * d4 +
            16 * a1 * b0 * b4 * d0 * d2 * d5 - 16 * a1 * b0 * b5 * d0 * d2 * d4 - 16 * a2 * b0 * b2 * d0 * d3 * d5 +
            16 * a2 * b0 * b4 * d0 * d1 * d5 - 16 * a2 * b0 * b5 * d0 * d1 * d4 + 16 * a4 * b0 * b1 * d0 * d2 * d5 +
            16 * a4 * b0 * b2 * d0 * d1 * d5 - 16 * a5 * b0 * b1 * d0 * d2 * d4 - 16 * a5 * b0 * b2 * d0 * d1 * d4 +
            16 * b0 * b1 * b4 * c0 * d2 * d5 + 16 * b0 * b1 * b4 * c2 * d0 * d5 + 16 * b0 * b1 * b4 * c5 * d0 * d2 -
            16 * b0 * b1 * b5 * c0 * d2 * d4 - 16 * b0 * b1 * b5 * c2 * d0 * d4 - 16 * b0 * b1 * b5 * c4 * d0 * d2 +
            16 * b0 * b2 * b4 * c0 * d1 * d5 + 16 * b0 * b2 * b4 * c1 * d0 * d5 + 16 * b0 * b2 * b4 * c5 * d0 * d1 -
            16 * b0 * b2 * b5 * c0 * d1 * d4 - 16 * b0 * b2 * b5 * c1 * d0 * d4 - 16 * b0 * b2 * b5 * c4 * d0 * d1 +
            16 * b0 * b3 * b5 * c2 * d0 * d2 - 32 * b1 * b2 * b4 * c0 * d0 * d5 + 32 * b1 * b2 * b5 * c0 * d0 * d4 -
            16 * b2 * b3 * b5 * c0 * d0 * d2 - 16 * a0 * b0 * b4 * d0 * d4 * d5 + 12 * a0 * b0 * b5 * d0 * d3 * d5 -
            16 * a0 * b1 * b3 * d2 * d3 * d4 - 16 * a0 * b3 * b4 * d1 * d2 * d3 - 16 * a1 * b0 * b3 * d2 * d3 * d4 -
            16 * a1 * b1 * b3 * d0 * d3 * d5 + 16 * a1 * b2 * b3 * d0 * d3 * d4 + 16 * a2 * b1 * b3 * d0 * d3 * d4 +
            16 * a2 * b3 * b4 * d0 * d1 * d3 - 16 * a3 * b0 * b1 * d2 * d3 * d4 + 32 * a3 * b0 * b3 * d1 * d2 * d4 -
            16 * a3 * b0 * b4 * d1 * d2 * d3 + 16 * a3 * b1 * b2 * d0 * d3 * d4 + 16 * a3 * b1 * b3 * d0 * d1 * d5 -
            32 * a3 * b2 * b3 * d0 * d1 * d4 - 16 * a3 * b2 * b3 * d0 * d2 * d3 + 16 * a3 * b2 * b4 * d0 * d1 * d3 -
            16 * a4 * b0 * b3 * d1 * d2 * d3 + 16 * a4 * b2 * b3 * d0 * d1 * d3 - 16 * b0 * b1 * b3 * c2 * d3 * d4 -
            16 * b0 * b1 * b3 * c3 * d2 * d4 - 16 * b0 * b1 * b3 * c4 * d2 * d3 + 32 * b0 * b1 * b4 * c3 * d2 * d3 -
            16 * b0 * b1 * b5 * c3 * d1 * d3 + 16 * b0 * b2 * b3 * c3 * d2 * d3 - 16 * b0 * b3 * b4 * c1 * d2 * d3 -
            16 * b0 * b3 * b4 * c2 * d1 * d3 - 16 * b0 * b3 * b4 * c3 * d1 * d2 - 12 * b0 * b3 * b5 * c0 * d0 * d5 +
            16 * b0 * b3 * b5 * c1 * d1 * d3 + 16 * b0 * b4 * b5 * c0 * d0 * d4 + 16 * b1 * b2 * b3 * c0 * d3 * d4 +
            16 * b1 * b2 * b3 * c3 * d0 * d4 + 16 * b1 * b2 * b3 * c4 * d0 * d3 - 32 * b1 * b2 * b4 * c3 * d0 * d3 +
            16 * b2 * b3 * b4 * c0 * d1 * d3 + 16 * b2 * b3 * b4 * c1 * d0 * d3 + 16 * b2 * b3 * b4 * c3 * d0 * d1 +
            64 * a1 * b1 * b2 * d2 * d3 * d5 - 64 * a2 * b1 * b2 * d1 * d3 * d5 + 12 * a3 * b0 * b3 * d0 * d3 * d5 -
            12 * b0 * b3 * b5 * c3 * d0 * d3 + 64 * b1 * b3 * b5 * c2 * d1 * d2 - 64 * b2 * b3 * b5 * c1 * d1 * d2 -
            16 * a0 * b1 * b4 * d2 * d3 * d5 + 16 * a0 * b1 * b5 * d1 * d3 * d5 + 16 * a0 * b1 * b5 * d2 * d3 * d4 -
            16 * a0 * b2 * b3 * d1 * d4 * d5 - 16 * a0 * b2 * b3 * d2 * d3 * d5 + 16 * a0 * b2 * b4 * d1 * d3 * d5 +
            16 * a0 * b3 * b4 * d1 * d2 * d5 - 16 * a0 * b4 * b5 * d1 * d2 * d3 - 16 * a1 * b0 * b4 * d2 * d3 * d5 +
            16 * a1 * b0 * b5 * d1 * d3 * d5 + 16 * a1 * b0 * b5 * d2 * d3 * d4 - 64 * a1 * b1 * b4 * d0 * d4 * d5 +
            16 * a1 * b2 * b3 * d0 * d4 * d5 - 16 * a1 * b2 * b5 * d0 * d3 * d4 - 16 * a1 * b3 * b5 * d0 * d1 * d5 -
            16 * a1 * b3 * b5 * d0 * d2 * d4 + 16 * a1 * b4 * b5 * d0 * d2 * d3 - 16 * a2 * b0 * b3 * d1 * d4 * d5 -
            16 * a2 * b0 * b3 * d2 * d3 * d5 + 16 * a2 * b0 * b4 * d1 * d3 * d5 + 16 * a2 * b1 * b3 * d0 * d4 * d5 -
            16 * a2 * b1 * b5 * d0 * d3 * d4 + 64 * a2 * b2 * b4 * d0 * d3 * d4 - 16 * a2 * b3 * b4 * d0 * d1 * d5 +
            16 * a2 * b3 * b5 * d0 * d1 * d4 + 16 * a2 * b3 * b5 * d0 * d2 * d3 - 16 * a3 * b0 * b2 * d1 * d4 * d5 -
            16 * a3 * b0 * b2 * d2 * d3 * d5 + 16 * a3 * b0 * b4 * d1 * d2 * d5 + 16 * a3 * b1 * b2 * d0 * d4 * d5 -
            16 * a3 * b1 * b5 * d0 * d1 * d5 - 16 * a3 * b1 * b5 * d0 * d2 * d4 - 16 * a3 * b2 * b4 * d0 * d1 * d5 +
            16 * a3 * b2 * b5 * d0 * d1 * d4 + 16 * a3 * b2 * b5 * d0 * d2 * d3 - 16 * a4 * b0 * b1 * d2 * d3 * d5 +
            16 * a4 * b0 * b2 * d1 * d3 * d5 + 16 * a4 * b0 * b3 * d1 * d2 * d5 - 16 * a4 * b0 * b5 * d1 * d2 * d3 +
            64 * a4 * b1 * b4 * d0 * d1 * d5 + 16 * a4 * b1 * b5 * d0 * d2 * d3 - 16 * a4 * b2 * b3 * d0 * d1 * d5 -
            64 * a4 * b2 * b4 * d0 * d2 * d3 + 16 * a5 * b0 * b1 * d1 * d3 * d5 + 16 * a5 * b0 * b1 * d2 * d3 * d4 -
            16 * a5 * b0 * b4 * d1 * d2 * d3 - 16 * a5 * b1 * b2 * d0 * d3 * d4 - 16 * a5 * b1 * b3 * d0 * d1 * d5 -
            16 * a5 * b1 * b3 * d0 * d2 * d4 + 16 * a5 * b1 * b4 * d0 * d2 * d3 + 16 * a5 * b2 * b3 * d0 * d1 * d4 +
            16 * a5 * b2 * b3 * d0 * d2 * d3 - 16 * b0 * b1 * b4 * c2 * d3 * d5 - 16 * b0 * b1 * b4 * c3 * d2 * d5 -
            16 * b0 * b1 * b4 * c5 * d2 * d3 + 16 * b0 * b1 * b5 * c1 * d3 * d5 + 16 * b0 * b1 * b5 * c2 * d3 * d4 +
            16 * b0 * b1 * b5 * c3 * d1 * d5 + 16 * b0 * b1 * b5 * c3 * d2 * d4 - 64 * b0 * b1 * b5 * c4 * d1 * d4 +
            16 * b0 * b1 * b5 * c4 * d2 * d3 + 16 * b0 * b1 * b5 * c5 * d1 * d3 - 16 * b0 * b2 * b3 * c1 * d4 * d5 -
            16 * b0 * b2 * b3 * c2 * d3 * d5 - 16 * b0 * b2 * b3 * c3 * d2 * d5 - 16 * b0 * b2 * b3 * c4 * d1 * d5 +
            64 * b0 * b2 * b3 * c4 * d2 * d4 - 16 * b0 * b2 * b3 * c5 * d1 * d4 - 16 * b0 * b2 * b3 * c5 * d2 * d3 +
            16 * b0 * b2 * b4 * c1 * d3 * d5 + 16 * b0 * b2 * b4 * c3 * d1 * d5 + 16 * b0 * b2 * b4 * c5 * d1 * d3 +
            16 * b0 * b3 * b4 * c1 * d2 * d5 + 16 * b0 * b3 * b4 * c2 * d1 * d5 - 64 * b0 * b3 * b4 * c2 * d2 * d4 +
            16 * b0 * b3 * b4 * c5 * d1 * d2 + 64 * b0 * b4 * b5 * c1 * d1 * d4 - 16 * b0 * b4 * b5 * c1 * d2 * d3 -
            16 * b0 * b4 * b5 * c2 * d1 * d3 - 16 * b0 * b4 * b5 * c3 * d1 * d2 + 16 * b1 * b2 * b3 * c0 * d4 * d5 +
            16 * b1 * b2 * b3 * c4 * d0 * d5 + 16 * b1 * b2 * b3 * c5 * d0 * d4 - 16 * b1 * b2 * b5 * c0 * d3 * d4 -
            16 * b1 * b2 * b5 * c3 * d0 * d4 - 16 * b1 * b2 * b5 * c4 * d0 * d3 - 16 * b1 * b3 * b5 * c0 * d1 * d5 -
            16 * b1 * b3 * b5 * c0 * d2 * d4 - 16 * b1 * b3 * b5 * c1 * d0 * d5 - 16 * b1 * b3 * b5 * c2 * d0 * d4 -
            16 * b1 * b3 * b5 * c4 * d0 * d2 - 16 * b1 * b3 * b5 * c5 * d0 * d1 + 16 * b1 * b4 * b5 * c0 * d2 * d3 +
            16 * b1 * b4 * b5 * c2 * d0 * d3 + 16 * b1 * b4 * b5 * c3 * d0 * d2 - 16 * b2 * b3 * b4 * c0 * d1 * d5 -
            16 * b2 * b3 * b4 * c1 * d0 * d5 - 16 * b2 * b3 * b4 * c5 * d0 * d1 + 16 * b2 * b3 * b5 * c0 * d1 * d4 +
            16 * b2 * b3 * b5 * c0 * d2 * d3 + 16 * b2 * b3 * b5 * c1 * d0 * d4 + 16 * b2 * b3 * b5 * c2 * d0 * d3 +
            16 * b2 * b3 * b5 * c3 * d0 * d2 + 16 * b2 * b3 * b5 * c4 * d0 * d1 + 16 * a0 * b3 * b4 * d0 * d4 * d5 -
            16 * a0 * b4 * b5 * d0 * d3 * d4 + 16 * a3 * b0 * b4 * d0 * d4 * d5 + 16 * a4 * b0 * b3 * d0 * d4 * d5 -
            16 * a4 * b0 * b5 * d0 * d3 * d4 - 16 * a5 * b0 * b4 * d0 * d3 * d4 + 16 * b0 * b3 * b4 * c0 * d4 * d5 +
            16 * b0 * b3 * b4 * c4 * d0 * d5 + 16 * b0 * b3 * b4 * c5 * d0 * d4 - 16 * b0 * b4 * b5 * c0 * d3 * d4 -
            16 * b0 * b4 * b5 * c3 * d0 * d4 - 16 * b0 * b4 * b5 * c4 * d0 * d3 + 16 * a0 * b2 * b5 * d1 * d4 * d5 +
            16 * a0 * b4 * b5 * d1 * d2 * d5 - 16 * a1 * b2 * b5 * d0 * d4 * d5 - 16 * a1 * b4 * b5 * d0 * d2 * d5 +
            16 * a2 * b0 * b5 * d1 * d4 * d5 - 16 * a2 * b1 * b5 * d0 * d4 * d5 + 16 * a2 * b2 * b5 * d0 * d3 * d5 +
            16 * a4 * b0 * b5 * d1 * d2 * d5 - 16 * a4 * b1 * b5 * d0 * d2 * d5 + 16 * a5 * b0 * b2 * d1 * d4 * d5 +
            16 * a5 * b0 * b4 * d1 * d2 * d5 - 32 * a5 * b0 * b5 * d1 * d2 * d4 - 16 * a5 * b1 * b2 * d0 * d4 * d5 -
            16 * a5 * b1 * b4 * d0 * d2 * d5 + 16 * a5 * b1 * b5 * d0 * d1 * d5 + 32 * a5 * b1 * b5 * d0 * d2 * d4 -
            16 * a5 * b2 * b5 * d0 * d2 * d3 - 16 * b0 * b1 * b5 * c5 * d1 * d5 + 16 * b0 * b2 * b3 * c5 * d2 * d5 -
            32 * b0 * b2 * b4 * c5 * d1 * d5 + 16 * b0 * b2 * b5 * c1 * d4 * d5 + 16 * b0 * b2 * b5 * c4 * d1 * d5 +
            16 * b0 * b2 * b5 * c5 * d1 * d4 - 16 * b0 * b3 * b5 * c2 * d2 * d5 + 16 * b0 * b4 * b5 * c1 * d2 * d5 +
            16 * b0 * b4 * b5 * c2 * d1 * d5 + 16 * b0 * b4 * b5 * c5 * d1 * d2 + 32 * b1 * b2 * b4 * c5 * d0 * d5 -
            16 * b1 * b2 * b5 * c0 * d4 * d5 - 16 * b1 * b2 * b5 * c4 * d0 * d5 - 16 * b1 * b2 * b5 * c5 * d0 * d4 -
            16 * b1 * b4 * b5 * c0 * d2 * d5 - 16 * b1 * b4 * b5 * c2 * d0 * d5 - 16 * b1 * b4 * b5 * c5 * d0 * d2 -
            16 * a1 * b2 * b3 * d3 * d4 * d5 + 16 * a1 * b3 * b5 * d2 * d3 * d4 - 16 * a2 * b1 * b3 * d3 * d4 * d5 -
            16 * a2 * b3 * b4 * d1 * d3 * d5 - 16 * a3 * b1 * b2 * d3 * d4 * d5 + 16 * a3 * b1 * b5 * d2 * d3 * d4 +
            32 * a3 * b2 * b3 * d1 * d4 * d5 + 16 * a3 * b2 * b3 * d2 * d3 * d5 - 16 * a3 * b2 * b4 * d1 * d3 * d5 -
            32 * a3 * b3 * b5 * d1 * d2 * d4 + 16 * a3 * b4 * b5 * d1 * d2 * d3 - 16 * a4 * b2 * b3 * d1 * d3 * d5 +
            16 * a4 * b3 * b5 * d1 * d2 * d3 - 12 * a5 * b0 * b5 * d0 * d3 * d5 + 16 * a5 * b1 * b3 * d2 * d3 * d4 +
            16 * a5 * b3 * b4 * d1 * d2 * d3 + 12 * b0 * b3 * b5 * c5 * d0 * d5 - 16 * b1 * b2 * b3 * c3 * d4 * d5 -
            16 * b1 * b2 * b3 * c4 * d3 * d5 - 16 * b1 * b2 * b3 * c5 * d3 * d4 + 32 * b1 * b2 * b4 * c3 * d3 * d5 +
            16 * b1 * b3 * b5 * c2 * d3 * d4 + 16 * b1 * b3 * b5 * c3 * d2 * d4 + 16 * b1 * b3 * b5 * c4 * d2 * d3 -
            32 * b1 * b4 * b5 * c3 * d2 * d3 - 16 * b2 * b3 * b4 * c1 * d3 * d5 - 16 * b2 * b3 * b4 * c3 * d1 * d5 -
            16 * b2 * b3 * b4 * c5 * d1 * d3 - 16 * b2 * b3 * b5 * c3 * d2 * d3 + 16 * b3 * b4 * b5 * c1 * d2 * d3 +
            16 * b3 * b4 * b5 * c2 * d1 * d3 + 16 * b3 * b4 * b5 * c3 * d1 * d2 - 16 * a3 * b3 * b4 * d0 * d4 * d5 -
            12 * a3 * b3 * b5 * d0 * d3 * d5 + 16 * a4 * b3 * b4 * d0 * d3 * d5 + 12 * b0 * b3 * b5 * c3 * d3 * d5 -
            16 * b0 * b3 * b5 * c4 * d3 * d4 + 16 * b0 * b4 * b5 * c3 * d3 * d4 + 16 * a1 * b2 * b5 * d3 * d4 * d5 +
            16 * a1 * b4 * b5 * d2 * d3 * d5 + 16 * a2 * b1 * b5 * d3 * d4 * d5 - 16 * a2 * b3 * b5 * d1 * d4 * d5 -
            16 * a3 * b2 * b5 * d1 * d4 * d5 - 16 * a3 * b4 * b5 * d1 * d2 * d5 + 16 * a4 * b1 * b5 * d2 * d3 * d5 -
            16 * a4 * b3 * b5 * d1 * d2 * d5 + 16 * a5 * b1 * b2 * d3 * d4 * d5 + 16 * a5 * b1 * b4 * d2 * d3 * d5 -
            16 * a5 * b1 * b5 * d1 * d3 * d5 - 32 * a5 * b1 * b5 * d2 * d3 * d4 - 16 * a5 * b2 * b3 * d1 * d4 * d5 -
            16 * a5 * b3 * b4 * d1 * d2 * d5 + 32 * a5 * b3 * b5 * d1 * d2 * d4 - 32 * b1 * b2 * b4 * c5 * d3 * d5 +
            16 * b1 * b2 * b5 * c3 * d4 * d5 + 16 * b1 * b2 * b5 * c4 * d3 * d5 + 16 * b1 * b2 * b5 * c5 * d3 * d4 +
            16 * b1 * b3 * b5 * c5 * d1 * d5 + 16 * b1 * b4 * b5 * c2 * d3 * d5 + 16 * b1 * b4 * b5 * c3 * d2 * d5 +
            16 * b1 * b4 * b5 * c5 * d2 * d3 + 32 * b2 * b3 * b4 * c5 * d1 * d5 - 16 * b2 * b3 * b5 * c1 * d4 * d5 -
            16 * b2 * b3 * b5 * c4 * d1 * d5 - 16 * b2 * b3 * b5 * c5 * d1 * d4 - 16 * b3 * b4 * b5 * c1 * d2 * d5 -
            16 * b3 * b4 * b5 * c2 * d1 * d5 - 16 * b3 * b4 * b5 * c5 * d1 * d2 - 16 * a4 * b4 * b5 * d0 * d3 * d5 +
            12 * a5 * b3 * b5 * d0 * d3 * d5 + 16 * a5 * b4 * b5 * d0 * d3 * d4 - 16 * b0 * b3 * b4 * c5 * d4 * d5 +
            16 * b0 * b3 * b5 * c4 * d4 * d5 - 12 * b0 * b3 * b5 * c5 * d3 * d5,
        pow(b3, 3) * pow(d0, 3) - pow(b0, 3) * pow(d3, 3) + pow(b0, 3) * pow(d5, 3) - pow(b5, 3) * pow(d0, 3) -
            pow(b3, 3) * pow(d5, 3) + pow(b5, 3) * pow(d3, 3) - 4 * b0 * pow(b2, 2) * pow(d3, 3) +
            4 * b0 * pow(b1, 2) * pow(d5, 3) + 4 * b3 * pow(b4, 2) * pow(d0, 3) + 3 * b0 * pow(b3, 2) * pow(d5, 3) -
            3 * b0 * pow(b5, 2) * pow(d3, 3) + 3 * b3 * pow(b5, 2) * pow(d0, 3) - 3 * pow(b0, 2) * b3 * pow(d5, 3) +
            3 * pow(b0, 2) * b5 * pow(d3, 3) - 3 * pow(b3, 2) * b5 * pow(d0, 3) - 4 * pow(b1, 2) * b3 * pow(d5, 3) -
            4 * pow(b4, 2) * b5 * pow(d0, 3) + 4 * pow(b2, 2) * b5 * pow(d3, 3) + 4 * pow(b3, 3) * d0 * pow(d2, 2) -
            4 * pow(b5, 3) * d0 * pow(d1, 2) - 4 * pow(b0, 3) * d3 * pow(d4, 2) - 3 * pow(b0, 3) * d3 * pow(d5, 2) +
            3 * pow(b0, 3) * pow(d3, 2) * d5 + 3 * pow(b3, 3) * d0 * pow(d5, 2) - 3 * pow(b3, 3) * pow(d0, 2) * d5 -
            3 * pow(b5, 3) * d0 * pow(d3, 2) + 3 * pow(b5, 3) * pow(d0, 2) * d3 + 4 * pow(b0, 3) * pow(d4, 2) * d5 +
            4 * pow(b5, 3) * pow(d1, 2) * d3 - 4 * pow(b3, 3) * pow(d2, 2) * d5 -
            4 * b0 * pow(b1, 2) * d0 * pow(d3, 2) + 4 * b0 * pow(b3, 2) * d0 * pow(d1, 2) -
            16 * b0 * pow(b1, 2) * d0 * pow(d4, 2) + 4 * b0 * pow(b2, 2) * d0 * pow(d3, 2) -
            4 * b0 * pow(b3, 2) * d0 * pow(d2, 2) + 16 * b0 * pow(b4, 2) * d0 * pow(d1, 2) -
            4 * b1 * pow(b3, 2) * pow(d0, 2) * d1 + 4 * pow(b0, 2) * b1 * d1 * pow(d3, 2) -
            4 * b0 * pow(b1, 2) * d0 * pow(d5, 2) + 16 * b0 * pow(b2, 2) * d0 * pow(d4, 2) -
            3 * b0 * pow(b3, 2) * pow(d0, 2) * d3 - 16 * b0 * pow(b4, 2) * d0 * pow(d2, 2) +
            4 * b0 * pow(b5, 2) * d0 * pow(d1, 2) - 16 * b1 * pow(b4, 2) * pow(d0, 2) * d1 +
            16 * pow(b0, 2) * b1 * d1 * pow(d4, 2) + 3 * pow(b0, 2) * b3 * d0 * pow(d3, 2) +
            4 * b0 * pow(b2, 2) * d0 * pow(d5, 2) - 4 * b0 * pow(b3, 2) * d0 * pow(d4, 2) +
            4 * b0 * pow(b4, 2) * d0 * pow(d3, 2) - 4 * b0 * pow(b4, 2) * pow(d0, 2) * d3 -
            4 * b0 * pow(b5, 2) * d0 * pow(d2, 2) + 16 * b1 * pow(b2, 2) * d1 * pow(d3, 2) -
            16 * b1 * pow(b3, 2) * d1 * pow(d2, 2) - 4 * b1 * pow(b5, 2) * pow(d0, 2) * d1 +
            4 * b2 * pow(b3, 2) * pow(d0, 2) * d2 + 4 * pow(b0, 2) * b1 * d1 * pow(d5, 2) -
            4 * pow(b0, 2) * b2 * d2 * pow(d3, 2) + 4 * pow(b0, 2) * b3 * d0 * pow(d4, 2) -
            4 * pow(b0, 2) * b3 * pow(d1, 2) * d3 + 4 * pow(b1, 2) * b3 * pow(d0, 2) * d3 -
            6 * b0 * pow(b3, 2) * d0 * pow(d5, 2) + 3 * b0 * pow(b3, 2) * pow(d0, 2) * d5 -
            4 * b0 * pow(b3, 2) * pow(d2, 2) * d3 + 6 * b0 * pow(b5, 2) * d0 * pow(d3, 2) -
            3 * b0 * pow(b5, 2) * pow(d0, 2) * d3 + 64 * b1 * pow(b2, 2) * d1 * pow(d4, 2) -
            64 * b1 * pow(b4, 2) * d1 * pow(d2, 2) + 16 * b2 * pow(b3, 2) * pow(d1, 2) * d2 +
            16 * b2 * pow(b4, 2) * pow(d0, 2) * d2 - 16 * pow(b0, 2) * b2 * d2 * pow(d4, 2) +
            3 * pow(b0, 2) * b3 * d0 * pow(d5, 2) + 4 * pow(b0, 2) * b3 * pow(d2, 2) * d3 -
            3 * pow(b0, 2) * b5 * d0 * pow(d3, 2) - 16 * pow(b1, 2) * b2 * d2 * pow(d3, 2) +
            4 * pow(b2, 2) * b3 * d0 * pow(d3, 2) - 4 * pow(b2, 2) * b3 * pow(d0, 2) * d3 -
            8 * b0 * pow(b1, 2) * d3 * pow(d5, 2) + 4 * b0 * pow(b1, 2) * pow(d3, 2) * d5 -
            16 * b0 * pow(b2, 2) * d3 * pow(d4, 2) - 4 * b0 * pow(b3, 2) * pow(d1, 2) * d5 -
            4 * b0 * pow(b4, 2) * d0 * pow(d5, 2) + 4 * b0 * pow(b4, 2) * pow(d0, 2) * d5 +
            16 * b0 * pow(b4, 2) * pow(d2, 2) * d3 + 4 * b0 * pow(b5, 2) * d0 * pow(d4, 2) -
            8 * b0 * pow(b5, 2) * pow(d1, 2) * d3 + 16 * b1 * pow(b2, 2) * d1 * pow(d5, 2) -
            16 * b1 * pow(b5, 2) * d1 * pow(d2, 2) + 64 * b2 * pow(b4, 2) * pow(d1, 2) * d2 +
            4 * b2 * pow(b5, 2) * pow(d0, 2) * d2 + 16 * b3 * pow(b4, 2) * d0 * pow(d2, 2) +
            8 * b3 * pow(b5, 2) * d0 * pow(d1, 2) - 4 * pow(b0, 2) * b2 * d2 * pow(d5, 2) +
            4 * pow(b0, 2) * b3 * pow(d1, 2) * d5 - 16 * pow(b0, 2) * b4 * pow(d1, 2) * d4 -
            4 * pow(b0, 2) * b5 * d0 * pow(d4, 2) + 4 * pow(b0, 2) * b5 * pow(d1, 2) * d3 -
            64 * pow(b1, 2) * b2 * d2 * pow(d4, 2) + 8 * pow(b1, 2) * b3 * d0 * pow(d5, 2) -
            4 * pow(b1, 2) * b3 * pow(d0, 2) * d5 + 16 * pow(b1, 2) * b3 * pow(d2, 2) * d3 +
            16 * pow(b1, 2) * b4 * pow(d0, 2) * d4 + 4 * pow(b1, 2) * b5 * d0 * pow(d3, 2) -
            4 * pow(b1, 2) * b5 * pow(d0, 2) * d3 - 16 * pow(b2, 2) * b3 * d0 * pow(d4, 2) -
            16 * pow(b2, 2) * b3 * pow(d1, 2) * d3 - 4 * pow(b3, 2) * b5 * d0 * pow(d1, 2) +
            16 * b0 * pow(b1, 2) * pow(d4, 2) * d5 - 4 * b0 * pow(b2, 2) * d3 * pow(d5, 2) +
            8 * b0 * pow(b2, 2) * pow(d3, 2) * d5 + 8 * b0 * pow(b3, 2) * pow(d2, 2) * d5 -
            16 * b0 * pow(b4, 2) * pow(d1, 2) * d5 + 3 * b0 * pow(b5, 2) * pow(d0, 2) * d5 +
            4 * b0 * pow(b5, 2) * pow(d2, 2) * d3 - 4 * b1 * pow(b3, 2) * d1 * pow(d5, 2) +
            4 * b1 * pow(b5, 2) * d1 * pow(d3, 2) + 16 * b2 * pow(b5, 2) * pow(d1, 2) * d2 -
            4 * b3 * pow(b4, 2) * pow(d0, 2) * d3 + 4 * b3 * pow(b5, 2) * d0 * pow(d2, 2) +
            4 * pow(b0, 2) * b3 * d3 * pow(d4, 2) - 4 * pow(b0, 2) * b3 * pow(d2, 2) * d5 +
            16 * pow(b0, 2) * b4 * pow(d2, 2) * d4 - 3 * pow(b0, 2) * b5 * d0 * pow(d5, 2) -
            4 * pow(b0, 2) * b5 * pow(d2, 2) * d3 - 16 * pow(b1, 2) * b2 * d2 * pow(d5, 2) +
            16 * pow(b1, 2) * b5 * d0 * pow(d4, 2) - 4 * pow(b2, 2) * b3 * d0 * pow(d5, 2) +
            4 * pow(b2, 2) * b3 * pow(d0, 2) * d5 - 16 * pow(b2, 2) * b4 * pow(d0, 2) * d4 -
            8 * pow(b2, 2) * b5 * d0 * pow(d3, 2) + 4 * pow(b2, 2) * b5 * pow(d0, 2) * d3 -
            8 * pow(b3, 2) * b5 * d0 * pow(d2, 2) - 16 * pow(b4, 2) * b5 * d0 * pow(d1, 2) -
            3 * b0 * pow(b3, 2) * d3 * pow(d5, 2) + 4 * b0 * pow(b5, 2) * pow(d1, 2) * d5 -
            16 * b1 * pow(b4, 2) * d1 * pow(d5, 2) + 16 * b1 * pow(b5, 2) * d1 * pow(d4, 2) -
            16 * b2 * pow(b3, 2) * d2 * pow(d4, 2) + 16 * b2 * pow(b4, 2) * d2 * pow(d3, 2) +
            3 * b3 * pow(b5, 2) * d0 * pow(d3, 2) - 6 * b3 * pow(b5, 2) * pow(d0, 2) * d3 +
            6 * pow(b0, 2) * b3 * d3 * pow(d5, 2) - 3 * pow(b0, 2) * b3 * pow(d3, 2) * d5 -
            4 * pow(b0, 2) * b4 * pow(d3, 2) * d4 - 4 * pow(b0, 2) * b5 * pow(d1, 2) * d5 -
            16 * pow(b1, 2) * b3 * pow(d2, 2) * d5 + 64 * pow(b1, 2) * b4 * pow(d2, 2) * d4 -
            4 * pow(b1, 2) * b5 * d0 * pow(d5, 2) + 4 * pow(b1, 2) * b5 * pow(d0, 2) * d5 -
            16 * pow(b1, 2) * b5 * pow(d2, 2) * d3 + 16 * pow(b2, 2) * b3 * pow(d1, 2) * d5 -
            64 * pow(b2, 2) * b4 * pow(d1, 2) * d4 + 16 * pow(b2, 2) * b5 * pow(d1, 2) * d3 +
            4 * pow(b3, 2) * b4 * pow(d0, 2) * d4 + 3 * pow(b3, 2) * b5 * pow(d0, 2) * d3 +
            4 * b0 * pow(b3, 2) * pow(d4, 2) * d5 + 4 * b0 * pow(b4, 2) * d3 * pow(d5, 2) -
            4 * b0 * pow(b4, 2) * pow(d3, 2) * d5 - 4 * b0 * pow(b5, 2) * d3 * pow(d4, 2) -
            4 * b2 * pow(b3, 2) * d2 * pow(d5, 2) + 4 * b2 * pow(b5, 2) * d2 * pow(d3, 2) +
            4 * b3 * pow(b4, 2) * d0 * pow(d5, 2) - 8 * b3 * pow(b4, 2) * pow(d0, 2) * d5 -
            16 * b3 * pow(b4, 2) * pow(d2, 2) * d3 - 4 * b3 * pow(b5, 2) * d0 * pow(d4, 2) -
            4 * b3 * pow(b5, 2) * pow(d1, 2) * d3 - 8 * pow(b0, 2) * b3 * pow(d4, 2) * d5 +
            8 * pow(b0, 2) * b5 * d3 * pow(d4, 2) + 4 * pow(b0, 2) * b5 * pow(d2, 2) * d5 +
            4 * pow(b1, 2) * b3 * d3 * pow(d5, 2) + 16 * pow(b2, 2) * b3 * d3 * pow(d4, 2) -
            4 * pow(b2, 2) * b5 * pow(d0, 2) * d5 + 4 * pow(b3, 2) * b5 * d0 * pow(d4, 2) -
            4 * pow(b4, 2) * b5 * d0 * pow(d3, 2) + 8 * pow(b4, 2) * b5 * pow(d0, 2) * d3 +
            3 * b0 * pow(b5, 2) * pow(d3, 2) * d5 - 3 * b3 * pow(b5, 2) * pow(d0, 2) * d5 -
            4 * b3 * pow(b5, 2) * pow(d2, 2) * d3 - 4 * b4 * pow(b5, 2) * pow(d0, 2) * d4 +
            4 * pow(b0, 2) * b4 * d4 * pow(d5, 2) + 3 * pow(b0, 2) * b5 * d3 * pow(d5, 2) -
            6 * pow(b0, 2) * b5 * pow(d3, 2) * d5 + 16 * pow(b1, 2) * b5 * pow(d2, 2) * d5 +
            4 * pow(b2, 2) * b3 * d3 * pow(d5, 2) - 4 * pow(b2, 2) * b3 * pow(d3, 2) * d5 -
            16 * pow(b2, 2) * b4 * pow(d3, 2) * d4 - 16 * pow(b2, 2) * b5 * pow(d1, 2) * d5 +
            16 * pow(b3, 2) * b4 * pow(d2, 2) * d4 - 3 * pow(b3, 2) * b5 * d0 * pow(d5, 2) +
            6 * pow(b3, 2) * b5 * pow(d0, 2) * d5 + 4 * pow(b3, 2) * b5 * pow(d2, 2) * d3 -
            4 * b3 * pow(b5, 2) * pow(d1, 2) * d5 - 16 * b4 * pow(b5, 2) * pow(d1, 2) * d4 -
            4 * pow(b0, 2) * b5 * pow(d4, 2) * d5 + 16 * pow(b1, 2) * b4 * d4 * pow(d5, 2) +
            4 * pow(b1, 2) * b5 * d3 * pow(d5, 2) - 4 * pow(b1, 2) * b5 * pow(d3, 2) * d5 +
            4 * pow(b3, 2) * b5 * pow(d1, 2) * d5 + 4 * pow(b4, 2) * b5 * pow(d0, 2) * d5 -
            4 * b3 * pow(b4, 2) * d3 * pow(d5, 2) + 4 * b3 * pow(b5, 2) * d3 * pow(d4, 2) -
            16 * pow(b1, 2) * b5 * pow(d4, 2) * d5 - 4 * pow(b2, 2) * b5 * pow(d3, 2) * d5 +
            4 * pow(b3, 2) * b5 * pow(d2, 2) * d5 + 16 * pow(b4, 2) * b5 * pow(d1, 2) * d5 -
            3 * b3 * pow(b5, 2) * pow(d3, 2) * d5 - 4 * b4 * pow(b5, 2) * pow(d3, 2) * d4 +
            4 * pow(b3, 2) * b4 * d4 * pow(d5, 2) + 3 * pow(b3, 2) * b5 * d3 * pow(d5, 2) -
            4 * pow(b3, 2) * b5 * pow(d4, 2) * d5 + 4 * pow(b4, 2) * b5 * pow(d3, 2) * d5 -
            8 * b0 * b3 * b5 * d0 * pow(d1, 2) + 16 * b0 * b1 * b4 * d2 * pow(d3, 2) -
            8 * b0 * b1 * b5 * d1 * pow(d3, 2) + 8 * b0 * b2 * b3 * d2 * pow(d3, 2) +
            8 * b0 * b3 * b5 * d0 * pow(d2, 2) - 16 * b1 * b2 * b3 * pow(d0, 2) * d4 -
            16 * b1 * b2 * b4 * d0 * pow(d3, 2) + 16 * b1 * b2 * b4 * pow(d0, 2) * d3 +
            8 * b1 * b3 * b5 * pow(d0, 2) * d1 - 32 * b0 * b1 * b5 * d1 * pow(d4, 2) +
            32 * b0 * b2 * b3 * d2 * pow(d4, 2) - 8 * b0 * b3 * b4 * pow(d0, 2) * d4 -
            6 * b0 * b3 * b5 * d0 * pow(d3, 2) + 6 * b0 * b3 * b5 * pow(d0, 2) * d3 -
            8 * b0 * b1 * b5 * d1 * pow(d5, 2) + 8 * b0 * b2 * b3 * d2 * pow(d5, 2) -
            16 * b0 * b2 * b4 * d1 * pow(d5, 2) + 8 * b0 * b3 * b5 * pow(d1, 2) * d3 +
            16 * b1 * b2 * b4 * d0 * pow(d5, 2) - 16 * b1 * b2 * b4 * pow(d0, 2) * d5 +
            16 * b1 * b2 * b5 * pow(d0, 2) * d4 + 32 * b1 * b3 * b5 * d1 * pow(d2, 2) -
            8 * b2 * b3 * b5 * pow(d0, 2) * d2 - 32 * b0 * b3 * b4 * pow(d2, 2) * d4 +
            6 * b0 * b3 * b5 * d0 * pow(d5, 2) - 6 * b0 * b3 * b5 * pow(d0, 2) * d5 +
            8 * b0 * b4 * b5 * pow(d0, 2) * d4 - 32 * b2 * b3 * b5 * pow(d1, 2) * d2 +
            32 * b0 * b4 * b5 * pow(d1, 2) * d4 - 8 * b0 * b3 * b5 * d3 * pow(d4, 2) -
            8 * b0 * b3 * b5 * pow(d2, 2) * d5 - 16 * b1 * b2 * b4 * d3 * pow(d5, 2) +
            16 * b1 * b2 * b4 * pow(d3, 2) * d5 + 8 * b1 * b3 * b5 * d1 * pow(d5, 2) -
            16 * b1 * b4 * b5 * d2 * pow(d3, 2) + 16 * b2 * b3 * b4 * d1 * pow(d5, 2) -
            8 * b2 * b3 * b5 * d2 * pow(d3, 2) - 8 * b0 * b3 * b4 * d4 * pow(d5, 2) -
            6 * b0 * b3 * b5 * d3 * pow(d5, 2) + 6 * b0 * b3 * b5 * pow(d3, 2) * d5 +
            8 * b0 * b4 * b5 * pow(d3, 2) * d4 + 8 * b0 * b3 * b5 * pow(d4, 2) * d5 +
            8 * b0 * pow(b1, 2) * d0 * d3 * d5 - 8 * b0 * pow(b2, 2) * d0 * d3 * d5 +
            16 * b0 * pow(b3, 2) * d1 * d2 * d4 + 8 * b1 * pow(b3, 2) * d0 * d1 * d5 -
            16 * b2 * pow(b3, 2) * d0 * d1 * d4 - 8 * b2 * pow(b3, 2) * d0 * d2 * d3 -
            8 * pow(b0, 2) * b1 * d1 * d3 * d5 - 16 * pow(b0, 2) * b3 * d1 * d2 * d4 +
            16 * pow(b0, 2) * b4 * d1 * d2 * d3 + 6 * b0 * pow(b3, 2) * d0 * d3 * d5 +
            32 * b1 * pow(b4, 2) * d0 * d1 * d5 - 32 * b2 * pow(b4, 2) * d0 * d2 * d3 -
            6 * pow(b0, 2) * b3 * d0 * d3 * d5 + 8 * pow(b0, 2) * b4 * d0 * d3 * d4 -
            16 * b0 * pow(b5, 2) * d1 * d2 * d4 - 32 * b1 * pow(b2, 2) * d1 * d3 * d5 +
            8 * b1 * pow(b5, 2) * d0 * d1 * d5 + 16 * b1 * pow(b5, 2) * d0 * d2 * d4 -
            8 * b2 * pow(b5, 2) * d0 * d2 * d3 + 8 * pow(b0, 2) * b2 * d2 * d3 * d5 -
            16 * pow(b0, 2) * b4 * d1 * d2 * d5 + 16 * pow(b0, 2) * b5 * d1 * d2 * d4 -
            8 * pow(b1, 2) * b3 * d0 * d3 * d5 - 6 * b0 * pow(b5, 2) * d0 * d3 * d5 -
            8 * pow(b0, 2) * b4 * d0 * d4 * d5 + 6 * pow(b0, 2) * b5 * d0 * d3 * d5 +
            32 * pow(b1, 2) * b2 * d2 * d3 * d5 + 32 * pow(b2, 2) * b4 * d0 * d3 * d4 -
            32 * pow(b1, 2) * b4 * d0 * d4 * d5 - 8 * b1 * pow(b5, 2) * d1 * d3 * d5 -
            16 * b1 * pow(b5, 2) * d2 * d3 * d4 + 16 * b2 * pow(b3, 2) * d1 * d4 * d5 +
            8 * b2 * pow(b3, 2) * d2 * d3 * d5 + 8 * b3 * pow(b4, 2) * d0 * d3 * d5 +
            16 * b3 * pow(b5, 2) * d1 * d2 * d4 + 8 * pow(b2, 2) * b5 * d0 * d3 * d5 -
            16 * pow(b3, 2) * b5 * d1 * d2 * d4 + 6 * b3 * pow(b5, 2) * d0 * d3 * d5 +
            8 * b4 * pow(b5, 2) * d0 * d3 * d4 - 8 * pow(b3, 2) * b4 * d0 * d4 * d5 -
            6 * pow(b3, 2) * b5 * d0 * d3 * d5 - 8 * pow(b4, 2) * b5 * d0 * d3 * d5 + 16 * b0 * b1 * b3 * d0 * d2 * d4 -
            16 * b0 * b1 * b4 * d0 * d2 * d3 + 16 * b0 * b2 * b3 * d0 * d1 * d4 - 16 * b0 * b2 * b4 * d0 * d1 * d3 +
            16 * b0 * b1 * b4 * d0 * d2 * d5 - 16 * b0 * b1 * b5 * d0 * d2 * d4 + 16 * b0 * b2 * b4 * d0 * d1 * d5 -
            16 * b0 * b2 * b5 * d0 * d1 * d4 - 16 * b0 * b1 * b3 * d2 * d3 * d4 - 16 * b0 * b3 * b4 * d1 * d2 * d3 +
            16 * b1 * b2 * b3 * d0 * d3 * d4 + 16 * b2 * b3 * b4 * d0 * d1 * d3 - 16 * b0 * b1 * b4 * d2 * d3 * d5 +
            16 * b0 * b1 * b5 * d1 * d3 * d5 + 16 * b0 * b1 * b5 * d2 * d3 * d4 - 16 * b0 * b2 * b3 * d1 * d4 * d5 -
            16 * b0 * b2 * b3 * d2 * d3 * d5 + 16 * b0 * b2 * b4 * d1 * d3 * d5 + 16 * b0 * b3 * b4 * d1 * d2 * d5 -
            16 * b0 * b4 * b5 * d1 * d2 * d3 + 16 * b1 * b2 * b3 * d0 * d4 * d5 - 16 * b1 * b2 * b5 * d0 * d3 * d4 -
            16 * b1 * b3 * b5 * d0 * d1 * d5 - 16 * b1 * b3 * b5 * d0 * d2 * d4 + 16 * b1 * b4 * b5 * d0 * d2 * d3 -
            16 * b2 * b3 * b4 * d0 * d1 * d5 + 16 * b2 * b3 * b5 * d0 * d1 * d4 + 16 * b2 * b3 * b5 * d0 * d2 * d3 +
            16 * b0 * b3 * b4 * d0 * d4 * d5 - 16 * b0 * b4 * b5 * d0 * d3 * d4 + 16 * b0 * b2 * b5 * d1 * d4 * d5 +
            16 * b0 * b4 * b5 * d1 * d2 * d5 - 16 * b1 * b2 * b5 * d0 * d4 * d5 - 16 * b1 * b4 * b5 * d0 * d2 * d5 -
            16 * b1 * b2 * b3 * d3 * d4 * d5 + 16 * b1 * b3 * b5 * d2 * d3 * d4 - 16 * b2 * b3 * b4 * d1 * d3 * d5 +
            16 * b3 * b4 * b5 * d1 * d2 * d3 + 16 * b1 * b2 * b5 * d3 * d4 * d5 + 16 * b1 * b4 * b5 * d2 * d3 * d5 -
            16 * b2 * b3 * b5 * d1 * d4 * d5 - 16 * b3 * b4 * b5 * d1 * d2 * d5;

    return coeffs;
}
} // namespace poselib